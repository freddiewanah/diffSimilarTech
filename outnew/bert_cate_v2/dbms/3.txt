using B that is supposed ti be faster than B for depth i m seeing a slow performance

B is much more complete and solid and will much better support complex queries and their optimization while B may shine in terms of retrieval speed for extremely simple queries

but in B it is ok and in B it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that B is stricter on sql than B so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this

explain in B is way more useful than in B

B is better than B in many ways

if i were able to upgrade the server s versioning of B to 5.5 would innodb be a safer bet than B

why B is more capable than others B etc. on django

in general B knows more tricks for how to optimize complicated queries than the B optimizer does but it also relies heavily on your having given the optimizer enough data to work with

is B better than B for such purpose

now i m not sure if i d say B is generally better than B -- there are certainly things that B does much better and so it certainly has its uses -- but these are a few things i absolutely love about it

i also personally believe that B has better handling of complex queries that include sub-selects and the like which most B users used to avoid

i wonder why B s single insert statement is completely faster than B s when autocommit is turned on

i am aware that B interpretation of the sql standard is stricter than B and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject

there are workloads where B is better and there are workloads where B is better

looks like B is a little more compliant than B so try this instead

B has more established support for this but B has played catch up in the last year or so and has a working method of this in the latest versions

i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically B fulltext is 10-100x faster than B and xapian 10-100x faster than B but not integrated

in my personal openion B is slower than B and mongo db

B and other similar solutions should work a bit better than B depending on your data sets and use cases

