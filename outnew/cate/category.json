{"algorithm": ["furthermore 3des is much slower than aes\n", "furthermore 3des is much slower than aes\n", "3des is more expensive than aes for example\n", "should be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times faster\n", "des is the least secure 3des is better but i d go for the aes\n", "3des is more expensive than aes for example\n", "furthermore 3des is much slower than aes\n", "furthermore 3des is much slower than aes\n", "3des is more expensive than aes for example\n", "should be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times faster\n", "des is the least secure 3des is better but i d go for the aes\n", "3des is more expensive than aes for example\n", "i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n", "for the 10 tests on the same list the results should be quite the same at least all showing that quicksort is faster than mergesort or vice vesa\n", "quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n", "mergesort may use more space than quicksort i m not entirely sure and merge may be better for linkedlists\n", "mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n", "purely in terms of the number of comparisons performed is mergesort always more efficient than quicksort\n", "depending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etc\n", "also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n", "interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n", "quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n", "quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n", "you can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithms\n", "mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n", "the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great\n", "quicksort usually is better than mergesort for two reasons\n", "i would say that the quicksort is simpler for parallelizing than the mergesort\n", "scenarios when quicksort is worse than mergesort\n", "it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n", "it s because that quicksort is generally faster that people use it instead of mergesort\n", "quicksort is more sensitive to input sortedness in a positive way than mergesort\n", "i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n", "previously discussed on so why is quicksort better than mergesort\n", "this means that while the two underlying sorts it uses mergesort and insertion sort are both worse than quicksort for many kinds of data timsort only uses them when it is advantageous to do so\n", "technically mergesort has a better time-behavior \u00ee nlogn worst and average cases than quicksort \u00ee n 2 worst case \u00ee nlogn average case\n", "from what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithm\n", "parallelizing mergesort is simpler than quicksort in-place\n", "mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n", "quicksort usually is better than mergesort for two reasons\n", "as many people have noted the average case performance for quicksort is faster than mergesort\n", "quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n", "for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n", "quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n", "i know mergesort is better since it is stable and doesn t have n 2 as worst case but i required to implement quicksort\n", "in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer\n", "that s hard to say.the worst of mergesort is n log2n -n+1 which is accurate if n equals 2 k i have already proved this .and for any n it s between n lg n - n + 1 and n lg n + n + o lg n .but for quicksort its best is nlog2n also n equals 2 k .if you divide mergesort by quicksort it equals one when n is infinite.so it s as if the worst case of mergesort is better than the best case of quicksort why do we use quicksort\n", "quicksort is not better than mergesort\n", "quicksort is worse complexity than mergesort in the worst case.\n", "for example locality of references has influence on cache hits or misses which is the reason why quicksort performs better than mergesort\n", "quicksort is not better it is well suited for a different kind of application than mergesort\n", "mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n", "given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort\n", "i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithm\n", "an interesting answer about this can be found at why is quicksort better than mergesort\n", "quicksort consistently has less recursive calls than mergesort\n", "the quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sort\n", "however on smaller int sizes quicksort gets slower and mergesort gets faster\n", "quicksort is more sensitive to input sortedness in a positive way than mergesort\n", "why is quicksort better than mergesort\n", "interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n", "mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n", "when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n", "quicksort is not better than mergesort\n", "i do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sort\n", "for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n", "quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n", "i ve looked at the question at why is quicksort better than mergesort\n", "mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n", "quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n", "quicksort consistently has less recursive calls than mergesort\n", "quicksort is approximately 40 faster than mergesort on random data because of fewer data movements\n", "quicksort is worse complexity than mergesort in the worst case.\n", "normally quicksort is faster than mergesort which is faster than heapsort\n", "i do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sort\n", "technically mergesort has a better time-behavior \u00ee nlogn worst and average cases than quicksort \u00ee n 2 worst case \u00ee nlogn average case\n", "that way quicksort can reach recursive base case more quicker than mergesort\n", "when comparison function is a callback function like in quicksort libc implementation quicksort is slower than mergesort by 15 on random input and 30 for already sorted array for 64 bit integers\n", "quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n", "to be specific the quicksort runs faster than mergesort in the first test case and loses badly in the following 9 tests\n", "quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n", "is quicksort always better than mergesort\n", "quicksort is implemented well it is typically 2-3 times faster than mergesort or\n", "also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n", "when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n", "it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n", "also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n", "i had been taught that quicksort is almost always quicker than mergesort and i understand that there is some debate on this topic but i at least expected it to be closer than this\n", "mergesort uses about 30 less comparisons than quicksort\n", "i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n", "for the 10 tests on the same list the results should be quite the same at least all showing that quicksort is faster than mergesort or vice vesa\n", "quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n", "mergesort may use more space than quicksort i m not entirely sure and merge may be better for linkedlists\n", "mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n", "purely in terms of the number of comparisons performed is mergesort always more efficient than quicksort\n", "depending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etc\n", "also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n", "interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n", "quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n", "quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n", "you can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithms\n", "mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n", "the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great\n", "quicksort usually is better than mergesort for two reasons\n", "i would say that the quicksort is simpler for parallelizing than the mergesort\n", "scenarios when quicksort is worse than mergesort\n", "it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n", "it s because that quicksort is generally faster that people use it instead of mergesort\n", "quicksort is more sensitive to input sortedness in a positive way than mergesort\n", "i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n", "previously discussed on so why is quicksort better than mergesort\n", "this means that while the two underlying sorts it uses mergesort and insertion sort are both worse than quicksort for many kinds of data timsort only uses them when it is advantageous to do so\n", "technically mergesort has a better time-behavior \u00ee nlogn worst and average cases than quicksort \u00ee n 2 worst case \u00ee nlogn average case\n", "from what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithm\n", "parallelizing mergesort is simpler than quicksort in-place\n", "mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n", "quicksort usually is better than mergesort for two reasons\n", "as many people have noted the average case performance for quicksort is faster than mergesort\n", "quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n", "for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n", "quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n", "i know mergesort is better since it is stable and doesn t have n 2 as worst case but i required to implement quicksort\n", "in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer\n", "that s hard to say.the worst of mergesort is n log2n -n+1 which is accurate if n equals 2 k i have already proved this .and for any n it s between n lg n - n + 1 and n lg n + n + o lg n .but for quicksort its best is nlog2n also n equals 2 k .if you divide mergesort by quicksort it equals one when n is infinite.so it s as if the worst case of mergesort is better than the best case of quicksort why do we use quicksort\n", "quicksort is not better than mergesort\n", "quicksort is worse complexity than mergesort in the worst case.\n", "for example locality of references has influence on cache hits or misses which is the reason why quicksort performs better than mergesort\n", "quicksort is not better it is well suited for a different kind of application than mergesort\n", "mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n", "given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort\n", "i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithm\n", "an interesting answer about this can be found at why is quicksort better than mergesort\n", "quicksort consistently has less recursive calls than mergesort\n", "the quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sort\n", "however on smaller int sizes quicksort gets slower and mergesort gets faster\n", "quicksort is more sensitive to input sortedness in a positive way than mergesort\n", "why is quicksort better than mergesort\n", "interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n", "mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n", "when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n", "quicksort is not better than mergesort\n", "i do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sort\n", "for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n", "quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n", "i ve looked at the question at why is quicksort better than mergesort\n", "mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n", "quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n", "quicksort consistently has less recursive calls than mergesort\n", "quicksort is approximately 40 faster than mergesort on random data because of fewer data movements\n", "quicksort is worse complexity than mergesort in the worst case.\n", "normally quicksort is faster than mergesort which is faster than heapsort\n", "i do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sort\n", "technically mergesort has a better time-behavior \u00ee nlogn worst and average cases than quicksort \u00ee n 2 worst case \u00ee nlogn average case\n", "that way quicksort can reach recursive base case more quicker than mergesort\n", "when comparison function is a callback function like in quicksort libc implementation quicksort is slower than mergesort by 15 on random input and 30 for already sorted array for 64 bit integers\n", "quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n", "to be specific the quicksort runs faster than mergesort in the first test case and loses badly in the following 9 tests\n", "quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n", "is quicksort always better than mergesort\n", "quicksort is implemented well it is typically 2-3 times faster than mergesort or\n", "also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n", "when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n", "it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n", "also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n", "i had been taught that quicksort is almost always quicker than mergesort and i understand that there is some debate on this topic but i at least expected it to be closer than this\n", "mergesort uses about 30 less comparisons than quicksort\n", "but tripledes is older and weaker than aes\n", "i personally would use aes for my encryption as it is lighter and more secure than tripledes in fact i think it is the de facto algorithm at the moment\n", "but tripledes is older and weaker than aes\n", "but tripledes is older and weaker than aes\n", "i personally would use aes for my encryption as it is lighter and more secure than tripledes in fact i think it is the de facto algorithm at the moment\n", "but tripledes is older and weaker than aes\n", "bellman-ford as suggested in your question tends to be slower than either dijkstra s or a - it is primarily used when there are negative edge-weights which there are not here\n", "after a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithm\n", "surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n", "in fact i think it is fair to say that bellman-ford is more similar to dijkstra because of its use of iterative relaxation\n", "but under what circumstances is the bellman-ford algorithm better than the dijkstra algorithm\n", "in fact i think it is fair to say that bellman-ford is more similar to dijkstra because of its use of iterative relaxation\n", "after a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithm\n", "since a proper implementation of dijkstra is faster than bellman-ford use dijkstra unless there are negative weight edges in the graph\n", "surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n", "the only issue with applying that technique for the single source shortest path problem is that reweighting with bellman-ford takes o mn time which is slower than dijkstra s o m log n\n", "however if g is guaranteed to have only non-negative weights g is non-positive weights then dijkstra s algorithm could be better choice over bellman-ford\n", "i have made some testing and it came out that rsa is lot slower than dsa\n", "a dsa signature generation could be somewhat faster than a rsa signature generation maybe up to twice faster\n", "this is why rsa is much slower than dsa\n", "that continued usage of 1024-bit prime field elgamal or dsa keys is much riskier than it is for 1024-bit rsa all are still commonly used because once a successful attack has been conducted against a single well-chosen prime field all users of that prime field may be affected at little additional effort.\n", "dsa signatures are signficantly shorter than rsa ones\n", "however in this case dsa key size is less than rsa key size\n", "i have made some testing and it came out that rsa is lot slower than dsa\n", "however dsa verification expect verification calls to be 100x issue is about 10x slower than rsa verification\n", "rsa is also a better choice than dsa because it has much better breadth of support for signatures still considered secure by nist\n", "use dsa it tends to be more compact than rsa\n", "this is why rsa is much slower than dsa\n", "dsa has signature that is independent of key strength and is much smaller than rsa signature for equivalent security rsa 1024 1568 vs dsa 192\n", "i guess rsa is older and dsa is newer\n", "but heapsort is assumed to be on average somewhat slower than standard in-place quicksort\n", "but heapsort is assumed to be on average somewhat slower than standard in-place quicksort\n", "but a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processing\n", "then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n", "then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n", "but a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processing\n", "the non-random random behaviour is more a reflection on the quality of the rand prng \u00e2 it is often not very good\n", "typically mergesort is slower than heapsort and quicksort but that s usually under the assumption that comparisons are fast\n", "normally quicksort is faster than mergesort which is faster than heapsort\n", "what baffles me is that my mergesort seems to be slower than heapsort in both of the languages\n", "heapsort tends to be slower than mergesort for the same reason.\n", "typically mergesort is slower than heapsort and quicksort but that s usually under the assumption that comparisons are fast\n", "normally quicksort is faster than mergesort which is faster than heapsort\n", "what baffles me is that my mergesort seems to be slower than heapsort in both of the languages\n", "heapsort tends to be slower than mergesort for the same reason.\n", "if you use shellsort no extra memory is needed at all though shellsort will be much slower than quicksort\n", "by comparison des see section 3.2 and other block ciphers are much faster than the rsa algorithm\n", "des code is 8 times larger than rsa\n", "by comparison des see section 3.2 and other block ciphers are much faster than the rsa algorithm\n", "des code is 8 times larger than rsa\n", "note that the effective key size of aes is larger than triple des\n", "which steps of aes encryption makes it less vulnerable than des\n", "which steps of aes encryption makes it less vulnerable than des\n", "aes will indeed yield a considerably faster result than des\n", "i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n", "using des assuming it s a little faster than aes and requires a smaller key and\n", "turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n", "turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n", "i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n", "according to this analysis aes rijndael-128 is more than twice as fast as des 3des with a bigger key size more secure\n", "edit 3des is better than des in the sense that it s significantly more secure but still less secure than aes but its performance is of necessity significantly worse than aes des or twofish because you re essentially applying des three times\n", "if aes is negotiated it s faster than des and 3des used by default by older applications\n", "des turned out to be even slower than aes but for my current requirements a much simpler algorythm rc4 is sufficient\n", "des is usually substantially slower than aes on modern hardware and has keys that are far too short for modern use\n", "also see why aes is more secure than des\n", "which steps of aes encryption makes it less vulnerable than des\n", "though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n", "also see why aes is more secure than des\n", "note that the effective key size of aes is larger than triple des\n", "though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n", "aes can be even much faster than des or 3des when the cpu supports aes-ni\n", "this shows that the timings are sensitive to buffering and that aes is faster than des\n", "if you used aes then you might see a better speedup over the des 3des observations\n", "note that the effective key size of aes is larger than triple des\n", "which steps of aes encryption makes it less vulnerable than des\n", "which steps of aes encryption makes it less vulnerable than des\n", "aes will indeed yield a considerably faster result than des\n", "i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n", "using des assuming it s a little faster than aes and requires a smaller key and\n", "turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n", "turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n", "i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n", "according to this analysis aes rijndael-128 is more than twice as fast as des 3des with a bigger key size more secure\n", "edit 3des is better than des in the sense that it s significantly more secure but still less secure than aes but its performance is of necessity significantly worse than aes des or twofish because you re essentially applying des three times\n", "if aes is negotiated it s faster than des and 3des used by default by older applications\n", "des turned out to be even slower than aes but for my current requirements a much simpler algorythm rc4 is sufficient\n", "des is usually substantially slower than aes on modern hardware and has keys that are far too short for modern use\n", "also see why aes is more secure than des\n", "which steps of aes encryption makes it less vulnerable than des\n", "though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n", "also see why aes is more secure than des\n", "note that the effective key size of aes is larger than triple des\n", "though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n", "aes can be even much faster than des or 3des when the cpu supports aes-ni\n", "this shows that the timings are sensitive to buffering and that aes is faster than des\n", "if you used aes then you might see a better speedup over the des 3des observations\n", "because bellman-ford runs in time o mn the overall asymptotic runtime is still o mn + n 2 log n so if m o n 2 note that this is little-o of n this approach is asymptotically faster than using floyd-warshall\n", "since the next is not far the number of backtracking steps is much fewer than with greedy matching\n", "since the next is not far the number of backtracking steps is much fewer than with greedy matching\n", "the capturing group 1 in the first pattern is greedy it first matches everything and takes as less as it backtracking\n", "since the next is not far the number of backtracking steps is much fewer than with greedy matching\n", "since the next is not far the number of backtracking steps is much fewer than with greedy matching\n", "the capturing group 1 in the first pattern is greedy it first matches everything and takes as less as it backtracking\n", "considering most rsa moduli are at least 1024 bit this will be much larger than an aes key\n", "like you heard asymmetric cryptography like rsa is much slower than symmetric cryptography aes but it does have it s advantages simpler key management a single private key to protect\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n", "the aes key is encrypting much more data but is much faster than rsa encryption\n", "execution of aes is more faster than rsa for same key sizes\n", "execution of aes is more faster than rsa for same key sizes\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "that is actually not the case with rsa which is --- more so than aes --- just a math equation\n", "rsa is much slower than aes\n", "asymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aes\n", "it shows that rsa encrypt is faster then aes encrypt\n", "asymmetric encryption ex rsa is no more secure than symmetric encryption ex aes\n", "asymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aes\n", "but if you use public key encryption to encrypt messages you are a limited to small messages -- a 1024 bit rsa key encrypts less than 128 bytes and b going to pay in performance because public key encryption is much more costly than symmetric key encryption such as aes encryption\n", "block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n", "it shows that rsa encrypt is faster then aes encrypt\n", "the whole purpose of using aes to secure the communication or any symmetric key encryption is that it s a lot faster than rsa or any public key encryption\n", "as far as efficiency rsa is going to be orders of magnitudes slower than aes so the trade-off you make is that you give up simplicity you give up the simplicity of using aes in favor of some rsa chunking in return for poor performance you get the slower performance of rsa.\n", "rsa is much slower than aes\n", "and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n", "while 256-bit aes might sound less secure than 4096-bit rsa they might actually be quite similar from the offered protection\n", "so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n", "one of the reasons to do so is that rsa is much slower than for example aes\n", "note however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aes\n", "block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n", "execution of aes is more faster than rsa for same key sizes\n", "that is actually not the case with rsa which is --- more so than aes --- just a math equation\n", "algorithms like rsa are much less user-friendly than aes\n", "so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n", "in your particular case an rsa key of 2048 bits has a lot less strenght than an aes key of 256 bits\n", "note however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aes\n", "how is aes less secure than rsa in this scenario\n", "asymmetric encryption ex rsa is no more secure than symmetric encryption ex aes\n", "considering most rsa moduli are at least 1024 bit this will be much larger than an aes key\n", "like you heard asymmetric cryptography like rsa is much slower than symmetric cryptography aes but it does have it s advantages simpler key management a single private key to protect\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n", "the aes key is encrypting much more data but is much faster than rsa encryption\n", "execution of aes is more faster than rsa for same key sizes\n", "execution of aes is more faster than rsa for same key sizes\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n", "that is actually not the case with rsa which is --- more so than aes --- just a math equation\n", "rsa is much slower than aes\n", "asymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aes\n", "it shows that rsa encrypt is faster then aes encrypt\n", "asymmetric encryption ex rsa is no more secure than symmetric encryption ex aes\n", "asymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aes\n", "but if you use public key encryption to encrypt messages you are a limited to small messages -- a 1024 bit rsa key encrypts less than 128 bytes and b going to pay in performance because public key encryption is much more costly than symmetric key encryption such as aes encryption\n", "block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n", "it shows that rsa encrypt is faster then aes encrypt\n", "the whole purpose of using aes to secure the communication or any symmetric key encryption is that it s a lot faster than rsa or any public key encryption\n", "as far as efficiency rsa is going to be orders of magnitudes slower than aes so the trade-off you make is that you give up simplicity you give up the simplicity of using aes in favor of some rsa chunking in return for poor performance you get the slower performance of rsa.\n", "rsa is much slower than aes\n", "and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n", "while 256-bit aes might sound less secure than 4096-bit rsa they might actually be quite similar from the offered protection\n", "so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n", "one of the reasons to do so is that rsa is much slower than for example aes\n", "note however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aes\n", "block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n", "execution of aes is more faster than rsa for same key sizes\n", "that is actually not the case with rsa which is --- more so than aes --- just a math equation\n", "algorithms like rsa are much less user-friendly than aes\n", "so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n", "in your particular case an rsa key of 2048 bits has a lot less strenght than an aes key of 256 bits\n", "note however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aes\n", "how is aes less secure than rsa in this scenario\n", "asymmetric encryption ex rsa is no more secure than symmetric encryption ex aes\n", "another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n", "another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n", "1 in-place merge sort is used when you want to sort a list in o nlogn time while using less space than standard mergesort\n", "mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n", "mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n", "another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n", "another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n", "1 in-place merge sort is used when you want to sort a list in o nlogn time while using less space than standard mergesort\n", "mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n", "mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n", "heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n", "asymptotic analysis reveals order of growth of heapsort in the worst case is big-o n logn which is better than quicksort s big-o n 2 as a worst case\n", "worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n", "the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n", "worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n", "for 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesort\n", "after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n", "in practice however quicksort is usually faster then heapsort\n", "each iteration in quicksort is a lot simpler than heapsort\n", "but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n", "because heapsort is actually slower than quicksort for each n\n", "heapsort has higher overhead than quicksort but its worst case is o n log n vs\n", "for example quicksort average cost t n.log n and heapsort average cost t n.log n are both sorting algorithms with the same average cost - yet quicksort is typically much faster than heapsort\n", "the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n", "in theory quicksort is worse than heapsort\n", "heapsort has higher overhead than quicksort but its worst case is o n log n vs\n", "so for even small inputs quicksort does less work than heapsort and is physically faster for every n\n", "for 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesort\n", "it is a variant of heapsort which is particularly suitable for the sorting of very large amounts of data if a relatively high cost per compare operation is needed and on average better than quicksort\n", "however quicksort s worst-case performance is significantly worse than heapsort s is\n", "quicksort time complexity is typically o n log n but it s worst case is o n 2 which is avoided with the switch to heapsort since heapsort is always o n log n but slower than quicksort so it s only used to avoid o n 2\n", "however heapsort is somewhat slower in practice on most machines than a well-implemented quicksort\n", "in short - if all we care about are comparisons heapsort is a better choice than quicksort\n", "because heapsort is actually slower than quicksort for each n\n", "in short - if all we care about are comparisons heapsort is a better choice than quicksort\n", "if i do heapsort i can create the stack while i m sorting but would this be faster than a quicksort and then build the stack afterwords\n", "in practice however quicksort is usually faster then heapsort\n", "heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n", "in theory insertion sort and quicksort are worse than heapsort\n", "for example quicksort is faster than heapsort in general although their time complexity are the same\n", "when you say something like heapsort should be faster than quicksort what makes you say that\n", "in other words the per-comparison-overhead of heapsort is higher than the one of quicksort\n", "you can indeed show that on average quicksort will do more comparisons than heapsort roughly 1.44 n log 2 n for quicksort versus n log 2 n versus heapsort\n", "average asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loops\n", "this is because quicksort is generally faster than heapsort unless the call depth becomes to deep\n", "i was just going to say radix sort however that could be a bit above what you were looking to implement introsort is generally the accepted sorting solution for data it s a variation of quicksort that switches to heapsort when it reaches smaller sets as it s faster on smaller sets than quicksort\n", "after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n", "why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n", "this is because quicksort is generally faster than heapsort unless the call depth becomes to deep\n", "but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n", "in fact the heapsort algorithm works this way first arrange a random order into heap order and then obtain a sorted order somewhat less efficient than quicksort on average\n", "what makes quicksort faster than heapsort in practice is its constant that was ignored by big o analysis\n", "from what i heard quicksort should have better average case performance but from my tests it performs 4 times worse than heapsort for array of random integers\n", "so for instance heapsort is faster than quicksort in the worst case but slower in the average case\n", "the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n", "in their respective worst cases heapsort is faster than quicksort\n", "why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n", "quicksort also has a better cache access behavior than heapsort\n", "can anyone explain why heapsort performs better and under what circumstances quichesort would be better than both quicksort and heapsort\n", "quicksort also has a better cache access behavior than heapsort\n", "however heapsort is slower than quicksort in the average case in the sense that heapsort performs c n log n whereas quicksort has d n log n performance with d being significantly smaller than c the numbers c and d are constants\n", "in the event that the quicksort starts to degenerate it uses heapsort which is o n log n worst-case but slightly slower than quicksort on average to guarantee o n log n worst-case runtimes\n", "the reason heapsort is slower in practice than quicksort is due to the better locality of reference in quicksort where data elements are within relatively close storage locations\n", "so for even small inputs quicksort does less work than heapsort and is physically faster for every n\n", "heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n", "asymptotic analysis reveals order of growth of heapsort in the worst case is big-o n logn which is better than quicksort s big-o n 2 as a worst case\n", "worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n", "the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n", "worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n", "for 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesort\n", "after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n", "in practice however quicksort is usually faster then heapsort\n", "each iteration in quicksort is a lot simpler than heapsort\n", "but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n", "because heapsort is actually slower than quicksort for each n\n", "heapsort has higher overhead than quicksort but its worst case is o n log n vs\n", "for example quicksort average cost t n.log n and heapsort average cost t n.log n are both sorting algorithms with the same average cost - yet quicksort is typically much faster than heapsort\n", "the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n", "in theory quicksort is worse than heapsort\n", "heapsort has higher overhead than quicksort but its worst case is o n log n vs\n", "so for even small inputs quicksort does less work than heapsort and is physically faster for every n\n", "for 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesort\n", "it is a variant of heapsort which is particularly suitable for the sorting of very large amounts of data if a relatively high cost per compare operation is needed and on average better than quicksort\n", "however quicksort s worst-case performance is significantly worse than heapsort s is\n", "quicksort time complexity is typically o n log n but it s worst case is o n 2 which is avoided with the switch to heapsort since heapsort is always o n log n but slower than quicksort so it s only used to avoid o n 2\n", "however heapsort is somewhat slower in practice on most machines than a well-implemented quicksort\n", "in short - if all we care about are comparisons heapsort is a better choice than quicksort\n", "because heapsort is actually slower than quicksort for each n\n", "in short - if all we care about are comparisons heapsort is a better choice than quicksort\n", "if i do heapsort i can create the stack while i m sorting but would this be faster than a quicksort and then build the stack afterwords\n", "in practice however quicksort is usually faster then heapsort\n", "heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n", "in theory insertion sort and quicksort are worse than heapsort\n", "for example quicksort is faster than heapsort in general although their time complexity are the same\n", "when you say something like heapsort should be faster than quicksort what makes you say that\n", "in other words the per-comparison-overhead of heapsort is higher than the one of quicksort\n", "you can indeed show that on average quicksort will do more comparisons than heapsort roughly 1.44 n log 2 n for quicksort versus n log 2 n versus heapsort\n", "average asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loops\n", "this is because quicksort is generally faster than heapsort unless the call depth becomes to deep\n", "i was just going to say radix sort however that could be a bit above what you were looking to implement introsort is generally the accepted sorting solution for data it s a variation of quicksort that switches to heapsort when it reaches smaller sets as it s faster on smaller sets than quicksort\n", "after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n", "why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n", "this is because quicksort is generally faster than heapsort unless the call depth becomes to deep\n", "but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n", "in fact the heapsort algorithm works this way first arrange a random order into heap order and then obtain a sorted order somewhat less efficient than quicksort on average\n", "what makes quicksort faster than heapsort in practice is its constant that was ignored by big o analysis\n", "from what i heard quicksort should have better average case performance but from my tests it performs 4 times worse than heapsort for array of random integers\n", "so for instance heapsort is faster than quicksort in the worst case but slower in the average case\n", "the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n", "in their respective worst cases heapsort is faster than quicksort\n", "why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n", "quicksort also has a better cache access behavior than heapsort\n", "can anyone explain why heapsort performs better and under what circumstances quichesort would be better than both quicksort and heapsort\n", "quicksort also has a better cache access behavior than heapsort\n", "however heapsort is slower than quicksort in the average case in the sense that heapsort performs c n log n whereas quicksort has d n log n performance with d being significantly smaller than c the numbers c and d are constants\n", "in the event that the quicksort starts to degenerate it uses heapsort which is o n log n worst-case but slightly slower than quicksort on average to guarantee o n log n worst-case runtimes\n", "the reason heapsort is slower in practice than quicksort is due to the better locality of reference in quicksort where data elements are within relatively close storage locations\n", "so for even small inputs quicksort does less work than heapsort and is physically faster for every n\n", "in my tests snappy performs better than lzo by the way\n", "these formats allow various data compression codecs note that snappy is now much more popular than lzo and can also provide other benefits such as fast serializable deserialization column pruning and bundled metadata\n", "snappy also consistently decompresses 20 + faster than lzo which is a pretty big win if you want it for files you re reading a lot over hadoop\n", "snappy is also significantly faster than lzo for decompression\n", "you can take a look at timsort which for non completely random data performs better than quicksort they have the same asymptotic complexity but timsort has lower constants\n", "if it is true then timsort will always take less comparison than quicksort because on real life data there is some pattern except data is truly random\n", "java s array .sort is from about java 6 actually timsort the fastest general purpose #sort out there much better than quicksort in many situations\n", "i ve read that timsort is better than quicksort both in the best and the worst case although it uses a bit more memory\n", "if that is so you might find that timsort runs faster than quicksort\n", "timsort is used by python and java for their sort methods and is rather supernaturally fast but it s a more complex algorithm than mergesort which matters if you re working in something like c - so if you just need something that works pretty well and is simple go with mergesort\n", "which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n", "why quicksort or introsort or any comparison-based sorting algorithm is more common than radix-sort\n", "which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n", "which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n", "why quicksort or introsort or any comparison-based sorting algorithm is more common than radix-sort\n", "which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n", "ecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the case\n", "rsa is much faster then ecdsa at verification\n", "ecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the case\n", "rsa is much faster then ecdsa at verification\n", "if you re interesting in reducing the size of the resulting cookies you should consider using ecdsa rather than rsa to produce the signatures - ecdsa signatures are considerably smaller than rsa signatures of an equivalent security factor\n", "ecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the case\n", "rsa is much faster then ecdsa at verification\n", "ecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the case\n", "rsa is much faster then ecdsa at verification\n", "if you re interesting in reducing the size of the resulting cookies you should consider using ecdsa rather than rsa to produce the signatures - ecdsa signatures are considerably smaller than rsa signatures of an equivalent security factor\n", "lz4 is probably better though snappy was developed by google with protobufs in mind so you might want to test both on your data set.\n", "in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n", "in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n", "in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n", "in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n", "no practically floyd-warshall is faster than dijkstra s for all pair shortest path generally\n", "short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n", "indeed floyd-warshall s algorithm is better than dijkstra s in this case the complexity for dijkstra is o m n 2 and in this problem m is much much higher than n so the o n 3 time complexity of floyd-warshall is better\n", "short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n", "no practically floyd-warshall is faster than dijkstra s for all pair shortest path generally\n", "short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n", "indeed floyd-warshall s algorithm is better than dijkstra s in this case the complexity for dijkstra is o m n 2 and in this problem m is much much higher than n so the o n 3 time complexity of floyd-warshall is better\n", "short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n", "ecdsa support is less ubiquitous than rsa partly because it s newer and partly because of patents on efficient implementation techniques\n", "ecdsa support is less ubiquitous than rsa partly because it s newer and partly because of patents on efficient implementation techniques\n", "ecdsa support is less ubiquitous than rsa partly because it s newer and partly because of patents on efficient implementation techniques\n", "ecdsa support is less ubiquitous than rsa partly because it s newer and partly because of patents on efficient implementation techniques\n", "ecdsa support is less ubiquitous than rsa partly because it s newer and partly because of patents on efficient implementation techniques\n", "ecdsa support is less ubiquitous than rsa partly because it s newer and partly because of patents on efficient implementation techniques\n", "a dsa key of the same size of an rsa key provides more security but at the same time dsa is more vulnerable to bad random numbers compare with the debian random number generator flaw\n", "a dsa key of the same size of an rsa key provides more security but at the same time dsa is more vulnerable to bad random numbers compare with the debian random number generator flaw\n", "but dsa keys are weaker than rsa so that would be unhardening my new server\n", "apparently also if i m using more than 5 dsa keys which as i read it were more strong than rsa keys but it seems that putty dev team don t agree with it pageant doesn t respond to putty anymore and it s the same than if i m using more than 1 dsa key with several rsa keys\n", "enable cryptographic keys dsa better than rsa for client authentication\n", "dsa signatures are much shorter than rsa signatures\n", "apparently also if i m using more than 5 dsa keys which as i read it were more strong than rsa keys but it seems that putty dev team don t agree with it pageant doesn t respond to putty anymore and it s the same than if i m using more than 1 dsa key with several rsa keys\n", "signing is mainly because rsa lets you use larger hashes than dsa\n", "recent versioning of macos have upgrade from rsa host keys to ecdsa host keys because elliptic curve cryptography is considered more secure than rsa\n", "recent versioning of macos have upgrade from rsa host keys to ecdsa host keys because elliptic curve cryptography is considered more secure than rsa\n"], "library": ["jqplot is free in my opinion has better chart than flot it doesn\u00e2 t have events\n", "by looking at the google groups for qjplot and flot the support for jqplot is better lot s of unanswered questions at the flot group\n", "i found jqplot easier to use with more options and better documentation than flot or graphael\n", "by looking at the google groups for qjplot and flot the support for jqplot is better lot s of unanswered questions at the flot group\n", "also linearsvc class from scikit-learn performs even better than liblinear whch is also surprising considering that it s a wrapper of liblinear\n", "also linearsvc class from scikit-learn performs even better than liblinear whch is also surprising considering that it s a wrapper of liblinear\n", "edit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw case\n", "edit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw case\n", "i ve used both robospice is more robust but ion is easier on the eyes\n", "i ve used both robospice is more robust but ion is easier on the eyes\n", "i ve used both robospice is more robust but ion is easier on the eyes\n", "i ve used both robospice is more robust but ion is easier on the eyes\n", "usr local lib python2.7 dist-packages theano sandbox cuda init .py 600 userwarning your cudnn version is more recent than the one theano officially supports\n", "userwarning your cudnn version is more recent than the one theano\n", "userwarning your cudnn version is more recent than the one theano\n", "usr local lib python2.7 dist-packages theano sandbox cuda init .py 600 userwarning your cudnn version is more recent than the one theano officially supports\n", "you should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its side\n", "you should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its side\n", "xapian is slightly more difficult to setup but is much faster than whoosh\n", "xapian is slightly more difficult to setup but is much faster than whoosh\n", "xapian is slightly more difficult to setup but is much faster than whoosh\n", "personally i ve used mayavi in the past and found the performance much better than matplotlib for 3d scatter plotting though the python bindings are somewhat in question moving forward i think\n", "mayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yet\n", "mayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yet\n", "anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n", "anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n", "mayavi makes it easier to visualize the data but matplotlib looks more professional\n", "personally i ve used mayavi in the past and found the performance much better than matplotlib for 3d scatter plotting though the python bindings are somewhat in question moving forward i think\n", "mayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yet\n", "mayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yet\n", "anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n", "anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n", "mayavi makes it easier to visualize the data but matplotlib looks more professional\n", "if everything is correct why keras perform so much better than lasagne\n", "as a result of this comparison i see that lasagne is performing so much worse than keras that i m starting to doubt about my code\n", "if everything is correct why keras perform so much better than lasagne\n", "as a result of this comparison i see that lasagne is performing so much worse than keras that i m starting to doubt about my code\n", "i haven t played around with it recently but i think bcolz is more flexible here in terms of mixing dtypes but doesn t give you all the pandas dataframe conveniences obviously\n", "i haven t played around with it recently but i think bcolz is more flexible here in terms of mixing dtypes but doesn t give you all the pandas dataframe conveniences obviously\n", "the fresco docs explain how to use drawees and you can see right from their xml definition that they are much more customizable than imageview\n", "i ended up using scriptaculous for most of my animations simply because it provides smoother animations and more configurable than what jquery ui provides\n", "i also kind of get the impression that scriptaculous drag and drop is better than jquery ui drag and drop based on the online demos\n", "i ended up using scriptaculous for most of my animations simply because it provides smoother animations and more configurable than what jquery ui provides\n", "i also kind of get the impression that scriptaculous drag and drop is better than jquery ui drag and drop based on the online demos\n", "for more complex xml reading writing you better check xerces which is heavier than tinyxml\n", "beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n", "beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n", "should i be surprised that the keras theano backend is about 18x - 19x slower than the keras tensorflow backend\n", "should i be surprised that the keras theano backend is about 18x - 19x slower than the keras tensorflow backend\n", "the libsvm results seems much more stable but scikit-learn results have some drastic fluctuation\n", "the libsvm results seems much more stable but scikit-learn results have some drastic fluctuation\n", "the libsvm results seems much more stable but scikit-learn results have some drastic fluctuation\n", "the libsvm results seems much more stable but scikit-learn results have some drastic fluctuation\n", "but this popular wsgi benchmark says eventlet is way slower than gevent\n", "but this popular wsgi benchmark says eventlet is way slower than gevent\n", "the use of gevent is also a performant option but slightly lower than eventlet\n", "magma routine magma_gemm has higher performance than cublas in some cases\n", "lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n", "the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n", "i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome\n", "i believe lodash is a better choice over underscore.js more details in this blog post\n", "because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n", "if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n", "because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n", "the solution from charliefl is approximately 100x faster than underscore.js depending on browser in this case and lodash being up to 2x faster than underscore.js\n", "if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n", "basically collections are things that implement some kind of iterable interface and they internally use the same iteration method though lodash source is a bit more convoluted than underscore.js\n", "lodash is definitely not slower than underscore.js\n", "the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n", "lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n", "lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need\n", "i believe lodash is a better choice over underscore.js more details in this blog post\n", "given that this is 4 years old and lodash has more or less taken the place of underscore.js i thought i would share this solution using lodash\n", "edit as pointed out in the comment lodash is likely to be a better solution than underscore.js\n", "if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations\n", "lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need\n", "lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n", "the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n", "i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome\n", "i believe lodash is a better choice over underscore.js more details in this blog post\n", "because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n", "if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n", "because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n", "the solution from charliefl is approximately 100x faster than underscore.js depending on browser in this case and lodash being up to 2x faster than underscore.js\n", "if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n", "basically collections are things that implement some kind of iterable interface and they internally use the same iteration method though lodash source is a bit more convoluted than underscore.js\n", "lodash is definitely not slower than underscore.js\n", "the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n", "lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n", "lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need\n", "i believe lodash is a better choice over underscore.js more details in this blog post\n", "given that this is 4 years old and lodash has more or less taken the place of underscore.js i thought i would share this solution using lodash\n", "edit as pointed out in the comment lodash is likely to be a better solution than underscore.js\n", "if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations\n", "lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need\n", "other useful pieces would be jdbi for database access much simpler than hibernate or other full orms async-httpclient for doing calls to other web services\n", "i also think working with seaborn is much easier using pandas dataframes and not numpy arrays\n", "for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n", "for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n", "i also think working with seaborn is much easier using pandas dataframes and not numpy arrays\n", "for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n", "for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n", "according to this answer the isotope plugin might work better than masonry for media-queried resizes\n", "in its stead you can use isotope - which does filtering a lot easier than masonry\n", "they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n", "they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n", "according to this answer the isotope plugin might work better than masonry for media-queried resizes\n", "in its stead you can use isotope - which does filtering a lot easier than masonry\n", "they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n", "they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n", "they merged with dojo which in my opinion is a better choice than dwr\n", "they merged with dojo which in my opinion is a better choice than dwr\n", "i have tried weka too but mallet is smarter than weka on this aspect\n", "the markermanager has a more involved setup than the markerclusterer but it does allow for more customization of what and where it displays\n", "the markermanager has a more involved setup than the markerclusterer but it does allow for more customization of what and where it displays\n", "i ve found pdcurses which is more like the ncurses but it lacks a lot of ncurses libraries\n", "if you definitely need svg and want to only use existing elements you may want to look at snap.svg which is raphaels younger sister and shares a lot of the same codebase or another like svg.js\n", "if you definitely need svg and want to only use existing elements you may want to look at snap.svg which is raphaels younger sister and shares a lot of the same codebase or another like svg.js\n", "the latter doesn t do any dynamic memory allocator and is more than 10 times faster than std to_string on boost karma benchmarks\n", "boost intrusive_ptr performs better than shared_ptr because it doesn t need a second allocator to hold the reference count\n", "just to goof off a version using boost string_ref is much faster still due the reduced allocator\n", "just to goof off a version using boost string_ref is much faster still due the reduced allocator\n", "to be able to use std allocate_shared with boost fast_pool_allocator as the allocator method using g++ 4.8 or higher with boost 1.56.0\n", "the latter doesn t do any dynamic memory allocator and is more than 10 times faster than std to_string on boost karma benchmarks\n", "boost intrusive_ptr performs better than shared_ptr because it doesn t need a second allocator to hold the reference count\n", "just to goof off a version using boost string_ref is much faster still due the reduced allocator\n", "just to goof off a version using boost string_ref is much faster still due the reduced allocator\n", "to be able to use std allocate_shared with boost fast_pool_allocator as the allocator method using g++ 4.8 or higher with boost 1.56.0\n", "i haven t tried any of these in a jsf 2 application but i would recommend using the primefaces one at least the documentation is better than richfaces\n", "primefaces has more components but lack combobox available in richfaces\n", "richfaces is more developed and tested generally since primefaces came out later than rf\n", "primefaces has more components but lack combobox available in richfaces\n", "richfaces is more developed and tested generally since primefaces came out later than rf\n", "i haven t tried any of these in a jsf 2 application but i would recommend using the primefaces one at least the documentation is better than richfaces\n", "primefaces has more components but lack combobox available in richfaces\n", "richfaces is more developed and tested generally since primefaces came out later than rf\n", "primefaces has more components but lack combobox available in richfaces\n", "richfaces is more developed and tested generally since primefaces came out later than rf\n", "i m using the module graphlab in my python script and many more such as pandas and numpy etc graphlab module only works on python2 not for python3\n", "i have noticed that content extraction is faster in itext but searching words using regex in the content extracted by itext takes longer time than pdfbox\n", "i have noticed that content extraction is faster in itext but searching words using regex in the content extracted by itext takes longer time than pdfbox\n", "on the downside pdfbox is less mature than itext so it has less features and documentation available\n", "on the downside pdfbox is less mature than itext so it has less features and documentation available\n", "start with pdfbox as it s text extraction abilities are better than itext s\n", "enthought-dev is chaco faster than matplotlib\n", "boost s io stream might be a better solution than stl s own stream\n", "i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions\n", "while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n", "boost libraries are generally less mature and less standard than stl\n", "c++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended to\n", "as for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpl\n", "once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost\n", "while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n", "i don t want to use boost because that s a library i haven t used extensively yet and i m doing this partly as an exercise to gain greater mastery over the stl\n", "boost s io stream might be a better solution than stl s own stream\n", "i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions\n", "while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n", "boost libraries are generally less mature and less standard than stl\n", "c++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended to\n", "as for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpl\n", "once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost\n", "while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n", "i don t want to use boost because that s a library i haven t used extensively yet and i m doing this partly as an exercise to gain greater mastery over the stl\n", "jpgraph has far more capabilities than phpgraphlib\n", "jpgraph has far more capabilities than phpgraphlib\n", "not to be confused ffmpeg is more recent and libav was used in some distributions of linux\n", "ubuntu 12.04 ships with the ffmpeg fork libav in version 0.8 which is more compatible with ffmpeg 1.0+ or even later ffmpeg versions iirc\n", "not to be confused ffmpeg is more recent and libav was used in some distributions of linux\n", "not to be confused ffmpeg is more recent and libav was used in some distributions of linux\n", "ubuntu 12.04 ships with the ffmpeg fork libav in version 0.8 which is more compatible with ffmpeg 1.0+ or even later ffmpeg versions iirc\n", "not to be confused ffmpeg is more recent and libav was used in some distributions of linux\n", "also if this controller is an hid the hidapi library might be a better fit than libusb\n", "you can have a look at this speed performance benchmark from fftw which suggests that gsl is about 3-4 times slower than fftw 3\n", "you can have a look at this speed performance benchmark from fftw which suggests that gsl is about 3-4 times slower than fftw 3\n", "i wish program with armadillo and openblas is faster than with only armadillo\n", "to allow you to scale down the data away from endpoints 0 and 1 i had to do this when combining colormap in matplotlib single pcolormesh with more than one colormap using matplotlib so you can likely see how the code works but basically say you have values -5 1 10 in a sample but want to normalize based on a range of -7 to 7 so anything above 7 our 10 is treated as a 7 effectively with a midpoint of 2 but shrink it to fit a 256 rgb colormap\n", "to allow you to scale down the data away from 0 and 1 i had to do this when combining colormap in matplotlib single pcolormesh with more than one colormap using matplotlib so you can likely see how the code works but basically say you have values -5 1 10 in a sample but want to normalize based on a range of -7 to 7 so anything above 7 our 10 is treated as a 7 effectively with a midpoint of 2 but shrink it to fit a 256 rgb colormap\n", "to allow you to scale down the data away from endpoints 0 and 1 i had to do this when combining colormap in matplotlib single pcolormesh with more than one colormap using matplotlib so you can likely see how the code works but basically say you have values -5 1 10 in a sample but want to normalize based on a range of -7 to 7 so anything above 7 our 10 is treated as a 7 effectively with a midpoint of 2 but shrink it to fit a 256 rgb colormap\n", "to allow you to scale down the data away from 0 and 1 i had to do this when combining colormap in matplotlib single pcolormesh with more than one colormap using matplotlib so you can likely see how the code works but basically say you have values -5 1 10 in a sample but want to normalize based on a range of -7 to 7 so anything above 7 our 10 is treated as a 7 effectively with a midpoint of 2 but shrink it to fit a 256 rgb colormap\n", "i have made an app similar to yours for android we use boofcv whose surf is much faster than opencv\n", "the results end up very close but the emgucv image comes out a little bit blurrier than the opencv image\n", "unless you re doing very heavy processing working with a single frame is probably faster than transferring it to the server as far as i know emgucv in c# isn t considerably slower than opencv in c c++\n", "customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n", "customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n", "customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n", "customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n", "carrierwave is a newer gem than paperclip and it looks a lot more flexible\n", "new to carrierwave already loving it so much better than paperclip\n", "carrierwave seems to be gaining more popularity than paperclip but most people seem to be on paperclip\n", "carrierwave is a newer gem than paperclip and it looks a lot more flexible\n", "seems like paperclip is more file oriented and carrierwave is more object oriented\n", "the downside is that you are losing the big part of the flyway s appeal in its simplicity and technically could be better off by using liquibase s dsl\n", "if you re using retrofit and okhttp to perform the network calls i suggest you use moshi as it s also from square and claimed to work faster and better than gson\n", "the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n", "as it stands d3.js is not just better than raphael and processing in many cases but is also a viable replacement for jquery underscore.js and other frameworks\n", "raphael supports older versions of ie whereas d3.js is based on current web standards\n", "d3.js is much harder to learn than raphael but in both cases you will also have to learn svg to be able to create better animations\n", "raphael supports older versions of ie whereas d3.js is based on current web standards\n", "this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n", "this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n", "the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n", "the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n", "as it stands d3.js is not just better than raphael and processing in many cases but is also a viable replacement for jquery underscore.js and other frameworks\n", "raphael supports older versions of ie whereas d3.js is based on current web standards\n", "d3.js is much harder to learn than raphael but in both cases you will also have to learn svg to be able to create better animations\n", "raphael supports older versions of ie whereas d3.js is based on current web standards\n", "this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n", "this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n", "the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n", "but adding a class to swt package seems harder first because there is different jars depending on the operating system used org.eclipse.swt.cocoa org.eclipse.swt.gtk .... and also because copy pasting the code of styledtext is not that easy since there is call to external methods waiting for a strict styledtext\n", "but adding a class to swt package seems harder first because there is different jars depending on the operating system used org.eclipse.swt.cocoa org.eclipse.swt.gtk .... and also because copy pasting the code of styledtext is not that easy since there is call to external methods waiting for a strict styledtext\n", "my speed test claims that svg is significantly faster than canvas at least snap.svg seems to be significantly faster than fabricjs\n", "my speed test claims that svg is significantly faster than canvas at least snap.svg seems to be significantly faster than fabricjs\n", "highcharts is svg and as such it is much more dynamic than flot you can restyle graphs with css attach events perform animations etc..\n", "highcharts is svg and as such it is much more dynamic than flot you can restyle graphs with css attach events perform animations etc..\n", "or switch from org.json to something that performs better such as gson or jackson\n", "quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n", "quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n", "quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n", "i am working on a code which needs to be time efficient and thus using cufft for this purpose but when i try to compute fft of a very large data in parallel it is slower than cpu fftw and the reason i find after finding the time for every line of code using high precision timing code is that cudamalloc taking around 0.983 sec while the time for rest of the lines of code is around 0.00xx sec which is expected ..\n", "in the experiments and discussion below i find that cufft is slower than fftw for batched 2d ffts\n", "however for a variety of fft problem sizes i ve found that cufft is slower than fftw with openmp\n", "i think d3.js looks so much better than leaflet but for quick zooming panning functionality my first question is is this better off in leaflet or can d3.js handle slick zoom pan even though it s not tile-based\n", "i think d3.js looks so much better than leaflet but for quick zooming panning functionality my first question is is this better off in leaflet or can d3.js handle slick zoom pan even though it s not tile-based\n", "there s a known bug that when you install the googleads library using pip it will install a newer version of the oauth2client library which will break my google analytics api scripts because the google-api-python-client uses an older version of oauth2client\n", "there s a known bug that when you install the googleads library using pip it will install a newer version of the oauth2client library which will break my google analytics api scripts because the google-api-python-client uses an older version of oauth2client\n", "razorpdf uses an older version of itextsharp which i believe was the latest free itextsharp version\n", "razorpdf uses an older version of itextsharp which i believe was the latest free itextsharp version\n", "lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower\n", "lxml parser is generally faster html5lib is the most lenient one - this kind of difference would be relevant if you have a broken or non-well-formed html to parse\n", "lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower\n", "html5lib parser does a better job than lxml or html.parser handling the debate element in this case\n", "the standard html.parser option handles broken html less well than other options while the html5lib option is closest to how a modern browser would handle broken html albeit at a slower rate than lxml would handle html parsing\n", "html5lib parser does a better job than lxml or html.parser handling the debate element in this case\n", "html5lib parser does a better job than lxml or html.parser handling the debate element in this case\n", "and i ve read that using liblinear is far faster more memory efficient for such tasks as such i ve ported my libsvm classifier to accord net like so\n", "you can also try sklearn.linear_model.logisticregression and sklearn.svm.linearsvc both implemented using liblinear that is more scalable than libsvm albeit less memory efficients than other linear models in scikit-learn\n", "liblinear is considered faster than linear libsvm and often used for large scale data set\n", "and how do the differences make liblinear faster than libsvm\n", "you can also try sklearn.linear_model.logisticregression and sklearn.svm.linearsvc both implemented using liblinear that is more scalable than libsvm albeit less memory efficients than other linear models in scikit-learn\n", "and i ve read that using liblinear is far faster more memory efficient for such tasks as such i ve ported my libsvm classifier to accord net like so\n", "liblinear is considered faster than linear libsvm and often used for large scale data set\n", "when i evaluated monomac it was less mature than monobjc\n", "this is done on an extremely large image and i feel vips might do a better job than opencv on this\n", "at least for .executemany oursql seems to be more proficient than mysql-python as the sql statement is only prepared once for all submitted values\n", "i hear oursql is nicer the mysql-python\n", "scalacheck s api is also a bit richer than quickcheck s api\n", "the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n", "the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n", "the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n", "the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n", "first of all if it was not for the relative complexity of the expressions here scipy would have been definitely the better option over sympy\n", "first of all if it was not for the relative complexity of the expressions here scipy would have been definitely the better option over sympy\n", "pytables seems more flexible but i am unclear about what the most direct way of using it to save a full pandas dataframe with multiindex and all\n", "pytables seems more flexible but i am unclear about what the most direct way of using it to save a full pandas dataframe with multiindex and all\n", "pytables seems more flexible but i am unclear about what the most direct way of using it to save a full pandas dataframe with multiindex and all\n", "pytables seems more flexible but i am unclear about what the most direct way of using it to save a full pandas dataframe with multiindex and all\n", "if you are dealing with docx document docx4j is more convenient than apache-poi\n", "if you are dealing with docx document docx4j is more convenient than apache-poi\n", "if you are dealing with docx document docx4j is more convenient than apache-poi\n", "if you are dealing with docx document docx4j is more convenient than apache-poi\n", "more than this methodology i would suggest to you to do the training directly in keras as it claimed that keras optimizers are 5-10 times faster than tensorflow s optimizers\n", "is keras faster slower than tensorflow during training\n", "keras provides a simpler quicker way to build and train models in tensorflow at no performance cost since the models are still being run by the same tensorflow engine\n", "is keras consumes more gpu memory than equivalent tensorflow model training\n", "is keras consumes more gpu memory than equivalent tensorflow model training\n", "keras provides a simpler quicker way to build and train models in tensorflow at no performance cost since the models are still being run by the same tensorflow engine\n", "more than this methodology i would suggest to you to do the training directly in keras as it claimed that keras optimizers are 5-10 times faster than tensorflow s optimizers\n", "is keras faster slower than tensorflow during training\n", "keras provides a simpler quicker way to build and train models in tensorflow at no performance cost since the models are still being run by the same tensorflow engine\n", "is keras consumes more gpu memory than equivalent tensorflow model training\n", "is keras consumes more gpu memory than equivalent tensorflow model training\n", "keras provides a simpler quicker way to build and train models in tensorflow at no performance cost since the models are still being run by the same tensorflow engine\n", "i found another approach using the cairo context passed to the handler of draw events but it resulted in capturing a region of the parent window that was larger than the drawingarea\n", "inspecting the assembly shows that in the sequential access case eigen is faster because the sum becomes vectorized while it does not when using raw boost multi_array\n", "inspecting the assembly shows that in the sequential access case eigen is faster because the sum becomes vectorized while it does not when using raw boost multi_array\n", "you may also use handbrake which is a simpler encoder than ffmpeg\n", "you may also use handbrake which is a simpler encoder than ffmpeg\n", "it theano runs much faster than tensorflow\n", "tensorflow has better computational graph visualizations than theano and torch\n", "tensorflow is better at marketing itself than long-time players of the open-source market like torch and theano\n", "tensorflow has better computational graph visualizations than theano and torch\n", "theano is still faster than tensorflow in many respects and supports a wider range of operations\n", "it theano runs much faster than tensorflow\n", "in my testing the slow-down from using tensorflow ranges from about 1.5-3.0 times slower than using theano but its performance will depend on your application\n", "theano is still faster than tensorflow in many respects and supports a wider range of operations\n", "it theano runs much faster than tensorflow\n", "tensorflow has better computational graph visualizations than theano and torch\n", "tensorflow is better at marketing itself than long-time players of the open-source market like torch and theano\n", "tensorflow has better computational graph visualizations than theano and torch\n", "theano is still faster than tensorflow in many respects and supports a wider range of operations\n", "it theano runs much faster than tensorflow\n", "in my testing the slow-down from using tensorflow ranges from about 1.5-3.0 times slower than using theano but its performance will depend on your application\n", "theano is still faster than tensorflow in many respects and supports a wider range of operations\n", "and using keras or lasagne is way simpler to develop nns then pure theano which was just side research project in montreal to support development of pylearn\n", "it is similar in spirit to keras which is built as a high-level api on top of theano tensorflow cntk although the main difference is that lasagne implements only one backend allowing it to integrate more deeply with theano features\n", "and using keras or lasagne is way simpler to develop nns then pure theano which was just side research project in montreal to support development of pylearn\n", "it is similar in spirit to keras which is built as a high-level api on top of theano tensorflow cntk although the main difference is that lasagne implements only one backend allowing it to integrate more deeply with theano features\n", "i know another plugin named jquery corner is available however it s file size being massively bigger than curvycorners i decided to with curvycorners\n", "i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n", "regarding skinning i feel trinidad default skinning to be more basic than richfaces one but i think both have ways to make them as beautiful as your css skills allow you\n", "i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n", "i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n", "regarding skinning i feel trinidad default skinning to be more basic than richfaces one but i think both have ways to make them as beautiful as your css skills allow you\n", "i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n", "to draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nb\n", "to draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nb\n", "you should try momentjs i think its much better than datejs\n", "in my opinion swing is easier to learn and to use but the results of swt are often nicer - you can often feel that a swing application behaves not completely right\n", "swt is more simple to use than swing especially if this is your first ui\n", "swt community is smaller and it doesn t provide that many tools as swing does\n", "fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed\n", "fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed\n", "swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately\n", "is swt faster than swing\n", "i find swt to be an uglier api than swing in general though but not really a deal breaker\n", "in java if you want a graphic user interface you can use swt or swing and swing is better than swt\n", "swt became slower than swing because it uses proxy to os widgets\n", "swt is more simple to use than swing especially if this is your first ui\n", "swt is claimed to be faster than swing although in modern versions swing is also fast enough\n", "give swt a go the api is a lot simpler than swing\n", "even though i liked many design aspects of swt and it is simpler than swing imo swing is the one to learn because imo it has far far better documentation examples etc\n", "swing is the weaker of the gui technologies relating to accessibility in java compared to swt at any rate\n", "swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately\n", "so in my view using swing is simply easier unless you have more experience in swt\n", "also swt is actually newer and more actively maintained than swing\n", "it can be hard to get the layuots exact the way you want in swt it s usually easier in swing\n", "i m not too eager for using swt though since i m more familiar with swing\n", "the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n", "the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n", "the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n", "i also recommend wtforms it s much easier to use than formencode and have builtin sqlalchemy extensions\n", "qlabel has no any other unnecessary things so it is better than qlineedit or qprogressbar\n", "as a note jchart2d is way better than other libraries as jfreechart for real time applications\n", "with gtk it s more common to use cairo already mentioned by jeff foster\n", "the problem is that the canvas drawn by cairo is larger than the area of gtk s scrolled_window\n", "with gtk it s more common to use cairo already mentioned by jeff foster\n", "the tcmalloc library for example can be easily inserted into an application to evaluate performance gains in heavily threaded applications where tcmalloc tends to perform a lot better than libc s malloc implementation\n", "pyglet is more strict the pyopengl so i m now learning it\n", "pyglet is more strict the pyopengl so i m now learning it\n", "i d say that pyglet is actually more evolved than pyopengl\n", "i d say that pyglet is actually more evolved than pyopengl\n", "there exists a simd fork of pillow which claims to have much better performance than imagemagick or plain pillow but there are no comparisons to opencv\n", "for me graphicsmagick is performing far better than imagemagick\n", "mmmm graphicsmagick is somewhat less developed than imagemagick in many respects\n", "mmmm graphicsmagick is somewhat less developed than imagemagick in many respects\n", "the origin server would get the images from s3 process them using graphicsmagick since it s much faster than imagemagick then serve them\n", "graphicsmagick also seems to be faster than imagemagick using better multitasking\n", "mmmm graphicsmagick is somewhat less developed than imagemagick in many respects\n", "graphicsmagick converted much faster than imagemagick although i did not test conversion with cuda processing\n", "graphicsmagick is not that much faster -- and the outputted file sizes are significantly higher than imagemagick\n", "i thought graphicsmagick was supposed to be leaner meaner than imagemagick\n", "graphicsmagick provides more extensive api documentation than imagemagick\n", "i do know imagemagick better than graphicsmagick\n", "graphicsmagick provides more extensive api documentation than imagemagick\n", "i successfully compiled graphicsmagick with q8 but after all it seems about 30 slower than imagemagick 0.3 secs\n", "i thought graphicsmagick was supposed to be leaner meaner than imagemagick\n", "while leaflet aims to be more lightweight than openlayers openlayers is by far the more mature proj\n", "while leaflet aims to be more lightweight than openlayers openlayers is by far the more mature proj\n", "android plot and other free chart solutions mentioned here doesn t support annotations the only one is afreechart which is a port of jfreechart for android i am currently using it and it is awesome and has much more features than achartengine\n", "android plot and other free chart solutions mentioned here doesn t support annotations the only one is afreechart which is a port of jfreechart for android i am currently using it and it is awesome and has much more features than achartengine\n", "as a side-effect of implementing proper parent traversal lxml is a bit slower than celementtree for parsing\n", "instead doing it with lxml which i found to be the fastest somehow even faster than celementtree\n", "currently tensorflow supports the older cudnn v.5.1 while there is a newer cudnn 6.0 available on nvidia site\n", "what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n", "or scikit-learn directly .for more details nltk 3.0 documentation\n", "if you are worried about memory then do look into scikit-learn since equivalent models can use significantly less memory than nltk\n", "or scikit-learn directly .for more details nltk 3.0 documentation\n", "what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n", "the nltk library includes a confusion matrix that is simple to use and produces a nicer output than scikit-learn\n", "what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n", "or scikit-learn directly .for more details nltk 3.0 documentation\n", "if you are worried about memory then do look into scikit-learn since equivalent models can use significantly less memory than nltk\n", "or scikit-learn directly .for more details nltk 3.0 documentation\n", "what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n", "the nltk library includes a confusion matrix that is simple to use and produces a nicer output than scikit-learn\n", "if picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules apply\n", "if picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules apply\n", "android-query is better than picasso because while in offline mode no internet connectivity picasso tries to fetch record form server whereas android-query maintains its cache form where it fetched the images\n", "several things i found in the cocos2d forums lead me to believe it s an issue with the zlib implementation on ios but i ve tried using both stb_image and lodepng to avoid zlib and those libraries actually performed even worse than libpng\n", "several things i found in the cocos2d forums lead me to believe it s an issue with the zlib implementation on ios but i ve tried using both stb_image and lodepng to avoid zlib and those libraries actually performed even worse than libpng\n", "i have an app that uses the public part of the twitter api the on who not requires to login but with the update the login is required so i need to implement oauth i ve seen there are libraries like twitter4j who makes this easier but my app has a lot of code and i don t wanna rewrite it not now so i ve think to use scribe or oauth-signpost but i dont realy know how to\n", "i have an app that uses the public part of the twitter api the on who not requires to login but with the update the login is required so i need to implement oauth i ve seen there are libraries like twitter4j who makes this easier but my app has a lot of code and i don t wanna rewrite it not now so i ve think to use scribe or oauth-signpost but i dont realy know how to\n", "quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n", "in this case jackson performs better than nashorn which performs much better than org.json\n", "quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n", "p.s. my recommendation would be to remove jsonobject conversion and instead return an object of actual class as internally spring uses jackson which is more powerful json framework then org.json\n", "quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n", "p.s. my recommendation would be to remove jsonobject conversion and instead return an object of actual class as internally spring uses jackson which is more powerful json framework then org.json\n", "looking briefly at the list-like combinators for uu-parsinglib i m more familiar with parsec i think you can solve this by folding over the result of the psome combinator\n", "it seems that the idea of uu-parsinglib it to be more declarative than parsec so you just have pure\n", "i would also recommend you to check hikaricp as its way much better than c3p0\n", "i would also recommend you to check hikaricp as its way much better than c3p0\n", "but if convenience is more important than efficiency yes you probably should consider a tree model not dom necessarily xom is better for example or data binding jaxb or xstream\n", "tcmalloc is faster than the glibc 2.3 malloc available as a separate library called ptmalloc2 and other malloc s that i have tested\n", "tcmalloc is faster than the glibc 2.3 malloc.\n", "then we found glibc also have same issue but increase rate is less than tcmalloc\n", "jemalloc and tcmalloc with some setting changes can be more aggressive than glibc to release memory to the os - but again it depends on the allocation patterns\n", "the cons of gulp-sass is that you get more than just node-sass - you also get gulp-utils and other things - which is a problem if you are not using gulp in the first place\n", "as noted in the comment by quandary the pdfsharp library offers a more relaxed license mit compared to the commercial or agpl license offered by itext\n", "as noted in the comment by quandary the pdfsharp library offers a more relaxed license mit compared to the commercial or agpl license offered by itext\n", "for semantic zooming you ll notice that d3.js is significantly faster than protovis\n", "finally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitions\n", "for semantic zooming you ll notice that d3.js is significantly faster than protovis\n", "the team behind protovis has since created d3.js so this is likely a better option than protovis\n", "finally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitions\n", "from my own experience mtl4 is much faster than ublas and it is also faster than eigen\n", "pyomo runs in less than one minute and scipy takes 4 hours\n", "slick2d is made to work with lwjgl 2 lwjgl 3 however is way newer than slick2d and therefore slick2d does not support using lwjgl 3\n", "you could use slick2d it is way easier to use and works with lwjgl\n", "i think reductio will make this easier but with raw crossfilter this would look something like\n", "i ve created an application with this library instead of jgraph because i thought that jung is easier to learn than jgraph for newbies even if it provide less features\n", "if you don t plan to move to mobiles later tkinter or pyqt may be a better choice than kivy\n", "2 readability library content is passable slower on average than goose but faster than boilerpipe\n", "have a look at sift and surf and at vlfeat which has a good sift implementation and also implements mser and hog and is much smaller than opencv\n", "one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them\n", "for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n", "regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n", "alternatively you can use lxml module which is lot faster than beautifulsoup\n", "i do understand that traditionally they are saying that lxml are stricter than beautifulsoup however what i do not get is the following\n", "lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface\n", "edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup\n", "note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author\n", "the reason for using lxml for such a task is that it cleans html files better than beautifulsoup do\n", "i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml\n", "i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml\n", "it uses lxml underneath and is much faster than beautifulsoup\n", "lxml is much faster than beautifulsoup and probably the fastest parser available for python\n", "beautifulsoup is more suitable for html parsing than lxml\n", "for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n", "lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n", "you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else\n", "i prefere lxml it s a harder to understand but much faster than beautifulsoup\n", "lxml is supposed to be much faster and efficient and can do much more than beautifulsoup\n", "lxml is also much much faster than beautifulsoup\n", "beautifulsoup is more suitable for html parsing than lxml\n", "i prefere lxml it s a harder to understand but much faster than beautifulsoup\n", "lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api\n", "i prefer to use beautifulsoup better than lxml\n", "lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n", "how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup\n", "i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now\n", "note that using the beautifulsoup parser is a lot slower than lxml s default parser\n", "according to the above posts and my own experience lxml is definitely faster than beautifulsoup\n", "regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n", "i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude\n", "lxml also has more features and offers beautifulsoup too\n", "pyquery is based on lxml so it s also much faster than beautifulsoup\n", "it s generally accepted that lxml is faster than beautifulsoup ref\n", "lxml is much faster than beautifulsoup and probably the fastest parser available for python\n", "lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use\n", "lxml also has more features and offers beautifulsoup too\n", "according to the above posts and my own experience lxml is definitely faster than beautifulsoup\n", "regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n", "according to some benchmark tests lxml is nearly 100 times faster than beautifulsoup\n", "speed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoup\n", "since you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoup\n", "iostream is said to be slower than cstdio but i suggest you use a profiling tool here to find the best set of options here\n", "yes iostream is slower than cstdio\n", "for those commenting that cstdio is obsolete personally i like it more than iostream\n", "seaborn is a higher level library above matplotlib\n", "seaborn is a higher level library above matplotlib\n", "seaborn is a higher level library above matplotlib\n", "seaborn is a higher level library above matplotlib\n", "in my experience xlib via mit-shm extension was significantly faster than sdl surfaces not sure i used sdl in the most optimal way though\n", "in my experience xlib via mit-shm extension was significantly faster than sdl surfaces not sure i used sdl in the most optimal way though\n", "so i think afnetworking would a better choice than sdwebimage\n", "so i think afnetworking would a better choice than sdwebimage\n", "jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access\n", "lwjgl is much more aimed towards gaming with opengl where as jogl is more worried about complete and perfect bindings to opengl opencl\n", "jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access\n", "if your company s concern is to avoid big unknown libraries which is prefectly understandable i d advise you to stick with lwjgl which is smaller that jogl\n", "canvasjs is more of creating charts using canvas element of html5 and d3.js uses svg\n", "canvasjs is more of creating charts using canvas element of html5 and d3.js uses svg\n", "for my project packery is better then masonry because packery is filling up all gaps masonry is just looking for the first possible gap and doesn t fill empty gaps\n", "for my project packery is better then masonry because packery is filling up all gaps masonry is just looking for the first possible gap and doesn t fill empty gaps\n", "it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n", "gson is faster with smaller documents and jackson is faster with large documents\n", "note also that gson comes with less features out of the box than genson or jackson\n", "performance of jackson is better than gson\n", "note also that gson comes with less features out of the box than genson or jackson\n", "gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n", "since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n", "since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n", "jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n", "deserialization performance is similar with gson over 9x slower than jackson and fastjson about 0.5 faster than jackson\n", "under some conditions gson has proven to be a lot faster than jackson there also exists jsonp and json.simple\n", "gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n", "i found jackson better than gson performance project activity better docs ...\n", "i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n", "i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n", "jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n", "it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n", "after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n", "keep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitation\n", "code looks correct and even at its worst jackson should be no slower than gson\n", "try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n", "jackson is faster but the api is 37x more complex than the gson api\n", "gson is simpler jackson is faster\n", "further more gson really seems to be faster than jackson json\n", "keep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitation\n", "it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n", "according to the performance results at for serialization with databind with strings gson.tojson myobject gson is over 10x slower than jackson\n", "also i want to know if google gson is better than jackson for json parsing\n", "take a look at the jackson json parser it s faster than the one in android and faster than gson and supports streaming\n", "also it seems jackson lib has better performance than other packages such as gson which i haven t tried personally\n", "personally i prefer jackson as according to test benchmarks it s faster than gson\n", "i looked at gson metrics and it seems slower than jackson\n", "large objects google gson performs faster than jackson and simple json\n", "try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n", "also it seems jackson lib has better performance than other packages such as gson which i haven t tried personally\n", "after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n", "gson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jackson\n", "very small object google gson performs faster than jackson and simple json\n", "jackson type safety is way better than gson\n", "in my case i found jackson little faster than gson i used default serialization because so far i don t have a need to customize serialization\n", "going to go ahead and say that gson is a lot more user friendly albeit less powerful than jackson\n", "we plan to use gson extensively in the application as it seems safer and better than jackson\n", "it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n", "gson is faster with smaller documents and jackson is faster with large documents\n", "note also that gson comes with less features out of the box than genson or jackson\n", "performance of jackson is better than gson\n", "note also that gson comes with less features out of the box than genson or jackson\n", "gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n", "since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n", "since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n", "jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n", "deserialization performance is similar with gson over 9x slower than jackson and fastjson about 0.5 faster than jackson\n", "under some conditions gson has proven to be a lot faster than jackson there also exists jsonp and json.simple\n", "gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n", "i found jackson better than gson performance project activity better docs ...\n", "i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n", "i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n", "jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n", "it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n", "after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n", "keep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitation\n", "code looks correct and even at its worst jackson should be no slower than gson\n", "try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n", "jackson is faster but the api is 37x more complex than the gson api\n", "gson is simpler jackson is faster\n", "further more gson really seems to be faster than jackson json\n", "keep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitation\n", "it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n", "according to the performance results at for serialization with databind with strings gson.tojson myobject gson is over 10x slower than jackson\n", "also i want to know if google gson is better than jackson for json parsing\n", "take a look at the jackson json parser it s faster than the one in android and faster than gson and supports streaming\n", "also it seems jackson lib has better performance than other packages such as gson which i haven t tried personally\n", "personally i prefer jackson as according to test benchmarks it s faster than gson\n", "i looked at gson metrics and it seems slower than jackson\n", "large objects google gson performs faster than jackson and simple json\n", "try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n", "also it seems jackson lib has better performance than other packages such as gson which i haven t tried personally\n", "after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n", "gson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jackson\n", "very small object google gson performs faster than jackson and simple json\n", "jackson type safety is way better than gson\n", "in my case i found jackson little faster than gson i used default serialization because so far i don t have a need to customize serialization\n", "going to go ahead and say that gson is a lot more user friendly albeit less powerful than jackson\n", "we plan to use gson extensively in the application as it seems safer and better than jackson\n", "i d strongly recommend to go with allegro 5.1.x it s a little bit more difficult than sfml but very functional and easier than sdl it s got nice support and it s compatible with plenty of os\n", "i was also looking at sdl allegro sfml i didnt see much tutorials help on this but heard its better than sdl\n", "i d strongly recommend to go with allegro 5.1.x it s a little bit more difficult than sfml but very functional and easier than sdl it s got nice support and it s compatible with plenty of os\n", "i was also looking at sdl allegro sfml i didnt see much tutorials help on this but heard its better than sdl\n", "finally if soappy just isn t working for you try suds it s better documented than soappy\n", "richfaces has better ajax support than icefaces\n", "that said i found icefaces to be a useful product and much better than richfaces especially in terms of the quality of the documentation\n", "icefaces provides more good looking components than richfaces\n", "richfaces has better ajax support than icefaces\n", "richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n", "there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n", "icefaces provides more good looking components than richfaces\n", "there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n", "richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n", "there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n", "richfaces has better ajax support than icefaces\n", "that said i found icefaces to be a useful product and much better than richfaces especially in terms of the quality of the documentation\n", "icefaces provides more good looking components than richfaces\n", "richfaces has better ajax support than icefaces\n", "richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n", "there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n", "icefaces provides more good looking components than richfaces\n", "there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n", "richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n", "there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n", "pandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new ones\n", "pandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new ones\n", "1 i guess dask will be slower than pandas for smaller datasets\n", "this may help those confused by dask and hdf5 but more familiar with pandas like myself\n", "when hdf5 storage can be accessed fast than .csv and when dask creates dataframes faster than pandas why is dask from hdf5 slower than dask from csv\n", "pandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new ones\n", "pandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new ones\n", "1 i guess dask will be slower than pandas for smaller datasets\n", "this may help those confused by dask and hdf5 but more familiar with pandas like myself\n", "when hdf5 storage can be accessed fast than .csv and when dask creates dataframes faster than pandas why is dask from hdf5 slower than dask from csv\n", "hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer\n", "hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer\n", "but if you will look at the accuracy level stanford-nlp have more accurate detection than opennlp\n", "i looking to use a suite of nlp tools for a personal project and i was wondering whether stanford s stanford-nlp is easier to use or opennlp\n", "i find training in opennlp much easier than in stanford-nlp\n", "but if you will look at the accuracy level stanford-nlp have more accurate detection than opennlp\n", "i looking to use a suite of nlp tools for a personal project and i was wondering whether stanford s stanford-nlp is easier to use or opennlp\n", "i find training in opennlp much easier than in stanford-nlp\n", "so glfw is just a library for creating windows in a better way than lwjgl did before\n", "so glfw is just a library for creating windows in a better way than lwjgl did before\n", "edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n", "edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n", "between these glfw is much closer to glut in character -- a small toolkit for abstracting away most of the os-dependent parts so you can produce opengl programs with relatively little hassle\n", "or if you re really focused on only doing opengl i may suggest using glfw which is the better glut but you ll have to draw the menus yourself using opengl\n", "between these glfw is much closer to glut in character -- a small toolkit for abstracting away most of the os-dependent parts so you can produce opengl programs with relatively little hassle\n", "or if you re really focused on only doing opengl i may suggest using glfw which is the better glut but you ll have to draw the menus yourself using opengl\n", "edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n", "gson is more about json-based persistence in the vein of xstream which can do json too and sounds a bit too heavyweight for just an applet\n", "gson is more about json-based persistence in the vein of xstream which can do json too and sounds a bit too heavyweight for just an applet\n", "if i resize the window and a widget with a highcharts is bigger than the window i want to resize it to make it smaller and gridster should recalculate the positions of the others\n", "basically imagemagick was only slightly slower than libjpeg\n", "somehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementation\n", "somehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementation\n", "the chapter starts with short course to xml general talk but with the atom syndication feed example then it continues with the standard xml.etree.elementtree and continues with third party lxml that implements more with the same interface full xpath 1.0 based on libxml2\n", "the chapter starts with short course to xml general talk but with the atom syndication feed example then it continues with the standard xml.etree.elementtree and continues with third party lxml that implements more with the same interface full xpath 1.0 based on libxml2\n", "dotnetzip is much easier to use than sharpziplib example of zipping all files in folder\n", "i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n", "i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n", "dotnetzip offers native support and has a quite friendly api and is my opinion more flexible than sharpziplib\n", "dotnetzip is much easier to use than sharpziplib example of zipping all files in folder\n", "i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n", "i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n", "dotnetzip offers native support and has a quite friendly api and is my opinion more flexible than sharpziplib\n", "i have found though that since i started using the asset_sync gem which uses fog instead of aws-s3 gem i don t have any more trouble with paperclip and s3\n", "xcb presents a more direct view of the protocol than xlib does so you often have to look at either the protocol specs or xlib source code to find out what the underlying protocol request is to find an equivalent\n", "xcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latency\n", "xcb is simpler to use has a better response to a multithread environment but lacks documentation while xlib is a more dated complex tool better documented and fully implemented\n", "xcb presents a more direct view of the protocol than xlib does so you often have to look at either the protocol specs or xlib source code to find out what the underlying protocol request is to find an equivalent\n", "xcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latency\n", "the javadoc of javassist is way better than that of cglib\n", "also javassist is recognized to be slower than cglib\n", "here in so i found a lot of questions asking something similar and the answers normally said you can use cglib or asm or javassist is better than cglib or bcel is old and is dying or asm is the best because it gives x and y\n", "this makes for example javassist or proxetta significantly slower than cglib which simply reads the methods via the reflection api and overrides them\n", "note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n", "note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n", "the javadoc of javassist is way better than that of cglib\n", "also javassist is recognized to be slower than cglib\n", "here in so i found a lot of questions asking something similar and the answers normally said you can use cglib or asm or javassist is better than cglib or bcel is old and is dying or asm is the best because it gives x and y\n", "this makes for example javassist or proxetta significantly slower than cglib which simply reads the methods via the reflection api and overrides them\n", "note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n", "note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n", "d3.js has a steeper learning curve than chart.js but once you get the hang of it you can do pretty much anything graph related with it.official site is here\n", "d3.js has a steeper learning curve than chart.js but once you get the hang of it you can do pretty much anything graph related with it.official site is here\n", "d3.js has a steeper learning curve than chart.js but once you get the hang of it you can do pretty much anything graph related with it.official site is here\n", "d3.js has a steeper learning curve than chart.js but once you get the hang of it you can do pretty much anything graph related with it.official site is here\n", "achartengine is easy to use mpandroidchart has more option but is less easy to use than achartengine\n", "achartengine is easy to use mpandroidchart has more option but is less easy to use than achartengine\n", "achartengine is easy to use mpandroidchart has more option but is less easy to use than achartengine\n", "achartengine is easy to use mpandroidchart has more option but is less easy to use than achartengine\n", "glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n", "however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n", "glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n", "if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n", "if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n", "however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n", "glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n", "however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n", "glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n", "if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n", "if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n", "however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n", "i am using a sparse format but suggestions are welcome on other formats too i am able to use the data with weka in a dense format using the function names as variables and it works just muuch slower than with libsvm\n", "i am using a sparse format but suggestions are welcome on other formats too i am able to use the data with weka in a dense format using the function names as variables and it works just muuch slower than with libsvm\n", "since you tagged this with python you might find rdflib more useful than jena but the real question here should be about how to do the conversion not the library request since library requests are off topic for stack overflow\n", "since you tagged this with python you might find rdflib more useful than jena but the real question here should be about how to do the conversion not the library request since library requests are off topic for stack overflow\n", "note please do tell me if lxml is more easy or this elementtree\n", "lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution\n", "lxml -- 100x better than elementtree\n", "but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n", "but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n", "note please do tell me if lxml is more easy or this elementtree\n", "but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n", "note please do tell me if lxml is more easy or this elementtree\n", "lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution\n", "lxml -- 100x better than elementtree\n", "but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n", "but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n", "note please do tell me if lxml is more easy or this elementtree\n", "but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n", "you should check out losswise it has a plugin for keras that s easier to use than tensorboard and has some nice extra features\n", "jackson xml module faster than xstream\n", "jackson xml module faster than xstream\n", "and the problems is that ffmpeg requires a higher minor version of libvpx recompile ffmpeg will solve this issue\n", "and the problems is that ffmpeg requires a higher minor version of libvpx recompile ffmpeg will solve this issue\n", "the ffmpeg community is larger than libav and the most dedicated developer michael niedermayer stuck with ffmpeg commit stats\n", "the ffmpeg community is larger than libav and the most dedicated developer michael niedermayer stuck with ffmpeg commit stats\n", "the ffmpeg community is larger than libav and the most dedicated developer michael niedermayer stuck with ffmpeg commit stats\n", "the ffmpeg community is larger than libav and the most dedicated developer michael niedermayer stuck with ffmpeg commit stats\n"], "function": ["strlen is fast alloca is fast copying the string up to the first n is fast puts is faster than printf but is is most likely far slower than all three operations mentioned before together\n", "strlen is fast alloca is fast copying the string up to the first n is fast puts is faster than printf but is is most likely far slower than all three operations mentioned before together\n", "i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n", "i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n", "i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n", "i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n", "that said the date class is much better in php5.3 -- it even has dateadd subtract functions which would also solve your problem much better than strtotime .\n", "that said the date class is much better in php5.3 -- it even has dateadd subtract functions which would also solve your problem much better than strtotime .\n", "if you always keep track of the lengths of your strings you can compare lengths and use memcmp which is faster than strcmp\n", "memcmp is simpler than strcmp and can be implemented even more efficiently in places where the strings are known to be properly aligned\n", "rest assured though that strcmp is better equipped in the general case for string comparisons than memcmp is\n", "performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n", "but sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details here\n", "we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n", "if size is known normally a non-naive implementation of memcpy is faster than strcpy since it takes profit of the cpu s data bus size\n", "on almost any platform memcpy is going to be faster than strcpy when copying the same number of bytes\n", "notice that memcpy is faster than strcpy unless the source string is much smaller than the buffer s size which is rarely the case with ip addesses.\n", "information - use memcpy as it s faster than strcpy and we know\n", "your macro with memset and memcpy was not any safer than strcpy\n", "memcpy is rarely slower than strcpy or strncpy and often significantly faster\n", "so i feel that on x86 memcpy is faster than strcpy\n", "because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n", "memcpy is usually faster than strcpy for longer strings\n", "memcpy is not really any slower than strcpy\n", "for example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of data\n", "memset behaves like strcpy but the difference is that memcpy copied the data as it is byte but strcpy copies the formatted string as well so takes more time than memcpy to execute\n", "we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n", "performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n", "is memcpy usually faster than strcpy on most real platforms\n", "performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n", "memcpy can be more efficient than strcpy since rep movs is highly optimized on intel cpus esp\n", "memcpy is rarely slower than strcpy or strncpy and often significantly faster\n", "the reason for not having strcpy i m guessing is that strcpy can be replaced more efficiently with memcpy for constant strings and if the string is not constant strcpy is a bit more complicated than memcpy anyway so not as beneficial to make inline optimisations for\n", "memcpy is faster than strcpy and also enforces you to specify a buffer size\n", "because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n", "memcpy is usually faster than strcpy for longer strings\n", "performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n", "but sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details here\n", "we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n", "if size is known normally a non-naive implementation of memcpy is faster than strcpy since it takes profit of the cpu s data bus size\n", "on almost any platform memcpy is going to be faster than strcpy when copying the same number of bytes\n", "notice that memcpy is faster than strcpy unless the source string is much smaller than the buffer s size which is rarely the case with ip addesses.\n", "information - use memcpy as it s faster than strcpy and we know\n", "your macro with memset and memcpy was not any safer than strcpy\n", "memcpy is rarely slower than strcpy or strncpy and often significantly faster\n", "so i feel that on x86 memcpy is faster than strcpy\n", "because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n", "memcpy is usually faster than strcpy for longer strings\n", "memcpy is not really any slower than strcpy\n", "for example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of data\n", "memset behaves like strcpy but the difference is that memcpy copied the data as it is byte but strcpy copies the formatted string as well so takes more time than memcpy to execute\n", "we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n", "performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n", "is memcpy usually faster than strcpy on most real platforms\n", "performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n", "memcpy can be more efficient than strcpy since rep movs is highly optimized on intel cpus esp\n", "memcpy is rarely slower than strcpy or strncpy and often significantly faster\n", "the reason for not having strcpy i m guessing is that strcpy can be replaced more efficiently with memcpy for constant strings and if the string is not constant strcpy is a bit more complicated than memcpy anyway so not as beneficial to make inline optimisations for\n", "memcpy is faster than strcpy and also enforces you to specify a buffer size\n", "because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n", "memcpy is usually faster than strcpy for longer strings\n", "it is understandable that memset is faster than memcpy\n", "the problem is that memcpy is only slighly slower than memset when i expect it to be about two times slower since it operations on twice the memory\n", "it is understandable that memset is faster than memcpy\n", "the problem is that memcpy is only slighly slower than memset when i expect it to be about two times slower since it operations on twice the memory\n", "but as that reference points out murmurhash is way faster than md5 and sha functions although it doesn t do a direct comparison to the object.gethashcode method i mentioned above\n", "murmurhash has 64 and 128-bit versions so you can experiment between the two and it s faster than md5 largely owing to md5 being a cryptographic hash function whereas murmur doesn t have the added expense complexity of being cryptographically secure i m assuming that you re not concerned about anybody attempting to intentionally generate hash collisions or anything like that\n", "if you want longer hash lets call more secure you should use something like sha512 whirlpool etc\n", "if you want longer hash lets call more secure you should use something like sha512 whirlpool etc\n", "fgets of course does not process escape sequences any more than strcpy would\n", "fgets of course does not process escape sequences any more than strcpy would\n", "or is the do.call with by just typically much slower than tapply\n", "additionally if you have strdup then it is much more convenient than strlen + malloc + strcpy with identical result including the same obligation to free the allocated storage when you no longer need it\n", "as i noted in comments however if you re willing to rely on posix s strdup then that s cleaner than strlen + malloc + and has the same semantics you take responsibility for freeing the memory allocated for the copy\n", "so we can use pbkdf2 with sha512 to gain a very significant advantage over the phpass algorithm mainly because sha512 is a harder algorithm with more computation than md5\n", "so we can use pbkdf2 with sha512 to gain a very significant advantage over the phpass algorithm mainly because sha512 is a harder algorithm with more computation than md5\n", "while alloca gives you automatic de-allocation on function exit the stack is usually a smaller resource than the malloc heap and if you exhaust the heap it gives you back null\n", "the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n", "you can for example store a hash stored with something stronger than md5\n", "also the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwords\n", "it is likely that you could do an sha hash of 100kb in well less than 10 second though and though sha-1 is still theoretically flawed it is of higher strength than md5\n", "valid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5\n", "if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n", "md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n", "of course any hash algorithm is going to have some chance of collision but you have better options than md5 that would still satisfy the 1024-byte limit\n", "with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n", "crypt with hash is simply more expensive than md5\n", "it s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a while\n", "mac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5\n", "the hash cake generates are more complex than md5\n", "if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n", "md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n", "so i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputs\n", "crypt with hash is simply more expensive than md5\n", "with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n", "other hash functions such as sha-1 also have hash collisions although it is much less likely than md5\n", "the fact that bcrypt produces hash slower than md5 because of security reasons is also clear for me\n", "or you could employ a request signing scheme in which certain request fields are hash together with the password of the user basically sending the password without sending the password similar to digest authentication but you can use something better than md5\n", "use hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 either\n", "the difference between crc32 and md5 is that md5 generates a larger hash that s harder to predict\n", "the hash cake generates are more complex than md5\n", "however if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sample\n", "double md5 hashing is actually less secure than a single hash with some attack vectors\n", "any hash function like md5 sha1 sha256 etc obviously cannot be 100 unique - because they have a fixed length and due to the there must necessarily be non-unique results for input content that is larger than the hash\n", "using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n", "because sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hash\n", "using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n", "obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n", "hashing is one way you can prove this to yourself by taking an md5 or shasum of a large file since the file s size is larger than the hash output by pigeonhole principle hash can t be restored.\n", "all hash functions have that problem but some are more robust than md5\n", "if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n", "i would like to apply a hash code solution on my webpage which is more compact than md5 and sha-1 because i want to use them as keys in a json hash table\n", "this generally uses a hash algorithm that is much faster than md5\n", "so i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputs\n", "in that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassle\n", "double md5 hashing is actually less secure than a single hash with some attack vectors\n", "but if you still wish to figure out the phpbb password encryption hash it is no longer md5 in version 3.0 or higher and is a custom hash\n", "the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n", "the hash cake generates are more complex than md5\n", "finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post\n", "obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n", "if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n", "sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1\n", "if you want to compare you re better off putting your result through getstring and compare the much less secure hash even less secure than md5 already is\n", "crypt with hash is simply more expensive than md5\n", "the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n", "you can for example store a hash stored with something stronger than md5\n", "also the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwords\n", "it is likely that you could do an sha hash of 100kb in well less than 10 second though and though sha-1 is still theoretically flawed it is of higher strength than md5\n", "valid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5\n", "if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n", "md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n", "of course any hash algorithm is going to have some chance of collision but you have better options than md5 that would still satisfy the 1024-byte limit\n", "with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n", "crypt with hash is simply more expensive than md5\n", "it s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a while\n", "mac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5\n", "the hash cake generates are more complex than md5\n", "if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n", "md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n", "so i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputs\n", "crypt with hash is simply more expensive than md5\n", "with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n", "other hash functions such as sha-1 also have hash collisions although it is much less likely than md5\n", "the fact that bcrypt produces hash slower than md5 because of security reasons is also clear for me\n", "or you could employ a request signing scheme in which certain request fields are hash together with the password of the user basically sending the password without sending the password similar to digest authentication but you can use something better than md5\n", "use hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 either\n", "the difference between crc32 and md5 is that md5 generates a larger hash that s harder to predict\n", "the hash cake generates are more complex than md5\n", "however if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sample\n", "double md5 hashing is actually less secure than a single hash with some attack vectors\n", "any hash function like md5 sha1 sha256 etc obviously cannot be 100 unique - because they have a fixed length and due to the there must necessarily be non-unique results for input content that is larger than the hash\n", "using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n", "because sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hash\n", "using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n", "obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n", "hashing is one way you can prove this to yourself by taking an md5 or shasum of a large file since the file s size is larger than the hash output by pigeonhole principle hash can t be restored.\n", "all hash functions have that problem but some are more robust than md5\n", "if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n", "i would like to apply a hash code solution on my webpage which is more compact than md5 and sha-1 because i want to use them as keys in a json hash table\n", "this generally uses a hash algorithm that is much faster than md5\n", "so i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputs\n", "in that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassle\n", "double md5 hashing is actually less secure than a single hash with some attack vectors\n", "but if you still wish to figure out the phpbb password encryption hash it is no longer md5 in version 3.0 or higher and is a custom hash\n", "the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n", "the hash cake generates are more complex than md5\n", "finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post\n", "obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n", "if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n", "sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1\n", "if you want to compare you re better off putting your result through getstring and compare the much less secure hash even less secure than md5 already is\n", "crypt with hash is simply more expensive than md5\n", "malloc free is harder because there\u00e2 s also calloc and realloc\n", "malloc free is harder because there\u00e2 s also calloc and realloc\n", "as an example of the second option i ll use imshow here because it makes more sense than contourf for random data but contourf would have identical usage other than the interpolation option.\n", "marcus yes memmove is faster than strcpy and faster than python but why\n", "actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n", "actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n", "suppose char p malloc n assigns more than n say n bytes of memory are allocated and free p is used to free the memory allocated to p\n", "most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n", "malloc is much easier to implement if there is no free\n", "here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n", "how does free know how much memory to be free d which was earlier allocated by malloc or calloc\n", "presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n", "if your .so are statically linked to c++ runtimes - you should free objects in the same module where they were allocated since new delete is something more than malloc free and need some extra info to work properly\n", "now if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlier\n", "in addition to the previous answers the strncpy char pointer which seems unsafe for my opinion and the malloc which is safer but you need to remember to free it outside of the function and its inconsistent with the hierarchy of the program you can do the following\n", "most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n", "malloc finds 10 more free bytes and marks them as used\n", "in this context free store is different and incompatible with heap because the new delete free store library is simpler and quicker than the malloc free realloc calloc heap library and thus provides huge memory usage gains to the c++ embedded programmer in a context where you have only 512 bytes of ram\n", "one interesting experiment you can try is to try and malloc more memory after you free d that pointer\n", "remember malloc is quite expensive action and free costs even much more than malloc\n", "presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n", "here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n", "suppose char p malloc n assigns more than n say n bytes of memory are allocated and free p is used to free the memory allocated to p\n", "most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n", "malloc is much easier to implement if there is no free\n", "here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n", "how does free know how much memory to be free d which was earlier allocated by malloc or calloc\n", "presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n", "if your .so are statically linked to c++ runtimes - you should free objects in the same module where they were allocated since new delete is something more than malloc free and need some extra info to work properly\n", "now if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlier\n", "in addition to the previous answers the strncpy char pointer which seems unsafe for my opinion and the malloc which is safer but you need to remember to free it outside of the function and its inconsistent with the hierarchy of the program you can do the following\n", "most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n", "malloc finds 10 more free bytes and marks them as used\n", "in this context free store is different and incompatible with heap because the new delete free store library is simpler and quicker than the malloc free realloc calloc heap library and thus provides huge memory usage gains to the c++ embedded programmer in a context where you have only 512 bytes of ram\n", "one interesting experiment you can try is to try and malloc more memory after you free d that pointer\n", "remember malloc is quite expensive action and free costs even much more than malloc\n", "presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n", "here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n", "if you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failures\n", "i start off calling gets to fill the buffer then using strtol to convert the human-readable text in buffer to an actual computer int value - note that strtol is more powerful than atoi and uses long int instead of int as its declared type\n", "i start off calling gets to fill the buffer then using strtol to convert the human-readable text in buffer to an actual computer int value - note that strtol is more powerful than atoi and uses long int instead of int as its declared type\n", "strtol is better than atoi with better error handling\n", "i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n", "the c function strtol is much better make it a habit to prefer that one to atoi\n", "use strtol it does better error reporting than atoi\n", "besides strtol is a better option than atoi as strtol can handle failures better\n", "you can also use strtol which is obviously better than atoi\n", "you can also use strtol which is obviously better than atoi\n", "you can also look into strtol which is better than using atoi in terms of error checking\n", "i would recommend strtol which provides better error handling than atoi or sscanf\n", "all have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoi\n", "use strtol it does better error reporting than atoi\n", "you need to error check strtol and ensure there are as many passed before using them -- strtol is better than atoi as helps detect errors\n", "i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n", "if you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failures\n", "for instance strtol is better than atoi and you should be checking each time whether strtok returns null\n", "besides strtol is a better option than atoi as strtol can handle failures better\n", "i would recommend strtol which provides better error handling than atoi or sscanf\n", "i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n", "i prefer using these short forms because to me year getdate is shorter to type and better to read than datepart yyyy getdate\n", "also strtod is a better alternative to atoi\n", "also strtod is a better alternative to atoi\n", "enumerate is more pythonic but xrange is fine here too\n", "enumerate is also more appropriate than xrange\n", "if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n", "enumerate is also more appropriate than xrange\n", "why is enumerate slower than xrange + lst i\n", "if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n", "enumerate is also more appropriate than xrange\n", "enumerate is more pythonic but xrange is fine here too\n", "enumerate is more pythonic but xrange is fine here too\n", "enumerate is also more appropriate than xrange\n", "if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n", "enumerate is also more appropriate than xrange\n", "why is enumerate slower than xrange + lst i\n", "if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n", "enumerate is also more appropriate than xrange\n", "enumerate is more pythonic but xrange is fine here too\n", "the fgetc loop variant was consistently 45x slower than the fread loop\n", "you might have even noticed the fgetc version is simpler than the fread version\n", "doing things like 1000 successive fgetc is much slower than doing one single fread of 1000 bytes\n", "you might have even noticed the fgetc version is simpler than the fread version\n", "at best it is a computationally expensive hash function like whirlpool that for example is five times slower than md5 and thus allows only a fifth of the number of hash operations in opposite to md5\n", "coalesce is the more standard alternative of isnull\n", "isnull is better then coalesce because of how datatypes are handled\n", "on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n", "sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n", "i understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalesce\n", "you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n", "i tend to use coalesce only when i need to get the first non-null value from a set of 3 or more values as isnull only supports two parameters\n", "in this case i would use coalesce which provides more levels than isnull rather than the case stement\n", "using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times\n", "coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n", "an example of why coalesce is better than isnull\n", "on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n", "coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n", "- coalesce should be more portable than isnull\n", "you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n", "edit based on the tests done by multiple people and by theory isnull seems to be a better option over coalesce\n", "isnull is marginally faster than coalesce\n", "but depending on the answers to those questions i m guessing that coalesce might do the trick for you better than isnull\n", "this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n", "this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n", "you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n", "you will find that coalesce works better than isnull here\n", "using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times\n", "coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n", "in this case i would use coalesce which provides more levels than isnull rather than the case stement\n", "sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n", "you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n", "isnull is marginally faster than coalesce\n", "in some circumstances isnull is faster than case or coalesce\n", "isnull is better then coalesce because of how datatypes are handled\n", "isnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesce\n", "i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n", "coalesce will go through the listed values and choose the first one that isn t null it s more portable code than isnull or ivnl etc\n", "coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n", "isnull performs better than the generic coalesce and better than having another and\n", "i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n", "isnull can only have one input however it s been shown to be slightly faster than coalesce\n", "is the performance of coalesce field constant better than isnull\n", "to prefer isnull over coalesce when given the choice is that isnull tends to produce query plans that are more efficient than coalesce\n", "coalesce is the more standard alternative of isnull\n", "in most cases it has reviled indexes that needed to be add and in most cases the indexes improved the queries the most but after thet have been added the isnull and dynamic still perform better than the coalesce\n", "isnull is faster than coalesce\n", "coalesce is the more standard alternative of isnull\n", "isnull is better then coalesce because of how datatypes are handled\n", "on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n", "sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n", "i understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalesce\n", "you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n", "i tend to use coalesce only when i need to get the first non-null value from a set of 3 or more values as isnull only supports two parameters\n", "in this case i would use coalesce which provides more levels than isnull rather than the case stement\n", "using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times\n", "coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n", "an example of why coalesce is better than isnull\n", "on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n", "coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n", "- coalesce should be more portable than isnull\n", "you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n", "edit based on the tests done by multiple people and by theory isnull seems to be a better option over coalesce\n", "isnull is marginally faster than coalesce\n", "but depending on the answers to those questions i m guessing that coalesce might do the trick for you better than isnull\n", "this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n", "this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n", "you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n", "you will find that coalesce works better than isnull here\n", "using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times\n", "coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n", "in this case i would use coalesce which provides more levels than isnull rather than the case stement\n", "sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n", "you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n", "isnull is marginally faster than coalesce\n", "in some circumstances isnull is faster than case or coalesce\n", "isnull is better then coalesce because of how datatypes are handled\n", "isnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesce\n", "i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n", "coalesce will go through the listed values and choose the first one that isn t null it s more portable code than isnull or ivnl etc\n", "coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n", "isnull performs better than the generic coalesce and better than having another and\n", "i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n", "isnull can only have one input however it s been shown to be slightly faster than coalesce\n", "is the performance of coalesce field constant better than isnull\n", "to prefer isnull over coalesce when given the choice is that isnull tends to produce query plans that are more efficient than coalesce\n", "coalesce is the more standard alternative of isnull\n", "in most cases it has reviled indexes that needed to be add and in most cases the indexes improved the queries the most but after thet have been added the isnull and dynamic still perform better than the coalesce\n", "isnull is faster than coalesce\n", "or maybe flip them on my machine sin seems faster than cos\n", "after reading a question related with the performance of sin cos why is std sin and std cos slower than sin and cos\n", "3.14 is pretty close but a little smaller than pi and sin 3.14 is thus pretty close but a little bigger than 0 cos 3.14 is thus pretty close but a little smaller in absolute terms than -1 so tan 3.14 is a little less than 0\n", "cos itself seems to be consistently a tick 0 01 better than sin but the case distinction to reconstruct the sign has an extra test\n", "so if we have a vector and want to calculate a component-wise function over it say sin and cos it is faster to use vvsincos from accelerate because it will pipeline the calculations of sin and cos for all the entries in the vector which is faster than using a for-loop over the vector\n", "if i want to calculate a sin and a cos is it cheaper to calculate a sin and a cos or calculate a sin then a sqrt 1-sin 2 to get the cos\n", "my question is is fast implementation of pow x 0.5f faster than fast sqrt x\n", "and as tom karzes mentioned sqrt is also better than using pow for calculating square roots\n", "first of all sqrt x should be faster and more accurate than pow x 0.5 why do you think it s in the library\n", "and as tom karzes mentioned sqrt is also better than using pow for calculating square roots\n", "my question is is fast implementation of pow x 0.5f faster than fast sqrt x\n", "and as tom karzes mentioned sqrt is also better than using pow for calculating square roots\n", "first of all sqrt x should be faster and more accurate than pow x 0.5 why do you think it s in the library\n", "and as tom karzes mentioned sqrt is also better than using pow for calculating square roots\n", "edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n", "it s conceivable that calloc could return address of memory location that is already pre-initialized with zeros thus it may be faster than malloc + memset combo\n", "and is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloc\n", "as written malloc would be better than calloc but the question used calloc and it would not be hard to make it sensible for use with this code too for example a conditional assignment in set_matrix such as\n", "calloc itself is slower than malloc because you have to spend some time to clear the contents of allocated memory\n", "edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n", "i remember somewhere i have read that calloc is slower than malloc because calloc performs initialization to zero after performing memory allocation\n", "g_new and g_new0 both take the same arguments unlike malloc that takes less arguments than calloc\n", "calloc is faster than malloc + memset because calloc knows that the mmap d pages are pre-zeroed and memset forces the allocation of physical ram\n", "malloc is faster than calloc reason is that malloc processed single dimensional array to pointer format whereas calloc takes double dimensional array and before processed it converts to single dimensional array then to pointer format\n", "if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n", "those answers was that calloc can allocate larger blocks than malloc can and etc\n", "calloc does take longer than malloc because it has to zero out all the memory you asked for before giving it to you\n", "for this reason since calloc uses two arguments of type size_t it can allocate bigger blocks than malloc will ever be able to since malloc takes only one argument of type size_t\n", "if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n", "it takes a page off of the free_page_list updates mem_map zeroes the page and returns the physical address of the page. here s another post that explains it well and also explains why using calloc is better than malloc + memset\n", "malloc is faster since calloc initializes the allocated memory to contain all zeros\n", "this means calloc can potentially be faster than calling malloc followed by memset since it can skip the memset if it knows it will already by zeroed\n", "this is an enormous amount of extra work and explains why calloc is faster than malloc and memset\n", "actually calling memset after malloc is closer to calling calloc than the option you suggest\n", "it would be better to use malloc over calloc unless we want the zero-initialization because malloc is faster than calloc\n", "malloc is far more common in c code than calloc\n", "also calloc is slower than malloc from operating system memory allocation perspective\n", "in terms of speed calloc is likely to be faster than malloc + memset if memory needs to be zeroed out\n", "malloc is far more common in c code than calloc\n", "g_new and g_new0 both take the same arguments unlike malloc that takes less arguments than calloc\n", "and is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloc\n", "edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n", "it s conceivable that calloc could return address of memory location that is already pre-initialized with zeros thus it may be faster than malloc + memset combo\n", "and is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloc\n", "as written malloc would be better than calloc but the question used calloc and it would not be hard to make it sensible for use with this code too for example a conditional assignment in set_matrix such as\n", "calloc itself is slower than malloc because you have to spend some time to clear the contents of allocated memory\n", "edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n", "i remember somewhere i have read that calloc is slower than malloc because calloc performs initialization to zero after performing memory allocation\n", "g_new and g_new0 both take the same arguments unlike malloc that takes less arguments than calloc\n", "calloc is faster than malloc + memset because calloc knows that the mmap d pages are pre-zeroed and memset forces the allocation of physical ram\n", "malloc is faster than calloc reason is that malloc processed single dimensional array to pointer format whereas calloc takes double dimensional array and before processed it converts to single dimensional array then to pointer format\n", "if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n", "those answers was that calloc can allocate larger blocks than malloc can and etc\n", "calloc does take longer than malloc because it has to zero out all the memory you asked for before giving it to you\n", "for this reason since calloc uses two arguments of type size_t it can allocate bigger blocks than malloc will ever be able to since malloc takes only one argument of type size_t\n", "if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n", "it takes a page off of the free_page_list updates mem_map zeroes the page and returns the physical address of the page. here s another post that explains it well and also explains why using calloc is better than malloc + memset\n", "malloc is faster since calloc initializes the allocated memory to contain all zeros\n", "this means calloc can potentially be faster than calling malloc followed by memset since it can skip the memset if it knows it will already by zeroed\n", "this is an enormous amount of extra work and explains why calloc is faster than malloc and memset\n", "actually calling memset after malloc is closer to calling calloc than the option you suggest\n", "it would be better to use malloc over calloc unless we want the zero-initialization because malloc is faster than calloc\n", "malloc is far more common in c code than calloc\n", "also calloc is slower than malloc from operating system memory allocation perspective\n", "in terms of speed calloc is likely to be faster than malloc + memset if memory needs to be zeroed out\n", "malloc is far more common in c code than calloc\n", "g_new and g_new0 both take the same arguments unlike malloc that takes less arguments than calloc\n", "and is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloc\n", "so here fgets is reading more than one integer at a time from file so atoi is not getting the integers in file too\n", "so here fgets is reading more than one integer at a time from file so atoi is not getting the integers in file too\n", "bcrypt is weaker than scrypt although still three orders of magnitude stronger than pbkdf2 because it only requires 4 kb of memory\n", "pbkdf2 is arguably a better option than bcrypt scrypt having been much more thoroughly studied and tested\n", "you may be interested in looking at the constexpr keyword which i think is better than the inline keyword when you can make use of it\n", "you may be interested in looking at the constexpr keyword which i think is better than the inline keyword when you can make use of it\n", "as you can see from the above tests realloc is consistently faster compared to memalloc memcpy and free\n", "as we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some cases\n", "as we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some cases\n", "as you can see from the above tests realloc is consistently faster compared to memalloc memcpy and free\n", "as we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some cases\n", "as we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some cases\n", "the roundabout method i ve employed is to create additional columns with a regular countif and counta formulae - in other words i count the number of countries a named has visited more than x times countif and then use the counta to sum the number of named in that column who have visited x times\n", "indeed sqrt is better than atan2 and 1 sqrt is better than sqrt\n", "with typical libraries on common modern hardware sqrt is faster than atan2\n", "finally i also made a benchmark test which shows that substr operation is slightly better than sapply grepl and significantly better than vectorised grepl alone\n", "finally i also made a benchmark test which shows that substr operation is slightly better than sapply grepl and significantly better than vectorised grepl alone\n", "finally i also made a benchmark test which shows that substr operation is slightly better than sapply grepl and significantly better than vectorised grepl alone\n", "finally i also made a benchmark test which shows that substr operation is slightly better than sapply grepl and significantly better than vectorised grepl alone\n", "the structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithm\n", "the structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithm\n", "hmac is better than a plain hash because it is not vulnerable to hash length extension attacks\n", "after looking it s seems that hmac is much faster and better in term of security even if the underlying hash function sha1 is broken which is not the case when using rsa-sha1\n", "in some cases on embedded platforms where a fast hash function may not be available these may be more efficient than hmac\n", "the structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithm\n", "the structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithm\n", "hmac is better than a plain hash because it is not vulnerable to hash length extension attacks\n", "after looking it s seems that hmac is much faster and better in term of security even if the underlying hash function sha1 is broken which is not the case when using rsa-sha1\n", "in some cases on embedded platforms where a fast hash function may not be available these may be more efficient than hmac\n", "in few words strncmp is safer then strcmp but it is slower too\n", "also have a look at strncmp which is safer version of strcmp\n", "the only case where strncmp would be safer than strcmp is when you re comparing two character arrays as strings you re certain that both arrays are at least n bytes long the 3rd argument passed to strncmp and you re not certain that both arrays contain strings contain a 0 null character terminator\n", "note strncmp is safer than strcmp\n", "is strcmp slower than strncmp as one can give pre-calculated string length to it but strcmp does not receive such information\n", "strncmp is more secure than strcmp\n", "strncmp is more secure than strcmp\n", "strncmp is a little bit safer than strcmp because you specify how many comparisons will be made at most\n", "also have a look at strncmp which is safer version of strcmp\n", "in few words strncmp is safer then strcmp but it is slower too\n", "you should use strncmp to compare your strings it s safer than strcmp\n", "decode the passwords yourself and re-encode them with a salt i recommend something a little more fancy than md5\n", "bcrypt is considered the most secure way to implement password hashing with salt because it is slow - much slower than an md5\n", "encrypt the passwords with one-way encryption algorithm with a random salt like the common opinion\u00ef\u00bc\u0161 sha-256 is stronger than md5\n", "using sha256 with a salt will be much more secure than md5\n", "decode the passwords yourself and re-encode them with a salt i recommend something a little more fancy than md5\n", "bcrypt is considered the most secure way to implement password hashing with salt because it is slow - much slower than an md5\n", "encrypt the passwords with one-way encryption algorithm with a random salt like the common opinion\u00ef\u00bc\u0161 sha-256 is stronger than md5\n", "using sha256 with a salt will be much more secure than md5\n", "needless to say each product has more than one prop which is kept in the producthas table\n", "needless to say each product has more than one prop which is kept in the producthas table\n", "pbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficult\n", "pbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficult\n", "pbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficult\n", "pbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficult\n", "on the other hand if what you want to do is not rounding but elimination of fractions into one direction then you have std ceil that goes always higher and std floor that always goes lower\n", "so floor idx is the lower element and ceil idx is the higher\n", "works because ceil a b is always one greater than floor a b except when a b is a whole number\n", "so floor idx is the lower element and ceil idx is the higher\n", "the floor times the ceil are greater than the floor xy...that s very much possible\n", "now if floor is higher than 0 or ceil is lower than 0 on any axis it means that there just as many tiles outside of the camera scoop\n", "as already pointed out in other answers memmove is more sophisticated than memcpy such that it accounts for memory overlaps\n", "note that memmove has more overhead than memcpy because it has to determine which direction of copying is safe\n", "memcpy is still a little bit slower than memmove\n", "memmove on the laptop runs slower than memcpy but oddly enough runs at the same speed as the memmove on the server\n", "in addition as mats petersson said memmove is cache friendlier than memcpy\n", "note that memmove has more overhead than memcpy because it has to determine which direction of copying is safe\n", "this means that memmove might be very slightly slower than memcpy as it cannot make the same assumptions\n", "why does memcpy perform slower than memmove on my system\n", "memcpy is more efficient than memmove. in general use memmove only if you have to\n", "while memmove will be only slightly slower than memcpy due to the assumptions it needs to make about the source and destination in memcpy they cannot overlap it should still be far superior to any standard loop\n", "if you know buffers cannot overlap memcpy is fine and may in any given library use optimizations that allow it to be faster than memmove\n", "memcpy is more efficient than memmove. in general use memmove only if you have to\n", "the question is about is there really any platform where memcpy is faster than memmove\n", "and it said memmove might be very slightly slower than memcpy\n", "as already pointed out in other answers memmove is more sophisticated than memcpy such that it accounts for memory overlaps\n", "edit memmove is 2x faster than memcpy on the server\n", "from reading other so questions such as this or this gives the impression that memcpy should work faster than memmove and intuitively this should be so\n", "std memmove may be very slightly slower than std memcpy emphasis added because it has to first check whether the source and target ranges overlap\n", "bad news is that the asmlib version of memmove is slower than the glibc version it is now running at the 300ms mark on par with the glibc version of memcpy\n", "so in what platform and how memcpy can be significantly faster than memmove if there is none why providing two similiar functions instead of just memmove and lead to a lots of bug\n", "why is memcpy so much slower than memmove or hand rolled copy on the server\n", "it is entirely possible that in most implementations the cost of a memmove function call will not be significantly greater than memcpy in any scenario in which the behavior of both is defined\n", "as an aside my c c++ is rusty but is not memcpy more efficient than memmove if you know you don t have overlapping memory\n", "on some arm platform im working on memmove was 3 times faster than memcpy for short unalligned load\n", "i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n", "aggregate-functions is more general version of sum\n", "i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n", "as an added answer there is also the aggregate-functions which is more general than sum\n", "as an added answer there is also the aggregate-functions which is more general than sum\n", "aggregate-functions is more general version of sum\n", "i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n", "aggregate-functions is more general version of sum\n", "i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n", "as an added answer there is also the aggregate-functions which is more general than sum\n", "as an added answer there is also the aggregate-functions which is more general than sum\n", "aggregate-functions is more general version of sum\n", "with a lower order splines that works better but then you lose the advantage of cubic interpolation\n", "note the use of std getline is safer and more convenient than std istream getline\n", "at first glance it must be significantly faster because strcpy must be significantly faster than printf\n", "at first glance it must be significantly faster because strcpy must be significantly faster than printf\n", "the various alternatives calloc realloc work roughly the same way calloc is easier to use when dealing with arrays and zero-fills the data while realloc is useful when you need to resize a block of memory\n", "the various alternatives calloc realloc work roughly the same way calloc is easier to use when dealing with arrays and zero-fills the data while realloc is useful when you need to resize a block of memory\n", "from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n", "from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n", "from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n", "from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n", "technically accessing the ivar directly is faster than using accessor but there are very few situations in which it will make a significant performance difference and would probably be a case of premature optimization\n", "nonatomic properties don t use locks but direct ivar is faster because it skips the accessor call\n", "i should also mention that crypt has this built-in and may be a better solution than md5\n", "i should also mention that crypt has this built-in and may be a better solution than md5\n", "if you cannot tolerate that use getline it s harder to use so use fgets if in doubt\n", "since i provided a getline example above your read loop can be much better written with fgets as follows\n", "one more edit if you want to use getline instead which you asked about in the comments - and it s even safer than fgets since it will increase the buffer size as needed you would change to change the code a little bit\n", "getline is far more flexible handling the allocation of space for you with fgets it is up to you\n", "getline is far more flexible handling the allocation of space for you with fgets it is up to you\n", "if you cannot tolerate that use getline it s harder to use so use fgets if in doubt\n", "since i provided a getline example above your read loop can be much better written with fgets as follows\n", "one more edit if you want to use getline instead which you asked about in the comments - and it s even safer than fgets since it will increase the buffer size as needed you would change to change the code a little bit\n", "getline is far more flexible handling the allocation of space for you with fgets it is up to you\n", "getline is far more flexible handling the allocation of space for you with fgets it is up to you\n", "i m also looking for more examples and explanations of complex combinators more complex than fold in common programming languages\n", "although you could tell dancer2 plugin passphrase to use a 4-byte salt it s much easier to just use crypt saltedhash everywhere\n", "although you could tell dancer2 plugin passphrase to use a 4-byte salt it s much easier to just use crypt saltedhash everywhere\n", "that s why realloc can temporarily require more memory than a malloc free pair\n", "malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n", "malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n", "but if it works with large datasets the users will notice that using the malloc -only program slows down other programs much more than the realloc -using program with the same data\n", "the justification of realloc is that it s faster than 2nd malloc manual copy free\n", "i mean i think realloc is way smarter so why do we even need malloc\n", "a realloc can occur significantly faster than a malloc memcpy and free\n", "in the case of overflow a free malloc pair costs less than realloc because of its internal hidden memcpy\n", "realloc is worse than malloc in that you will need to have the old and new pointers valid during the realloc\n", "i mean i think realloc is way smarter so why do we even need malloc\n", "that s why realloc can temporarily require more memory than a malloc free pair\n", "malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n", "malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n", "but if it works with large datasets the users will notice that using the malloc -only program slows down other programs much more than the realloc -using program with the same data\n", "the justification of realloc is that it s faster than 2nd malloc manual copy free\n", "i mean i think realloc is way smarter so why do we even need malloc\n", "a realloc can occur significantly faster than a malloc memcpy and free\n", "in the case of overflow a free malloc pair costs less than realloc because of its internal hidden memcpy\n", "realloc is worse than malloc in that you will need to have the old and new pointers valid during the realloc\n", "i mean i think realloc is way smarter so why do we even need malloc\n", "in c memory most other things are managed by the programmer so strdup is no worse than forgetting to free malloc ed memory failing to null terminate a string using incorrect format string in scanf and invoking undefined behaviour accessing dangling pointer etc\n", "then for reading i find textscan to be more powerful than fread fscanf the differences between them all are summarized here\n", "then for reading i find textscan to be more powerful than fread fscanf the differences between them all are summarized here\n", "if for some strange reason you can do the obvious do.call would be more efficient than mapply\n", "malloc + memset is slower than calloc under certain conditions\n", "my question is why is malloc + memset so much slower than calloc\n", "see also why malloc + memset is slower than calloc\n", "in other words calloc is no more type-wise than memset\n", "in other words calloc is no more type-wise than memset\n", "malloc + memset is slower than calloc under certain conditions\n", "my question is why is malloc + memset so much slower than calloc\n", "see also why malloc + memset is slower than calloc\n", "in other words calloc is no more type-wise than memset\n", "in other words calloc is no more type-wise than memset\n", "key strengthening techniques such as bcrypt or pbkdf2 are generally considered better than plain hash since cracking them requires more resources\n", "pbkdf2 is more secure than a simple hash or even a salt hash\n", "key derivation algorithms such as bcrypt and pbkdf2 aka rfc2898derivebytes are much slower than standard hash algorithms\n", "a key-stretching algorithm like pbkdf2 applies a quicker hash like sha512 thousands of times typically causing the hash generation to take 1 5 of a second or so\n", "pbkdf2 is more secure than a simple hash or even a salt hash\n", "key strengthening techniques such as bcrypt or pbkdf2 are generally considered better than plain hash since cracking them requires more resources\n", "pbkdf2 is more secure than a simple hash or even a salt hash\n", "key derivation algorithms such as bcrypt and pbkdf2 aka rfc2898derivebytes are much slower than standard hash algorithms\n", "a key-stretching algorithm like pbkdf2 applies a quicker hash like sha512 thousands of times typically causing the hash generation to take 1 5 of a second or so\n", "pbkdf2 is more secure than a simple hash or even a salt hash\n", "however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n", "i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n", "restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n", "most attacks involve generating hash for common passwords so for reasonably complicated passwords it becomes harder especially with salt some people use usernames as salt others use randomly generated numbers\n", "in this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the salt\n", "this salt is nothing more than a random arbitrary string that you concatenate to the passwords and it will make your hash password unique\n", "likely not as cheap as xor against n values but seems like there s possibility for better quality results at a minimal extra cost especially if the data being hash is much larger than the salt value\n", "in this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the salt\n", "so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n", "prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n", "likely not as cheap as xor against n values but seems like there s possibility for better quality results at a minimal extra cost especially if the data being hash is much larger than the salt value\n", "example the salt field might only allow a 64 characters while the generated salt might be longer therefore when you save the salt it gets trimmed which ultimately changes the hash password\n", "i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n", "restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n", "however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n", "you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n", "the lack of salt is harder to expoit here than with password hash since the hash is not directly known\n", "salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n", "the more randomness and more characters your salt has the better for the hash but anything that s several characters long and random works\n", "you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n", "you can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d say\n", "i don t know how safe could it be and how difficult is for the hacker to determinate the technique i use the thing is that the result has the same length as the hash and is harder to determinate a salt so if for any reason in the history hacker uses a rainbow table and catches a probable result it will be the wrong\n", "prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n", "so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n", "salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n", "however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n", "i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n", "restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n", "most attacks involve generating hash for common passwords so for reasonably complicated passwords it becomes harder especially with salt some people use usernames as salt others use randomly generated numbers\n", "in this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the salt\n", "this salt is nothing more than a random arbitrary string that you concatenate to the passwords and it will make your hash password unique\n", "likely not as cheap as xor against n values but seems like there s possibility for better quality results at a minimal extra cost especially if the data being hash is much larger than the salt value\n", "in this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the salt\n", "so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n", "prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n", "likely not as cheap as xor against n values but seems like there s possibility for better quality results at a minimal extra cost especially if the data being hash is much larger than the salt value\n", "example the salt field might only allow a 64 characters while the generated salt might be longer therefore when you save the salt it gets trimmed which ultimately changes the hash password\n", "i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n", "restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n", "however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n", "you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n", "the lack of salt is harder to expoit here than with password hash since the hash is not directly known\n", "salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n", "the more randomness and more characters your salt has the better for the hash but anything that s several characters long and random works\n", "you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n", "you can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d say\n", "i don t know how safe could it be and how difficult is for the hacker to determinate the technique i use the thing is that the result has the same length as the hash and is harder to determinate a salt so if for any reason in the history hacker uses a rainbow table and catches a probable result it will be the wrong\n", "prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n", "so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n", "salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n", "could i use mapply to do this more succinctly than running melt and dcast separately for each of employed girls guys\n", "or indeed if your system has strdup or you re willing to write an implementation then strdup is much cleaner than malloc + strcpy\n", "or indeed if your system has strdup or you re willing to write an implementation then strdup is much cleaner than malloc + strcpy\n", "you should know that strdup allocates more memory and returns its pointer which you then overwrite the original pointer returned by malloc so it will be impossible to free that memory since you no longer have the pointers\n", "you should know that strdup allocates more memory and returns its pointer which you then overwrite the original pointer returned by malloc so it will be impossible to free that memory since you no longer have the pointers\n", "you can use either to create a new memory block which is separate from the original but naturally strdup is simpler since it doesn t require a separate malloc strlen call\n", "however if strlen source is greater than n then strncpy will simply copy the first n bytes and will not terminate the string dest with a null byte because there is no space for it\n", "this is the case here because strlen hello is greater than 3 your last strncpy argument\n", "the other suggestion keep repeating until x stops changing does not work either because for non-perfect squares x will alternate between the floor and the ceiling of the root \u00e2 because of integer mathematics the term n x will alternate when x is slightly smaller or slightly larger than sqrt n\n", "the other suggestion keep repeating until x stops changing does not work either because for non-perfect squares x will alternate between the floor and the ceiling of the root \u00e2 because of integer mathematics the term n x will alternate when x is slightly smaller or slightly larger than sqrt n\n", "fread ... is extremely fast 10 - 100 times faster than read.table ... or read.csv ... for large datasets\n", "interestingly for 1 million rows per file the optimised version of read.csv and read.table take 422 and 430 more time than fread whilst without optimisation this leaps to around 1500 and 1005 longer\n", "fread performs faster and more efficiently than read.table but read.table produces less no errors on the same data set\n", "you might want to give the data.table package a try check out the fread function which is much faster than read.table\n", "for reading large csv files you should either use readr read_csv or data.table fread as both are much faster than base read.table\n", "fread ... is extremely fast 10 - 100 times faster than read.table ... or read.csv ... for large datasets\n", "interestingly for 1 million rows per file the optimised version of read.csv and read.table take 422 and 430 more time than fread whilst without optimisation this leaps to around 1500 and 1005 longer\n", "fread performs faster and more efficiently than read.table but read.table produces less no errors on the same data set\n", "you might want to give the data.table package a try check out the fread function which is much faster than read.table\n", "for reading large csv files you should either use readr read_csv or data.table fread as both are much faster than base read.table\n", "i m pretty sure the linker will coalesce equivalent strings so the total will be less than the sum of the parts for these sections but i guess typically not by much\n", "i m pretty sure the linker will coalesce equivalent strings so the total will be less than the sum of the parts for these sections but i guess typically not by much\n", "inlining inlining produces fatter code which is faster the inline functions will not appear in the call stack\n", "if a function is static thus not exported anyway and only called once within your code and you never use a pointer to the function chances are good that gcc will decide to inline it automatically as it will have no negative impact the binary won t get bigger by inlining it only once\n", "but as the inline code gets longer the savings for inlining become smaller so maybe you could just have a hard limit on the size of the code - any code to be inline must be smaller than the limit\n", "generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining\n", "if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself\n", "inlining inlining produces fatter code which is faster the inline functions will not appear in the call stack\n", "a similar argument can be made for inlining functions inline is generally faster but will remain in the same big-o complexity class although there is an additional size tradeoff inlining makes your compiled program larger if the code was being used in many places\n", "if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself\n", "templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining\n", "templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining\n", "i m well aware that inline is more of compiler decision than of user going so far as even to inlining non-specified inline-functions so the user control is almost negligible\n", "the keyword inline is more about telling the compiler that the symbol will be present in more than one object file without violating the one definition rule than about actual inlining which the compiler can decide to do or not to do\n", "generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining\n", "callee is too large message is printed by c1 when the size in bytecodes of the method being inline is larger than maxinlinesize 35 multiplied by nestedinliningsizeratio 90 on each next level of inlining\n", "in reality the inline keyword has less to do with inlining code and more to do with allowing legal violation of the one definition rule\n", "afaik malloc is not slower than memcpy\n", "afaik malloc is not slower than memcpy\n", "this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n", "this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n", "afaik malloc is not slower than memcpy\n", "afaik malloc is not slower than memcpy\n", "this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n", "this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n", "in term of speed square rooting is easy a few arithmetical operations for some newton-like method but it is not clear what asin does probably quite costly cos is likely to be one order of magnitude slower than sqrt and thus one square root is likely to be quickier than those two transcendental function calls\n", "there is a nice comparison of threads and processes here when is clone and fork better than pthreads\n", "the features stemming from those discussions permit less extreme fork than processes which is symmetrically like the provision of more extensive independence between pthreads\n", "but when is fork and clone better than pthreads\n", "just wanted to add that using strrpos + substr is slightly faster than explode + end\n", "just wanted to add that using strrpos + substr is slightly faster than explode + end\n", "just wanted to add that using strrpos + substr is slightly faster than explode + end\n", "just wanted to add that using strrpos + substr is slightly faster than explode + end\n", "it s like asking whether sin is faster than sqrt\n", "it s like asking whether sin is faster than sqrt\n", "coalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every time\n", "coalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every time\n", "the coalesce function is used here because it is more portable than nvl or ifnull\n", "2 however coalesce requires all arguments to be of the same data type thus being stricter than nvl which will first attempt an implicit conversion\n", "the ansi standard function coalesce is simpler than using nvl and decode which should be obsoleted anyway\n", "joe duffy s blog implies using substr is more efficient than strsplit\n", "joe duffy s blog implies using substr is more efficient than strsplit\n", "joe duffy s blog implies using substr is more efficient than strsplit\n", "joe duffy s blog implies using substr is more efficient than strsplit\n", "getline is probably better than getchar in most cases\n", "getline is probably better than getchar in most cases\n", "if you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy either\n", "a malloc free pair can be better than a realloc if you don t need to keep around the original memory\n", "dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n", "if you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy either\n", "dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n", "if you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy either\n", "a malloc free pair can be better than a realloc if you don t need to keep around the original memory\n", "dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n", "if you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy either\n", "dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n", "a fairer comparison would be comparing stringstream to the printf sscanf line of functions which would be slower than strtod but still faster than stringstream\n", "it means a declared properties is more than a pair of accessor methods getter setter\n", "that suggests another aspect where a declared properties is more than a pair of accessor methods that is more static type checking although it is undesirable here\n", "edit as willeke has pointed out accessing a properties directly is technically faster than doing so via an accessor via self\n", "a properties is nothing more than syntactic shorthand for a get set accessor\n", "so i guess fseek should be much faster than fread\n", "i probably feel fseek might be bit faster than fread as fseek changes the pointer position to the new address space that you have mentioned and there is no date read is happening\n", "so i guess fseek should be much faster than fread\n", "i probably feel fseek might be bit faster than fread as fseek changes the pointer position to the new address space that you have mentioned and there is no date read is happening\n", "in general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdup\n", "in general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdup\n", "the compiler is free to choose a method that is more efficient than memmove\n", "for instance strncpy is mostly useless it gives you nothing more than strcpy\n", "the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy\n", "in general strncpy is a safer alternative to strcpy\n", "in general strncpy is a safer alternative to strcpy\n", "so that the strncpy is more secure than strcpy\n", "myth 3 strncpy is a safer version of strcpy\n", "i.e strncpy is actually better than the simpler strcpy if you are willing to improve the code\n", "strncpy is safer than strcpy\n", "the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy\n", "strncpy is not safer method to use as strcpy\n", "strncpy is not safer than strcpy it just trades one type of bugs with another\n", "strncpy is more recommended that strcpy because protect your code against buffer overflow\n", "strncpy is not safer than strcpy it just trades one type of bugs with another\n", "using strncpy 3 is better than strcpy 3 but things like strlcpy 3 are better still\n", "strcpy is notoriously unsafe as are it s cousins strcpy_s and strncpy although they are mildly safer than strcpy\n", "strcpy could be better replaced by strncpy which does some bound checking\n", "so that the strncpy is more secure than strcpy\n", "strncpy is not safer method to use as strcpy\n", "i was exploring around with c regarding strncpy since most people says that it is safer than strcpy additional parameter length to avoid buffer overflows\n", "myth 3 strncpy is a safer version of strcpy\n", "using strncpy is considered safier than strcpy because the second one can easily cause buffer overrun\n", "you should use strcpy or strncpy safer than strcpy to copy the string stored in the array between arrays\n", "strcpy incoming connected will overwrite dataa and maybe datab if your first token pointed to by header is shorter than strlen connected\n", "if strcpy is anything like strcpy it will write one byte more than strlen returns to zero terminate the string\n", "strcpy incoming connected will overwrite dataa and maybe datab if your first token pointed to by header is shorter than strlen connected\n", "if strcpy is anything like strcpy it will write one byte more than strlen returns to zero terminate the string\n", "the math.floor ceil method being marginally faster than parseint and mod\n", "doing a single printf and strdup is faster and simpler than doing 2-3 printf calls\n", "if not multiple fgets calls will still be faster than multiple fgetc calls because the overhead of the latter will be greater\n", "fgetc is a function to read a single char simpler than using fgets\n", "it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n", "it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n", "it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n", "it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n", "the fact that using getline with iostreams is faster than fgetc at least in release mode runs counter to the reasoning that copying all that data must be slower than not copying it so i m not sure what all optimization is able to avoid and i didn t really look to find any explanation but it d be interesting to understand what s being optimized away\n", "i confirmed that in debug mode the getline version is slower about 130 \u00e2\u00b5s vs 60 \u00e2\u00b5s for the fgetc version\n", "it should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypt\n", "it should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypt\n", "it should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypt\n", "it should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypt\n", "you d be better off using mktime for this as it s dumber than strtotime\n", "you d be better off using mktime for this as it s dumber than strtotime\n", "the memcpy version is not more complex or more dangerous than the strncpy version\n", "if you compute the length of the string for unrelated reasons or have the length of the string from other resources it s unclear to me whether memcpy is better or worse than strncpy\n", "the memcpy version is not more complex or more dangerous than the strncpy version\n", "which is more efficient is up for debate but based on cpu bulk instructions which can copy an entire block of memory in one instruction memcpy is probably faster as strncpy would check each copied byte for a nul character\n", "if you compute the length of the string for unrelated reasons or have the length of the string from other resources it s unclear to me whether memcpy is better or worse than strncpy\n", "memcpy will always be faster than strncpy for any real world situation even in the corner case i spoke before look page_copy_fwd_maybe\n", "even if underlying implementation is not so different memcpy is much faster because it does not have to check what it s copying strncpy will stop when it ll copy the end of string character null\n", "but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively\n", "the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n", "the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n", "hash is newer and seems to support more hashing alogrithms than crypt\n", "the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n", "the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n", "hash is newer and seems to support more hashing alogrithms than crypt\n", "what happens inside crypt is more complicated than just computing a single hash and the result is base64 encoded in the end\n", "what happens inside crypt is more complicated than just computing a single hash and the result is base64 encoded in the end\n", "what happens inside crypt is more complicated than just computing a single hash and the result is base64 encoded in the end\n", "what happens inside crypt is more complicated than just computing a single hash and the result is base64 encoded in the end\n", "your ssh server is providing sha256 public key hash which is far more secure than md5 hash\n", "your ssh server is providing sha256 public key hash which is far more secure than md5 hash\n", "it appears that the new blake2 hash function is faster than md5 and cryptographically much stronger to boot\n", "your ssh server is providing sha256 public key hash which is far more secure than md5 hash\n", "generally speaking you really are safer using a hash which has a larger key size because suppose this is md5 the odds of the first password matching out of 340 282 366 920 938 463 463 374 607 431 768 211 456 possible matches is extremely extremely unlikely\n", "it s best to check if they have a sha-2 hash they are much more secure than md5 and if something like md4 is used just don t trust it at all\n", "generally speaking you really are safer using a hash which has a larger key size because suppose this is md5 the odds of the first password matching out of 340 282 366 920 938 463 463 374 607 431 768 211 456 possible matches is extremely extremely unlikely\n", "your ssh server is providing sha256 public key hash which is far more secure than md5 hash\n", "your ssh server is providing sha256 public key hash which is far more secure than md5 hash\n", "it appears that the new blake2 hash function is faster than md5 and cryptographically much stronger to boot\n", "your ssh server is providing sha256 public key hash which is far more secure than md5 hash\n", "generally speaking you really are safer using a hash which has a larger key size because suppose this is md5 the odds of the first password matching out of 340 282 366 920 938 463 463 374 607 431 768 211 456 possible matches is extremely extremely unlikely\n", "it s best to check if they have a sha-2 hash they are much more secure than md5 and if something like md4 is used just don t trust it at all\n", "generally speaking you really are safer using a hash which has a larger key size because suppose this is md5 the odds of the first password matching out of 340 282 366 920 938 463 463 374 607 431 768 211 456 possible matches is extremely extremely unlikely\n", "linux crypt now supports a wider variety of hash functions such as based on sha-1 or based on sha-256 but the added protections salt multiple rounds still aren t as good as the later developments of pbkdf2 or bcrypt and many short passwords hash can still be cracked in a short amount of time\n", "linux crypt now supports a wider variety of hash functions such as based on sha-1 or based on sha-256 but the added protections salt multiple rounds still aren t as good as the later developments of pbkdf2 or bcrypt and many short passwords hash can still be cracked in a short amount of time\n", "linux crypt now supports a wider variety of hash functions such as based on sha-1 or based on sha-256 but the added protections salt multiple rounds still aren t as good as the later developments of pbkdf2 or bcrypt and many short passwords hash can still be cracked in a short amount of time\n", "linux crypt now supports a wider variety of hash functions such as based on sha-1 or based on sha-256 but the added protections salt multiple rounds still aren t as good as the later developments of pbkdf2 or bcrypt and many short passwords hash can still be cracked in a short amount of time\n", "the vlookup operation still takes a bit of time but it is significantly faster than countif\n", "the vlookup operation still takes a bit of time but it is significantly faster than countif\n"], "method": ["if your array s retaincount is greater than 1 at the start of dealloc some other object is retaining it at least temporarily\n", "can the geocode gem support more than one geocoding step\n", "the geocoding api works better than geocode normally but has usage limits and the implementation is bigger\n", "i had a similar problem using ggmap geocode for a batch of locations where roughly 20 of locations gave the over query limit error even though geocodequerycheck would show more than enough geocoding queries remaining and the errors were sporadically spread throughout the locations not just the last 20\n", "the geocoding api works better than geocode normally but has usage limits and the implementation is bigger\n", "2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocode\n", "2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocode\n", "can the geocode gem support more than one geocoding step\n", "the geocoding api works better than geocode normally but has usage limits and the implementation is bigger\n", "i had a similar problem using ggmap geocode for a batch of locations where roughly 20 of locations gave the over query limit error even though geocodequerycheck would show more than enough geocoding queries remaining and the errors were sporadically spread throughout the locations not just the last 20\n", "the geocoding api works better than geocode normally but has usage limits and the implementation is bigger\n", "2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocode\n", "2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocode\n", "if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n", "we can call its compareto method to decide whether it is bigger than equals to or less than any int\n", "icomparable declares the compareto method which returns an integer that specifies a less than equals to or greater than relationship between two objects of the same type\n", "and my guess as to why an element is being dropped is your compareto method never returns a 1 in any case so elements are always considered to be less than or equals to other elements which is probably screwing with the treeset\n", "all i changed was the first compareto comparison to be less than instead of less than or equals to\n", "in the compareto method you can decide which fields are used for the comparison greater less than or equals\n", "i am using the min value because i read that the compareto method returns negative 0 or positive whether the first string is less than equals to or greater than the second\n", "implement compareto in temporary temporary.compareto left such that it returns a negative integer zero or a positive integer as temporary is less than equals to or greater than the left\n", "per the page i linked to compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n", "compareto defines whether your base student is greater than less than or equals to your studenttocompare and you can define these with any criteria you please\n", "most likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n times\n", "with this rather than needing to implement a comparator all you need to implement is the int compareto class o method in the class which returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n", "the only significance of a compareto return value is if it is greater less than or equals to zero\n", "you need to call the compareto method which will indicate the result of the comparison by returning an integer less than greater than or equals to 0\n", "or is it compareto returns negative numbers 0 and positive numbers respectively indicating whether the calling object is less than equals to or greater than the specified object\n", "you should be using compareto method for less than or equals or greater than\n", "compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "compareto return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n", "the compareto method returns one of -1 0 1 depending on whether or not the argument is less than equals to or greater than respectively\n", "the interface defines one method compareto that must return a negative integer zero or a positive integer if this object is less than equals to or greater than the other object respectively\n", "this interface defines the method compareto t which will return a negative number zero or a positive number if the first object is less than equals to or greater than the other one respectively\n", "most likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n times\n", "compareto compares values and returns an int which tells if the values compare less than equals or greater than\n", "the compareto method returns 1 0 or -1 depending on whether value a is respectively greater than equals to or lesser than value b\n", "compareto method returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "in the compareto method you can decide which fields are used for the comparison greater less than or equals\n", "is a generic type at compile time java will require that an instance provide an implementation of int compareto t o which from the javadoc returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "i know that in java there is a compareto method that you can write in a class that will compare two variables and return a value -1 1 or 0 signifing greater than less than and equals to operations\n", "in the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto method\n", "note that in both cases you can take advantage of the fact that int also implements so you can use its compareto method to determine whether corresponding values in each instance of your class are less than equals to or greater than each other\n", "compareto returns a number that is less than equals to or greater than zero corresponding to the first string being before the same as or after the second string respectively\n", "when one of the strings is a prefix of another the performance of compareto is worse as it still needs to determine the lexicographical ordering while equals won t worry any more and return false immediately\n", "the only significance of a compareto return value is if it is greater less than or equals to zero\n", "according to javadoc compareto needs to return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "i am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another date\n", "if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n", "we can call its compareto method to decide whether it is bigger than equals to or less than any int\n", "icomparable declares the compareto method which returns an integer that specifies a less than equals to or greater than relationship between two objects of the same type\n", "and my guess as to why an element is being dropped is your compareto method never returns a 1 in any case so elements are always considered to be less than or equals to other elements which is probably screwing with the treeset\n", "all i changed was the first compareto comparison to be less than instead of less than or equals to\n", "in the compareto method you can decide which fields are used for the comparison greater less than or equals\n", "i am using the min value because i read that the compareto method returns negative 0 or positive whether the first string is less than equals to or greater than the second\n", "implement compareto in temporary temporary.compareto left such that it returns a negative integer zero or a positive integer as temporary is less than equals to or greater than the left\n", "per the page i linked to compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n", "compareto defines whether your base student is greater than less than or equals to your studenttocompare and you can define these with any criteria you please\n", "most likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n times\n", "with this rather than needing to implement a comparator all you need to implement is the int compareto class o method in the class which returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n", "the only significance of a compareto return value is if it is greater less than or equals to zero\n", "you need to call the compareto method which will indicate the result of the comparison by returning an integer less than greater than or equals to 0\n", "or is it compareto returns negative numbers 0 and positive numbers respectively indicating whether the calling object is less than equals to or greater than the specified object\n", "you should be using compareto method for less than or equals or greater than\n", "compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "compareto return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n", "the compareto method returns one of -1 0 1 depending on whether or not the argument is less than equals to or greater than respectively\n", "the interface defines one method compareto that must return a negative integer zero or a positive integer if this object is less than equals to or greater than the other object respectively\n", "this interface defines the method compareto t which will return a negative number zero or a positive number if the first object is less than equals to or greater than the other one respectively\n", "most likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n times\n", "compareto compares values and returns an int which tells if the values compare less than equals or greater than\n", "the compareto method returns 1 0 or -1 depending on whether value a is respectively greater than equals to or lesser than value b\n", "compareto method returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "in the compareto method you can decide which fields are used for the comparison greater less than or equals\n", "is a generic type at compile time java will require that an instance provide an implementation of int compareto t o which from the javadoc returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "i know that in java there is a compareto method that you can write in a class that will compare two variables and return a value -1 1 or 0 signifing greater than less than and equals to operations\n", "in the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto method\n", "note that in both cases you can take advantage of the fact that int also implements so you can use its compareto method to determine whether corresponding values in each instance of your class are less than equals to or greater than each other\n", "compareto returns a number that is less than equals to or greater than zero corresponding to the first string being before the same as or after the second string respectively\n", "when one of the strings is a prefix of another the performance of compareto is worse as it still needs to determine the lexicographical ordering while equals won t worry any more and return false immediately\n", "the only significance of a compareto return value is if it is greater less than or equals to zero\n", "according to javadoc compareto needs to return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n", "i am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another date\n", "i can make this happen with the minimal project where oncreate does nothing more than call super and setcontentview\n", "as of right now drawimage is much faster than putimagedata\n", "the only problem that as far as i know using drawimage is slower than using putimagedata and it was required in old browser versions like firefox 2 or such\n", "that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n", "that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n", "using the clipping version of drawimage will be faster than putimagedata\n", "using drawimage canvas is much faster than using putimagedata\n", "right now putimagedata is much slower than drawimage as you can see here\n", "using drawimage canvas is much faster than using putimagedata\n", "as of right now drawimage is much faster than putimagedata\n", "drawimage seems to be much faster than putimagedata\n", "i have seen that the drawimage function is really faster than the putimagedata\n", "is putimagedata ... more performant than drawimage ...\n", "right now putimagedata is much slower than drawimage as you can see here\n", "i have seen that the drawimage function is really faster than the putimagedata\n", "for some reason when the duration of touchesbegan is greater than the duration of touchesmoved my player will complete the touchesmoved actions first even though touchesbegan had to come first and then jump to a different x-position and then move with duration 4 to complete the touchesbegan\n", "for some reason when the duration of touchesbegan is greater than the duration of touchesmoved my player will complete the touchesmoved actions first even though touchesbegan had to come first and then jump to a different x-position and then move with duration 4 to complete the touchesbegan\n", "if the value of touchesended is more than 3 seconds beyond the current time and the time of touchesbegan is still before touchesended then it s time to show your hint\n", "if the value of touchesbegan is greater than touchesended then an active touch is going on\n", "note the show hide effect is much softer because of the commented fadein fadeout declarations that were triggering console errors probably because jsfiddle uses jquery slim now\n", "note the show hide effect is much softer because of the commented fadein fadeout declarations that were triggering console errors probably because jsfiddle uses jquery slim now\n", "i recently switched from unity to unreal and the first thing i wanted to do is create a skybox but the only thing it seems to support is a skydome which has far more polygons than a cube and the generated .dds cubemap files are far too huge to be used in webgl projects\n", "otherwise if oncreate is being called more than ondestroy receiver is registered multiple time and the app mis-behaves\n", "otherwise if oncreate is being called more than ondestroy receiver is registered multiple time and the app mis-behaves\n", "so viewdidload is called slightly earlier than viewdidappear the only difference is that when viewdidappear the view have been already drawn instead in viewdidload the view has still to be drawn\n", "you could try the block of code in the viewdidload method which is called earlier than viewdidappear\n", "so viewdidload is called slightly earlier than viewdidappear the only difference is that when viewdidappear the view have been already drawn instead in viewdidload the view has still to be drawn\n", "you could try the block of code in the viewdidload method which is called earlier than viewdidappear\n", "also as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibility\n", "ironically enough its object model show more details than it hide - good for learning but bad for abstraction\n", "show less will be hide and load more button will be show .thanks\n", "you can hide show the status bar on android 4.1 api level 16 and higher by using hide show functionality\n", "to hide action bar invoke hide method using getsupportactionbar getactionbar in case of minsdkversion is 11 or higher as show below\n", "also as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibility\n", "i suppose it is because you hide them faster than you show them so for a slight second the overal page height is shorter than it should\n", "show less will be hide and load more button will be show .thanks\n", "can anyone help me to hide it onload and show when is more than delta and hide on scroll up when is before delta\n", "it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n", "it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n", "term hide is more appropriate for run-time dynamic show hide\n", "if you re simply looking to hide the value from your cross table you shouldn t need anything more than the show hide items menu\n", "term hide is more appropriate for run-time dynamic show hide\n", "it doesn t show at all if hide is called less than 0.5s after show and it show for at least 0.5s this prevents very fast flickering stuff that you might see with naive implementations\n", "the issue is that if i scroll to the right and click on say column index 20 really any index that hide indices on the left it will freeze all columns below that index which causes the table to snap back to index 0 and not allowing me to scroll because more columns than show are frozen\n", "also as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibility\n", "ironically enough its object model show more details than it hide - good for learning but bad for abstraction\n", "show less will be hide and load more button will be show .thanks\n", "you can hide show the status bar on android 4.1 api level 16 and higher by using hide show functionality\n", "to hide action bar invoke hide method using getsupportactionbar getactionbar in case of minsdkversion is 11 or higher as show below\n", "also as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibility\n", "i suppose it is because you hide them faster than you show them so for a slight second the overal page height is shorter than it should\n", "show less will be hide and load more button will be show .thanks\n", "can anyone help me to hide it onload and show when is more than delta and hide on scroll up when is before delta\n", "it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n", "it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n", "term hide is more appropriate for run-time dynamic show hide\n", "if you re simply looking to hide the value from your cross table you shouldn t need anything more than the show hide items menu\n", "term hide is more appropriate for run-time dynamic show hide\n", "it doesn t show at all if hide is called less than 0.5s after show and it show for at least 0.5s this prevents very fast flickering stuff that you might see with naive implementations\n", "the issue is that if i scroll to the right and click on say column index 20 really any index that hide indices on the left it will freeze all columns below that index which causes the table to snap back to index 0 and not allowing me to scroll because more columns than show are frozen\n", "according to this test - hide is slightly faster then fadeout since it doesn t use animations\n", "fadeout is simpler because it will hide it for you automatically when it is done so you can save that code and it automatically waits for the animation to be done before hiding the element something your current code was not doing\n", "according to this test - hide is slightly faster then fadeout since it doesn t use animations\n", "according to this test - hide is slightly faster then fadeout since it doesn t use animations\n", "fadeout is simpler because it will hide it for you automatically when it is done so you can save that code and it automatically waits for the animation to be done before hiding the element something your current code was not doing\n", "according to this test - hide is slightly faster then fadeout since it doesn t use animations\n", "for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n", "for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n", "for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n", "for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n", "for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n", "for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n", "no - icomparable is for seeing if one object is greater than equals to or less than another\n", "icomparable is an interface that defines that two instances of the implementing class can be seen as greater than less than or equals to one another\n", "no - icomparable is for seeing if one object is greater than equals to or less than another\n", "icomparable is an interface that defines that two instances of the implementing class can be seen as greater than less than or equals to one another\n", "for some reason fadein works better than show or simply removing a hidden class via removeclass if you take that approach\n", "that s because removeclass is executed faster than fadein method you can remove the class when animation is complete\n", "for some reason fadein works better than show or simply removing a hidden class via removeclass if you take that approach\n", "that s because removeclass is executed faster than fadein method you can remove the class when animation is complete\n", "and im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boost\n", "i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n", "keep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the times\n", "well setinterval and settimeout essentially try to do the same thing but for your case setinterval method will be more accurate than settimeout\n", "setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n", "also setinterval is often better replaced by settimeout\n", "setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n", "keep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the times\n", "also settimeout is a better approach than setinterval as you explicitly reset it on each round trip\n", "it seems that settimeout has bigger priority than setinterval which could be delayed\n", "setinterval is better than settimeout for this task\n", "it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n", "i read that settimeout is less cpu resources intensive than setinterval\n", "using settimeout for such purposes is better idea than setinterval as you don t have to clear them and they won t get crowded - if your fight takes longer than period then this won t run into next fight\n", "settimeout is better than setinterval here because setinterval will start at every 5 secs but settimeout will start once each time your job is done and wait for 5 seconds which will make your script adaptive to server response timings\n", "the use of one settimeout timer is more preferably than several setinterval timers\n", "using settimeout is considered better than setinterval because of the screwy ways that js s event loop works\n", "i read that settimeout is less cpu resources intensive than setinterval\n", "it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n", "as for me settimeout is simpler than setinterval in this case as you won t need to clearinterval in the end of the array\n", "settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n", "also i advise you to take a look at javascript s setinterval since it is more appropriate than settimeout for what you want to do\n", "i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n", "now a routine to initiate once per second - settimeout is usually more useful than setinterval\n", "now a routine to initiate once per second - settimeout is usually more useful than setinterval\n", "setinterval would be the better way than settimeout\n", "the use of one settimeout timer is more preferably than several setinterval timers\n", "i find setinterval is a little cleaner than chaining settimeout calls\n", "i think using settimeout is safer than setinterval\n", "now a routine to initiate once per second - settimeout is usually more useful than setinterval\n", "but settimeout would be better than setinterval because with setinterval if your previous ajax request is not complete and you start another request there will have multiple requests which would sooner be problematic\n", "setinterval is much more suited for countdown timers and things you need to run continually since settimeout only runs once and you need to keep on calling it\n", "if so then you can just pop lines off the array using settimeout which is better than setinterval for most animations\n", "it seems that settimeout has bigger priority than setinterval which could be delayed\n", "also in my experience at least settimeout offers a much more aesthetic experience than setinterval or requestanimationframe\n", "also settimeout is a better approach than setinterval as you explicitly reset it on each round trip\n", "settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n", "and im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boost\n", "i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n", "keep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the times\n", "well setinterval and settimeout essentially try to do the same thing but for your case setinterval method will be more accurate than settimeout\n", "setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n", "also setinterval is often better replaced by settimeout\n", "setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n", "keep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the times\n", "also settimeout is a better approach than setinterval as you explicitly reset it on each round trip\n", "it seems that settimeout has bigger priority than setinterval which could be delayed\n", "setinterval is better than settimeout for this task\n", "it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n", "i read that settimeout is less cpu resources intensive than setinterval\n", "using settimeout for such purposes is better idea than setinterval as you don t have to clear them and they won t get crowded - if your fight takes longer than period then this won t run into next fight\n", "settimeout is better than setinterval here because setinterval will start at every 5 secs but settimeout will start once each time your job is done and wait for 5 seconds which will make your script adaptive to server response timings\n", "the use of one settimeout timer is more preferably than several setinterval timers\n", "using settimeout is considered better than setinterval because of the screwy ways that js s event loop works\n", "i read that settimeout is less cpu resources intensive than setinterval\n", "it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n", "as for me settimeout is simpler than setinterval in this case as you won t need to clearinterval in the end of the array\n", "settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n", "also i advise you to take a look at javascript s setinterval since it is more appropriate than settimeout for what you want to do\n", "i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n", "now a routine to initiate once per second - settimeout is usually more useful than setinterval\n", "now a routine to initiate once per second - settimeout is usually more useful than setinterval\n", "setinterval would be the better way than settimeout\n", "the use of one settimeout timer is more preferably than several setinterval timers\n", "i find setinterval is a little cleaner than chaining settimeout calls\n", "i think using settimeout is safer than setinterval\n", "now a routine to initiate once per second - settimeout is usually more useful than setinterval\n", "but settimeout would be better than setinterval because with setinterval if your previous ajax request is not complete and you start another request there will have multiple requests which would sooner be problematic\n", "setinterval is much more suited for countdown timers and things you need to run continually since settimeout only runs once and you need to keep on calling it\n", "if so then you can just pop lines off the array using settimeout which is better than setinterval for most animations\n", "it seems that settimeout has bigger priority than setinterval which could be delayed\n", "also in my experience at least settimeout offers a much more aesthetic experience than setinterval or requestanimationframe\n", "also settimeout is a better approach than setinterval as you explicitly reset it on each round trip\n", "settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n", "in this case viewdidappear behaves more like viewwillappear ..\n", "in this case viewdidappear behaves more like viewwillappear ..\n", "for me they serve pretty same purpose to hide complexity except accordion is imho better for continuous-reading it s easier to quickly go to next section while tabs seems to be more random-access\n", "for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n", "now i would like to take the ceiling of this number except in cases where the amount it is greater than the next lower integer is smaller than some epsilon\n", "the next example does more or less the same except from an oop perspective\n", "the next solution is faster than using in and except clauses\n", "in both cases you may also have to shift one or two elements off the start end of some blocks to the end start of the previous next block again at most o n 1 2 times to maintain an invariant that no two blocks differ in size by more than 1 except for the last which is used to take up slack\n", "for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n", "for me they serve pretty same purpose to hide complexity except accordion is imho better for continuous-reading it s easier to quickly go to next section while tabs seems to be more random-access\n", "for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n", "now i would like to take the ceiling of this number except in cases where the amount it is greater than the next lower integer is smaller than some epsilon\n", "the next example does more or less the same except from an oop perspective\n", "the next solution is faster than using in and except clauses\n", "in both cases you may also have to shift one or two elements off the start end of some blocks to the end start of the previous next block again at most o n 1 2 times to maintain an invariant that no two blocks differ in size by more than 1 except for the last which is used to take up slack\n", "for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n", "you can t findviewbyid earlier than oncreate\n", "you can t findviewbyid earlier than oncreate\n", "these methods which give us access to private members are known as getter setter or better knows as accessor mutators\n", "onstart is less commonly used than oncreate\n", "in my fragments data handling is taking place starting from oncreate which happens earlier than onstart\n", "onstart is less commonly used than oncreate\n", "i want smooth fadeout fadein animations instead setting visibility where fadeout is slower than fadein animation so i ve used enteractions and exitaction of datatrigger\n", "more detail set the amount of time the animation will take for fadeout and use a delay for the fadein animation that is longer than the fadeout animation time\n", "otherwise you will run into issues of trying to fadein and fadeout at the same time if your delay is shorter than your fadein\n", "i want smooth fadeout fadein animations instead setting visibility where fadeout is slower than fadein animation so i ve used enteractions and exitaction of datatrigger\n", "more detail set the amount of time the animation will take for fadeout and use a delay for the fadein animation that is longer than the fadeout animation time\n", "otherwise you will run into issues of trying to fadein and fadeout at the same time if your delay is shorter than your fadein\n", "i ve found that using a simple for-loop iterating over all elements in the string and comparing using charat performs faster than indexof or regex\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n", "you can override the setter s level to be lower than the getter s level with either private set or internal set\n", "if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed\n", "if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed\n", "the setter complexity can be higher than the getter and thus validate a unit-test\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n", "note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer\n", "but then your setter is less restricted than your getter which is odd.\n", "if your getter takes more than one argument it s not called a setter anymore\n", "but then your setter is less restricted than your getter which is odd.\n", "note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n", "you can override the setter s level to be lower than the getter s level with either private set or internal set\n", "if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed\n", "if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed\n", "the setter complexity can be higher than the getter and thus validate a unit-test\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n", "note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer\n", "but then your setter is less restricted than your getter which is odd.\n", "if your getter takes more than one argument it s not called a setter anymore\n", "but then your setter is less restricted than your getter which is odd.\n", "note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer\n", "if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n", "the plugin defaults to requiring a post request to logout but using the config setting you reference you can make your application more convenient to use but less secure by allowing get or post requests\n", "so is it enough only to use limit to get more than 50 post\n", "post is also more secure than get because you aren t sticking\n", "on an unencrypted connection post is no more secure than get\n", "i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n", "post makes it more indirect to intercept and read the payload than get but not safer\n", "i can t help with the coding side of your question but if you re passing in a non-url input then the post method would be more appropriate than get\n", "post request is a little safer than get because the parameters are not stored in browser history or in web server logs\n", "post is also more secure than get because you aren t sticking\n", "post is not better than get\n", "first off get is no less secure than post\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "post has worse performance than get\n", "get is always faster than post\n", "1 reading other questions about the rest method for this proposes i think that i should use get better than post\n", "curl commands seem to work as do some other post commands from older code but when i log out req.body all i get is\n", "so if your get request is longer than 255 bytes it s advised to use post requests instead\n", "post is more secure than get this is just a quick example\n", "this blog post explains more on how to get an access token on android\n", "post is also more secure than get because you aren t sticking information into a url\n", "get method is not safer than post data never trust datas coming from the client side\n", "i believe post is better than get\n", "post data isn t inherently more secure than get data\n", "get requests have smaller limits than post in the specs\n", "post is also more secure than get because you aren t sticking\n", "if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n", "these steps were taken from this blog post which contains more details about how to investigate and what output you ll get\n", "get is simpler and faster than post and can be used in most cases\n", "get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n", "the post at has more information on how to get that access token\n", "as a pragmatist i m inclined to use get because implementing it is way simpler than post\n", "the get is usually faster because it has no encapsulation sends data via url usually with a 255 character limit as post exists encapsulation by being sent by the body of the http request\n", "for example on the blog page of my current project i have two widgets in the sidebar one for latest tweets and one for latest music news however as you can see on this page the content of the blog post all test posts... are much longer than the height of the two widgets and would of course get larger as more post are added\n", "if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n", "i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n", "edit2 seems as if i m wrong re post being more secure than get\n", "on an unencrypted connection post is no more secure than get\n", "however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n", "post is not any more secure than get\n", "in my opinion post requests are not more secure than get requests and the data can be easily intercepted\n", "the usual wait time of the post is not too long not too larger than get so i don t think that should be an issue and post always gets back with a 200\n", "what i m trying to get is a page that displays 20 users per page will have pagination with the fallowing info it should show only users that have more than 2 post published\n", "is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n", "there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n", "post has one more letter in it than get so it s less compact\n", "however post data are not much safer than get data anyway\n", "note that doing this will get the values via post var instead get wich makes more sense since you are sending via post your form\n", "data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n", "if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n", "while the post method can be submitted with forms or ajax calls and it is pretty safe at least more than the get\n", "however in the comparative table i linked get is listed as less secure than post\n", "and apart from common misleading information where post is safer than get it is not\n", "i am asked to apply to all the actions of one mvc project for security reason says post is more secure than get which i disagree with\n", "post is also more secure than get because you aren t sticking information into a url\n", "note that i am assuming a user can get invited to more than one post which seems logical\n", "post request are safer than get but that does not mean are invulnerable\n", "get would obviously allow for a user to change the value a lot easier than post so suitable checks for existance and ownership of the record would be important\n", "post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n", "you can t get a patent any more because with this post i will claim prior art -\n", "i run the ab test several times with same results post is faster but get is lighter\n", "when you use post data is a alot more safer than get and you can send large no\n", "for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n", "i d question whether get is the right verb here considering you need to pass a complex type it sounds like it would be better served as a post\n", "why get method is faster than post\n", "additional options are to show this via a timeout so it s only shown when the post takes more than a short time and to use some form of fadein not sure if possible with a dialog then you don t get the annoying flash on the times it s very quick\n", "post makes it more indirect to intercept and read the payload than get but not safer\n", "is type get faster than type post cause i am curious how both work\n", "this response thus assumes that a request using the post verb would not use the uri to transfer sensitive information or it would be no better than get\n", "get is better for some cases but it seems to me you should use post instead\n", "using post data is more secure than get because with get the details would be in the query string portion of the url\n", "get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n", "standard post request is not more secure than get one\n", "get is faster than post\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n", "i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n", "the only scenario in which post is slightly less susceptible is that many websites that aren\u00e2 t under the attacker\u00e2 s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n", "post is a little safer than get because the parameters are not stored in browser history or in web server logs. also data is not displayed in the url\n", "using post prevents this particular attack but is this actually any more secure than using get\n", "edit taking into account what was said in the comments though it looks more secure and is recommended by w3 see touheed khan s answer post isn t more secure than get and as riggsfolly said\n", "the problem is that the post shipping takes longer than the call get alert then shows me the session variable not updated\n", "generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n", "one more thing some guys would misunderstand that post is safer than get as user can not see the sent data\n", "generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n", "from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n", "why get method is faster than post\n", "a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n", "the post get may fix the problem - get is much more lax with security than post\n", "the problem i have noticed is that sometimes the jquery post result is retrieved earlier than the load of the .js file has been completed so i get an error and of course the jquery plugin doesn t work\n", "using get is much easier than using post for most of developers\n", "if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n", "as suggested in the comments since you are saving data post is more appropriate than get\n", "get is more appropriate than post for queries because of its safe semantics\n", "as far as security goes post is much better than get as the data is sent behind-the-scenes rather than embedded in the url making it the typical protocol for login info\n", "this blog post provides more info to get started\n", "also post is generally considered better than get for ajax calls as it doesn t have the same string length limit slightly more secure too\n", "i m searching for the best method to get result with database contain more than 100000 post and more than 100000 cat\n", "if the post has more than 9 pictures related to it i only get data from the first 9\n", "the pinoyyd post is neater and get straight to the point how do i authorise a background web app without user intervention\n", "i have simplified the app so the post is shorter but the basic problem is that if i get test in workouthandler - it cannot recognize methods in wardenstrategies or loginhelper unless i also include those files in the handler they are already included in app.rb\n", "get requests are no less insecure than post requests\n", "when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n", "anyone knows how to bypass this problem and get more than 100 post\n", "yes post is better than get because post data is not usualy logged by a proxy or server but it is not secure\n", "i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n", "post requests can be much larger than get requests as get requests are limited by the maximum length of a url\n", "please always try to use post method for submitting data as it is more secure than get method\n", "post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n", "i wouldn t call post more or less secure than get\n", "param should be params and therefore your data is not being serialized which would explain why the server is rejecting your post since post requires more privileges than get presumably\n", "is post more compact than get since get requests have to be url-encoded\n", "one reason post is worse for security is that get is logged by default parameters and all data is almost universally logged by your webserver\n", "more over it seems that get requests are more lightweight than post under high load\n", "i am aware that a post is better for this kind of thing but my question is is this expected from a get request\n", "firstly post can seem more secure than get\n", "get is always faster than post\n", "for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n", "in effect post is no more secure than get\n", "also it seems that my view gets called more than once according to the log outputs and that is normal except it should be a post then redirect to a get but it seems to have more than one post request\n", "get is more appropriate than post for queries because of its safe semantics\n", "post is also more secure than get because you aren t sticking information into a url\n", "in effect post is no more secure than get\n", "hence post is more secure than get\n", "a get request will be slightly smaller than a post although using websockets would give a more accurate figure\n", "post is absolutely not more secure than get as to man in middle attacks\n", "supply more data upon post and receive less data upon get\n", "post has a lot more advantages than get\n", "using post is more secure than get in the sense that data shown into the url in get request but not in post\n", "post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n", "as powelljf3 said post is more secure then get though it can still be gotten to\n", "although putting data with post method little harder than simple get\n", "i get somehow category repeated if it has more than 1 post eg\n", "stick with post on any action that does more than get data avoid xss-issues\n", "standard post request is not more secure than get one\n", "however it isn t clear how much the value can be for the standard tumblr api you can t get more than 50 post at a time\n", "first off get is no less secure than post\n", "post is more secure than get this is just a quick example\n", "this blog post is more detailed but unfortunately does also not mention where to get the product key\n", "i noticed once the length of a get parameter is longer than 400 bytes or 2000 bytes for a post parameter g-wan returns 400 error\n", "you should check this thread why get method is faster than post\n", "but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n", "post method are generally consume more secure than get because when we use get method than it can display the data in url bar.if the data is more sensitive data like password then it can be inggeris\n", "while users can manipulate post it s far easier to manipulate get\n", "yes generally post is a better way of submitting data than get\n", "post is more secure than get because you aren t showing information anywhere\n", "following my comment on your original post here s some more information that will help you get through this\n", "there is a default limit of post method which is 2mb which is way higher than get\n", "after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n", "the post at has more information on how to get that access token\n", "when i want to get more than 54 post i receive this error\n", "when get is better than post\n", "sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n", "but a get seems more logical than a post anyway\n", "post has more capacity it can transfer more data than get\n", "get is more performant as it is idempotent and does not contain a message body where as post does\n", "i don t want to use the get request since it says in the guidelines of a restful api that it should use post for this purpose plus i might want to send more data than get can handle\n", "the get request is marginally less secure than the post request\n", "ajax calls using get are more performant than post according to yahoo\n", "get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n", "since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "i normally use something like this tag.object.annotate num_post count post .filter num_post__gt 2 to get tags with more than 2 post\n", "so for creating a friendship post method suits better than get\n", "i get far more than 50 post\n", "regarding your question about safety -- the answer is post is absolutely no safer than get\n", "curl commands seem to work as do some other post commands from older code but when i log out req.body all i get is\n", "post is more secure then get and data transfer size limits are also there\n", "post is more secure than get because you aren t showing information anywhere\n", "i try it and i get all the categories and not just the ones with more than 1 post in them\n", "standard post request is not more secure than get one\n", "get would obviously allow for a user to change the value a lot easier than post\n", "get is more vulnerable than post as it can be transmitted and stored\n", "but i believe sending data using curl with post method is better than get method\n", "post isn t more secure than get\n", "however post is a bit more safe than get because get could be stored in the history\n", "you can also chose to get more than 25 post at once\n", "post has more capacity it can transfer more data than get\n", "because post method storing capacity of response is better than get response\n", "these steps were taken from this blog post which contains more details about how to investigate and what output you ll get\n", "yes generally post is a better way of submitting data than get\n", "to get more help with that post information about your table structures and content\n", "i don t recommend sending such parameters via url get it is better and safer if you use post form method\n", "why everybody here is saying post is more secure than get when used over https\n", "i need a query to get results from stackexchange dataset in such a way that it returns me 100 top reputation users with not more than 3 post body of post for each user\n", "i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n", "some people say get can be less safe than post -- but to the seasoned user this doesn t make any significant difference because they can intercept and modify headers of the request\n", "also you can determine if someone is submitting a form or getting the form by checking if _server request_method post which is cleaner than using a get url parameter though i guess there s nothing wrong with the other approach...\n", "but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n", "is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n", "this would make things considerably easier as the android library has native support for json serialization and making http get requests to restful urls is much simpler than http post requests it s not a huge deal but just less stuff you have to worry about\n", "the get request is marginally less secure than the post request\n", "get method is not safer than post data never trust datas coming from the client side\n", "characters post is more robust and secure than get\n", "post is also more secure than get because you aren t sticking information into a url\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n", "so it is considerably less then what facebook states in their documentation at least looking by the date however by count it seems you get more than 50 post\n", "here i don t like that the body of the post request contains more different fields then the body returned from the get request - but maybe this is not a problem\n", "when i try to get more than 100 post it returns\n", "a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n", "if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n", "post is more secure then get and data transfer size limits are also there\n", "a get is a bit quicker and than a post in an ajax scenario\n", "post is a little more complex than get though\n", "but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n", "in this case post may be better than get anyways\n", "as suggested in the comments since you are saving data post is more appropriate than get\n", "i have been trying get data out of new reddit post but theres limitation where you cant get data from more than 100 post\n", "you can t get more than 20 post if you are a sandbox user\n", "however there s one thing we haven t considered yet - what if you never get more than 5 post\n", "after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n", "however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n", "both get post user can put any thing in it and you must filter any input that user make it in your form example the value in textfiled sent to server by post method and that don t make it safer than get method the difference between them that the textfiled value doesn t visible in url\n", "i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n", "however if you want to get more than one post rather use functions mentioned above i think the most important thing is to grab them in one db query and not in ineffective way one-by-one\n", "for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n", "on that base a get is more appropriate then a post\n", "data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n", "post has one more letter in it than get so it s less compact\n", "have a look at this post it is probably easier to get the selected radio button by changing your itemscontrol to use a listbox with the existing datatemplate\n", "other than that accepting a get request might be - depending on the server side rest framework - slightly more light weight than post requests\n", "i think using post is more elegant and has more options for further development than passing them via get\n", "i need to create a menu based on that list but cannot simply list all post and get it because it is a busy blog and has more than 2000 post\n", "you can feel like post is more secure than get all you want but it s a false premise\n", "i know there can be problems with posts_per_page but nothing is working i ve searched a lot to get the query to display more than one post\n", "from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n", "this blog post provides more info to get started\n", "but generally post is slower and would be bigger in size than a get request\n", "the only scenario in which post is slightly less susceptible is that many websites that aren\u00e2 t under the attacker\u00e2 s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n", "using post data is more secure than get because with get the details would be in the query string portion of the url\n", "i used get because is faster than post if you need it just to get a list of element for suggestions\n", "get is a better method in this case than post\n", "using post data is more secure than get because with get the details would be in the query string portion of the url\n", "using the post method isn t necessarily more secure than get\n", "usual way with tagging is to get objects by tag but if tags are used by few applications it may give more than post\n", "and i think post is better than get\n", "when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n", "use post its safer than get if you use rest\n", "so i have a post system and i want the box to get larger as more post come in\n", "using post allows for more data to be transferred since get will append the values to the url itself\n", "usually in ajax get method is faster as it doesn t involve proccessing post fields and as you are only getting information i would stick it\n", "other than the fact that get has one character less than post i doubt there is any performance difference\n", "generaly get is shorter than post\n", "note that doing this will get the values via post var instead get wich makes more sense since you are sending via post your form\n", "get is simpler and faster than post and can be used in most cases\n", "using post allows for more data to be transferred since get will append the values to the url itself\n", "we provide a number of support resources which may get faster response than post on third party sites including the virtuoso users mailing list public support forums and confidential support cases\n", "first of all if your instagram client is in sandbox mode then you can t get more than 20 post more clearly last 20 post\n", "to answer part of your second question with .net if the post is larger than maxrequestlength part of the .net configuration but smaller than maxallowedcontentlength part of the iis configuration you can create a custom http module to get at the portion of the post that came through\n", "hence post is more secure than get\n", "here i don t like that the body of the post request contains more different fields then the body returned from the get request - but maybe this is not a problem\n", "i m able to query my database below to get the result that i want but i don t want to have to iterate through all of the author objects just the ones that have more than one post\n", "post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n", "speaking of get request types you should also know that get requests tend to perform better than post\n", "using post is more secure than get in the sense that data shown into the url in get request but not in post\n", "i m trying to get cloudinary direct uploads working on a rails app using carrierwave and accepts_nested_attributes_for to submit one or more images with a post\n", "get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n", "although post is more secure as compared to get when ssl is present\n", "here s the solution for post variables as well which is probably trickier for more users than the get solution\n", "sorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside comments\n", "another post outlines some more details on this how to get master-master replication with subversion\n", "i want to get all the users that has more than one post but\n", "get is more performant as it is idempotent and does not contain a message body where as post does\n", "but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n", "i think whoever said post is better than get when using passwords meant that the passwords would be part of the url in the get request which would obviously be bad\n", "get is more vulnerable than post as it can be transmitted and stored\n", "is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n", "also note that using post is absolutely not more secure than get because the request parameters aren t immediately visible in url\n", "get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n", "as it s widely known that an asynchronous post request is better since the user won t get a perception that the app has crashed while it s loading the long process\n", "maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n", "a post request would not provide any more safety than a get request any half-decent web debugging tool can forge post requests\n", "actually if you would like to retrieve specific task with all its details get request would be more suitable than post\n", "using get is much easier than using post for most of developers\n", "the get request is marginally less secure than the post request\n", "why everybody here is saying post is more secure than get when used over https\n", "this means the amount of data you could pass by using post verb is much more than by using a query string and a get method\n", "however note that post is not much safer than get\n", "this blog post is more detailed but unfortunately does also not mention where to get the product key\n", "get and head being much more frequent than post\n", "but a get seems more logical than a post anyway\n", "post is not better than get\n", "i just want to know if i use post method for login api then is it safer than get method\n", "post is no more secure than get over the http protocol\n", "is post safer than get\n", "you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n", "i am asked to apply to all the actions of one mvc project for security reason says post is more secure than get which i disagree with\n", "not able to get more than 100 post in single rest api call for the linkedin company updates\n", "post is also more secure than get because you aren t sticking information into a url\n", "another post outlines some more details on this how to get master-master replication with subversion\n", "this post is more to get advises and ideas rather than solving a problem\n", "post get method doesn t have the same lenght limit you can use post to send more data than with get\n", "it is said that get method is faster than post but i don t know why is it\n", "instead i m using post which isn t exactly bullet proof but still a better choice than get in this case\n", "hope you get the more clarification by this post\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n", "how to get more than 20 post from instagram using their api\n", "however i ve searched for a couple days and am not getting a definitive answer and i need a better understand of this so i know no better way to get more info than to post here\n", "characters post is more robust and secure than get\n", "param should be params and therefore your data is not being serialized which would explain why the server is rejecting your post since post requires more privileges than get presumably\n", "an initial get request to a page usually costs less than subsequent post anyway so there s not much reason to avoid it\n", "maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n", "i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n", "using post over https is better than using get and http\n", "it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n", "another reason but rather a minor one is that get is easier to exploit that post as there are more ways to trigger get request than to trigger post request\n", "this post goes into more details how to get charles proxy work with android 7 nougat\n", "as powelljf3 said post is more secure then get though it can still be gotten to\n", "on that base a get is more appropriate then a post\n", "but i believe sending data using curl with post method is better than get method\n", "post requests are no safer than restful requests which are no safer than get requests\n", "although post is more secure as compared to get when ssl is present\n", "this post goes into more details how to get charles proxy work with android 7 nougat\n", "get is slightly faster because the values are sent in the header unlike the post the values are sent in the request body in the format that the content type specifies\n", "following my comment on your original post here s some more information that will help you get through this\n", "post has worse performance than get\n", "the post get may fix the problem - get is much more lax with security than post\n", "as far as security goes post is much better than get as the data is sent behind-the-scenes rather than embedded in the url making it the typical protocol for login info\n", "is get method is better than post method if you use a form\n", "i think using post is more elegant and has more options for further development than passing them via get\n", "post is no more secure than get over the http protocol\n", "since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n", "if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n", "it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n", "i used get because is faster than post if you need it just to get a list of element for suggestions\n", "you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n", "get is a better method in this case than post\n", "gets have a size restrictions post do not or at least it s a configurable setting on the server and has a larger higher end than a get request would\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n", "i have seen other people asking the same question why get method is faster than post\n", "after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n", "last to address other answers while you should use post data when modifying something it is in no way more secure than get\n", "in my opinion the second way to achieve this is better because using get is not thats ecure in my opinion.it s easier than using post\n", "if you are curious though rather than just trusting a book or a blog post it is better to make a simple example and take it apart - you get it straight from the horse s mouth and you learn a whole lot more\n", "i ll get better with formatting and being more specific with the post\n", "you can feel like post is more secure than get all you want but it s a false premise\n", "also a post request would be better than a get if you re sending json\n", "is get method is better than post method if you use a form\n", "i was taught from him that using get requests was better than post but after reading up i would like to switch to post my only problems is i am a little unsure how to modify my code to switch over from get\n", "post is also more secure than get because you aren t sticking information into a url\n", "when post is better than get\n", "sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n", "i m trying to get deeper with post and pre incrementors but am a bit stuck with the following expression\n", "the plugin defaults to requiring a post request to logout but using the config setting you reference you can make your application more convenient to use but less secure by allowing get or post requests\n", "so is it enough only to use limit to get more than 50 post\n", "post is also more secure than get because you aren t sticking\n", "on an unencrypted connection post is no more secure than get\n", "i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n", "post makes it more indirect to intercept and read the payload than get but not safer\n", "i can t help with the coding side of your question but if you re passing in a non-url input then the post method would be more appropriate than get\n", "post request is a little safer than get because the parameters are not stored in browser history or in web server logs\n", "post is also more secure than get because you aren t sticking\n", "post is not better than get\n", "first off get is no less secure than post\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "post has worse performance than get\n", "get is always faster than post\n", "1 reading other questions about the rest method for this proposes i think that i should use get better than post\n", "curl commands seem to work as do some other post commands from older code but when i log out req.body all i get is\n", "so if your get request is longer than 255 bytes it s advised to use post requests instead\n", "post is more secure than get this is just a quick example\n", "this blog post explains more on how to get an access token on android\n", "post is also more secure than get because you aren t sticking information into a url\n", "get method is not safer than post data never trust datas coming from the client side\n", "i believe post is better than get\n", "post data isn t inherently more secure than get data\n", "get requests have smaller limits than post in the specs\n", "post is also more secure than get because you aren t sticking\n", "if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n", "these steps were taken from this blog post which contains more details about how to investigate and what output you ll get\n", "get is simpler and faster than post and can be used in most cases\n", "get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n", "the post at has more information on how to get that access token\n", "as a pragmatist i m inclined to use get because implementing it is way simpler than post\n", "the get is usually faster because it has no encapsulation sends data via url usually with a 255 character limit as post exists encapsulation by being sent by the body of the http request\n", "for example on the blog page of my current project i have two widgets in the sidebar one for latest tweets and one for latest music news however as you can see on this page the content of the blog post all test posts... are much longer than the height of the two widgets and would of course get larger as more post are added\n", "if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n", "i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n", "edit2 seems as if i m wrong re post being more secure than get\n", "on an unencrypted connection post is no more secure than get\n", "however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n", "post is not any more secure than get\n", "in my opinion post requests are not more secure than get requests and the data can be easily intercepted\n", "the usual wait time of the post is not too long not too larger than get so i don t think that should be an issue and post always gets back with a 200\n", "what i m trying to get is a page that displays 20 users per page will have pagination with the fallowing info it should show only users that have more than 2 post published\n", "is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n", "there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n", "post has one more letter in it than get so it s less compact\n", "however post data are not much safer than get data anyway\n", "note that doing this will get the values via post var instead get wich makes more sense since you are sending via post your form\n", "data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n", "if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n", "while the post method can be submitted with forms or ajax calls and it is pretty safe at least more than the get\n", "however in the comparative table i linked get is listed as less secure than post\n", "and apart from common misleading information where post is safer than get it is not\n", "i am asked to apply to all the actions of one mvc project for security reason says post is more secure than get which i disagree with\n", "post is also more secure than get because you aren t sticking information into a url\n", "note that i am assuming a user can get invited to more than one post which seems logical\n", "post request are safer than get but that does not mean are invulnerable\n", "get would obviously allow for a user to change the value a lot easier than post so suitable checks for existance and ownership of the record would be important\n", "post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n", "you can t get a patent any more because with this post i will claim prior art -\n", "i run the ab test several times with same results post is faster but get is lighter\n", "when you use post data is a alot more safer than get and you can send large no\n", "for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n", "i d question whether get is the right verb here considering you need to pass a complex type it sounds like it would be better served as a post\n", "why get method is faster than post\n", "additional options are to show this via a timeout so it s only shown when the post takes more than a short time and to use some form of fadein not sure if possible with a dialog then you don t get the annoying flash on the times it s very quick\n", "post makes it more indirect to intercept and read the payload than get but not safer\n", "is type get faster than type post cause i am curious how both work\n", "this response thus assumes that a request using the post verb would not use the uri to transfer sensitive information or it would be no better than get\n", "get is better for some cases but it seems to me you should use post instead\n", "using post data is more secure than get because with get the details would be in the query string portion of the url\n", "get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n", "standard post request is not more secure than get one\n", "get is faster than post\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n", "i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n", "the only scenario in which post is slightly less susceptible is that many websites that aren\u00e2 t under the attacker\u00e2 s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n", "post is a little safer than get because the parameters are not stored in browser history or in web server logs. also data is not displayed in the url\n", "using post prevents this particular attack but is this actually any more secure than using get\n", "edit taking into account what was said in the comments though it looks more secure and is recommended by w3 see touheed khan s answer post isn t more secure than get and as riggsfolly said\n", "the problem is that the post shipping takes longer than the call get alert then shows me the session variable not updated\n", "generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n", "one more thing some guys would misunderstand that post is safer than get as user can not see the sent data\n", "generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n", "from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n", "why get method is faster than post\n", "a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n", "the post get may fix the problem - get is much more lax with security than post\n", "the problem i have noticed is that sometimes the jquery post result is retrieved earlier than the load of the .js file has been completed so i get an error and of course the jquery plugin doesn t work\n", "using get is much easier than using post for most of developers\n", "if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n", "as suggested in the comments since you are saving data post is more appropriate than get\n", "get is more appropriate than post for queries because of its safe semantics\n", "as far as security goes post is much better than get as the data is sent behind-the-scenes rather than embedded in the url making it the typical protocol for login info\n", "this blog post provides more info to get started\n", "also post is generally considered better than get for ajax calls as it doesn t have the same string length limit slightly more secure too\n", "i m searching for the best method to get result with database contain more than 100000 post and more than 100000 cat\n", "if the post has more than 9 pictures related to it i only get data from the first 9\n", "the pinoyyd post is neater and get straight to the point how do i authorise a background web app without user intervention\n", "i have simplified the app so the post is shorter but the basic problem is that if i get test in workouthandler - it cannot recognize methods in wardenstrategies or loginhelper unless i also include those files in the handler they are already included in app.rb\n", "get requests are no less insecure than post requests\n", "when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n", "anyone knows how to bypass this problem and get more than 100 post\n", "yes post is better than get because post data is not usualy logged by a proxy or server but it is not secure\n", "i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n", "post requests can be much larger than get requests as get requests are limited by the maximum length of a url\n", "please always try to use post method for submitting data as it is more secure than get method\n", "post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n", "i wouldn t call post more or less secure than get\n", "param should be params and therefore your data is not being serialized which would explain why the server is rejecting your post since post requires more privileges than get presumably\n", "is post more compact than get since get requests have to be url-encoded\n", "one reason post is worse for security is that get is logged by default parameters and all data is almost universally logged by your webserver\n", "more over it seems that get requests are more lightweight than post under high load\n", "i am aware that a post is better for this kind of thing but my question is is this expected from a get request\n", "firstly post can seem more secure than get\n", "get is always faster than post\n", "for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n", "in effect post is no more secure than get\n", "also it seems that my view gets called more than once according to the log outputs and that is normal except it should be a post then redirect to a get but it seems to have more than one post request\n", "get is more appropriate than post for queries because of its safe semantics\n", "post is also more secure than get because you aren t sticking information into a url\n", "in effect post is no more secure than get\n", "hence post is more secure than get\n", "a get request will be slightly smaller than a post although using websockets would give a more accurate figure\n", "post is absolutely not more secure than get as to man in middle attacks\n", "supply more data upon post and receive less data upon get\n", "post has a lot more advantages than get\n", "using post is more secure than get in the sense that data shown into the url in get request but not in post\n", "post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n", "as powelljf3 said post is more secure then get though it can still be gotten to\n", "although putting data with post method little harder than simple get\n", "i get somehow category repeated if it has more than 1 post eg\n", "stick with post on any action that does more than get data avoid xss-issues\n", "standard post request is not more secure than get one\n", "however it isn t clear how much the value can be for the standard tumblr api you can t get more than 50 post at a time\n", "first off get is no less secure than post\n", "post is more secure than get this is just a quick example\n", "this blog post is more detailed but unfortunately does also not mention where to get the product key\n", "i noticed once the length of a get parameter is longer than 400 bytes or 2000 bytes for a post parameter g-wan returns 400 error\n", "you should check this thread why get method is faster than post\n", "but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n", "post method are generally consume more secure than get because when we use get method than it can display the data in url bar.if the data is more sensitive data like password then it can be inggeris\n", "while users can manipulate post it s far easier to manipulate get\n", "yes generally post is a better way of submitting data than get\n", "post is more secure than get because you aren t showing information anywhere\n", "following my comment on your original post here s some more information that will help you get through this\n", "there is a default limit of post method which is 2mb which is way higher than get\n", "after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n", "the post at has more information on how to get that access token\n", "when i want to get more than 54 post i receive this error\n", "when get is better than post\n", "sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n", "but a get seems more logical than a post anyway\n", "post has more capacity it can transfer more data than get\n", "get is more performant as it is idempotent and does not contain a message body where as post does\n", "i don t want to use the get request since it says in the guidelines of a restful api that it should use post for this purpose plus i might want to send more data than get can handle\n", "the get request is marginally less secure than the post request\n", "ajax calls using get are more performant than post according to yahoo\n", "get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n", "since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "i normally use something like this tag.object.annotate num_post count post .filter num_post__gt 2 to get tags with more than 2 post\n", "so for creating a friendship post method suits better than get\n", "i get far more than 50 post\n", "regarding your question about safety -- the answer is post is absolutely no safer than get\n", "curl commands seem to work as do some other post commands from older code but when i log out req.body all i get is\n", "post is more secure then get and data transfer size limits are also there\n", "post is more secure than get because you aren t showing information anywhere\n", "i try it and i get all the categories and not just the ones with more than 1 post in them\n", "standard post request is not more secure than get one\n", "get would obviously allow for a user to change the value a lot easier than post\n", "get is more vulnerable than post as it can be transmitted and stored\n", "but i believe sending data using curl with post method is better than get method\n", "post isn t more secure than get\n", "however post is a bit more safe than get because get could be stored in the history\n", "you can also chose to get more than 25 post at once\n", "post has more capacity it can transfer more data than get\n", "because post method storing capacity of response is better than get response\n", "these steps were taken from this blog post which contains more details about how to investigate and what output you ll get\n", "yes generally post is a better way of submitting data than get\n", "to get more help with that post information about your table structures and content\n", "i don t recommend sending such parameters via url get it is better and safer if you use post form method\n", "why everybody here is saying post is more secure than get when used over https\n", "i need a query to get results from stackexchange dataset in such a way that it returns me 100 top reputation users with not more than 3 post body of post for each user\n", "i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n", "some people say get can be less safe than post -- but to the seasoned user this doesn t make any significant difference because they can intercept and modify headers of the request\n", "also you can determine if someone is submitting a form or getting the form by checking if _server request_method post which is cleaner than using a get url parameter though i guess there s nothing wrong with the other approach...\n", "but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n", "is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n", "this would make things considerably easier as the android library has native support for json serialization and making http get requests to restful urls is much simpler than http post requests it s not a huge deal but just less stuff you have to worry about\n", "the get request is marginally less secure than the post request\n", "get method is not safer than post data never trust datas coming from the client side\n", "characters post is more robust and secure than get\n", "post is also more secure than get because you aren t sticking information into a url\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n", "so it is considerably less then what facebook states in their documentation at least looking by the date however by count it seems you get more than 50 post\n", "here i don t like that the body of the post request contains more different fields then the body returned from the get request - but maybe this is not a problem\n", "when i try to get more than 100 post it returns\n", "a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n", "if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n", "post is more secure then get and data transfer size limits are also there\n", "a get is a bit quicker and than a post in an ajax scenario\n", "post is a little more complex than get though\n", "but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n", "in this case post may be better than get anyways\n", "as suggested in the comments since you are saving data post is more appropriate than get\n", "i have been trying get data out of new reddit post but theres limitation where you cant get data from more than 100 post\n", "you can t get more than 20 post if you are a sandbox user\n", "however there s one thing we haven t considered yet - what if you never get more than 5 post\n", "after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n", "however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n", "both get post user can put any thing in it and you must filter any input that user make it in your form example the value in textfiled sent to server by post method and that don t make it safer than get method the difference between them that the textfiled value doesn t visible in url\n", "i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n", "however if you want to get more than one post rather use functions mentioned above i think the most important thing is to grab them in one db query and not in ineffective way one-by-one\n", "for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n", "on that base a get is more appropriate then a post\n", "data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n", "post has one more letter in it than get so it s less compact\n", "have a look at this post it is probably easier to get the selected radio button by changing your itemscontrol to use a listbox with the existing datatemplate\n", "other than that accepting a get request might be - depending on the server side rest framework - slightly more light weight than post requests\n", "i think using post is more elegant and has more options for further development than passing them via get\n", "i need to create a menu based on that list but cannot simply list all post and get it because it is a busy blog and has more than 2000 post\n", "you can feel like post is more secure than get all you want but it s a false premise\n", "i know there can be problems with posts_per_page but nothing is working i ve searched a lot to get the query to display more than one post\n", "from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n", "this blog post provides more info to get started\n", "but generally post is slower and would be bigger in size than a get request\n", "the only scenario in which post is slightly less susceptible is that many websites that aren\u00e2 t under the attacker\u00e2 s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n", "using post data is more secure than get because with get the details would be in the query string portion of the url\n", "i used get because is faster than post if you need it just to get a list of element for suggestions\n", "get is a better method in this case than post\n", "using post data is more secure than get because with get the details would be in the query string portion of the url\n", "using the post method isn t necessarily more secure than get\n", "usual way with tagging is to get objects by tag but if tags are used by few applications it may give more than post\n", "and i think post is better than get\n", "when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n", "use post its safer than get if you use rest\n", "so i have a post system and i want the box to get larger as more post come in\n", "using post allows for more data to be transferred since get will append the values to the url itself\n", "usually in ajax get method is faster as it doesn t involve proccessing post fields and as you are only getting information i would stick it\n", "other than the fact that get has one character less than post i doubt there is any performance difference\n", "generaly get is shorter than post\n", "note that doing this will get the values via post var instead get wich makes more sense since you are sending via post your form\n", "get is simpler and faster than post and can be used in most cases\n", "using post allows for more data to be transferred since get will append the values to the url itself\n", "we provide a number of support resources which may get faster response than post on third party sites including the virtuoso users mailing list public support forums and confidential support cases\n", "first of all if your instagram client is in sandbox mode then you can t get more than 20 post more clearly last 20 post\n", "to answer part of your second question with .net if the post is larger than maxrequestlength part of the .net configuration but smaller than maxallowedcontentlength part of the iis configuration you can create a custom http module to get at the portion of the post that came through\n", "hence post is more secure than get\n", "here i don t like that the body of the post request contains more different fields then the body returned from the get request - but maybe this is not a problem\n", "i m able to query my database below to get the result that i want but i don t want to have to iterate through all of the author objects just the ones that have more than one post\n", "post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n", "speaking of get request types you should also know that get requests tend to perform better than post\n", "using post is more secure than get in the sense that data shown into the url in get request but not in post\n", "i m trying to get cloudinary direct uploads working on a rails app using carrierwave and accepts_nested_attributes_for to submit one or more images with a post\n", "get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n", "although post is more secure as compared to get when ssl is present\n", "here s the solution for post variables as well which is probably trickier for more users than the get solution\n", "sorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside comments\n", "another post outlines some more details on this how to get master-master replication with subversion\n", "i want to get all the users that has more than one post but\n", "get is more performant as it is idempotent and does not contain a message body where as post does\n", "but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n", "i think whoever said post is better than get when using passwords meant that the passwords would be part of the url in the get request which would obviously be bad\n", "get is more vulnerable than post as it can be transmitted and stored\n", "is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n", "also note that using post is absolutely not more secure than get because the request parameters aren t immediately visible in url\n", "get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n", "as it s widely known that an asynchronous post request is better since the user won t get a perception that the app has crashed while it s loading the long process\n", "maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n", "a post request would not provide any more safety than a get request any half-decent web debugging tool can forge post requests\n", "actually if you would like to retrieve specific task with all its details get request would be more suitable than post\n", "using get is much easier than using post for most of developers\n", "the get request is marginally less secure than the post request\n", "why everybody here is saying post is more secure than get when used over https\n", "this means the amount of data you could pass by using post verb is much more than by using a query string and a get method\n", "however note that post is not much safer than get\n", "this blog post is more detailed but unfortunately does also not mention where to get the product key\n", "get and head being much more frequent than post\n", "but a get seems more logical than a post anyway\n", "post is not better than get\n", "i just want to know if i use post method for login api then is it safer than get method\n", "post is no more secure than get over the http protocol\n", "is post safer than get\n", "you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n", "i am asked to apply to all the actions of one mvc project for security reason says post is more secure than get which i disagree with\n", "not able to get more than 100 post in single rest api call for the linkedin company updates\n", "post is also more secure than get because you aren t sticking information into a url\n", "another post outlines some more details on this how to get master-master replication with subversion\n", "this post is more to get advises and ideas rather than solving a problem\n", "post get method doesn t have the same lenght limit you can use post to send more data than with get\n", "it is said that get method is faster than post but i don t know why is it\n", "instead i m using post which isn t exactly bullet proof but still a better choice than get in this case\n", "hope you get the more clarification by this post\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n", "how to get more than 20 post from instagram using their api\n", "however i ve searched for a couple days and am not getting a definitive answer and i need a better understand of this so i know no better way to get more info than to post here\n", "characters post is more robust and secure than get\n", "param should be params and therefore your data is not being serialized which would explain why the server is rejecting your post since post requires more privileges than get presumably\n", "an initial get request to a page usually costs less than subsequent post anyway so there s not much reason to avoid it\n", "maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n", "i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n", "using post over https is better than using get and http\n", "it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n", "another reason but rather a minor one is that get is easier to exploit that post as there are more ways to trigger get request than to trigger post request\n", "this post goes into more details how to get charles proxy work with android 7 nougat\n", "as powelljf3 said post is more secure then get though it can still be gotten to\n", "on that base a get is more appropriate then a post\n", "but i believe sending data using curl with post method is better than get method\n", "post requests are no safer than restful requests which are no safer than get requests\n", "although post is more secure as compared to get when ssl is present\n", "this post goes into more details how to get charles proxy work with android 7 nougat\n", "get is slightly faster because the values are sent in the header unlike the post the values are sent in the request body in the format that the content type specifies\n", "following my comment on your original post here s some more information that will help you get through this\n", "post has worse performance than get\n", "the post get may fix the problem - get is much more lax with security than post\n", "as far as security goes post is much better than get as the data is sent behind-the-scenes rather than embedded in the url making it the typical protocol for login info\n", "is get method is better than post method if you use a form\n", "i think using post is more elegant and has more options for further development than passing them via get\n", "post is no more secure than get over the http protocol\n", "since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n", "if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n", "it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n", "i used get because is faster than post if you need it just to get a list of element for suggestions\n", "you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n", "get is a better method in this case than post\n", "gets have a size restrictions post do not or at least it s a configurable setting on the server and has a larger higher end than a get request would\n", "post is not more secure than get as it\u00e2 s also send unencrypted\n", "for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n", "i have seen other people asking the same question why get method is faster than post\n", "after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n", "last to address other answers while you should use post data when modifying something it is in no way more secure than get\n", "in my opinion the second way to achieve this is better because using get is not thats ecure in my opinion.it s easier than using post\n", "if you are curious though rather than just trusting a book or a blog post it is better to make a simple example and take it apart - you get it straight from the horse s mouth and you learn a whole lot more\n", "i ll get better with formatting and being more specific with the post\n", "you can feel like post is more secure than get all you want but it s a false premise\n", "also a post request would be better than a get if you re sending json\n", "is get method is better than post method if you use a form\n", "i was taught from him that using get requests was better than post but after reading up i would like to switch to post my only problems is i am a little unsure how to modify my code to switch over from get\n", "post is also more secure than get because you aren t sticking information into a url\n", "when post is better than get\n", "sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n", "i m trying to get deeper with post and pre incrementors but am a bit stuck with the following expression\n", "i think that in that case the put verb is more appropriate because post really means i want to create something new\n", "the client post scores and fetches highscore lists from the server and everything seemed to be working perfectly we had been testing it for a month with no problems and the code is really simple with not much more than a put get\n", "anyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put\n", "post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n", "put is designed for file uploads moreso than post which requires doing a multipart upload but then it comes down to what your server can do as to which is more convenient for you to implement\n", "anyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put\n", "to receive a file in your api i would use a put request simpler than post multipart and fetch the data from the stream php input\n", "typically you would not allow a http client to determine the uri of a new resource so a post to blog would be safer than a put to blog article-uri although http does cater for appropriate responses should the server be unable to honour the intended uri\n", "post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n", "words like arbitrary processing and neither not safe make post sounds less secure than put when there is a choice\n", "i m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one place\n", "i think that in that case the put verb is more appropriate because post really means i want to create something new\n", "more importantly in this case i think post is more appropriate than put\n", "on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n", "post is better but if you want it to be truly restful you should ensure that the uri uniquely identifies the resource and use put\n", "words like arbitrary processing and neither not safe make post sounds less secure than put when there is a choice\n", "side note it looks like you re using the post form of file upload which as the docs say is considerably more complex than put\n", "on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n", "more importantly in this case i think post is more appropriate than put\n", "side note if you are attempting to create a new customer you may want to use post instead as it may be considered more restful as put s are generally for updating an existing resource but this is up to you\n", "q1.i know that post is better than put for name-value pair parameters as the get exposes it in url and post doesn t\n", "put does not mean update any more than post means insert\n", "i m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one place\n", "http put isn t inherently any more secure than http post if you re allowing the uploaded files to be exceuted on your server\n", "if noop a put may make more sense than a post which would imply creating a second connection\n", "i think that in that case the put verb is more appropriate because post really means i want to create something new\n", "the client post scores and fetches highscore lists from the server and everything seemed to be working perfectly we had been testing it for a month with no problems and the code is really simple with not much more than a put get\n", "anyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put\n", "post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n", "put is designed for file uploads moreso than post which requires doing a multipart upload but then it comes down to what your server can do as to which is more convenient for you to implement\n", "anyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put\n", "to receive a file in your api i would use a put request simpler than post multipart and fetch the data from the stream php input\n", "typically you would not allow a http client to determine the uri of a new resource so a post to blog would be safer than a put to blog article-uri although http does cater for appropriate responses should the server be unable to honour the intended uri\n", "post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n", "words like arbitrary processing and neither not safe make post sounds less secure than put when there is a choice\n", "i m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one place\n", "i think that in that case the put verb is more appropriate because post really means i want to create something new\n", "more importantly in this case i think post is more appropriate than put\n", "on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n", "post is better but if you want it to be truly restful you should ensure that the uri uniquely identifies the resource and use put\n", "words like arbitrary processing and neither not safe make post sounds less secure than put when there is a choice\n", "side note it looks like you re using the post form of file upload which as the docs say is considerably more complex than put\n", "on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n", "more importantly in this case i think post is more appropriate than put\n", "side note if you are attempting to create a new customer you may want to use post instead as it may be considered more restful as put s are generally for updating an existing resource but this is up to you\n", "q1.i know that post is better than put for name-value pair parameters as the get exposes it in url and post doesn t\n", "put does not mean update any more than post means insert\n", "i m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one place\n", "http put isn t inherently any more secure than http post if you re allowing the uploaded files to be exceuted on your server\n", "if noop a put may make more sense than a post which would imply creating a second connection\n", "however i ve seen that object s hasownproperty is much faster than indexof\n", "however i ve seen that object s hasownproperty is much faster than indexof\n", "at times the get rate is slower than the put rate and we see messages backing up\n", "as long as the dataframe is small your assumption that the put process is faster than the get seems true we can fetch all 5 items within one loop of while not q.empty\n", "at very high speeds amazon s3 does have some recommended request rate and performance considerations but this is only when making more than 300 put list delete requests per second or more than 800 get requests per second for a particular bucket\n", "i think put and get on ignite cache would likely to be slower than native put and get on my inbuilt key value store\n", "this could mean that put is now slower than get and we have to wait\n", "from the count you will get the number of sequence and those which have more than 2 put those in a different series and then add that series in the dataframe\n", "as i am benchmarking my cluster i discover that for large file my get command is actually slower than put command\n", "when i put my loop counter variable pagessent in the watch window it gets optmized when i declare as volatile it still gets optimized but when the max value is set to 4 the loop exits properly but if max value is higher than 4 get stuck..\n", "but the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.\n", "as i am benchmarking my cluster i discover that for large file my get command is actually slower than put command\n", "at times the get rate is slower than the put rate and we see messages backing up\n", "this could mean that put is now slower than get and we have to wait\n", "i m concerned this is going to get worse as we put more tests into the specflow project\n", "i m not sure if this is the answer but states that if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n", "since most data-storage mechanisms in-ram in a database etc. get a lot slower as you put more data in them you should ensure you re only timing your http access and not looking at overall crawler throughput including storage\n", "from an interface design standpoint you want user-agents to make post and put and delete more difficult than get or at least distinctly different so that users can rely on that difference to hint when their actions might cause a change in the resource state because they are responsible for those changes\n", "now don t get me wrong regenerating the session id on login or more accurately as oswap put it on privilege level change is indeed a very good defense against session fixation\n", "this should be producing a topological sort but so far i consistently get one value less than i put in as far as number of vertices and none of the number match those i ve inputted\n", "to get your code to run more than once put it in a while loop\n", "right now i would have to say the put method is better since it works and i could not get the webservice to work\n", "but the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.\n", "if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n", "you got at least put and delete although they are used much less frequent than get and post as in hardly ever\n", "and then i saw that they put functions under transform that did much more than just get data\n", "at times the get rate is slower than the put rate and we see messages backing up\n", "as long as the dataframe is small your assumption that the put process is faster than the get seems true we can fetch all 5 items within one loop of while not q.empty\n", "at very high speeds amazon s3 does have some recommended request rate and performance considerations but this is only when making more than 300 put list delete requests per second or more than 800 get requests per second for a particular bucket\n", "i think put and get on ignite cache would likely to be slower than native put and get on my inbuilt key value store\n", "this could mean that put is now slower than get and we have to wait\n", "from the count you will get the number of sequence and those which have more than 2 put those in a different series and then add that series in the dataframe\n", "as i am benchmarking my cluster i discover that for large file my get command is actually slower than put command\n", "when i put my loop counter variable pagessent in the watch window it gets optmized when i declare as volatile it still gets optimized but when the max value is set to 4 the loop exits properly but if max value is higher than 4 get stuck..\n", "but the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.\n", "as i am benchmarking my cluster i discover that for large file my get command is actually slower than put command\n", "at times the get rate is slower than the put rate and we see messages backing up\n", "this could mean that put is now slower than get and we have to wait\n", "i m concerned this is going to get worse as we put more tests into the specflow project\n", "i m not sure if this is the answer but states that if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n", "since most data-storage mechanisms in-ram in a database etc. get a lot slower as you put more data in them you should ensure you re only timing your http access and not looking at overall crawler throughput including storage\n", "from an interface design standpoint you want user-agents to make post and put and delete more difficult than get or at least distinctly different so that users can rely on that difference to hint when their actions might cause a change in the resource state because they are responsible for those changes\n", "now don t get me wrong regenerating the session id on login or more accurately as oswap put it on privilege level change is indeed a very good defense against session fixation\n", "this should be producing a topological sort but so far i consistently get one value less than i put in as far as number of vertices and none of the number match those i ve inputted\n", "to get your code to run more than once put it in a while loop\n", "right now i would have to say the put method is better since it works and i could not get the webservice to work\n", "but the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.\n", "if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n", "you got at least put and delete although they are used much less frequent than get and post as in hardly ever\n", "and then i saw that they put functions under transform that did much more than just get data\n", "not sure about the overhead of calling gethashcode a few million times but comparing two ints is probably going to be a lot quicker than the equals object method\n", "equals on the other hand can test accross a larger number of fields - ie its test is more specific than gethashcode comparisons\n", "gethashcode should be a lot quicker than equals but doesn t need to be unique\n", "override both methods but make gethashcode more tolerant than equals that means make unequal objects have the same hash code and not the opposite\n", "even though gethashcode itself should be fast it s not mostly faster than equivalent equals\n", "in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n", "1 is comparison via gethashcode check if the hashcode of both objects are the same faster than equals\n", "in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n", "if you do not implement gethashcode union will call equals which will work but is slower than gethashcode\n", "and that is for performance reasons assuming that a gethashcode implementation should always be much faster than an equals implementation\n", "in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n", "not sure about the overhead of calling gethashcode a few million times but comparing two ints is probably going to be a lot quicker than the equals object method\n", "equals on the other hand can test accross a larger number of fields - ie its test is more specific than gethashcode comparisons\n", "gethashcode should be a lot quicker than equals but doesn t need to be unique\n", "override both methods but make gethashcode more tolerant than equals that means make unequal objects have the same hash code and not the opposite\n", "even though gethashcode itself should be fast it s not mostly faster than equivalent equals\n", "in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n", "1 is comparison via gethashcode check if the hashcode of both objects are the same faster than equals\n", "in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n", "if you do not implement gethashcode union will call equals which will work but is slower than gethashcode\n", "and that is for performance reasons assuming that a gethashcode implementation should always be much faster than an equals implementation\n", "in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n", "implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n", "implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n", "implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n", "implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n", "4 some email providers might mark that email as spam however most spam checks are based on spf and dkim checks more than email existence checks\n", "4 some email providers might mark that email as spam however most spam checks are based on spf and dkim checks more than email existence checks\n", "once the podcasts are on my computer i can select to put only the ten most recent unlistened to synch to my iphone but what if i want to only download the ten most recent -- the question is how do i do less than get all but more than selecting a single one or two episodes of a particular podcast\n", "once the podcasts are on my computer i can select to put only the ten most recent unlistened to synch to my iphone but what if i want to only download the ten most recent -- the question is how do i do less than get all but more than selecting a single one or two episodes of a particular podcast\n"], "class": ["the uibezierpath class seems easier to use so how could i get that drawing in a uiimage\n", "the uibezierpath class seems easier to use so how could i get that drawing in a uiimage\n", "i am writing an app based on uitabbarcontroller which has more than 10 viewcontrollers with corresponding uinavigationcontroller\n", "i am writing an app based on uitabbarcontroller which has more than 10 viewcontrollers with corresponding uinavigationcontroller\n", "i have tried connecting the qscrollbars but the maximum of the qplaintextedit is smaller than the qtextedit s\n", "if you want to display your file as plain text the widget qplaintextedit is better then qtextedit\n", "if you want to display your file as plain text the widget qplaintextedit is better then qtextedit\n", "instead of using a uitableview in this instance perhaps you might consider using a uicollectionview - they are built for something like you describe more than a uitableview\n", "on second thoughts in your case uicollectionview is surely a better candidate than uitableview\n", "finally you might want to look into uicollectionview which provides a lot more visual flexibility than uitableview and can be seen as a sort of generalization of the latter\n", "uicollectionview is more generic than uitableview and you can custom almost thing on it\n", "uicollectionview is more generic than uitableview and you can custom almost thing on it\n", "instead of using a uitableview in this instance perhaps you might consider using a uicollectionview - they are built for something like you describe more than a uitableview\n", "on second thoughts in your case uicollectionview is surely a better candidate than uitableview\n", "finally you might want to look into uicollectionview which provides a lot more visual flexibility than uitableview and can be seen as a sort of generalization of the latter\n", "uicollectionview is more generic than uitableview and you can custom almost thing on it\n", "uicollectionview is more generic than uitableview and you can custom almost thing on it\n", "i m not sure httpmodule is still better then httphandler\n", "you can have only one httphandler but can plug in more than one httpmodule to examine and handle the requests\n", "i m not sure httpmodule is still better then httphandler\n", "i m not sure httpmodule is still better then httphandler\n", "you can have only one httphandler but can plug in more than one httpmodule to examine and handle the requests\n", "i m not sure httpmodule is still better then httphandler\n", "making abstract-class before i had more than one subclass in mind for them\n", "making abstract-class before i had more than one subclass in mind for them\n", "it is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswap\n", "it is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswap\n", "but i ve had difficulty implementing this it seems as though nsprogress is meant more for long operations that execute all their code on one background thread but have separate sections that make it easy to determine when progress has been made if this is the case then the use of the term suboperation is a bit misleading as it brings to mind the use of nested nsoperation\n", "the qtablewidget is slightly easier to implement than the qtableview which also needs a qtablemodel as backend but it has less capabilities\n", "the qtablewidget is slightly easier to implement than the qtableview which also needs a qtablemodel as backend but it has less capabilities\n", "printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n", "printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n", "i m not sure if printwriter or filewriter is better but printwriter worked for me\n", "printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n", "printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n", "i m not sure if printwriter or filewriter is better but printwriter worked for me\n", "see the referred post for an example that reads a single file in parallel with fileinputstream which should be significantly faster than using bufferedreader according to these benchmarks\n", "see the referred post for an example that reads a single file in parallel with fileinputstream which should be significantly faster than using bufferedreader according to these benchmarks\n", "the nstextview process is much simpler as you only need to attach the nstextstorage object\n", "my observation is that you get the webpage title using webchromeclient in lesser time than using webviewclient\n", "to sum up the webchromeclient is easier to use but the webviewclient allows you more configuration\n", "construct java.util.calendar is comparative slower than java.util.date\n", "construct java.util.calendar is comparative slower than java.util.date\n", "cfstring has some slightly better functionality than nsstring but is a bit harder to use\n", "nsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable object\n", "nsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable object\n", "nsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable object\n", "nsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable object\n", "my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n", "my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n", "my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n", "my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n", "actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n", "actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n", "i d like to use mediacodec to encode the data coming from the camera reason it s more low-level so hopefully faster than using mediarecorder\n", "android 5.0 api 21 allows surface input to mediarecorder which is often much more convenient than mediacodec\n", "i d like to use mediacodec to encode the data coming from the camera reason it s more low-level so hopefully faster than using mediarecorder\n", "android 5.0 api 21 allows surface input to mediarecorder which is often much more convenient than mediacodec\n", "in ios 5.0 and later you can use clgeocoder of core location framework as for ios lower than 5.0 mkreversegeocoder of map kit framework\n", "if your exchange data between 2 widget i suggest to use qtreewidget more than qtreeview because data in qtreewidget can edit dynamic data row and value\n", "if your exchange data between 2 widget i suggest to use qtreewidget more than qtreeview because data in qtreewidget can edit dynamic data row and value\n", "this relates to another question i asked a while back at size of qt containers is qmap much larger than qlist\n", "alarmmanager should also be more efficient than timertask\n", "hence the alarmmanager which runs much better than a java timertask thingy\n", "alarmmanager consumes lesser battery power than timertask or thread\n", "alarmmanager consumes lesser battery power than timertask or thread\n", "alarmmanager should also be more efficient than timertask\n", "hence the alarmmanager which runs much better than a java timertask thingy\n", "alarmmanager consumes lesser battery power than timertask or thread\n", "alarmmanager consumes lesser battery power than timertask or thread\n", "the uinavigationcontroller class seems to handle better rotations than uiviewcontroller\n", "the uinavigationcontroller is more of a behind-the-scenes organizer for holding and displaying other uiviewcontroller s\n", "the framespace for the uiviewcontroller becomes smaller because uinavigationcontroller manipulates the view by adding a uinavigationbar which is 44.0f in size\n", "the app uses a uinavigationcontroller that never has more than 1 uiviewcontroller on it s stack\n", "the uinavigationcontroller class seems to handle better rotations than uiviewcontroller\n", "the uinavigationcontroller is more of a behind-the-scenes organizer for holding and displaying other uiviewcontroller s\n", "the framespace for the uiviewcontroller becomes smaller because uinavigationcontroller manipulates the view by adding a uinavigationbar which is 44.0f in size\n", "the app uses a uinavigationcontroller that never has more than 1 uiviewcontroller on it s stack\n", "however the qwidget gauge1 is always bigger than the other one.i want to use a qgridlayout because the application has to work on different sizes of a screen\n", "the roundabout method i ve employed is to create additional columns with a regular countif and counta formulae - in other words i count the number of countries a named has visited more than x times countif and then use the counta to sum the number of named in that column who have visited x times\n", "do need implementation of qabstractitemmodel that can be more useful than qstandarditemmodel\n", "in my app i have a rootpageviewcontroller which contains the uipageviewcontroller and one or more detailpageviewcontroller with a uitableview as a childview\n", "in my app i have a rootpageviewcontroller which contains the uipageviewcontroller and one or more detailpageviewcontroller with a uitableview as a childview\n", "so if using std ostream is more limiting than std basic_ostream\n", "so if using std ostream is more limiting than std basic_ostream\n", "qwindow is more low level than qwidget\n", "qwindow is more low level than qwidget\n", "qwindow is more low level than qwidget\n", "however i wish to use a custom calayer that uses an internal cggradient for drawing instead as this should produce smoother results than cagradientlayer see here\n", "however i wish to use a custom calayer that uses an internal cggradient for drawing instead as this should produce smoother results than cagradientlayer see here\n", "if you want to use a continuous gesture that tracks the user s finger you can use uipangesturerecognizer rather than uiswipegesturerecognizer and i think animatewithduration is better than catransition in that case\n", "qtoolbutton is much more complex under the hood than qpushbutton\n", "qtoolbutton is much more complex under the hood than qpushbutton\n", "qtoolbutton has smaller default internal margins than qpushbutton\n", "qtoolbutton has smaller default internal margins than qpushbutton\n", "atof is indeed better in reading floating point values than istream\n", "update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n", "to get the html instead of hardcoding it as above use the webclient class since it has a simplier api than webrequest\n", "webclient is sometimes easier to use than webrequest\n", "a webclient is much easier than a webrequest\n", "update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n", "webrequest just offers you more functonality than webclient\n", "webrequest just offers you more functonality than webclient\n", "a webclient is much easier than a webrequest\n", "webclient is a shorter and more concise syntax but behind the scenes it uses a webrequest so in terms of performance it won t be faster it will be equivalent\n", "webrequest just offers you more functonality than webclient\n", "webclient is simpler to use than webrequest\n", "update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n", "to get the html instead of hardcoding it as above use the webclient class since it has a simplier api than webrequest\n", "webclient is sometimes easier to use than webrequest\n", "a webclient is much easier than a webrequest\n", "update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n", "webrequest just offers you more functonality than webclient\n", "webrequest just offers you more functonality than webclient\n", "a webclient is much easier than a webrequest\n", "webclient is a shorter and more concise syntax but behind the scenes it uses a webrequest so in terms of performance it won t be faster it will be equivalent\n", "webrequest just offers you more functonality than webclient\n", "webclient is simpler to use than webrequest\n", "i have a uitabbarcontroller with more than 5 uitabbaritem so the morenavigationcontroller is available\n", "i have a uitabbarcontroller with more than 5 uitabbaritem so the morenavigationcontroller is available\n", "the first thought is that you could build a uiview showing image and text then attach a uitapgesturerecognizer to it which would be more flexible than uibutton\n", "the first thought is that you could build a uiview showing image and text then attach a uitapgesturerecognizer to it which would be more flexible than uibutton\n", "generaly qgraphicsscene better using with connection qgraphicsview\n", "by default when you scale a qgraphicsscene larger than the qgraphicsview in which it is displayed it will show the necessary scroll bars\n", "if i set a pixmap to a qgraphicsscene that is larger that the window it will add scrollbars so is it possible to get what is displayed in the qgraphicsview\n", "generaly qgraphicsscene better using with connection qgraphicsview\n", "by default when you scale a qgraphicsscene larger than the qgraphicsview in which it is displayed it will show the necessary scroll bars\n", "if i set a pixmap to a qgraphicsscene that is larger that the window it will add scrollbars so is it possible to get what is displayed in the qgraphicsview\n", "unfortunately the sample apps are not based on uimanageddocument or nspersistentdocument but if you look at the way they handle backup files you could probably use that approach to create a document based app with less hassle than using uimanageddocument\n", "instead of working around the 1 label and image you get in a uibutton it s cleaner to start from scratch with a uicontrol and create your tiles\n", "a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n", "sounds like you want to use some of the inherited uicontrol methods such as sendaction to forevent this offers even finer control than with uibutton\n", "a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n", "instead of working around the 1 label and image you get in a uibutton it s cleaner to start from scratch with a uicontrol and create your tiles\n", "a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n", "sounds like you want to use some of the inherited uicontrol methods such as sendaction to forevent this offers even finer control than with uibutton\n", "a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n", "change the contentsize of your scrollview.your uiview size and uiscrollview size is same if the uiscrollview contentsize is more than its subviews size then scroll will happen change the line overviewscroll setcontentsize cgsizemake screenframe.size.width screenframe.size.height-25\n", "though earlier uiview and uiscrollview have the same area after keyboard shown the blue uiview becomes smaller but its subviews button text fields is outside its area\n", "do i just create a new uiview that is 4px larger than the selected object and and make the selected view a subviews of it\n", "the issue is that once the alpha of the uiview is less than 1.0 i can see all the subviews sides and the one that gets me the most is the outline of an uiimageview can be seen that would otherwise not as it is the same colour as the uiview\n", "when using embed in - uiview the new view will be a bit bigger than the subviews\n", "i want to add a uiview of smaller frame as subviews to parental view but i am not getting the needed\n", "of course uiscrollview can have more than one content view just as any uiview can have more than one subviews and this case it will be more difficult to render its layer\n", "the subviews version is definitely faster since having the controls loose on the uiview took more like 2 seconds to update\n", "because the uiview is smaller it is going to crop out the larger subviews\n", "you are seeing a noticeable jump in interface response because subviews do in fact consume quite a bit of memory uiview are very expensive compared to their underlying calayers and as such calling -removesubview not only unloads stress from the gpu but also frees up more memory as the subviews is usually released afterwards\n", "the uiview is taller than the screen so in ib i pulled it out of the scroll view so i could see it all but i never moved it back to being a subviews of the scroll view\n", "change the contentsize of your scrollview.your uiview size and uiscrollview size is same if the uiscrollview contentsize is more than its subviews size then scroll will happen change the line overviewscroll setcontentsize cgsizemake screenframe.size.width screenframe.size.height-25\n", "though earlier uiview and uiscrollview have the same area after keyboard shown the blue uiview becomes smaller but its subviews button text fields is outside its area\n", "do i just create a new uiview that is 4px larger than the selected object and and make the selected view a subviews of it\n", "the issue is that once the alpha of the uiview is less than 1.0 i can see all the subviews sides and the one that gets me the most is the outline of an uiimageview can be seen that would otherwise not as it is the same colour as the uiview\n", "when using embed in - uiview the new view will be a bit bigger than the subviews\n", "i want to add a uiview of smaller frame as subviews to parental view but i am not getting the needed\n", "of course uiscrollview can have more than one content view just as any uiview can have more than one subviews and this case it will be more difficult to render its layer\n", "the subviews version is definitely faster since having the controls loose on the uiview took more like 2 seconds to update\n", "because the uiview is smaller it is going to crop out the larger subviews\n", "you are seeing a noticeable jump in interface response because subviews do in fact consume quite a bit of memory uiview are very expensive compared to their underlying calayers and as such calling -removesubview not only unloads stress from the gpu but also frees up more memory as the subviews is usually released afterwards\n", "the uiview is taller than the screen so in ib i pulled it out of the scroll view so i could see it all but i never moved it back to being a subviews of the scroll view\n", "this is better than using a second view a bit larger as a calayer is lighter than a uiview and you don t have do modify the frame of myview which is good for instance if myview is a uiimageview\n", "i noticed calayer had worse performance than uiview\n", "i am using calayer s because as suggested in documentation calayer s are lighter than uiview and i have hundreds of them\n", "a uiview is no more than a fancy wrapper for a calayer \u00e2 bringing uiresponder events animation conveniences among many other things\n", "is calayer better than uiview in terms of performance\n", "i want to add a calayer inside an uiview and this calayer will be smaller than the uiview\n", "in fact each uiview has even more than 1 corresponding calayer\n", "does that mean the the view controller has multiple uiview or that the uiview has more than one calayer\n", "a uiview is no more than a wrapper for an underlying calayer\n", "this is better than using a second view a bit larger as a calayer is lighter than a uiview and you don t have do modify the frame of myview which is good for instance if myview is a uiimageview\n", "i noticed calayer had worse performance than uiview\n", "i am using calayer s because as suggested in documentation calayer s are lighter than uiview and i have hundreds of them\n", "a uiview is no more than a fancy wrapper for a calayer \u00e2 bringing uiresponder events animation conveniences among many other things\n", "is calayer better than uiview in terms of performance\n", "i want to add a calayer inside an uiview and this calayer will be smaller than the uiview\n", "in fact each uiview has even more than 1 corresponding calayer\n", "does that mean the the view controller has multiple uiview or that the uiview has more than one calayer\n", "a uiview is no more than a wrapper for an underlying calayer\n", "with explicit superclass calling your subclassing can accept more or fewer arguments than its superclass and can decide itself what to pass when calling the superclass\n", "for my understanding the superclass is always smaller less complex then the subclassing\n", "for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n", "if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n", "in other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effect\n", "a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n", "you can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t have\n", "this breaks the inherited and the subclassing is no longer an instance of the superclass\n", "even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n", "however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n", "in this case superclass is bigger than subclassing that s why the second statement is correct\n", "2 since superclass is smaller than subclassing one should use memory object carefully\n", "if you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassing\n", "these relations naturally arise when you impose restrictions on what you can handle--then if a subclassing means that the method can handle less acts as a superclass of since can handle everything that the subclassing can handle and more\n", "watch out you can t query a superclass if you have more than 1 subclassing then something like in jql\n", "the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n", "even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n", "for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n", "so i inspected the compiled firebasemessagingservice which was the subclassing of com.google.firebase.iid.zzb and had zzae intent method as private but its subclassing firebasemessagingservice had protected access i know that subclassing cannot have weaker reference than its superclass so i guess there is something wrong with firebasemessagingservice library\n", "here having a superclass makes more sense or at least having a realnumber subclassing of number\n", "here having a superclass makes more sense or at least having a realnumber subclassing of number\n", "still you cannot inherited from a as superclass cannot have a lower visibility than subclassing\n", "subclassing must allow more than the superclass not less and going from an argument being optional to not optional is allowing less\n", "a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n", "for my understanding the superclass is always smaller less complex then the subclassing\n", "shouldn t a subclassing interfaced be able to take in more than the superclass interfacec and use the same method\n", "take note of this there is no way to subclassing more than one superclass at a time\n", "the subclassing overridden method cannot have weaker access than superclass method\n", "the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n", "however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n", "if we are creating an object of a subclassing and invoking the method of superclass and if subclassing extends more than one class which superclass method should be called\n", "in enhanced er modelling subclassing inheriting from more than 1 superclass is called multiple inherited\n", "so what this says is that provided your subclassing doesn t have any more values than the superclass used to determine ordering implementing is reasonable\n", "the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n", "you cannot have a subclassing with less methods than a superclass\n", "hence your subclassing is accepting less classes than the superclass contract promises\n", "the general problem is that the subclassing is more specific than the superclass\n", "superclass defines more general features of the objects of its subclassing\n", "if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n", "if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n", "if you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassing\n", "hence your subclassing is accepting less classes than the superclass contract promises\n", "however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n", "however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n", "superclass defines more general features of the objects of its subclassing\n", "in other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effect\n", "the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n", "if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n", "the general problem is that the subclassing is more specific than the superclass\n", "yes but if you think of your diagram as a topographic map the subclassing have higher altitudes than the superclass\n", "with explicit superclass calling your subclassing can accept more or fewer arguments than its superclass and can decide itself what to pass when calling the superclass\n", "for my understanding the superclass is always smaller less complex then the subclassing\n", "for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n", "if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n", "in other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effect\n", "a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n", "you can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t have\n", "this breaks the inherited and the subclassing is no longer an instance of the superclass\n", "even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n", "however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n", "in this case superclass is bigger than subclassing that s why the second statement is correct\n", "2 since superclass is smaller than subclassing one should use memory object carefully\n", "if you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassing\n", "these relations naturally arise when you impose restrictions on what you can handle--then if a subclassing means that the method can handle less acts as a superclass of since can handle everything that the subclassing can handle and more\n", "watch out you can t query a superclass if you have more than 1 subclassing then something like in jql\n", "the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n", "even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n", "for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n", "so i inspected the compiled firebasemessagingservice which was the subclassing of com.google.firebase.iid.zzb and had zzae intent method as private but its subclassing firebasemessagingservice had protected access i know that subclassing cannot have weaker reference than its superclass so i guess there is something wrong with firebasemessagingservice library\n", "here having a superclass makes more sense or at least having a realnumber subclassing of number\n", "here having a superclass makes more sense or at least having a realnumber subclassing of number\n", "still you cannot inherited from a as superclass cannot have a lower visibility than subclassing\n", "subclassing must allow more than the superclass not less and going from an argument being optional to not optional is allowing less\n", "a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n", "for my understanding the superclass is always smaller less complex then the subclassing\n", "shouldn t a subclassing interfaced be able to take in more than the superclass interfacec and use the same method\n", "take note of this there is no way to subclassing more than one superclass at a time\n", "the subclassing overridden method cannot have weaker access than superclass method\n", "the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n", "however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n", "if we are creating an object of a subclassing and invoking the method of superclass and if subclassing extends more than one class which superclass method should be called\n", "in enhanced er modelling subclassing inheriting from more than 1 superclass is called multiple inherited\n", "so what this says is that provided your subclassing doesn t have any more values than the superclass used to determine ordering implementing is reasonable\n", "the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n", "you cannot have a subclassing with less methods than a superclass\n", "hence your subclassing is accepting less classes than the superclass contract promises\n", "the general problem is that the subclassing is more specific than the superclass\n", "superclass defines more general features of the objects of its subclassing\n", "if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n", "if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n", "if you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassing\n", "hence your subclassing is accepting less classes than the superclass contract promises\n", "however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n", "however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n", "superclass defines more general features of the objects of its subclassing\n", "in other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effect\n", "the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n", "if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n", "the general problem is that the subclassing is more specific than the superclass\n", "yes but if you think of your diagram as a topographic map the subclassing have higher altitudes than the superclass\n", "note the use of std getline is safer and more convenient than std istream getline\n", "uiview animation is generally easier and more intuitive to use than caanimation\n", "uiview animation is generally easier and more intuitive to use than caanimation\n", "i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n", "i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n", "my problem is uitextview is more complicated than uilabel\n", "i think the problem happened because the padding left right of uitextview is bigger than uilabel\n", "my problem is uitextview is more complicated than uilabel\n", "also consider using uilabel instead of uitextview if you don t need to edit information inside since uitextview take longer to allocate and init and are generally slower than uilabel\n", "i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n", "i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n", "my problem is uitextview is more complicated than uilabel\n", "i think the problem happened because the padding left right of uitextview is bigger than uilabel\n", "my problem is uitextview is more complicated than uilabel\n", "also consider using uilabel instead of uitextview if you don t need to edit information inside since uitextview take longer to allocate and init and are generally slower than uilabel\n", "uitableview is much more customizable than uipickerview\n", "the uipickerview is nothing more than a uiview with one or more uitableview and background and selector views\n", "uitableview is much more customizable than uipickerview\n", "uitableview is much more customizable than uipickerview\n", "uitableview is much more customizable than uipickerview\n", "the uipickerview is nothing more than a uiview with one or more uitableview and background and selector views\n", "uitableview is much more customizable than uipickerview\n", "uitableview is much more customizable than uipickerview\n", "a qfile may be used by itself or more conveniently with a qtextstream or qdatastream\n", "this class leverages audiorecord which is a lower level approach to using mediarecorder\n", "this class leverages audiorecord which is a lower level approach to using mediarecorder\n", "this class leverages audiorecord which is a lower level approach to using mediarecorder\n", "this class leverages audiorecord which is a lower level approach to using mediarecorder\n", "webclient is easier but httpwebrequest is more powerful and allows for more control\n", "so simply httpwebrequest is better option then webclient\n", "using webclient is potentially slightly on the order of a few milliseconds slower than using httpwebrequest directly\n", "you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n", "because webclient is higher class of httpwebrequest and its slower\n", "webclient has a much simpler interface than httpwebrequest and takes care of reading and writing from the streams for you\n", "also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest\n", "so simply httpwebrequest is better option then webclient\n", "also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest\n", "i d rather use webclient because it requires less code than httpwebrequest httpwebresponse\n", "httpwebresponse and httpwebrequest are a little bit lower level than webclient\n", "because webclient is higher class of httpwebrequest and its slower\n", "you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n", "webclient is easier but httpwebrequest is more powerful and allows for more control\n", "so simply httpwebrequest is better option then webclient\n", "using webclient is potentially slightly on the order of a few milliseconds slower than using httpwebrequest directly\n", "you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n", "because webclient is higher class of httpwebrequest and its slower\n", "webclient has a much simpler interface than httpwebrequest and takes care of reading and writing from the streams for you\n", "also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest\n", "so simply httpwebrequest is better option then webclient\n", "also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest\n", "i d rather use webclient because it requires less code than httpwebrequest httpwebresponse\n", "httpwebresponse and httpwebrequest are a little bit lower level than webclient\n", "because webclient is higher class of httpwebrequest and its slower\n", "you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n", "printwriter is a richer api compared to bufferedwriter\n", "i like to use bufferedwriter more than printwriter and its working with the bufferedwriter\n", "printwriter is a richer api compared to bufferedwriter\n", "printwriter is a richer api compared to bufferedwriter\n", "i like to use bufferedwriter more than printwriter and its working with the bufferedwriter\n", "printwriter is a richer api compared to bufferedwriter\n", "uiview is more generic than uiwindow and should be preferred\n", "uiview is more generic than uiwindow and should be preferred\n", "uiview is more generic than uiwindow and should be preferred\n", "uiview is more generic than uiwindow and should be preferred\n", "i believe the reasoning behind it is that it allows the parameters to be named nicer by preventing shadowing of member variables\n", "when you re not worrying about shadowing this is more flexible if the named of the object changes\n", "when you re not worrying about shadowing this is more flexible if the named of the object changes\n", "not using the same named is a more common practice to avoid confusion and shadowing\n", "not using the same named is a more common practice to avoid confusion and shadowing\n", "mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n", "mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n", "mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n", "mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n", "for a few bytes passed in just one call probably the bufferedwriter is even worse because it problably later calls fileoutputstream\n", "for a few bytes passed in just one call probably the bufferedwriter is even worse because it problably later calls fileoutputstream\n", "it s not my experience that nsurlsession is any slower than nsurlconnection is\n", "nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n", "nsurlsession is much more powerful tool than nsurlconnection\n", "nsurlsession is much more powerful tool than nsurlconnection\n", "nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n", "nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n", "nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n", "nsurlsession is newer than nsurlconnection if you are using swift language then you can use your own custom methods by using nsurlsession or you can use alamofire\n", "nsurlsession is much more powerful tool than nsurlconnection\n", "posting here an example showing how to implement same approach but now applied to qtreewidget which a bit more involved than qlistwidget\n", "posting here an example showing how to implement same approach but now applied to qtreewidget which a bit more involved than qlistwidget\n", "i ve read that painting to a qwidget is sometimes faster than qgraphicsview but it would by a lot of extra work for the mouse handling i think\n", "i ve read that painting to a qwidget is sometimes faster than qgraphicsview but it would by a lot of extra work for the mouse handling i think\n", "i ve read that painting to a qwidget is sometimes faster than qgraphicsview but it would by a lot of extra work for the mouse handling i think\n", "i ve read that painting to a qwidget is sometimes faster than qgraphicsview but it would by a lot of extra work for the mouse handling i think\n", "building on the previous good answers stringwriter is actually much more versatile than stringbuilder providing lots of overloads\n", "but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy\n", "inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick\n", "since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept\n", "i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties\n", "inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick\n", "with inherited this is less likely to happen due the contractual nature of subclassing abstract classes\n", "i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties\n", "similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it\n", "if a subclassing needs more information than the standard parameters which came up for us you have the option of a second parameters class type that you use as a second parameter but then you have two types of constructors in the tree or using inherited in the parameters class hierarchy\n", "with inherited this is less likely to happen due the contractual nature of subclassing abstract classes\n", "similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it\n", "depending on how your application is structured this means you may want to have your own base class implementing iresource which creates your custom not found resource for all of its subclassing or better make a wrapper since composition is better than inherited\n", "with subclassing is trickier because any private members of a class are not inherited by the subclassing but protected and public are\n", "but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy\n", "if a subclassing needs more information than the standard parameters which came up for us you have the option of a second parameters class type that you use as a second parameter but then you have two types of constructors in the tree or using inherited in the parameters class hierarchy\n", "since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept\n", "but the problem i am facing if text is doted inside the label it calculates nsstring size less than uilabel size in the below code\n", "but the problem i am facing if text is doted inside the label it calculates nsstring size less than uilabel size in the below code\n", "i don t see any reason why filechannel could be any faster than fileoutputstream in this case\n", "finally consider that you can have more than one qthread as well as more than one qobject running on a qthread\n", "finally consider that you can have more than one qthread as well as more than one qobject running on a qthread\n", "secondviewcontroller which is a subclass of firstviewcontroller also has a uilabel but has one more uibutton\n", "if the uilabel is larger it will then wrap around the uibutton to the next line\n", "secondviewcontroller which is a subclass of firstviewcontroller also has a uilabel but has one more uibutton\n", "if the uilabel is larger it will then wrap around the uibutton to the next line\n", "on ideone the ostringstream is about 3 times slower than std copy + back_inserter + std vector and about 15 times slower than memcpy into a raw buffer\n", "at first i tried reading the original pdf with a fileinputstream and finding the signature hex strings to split it into smaller files with a fileoutputstream as i have done with jpgs\n", "at first i tried reading the original pdf with a fileinputstream and finding the signature hex strings to split it into smaller files with a fileoutputstream as i have done with jpgs\n", "i added the check for uitapgesturerecognizer in case your class handles more than 1 uigesturerecognizer s and you only want to remove that\n", "i added the check for uitapgesturerecognizer in case your class handles more than 1 uigesturerecognizer s and you only want to remove that\n", "for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n", "for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n", "for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n", "for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n", "stringtokenizer is faster than stringbuilder\n", "stringtokenizer is faster than stringbuilder\n", "the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n", "the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n", "the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n", "the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n", "i don t see any form properties in the code you posted so either the posted code has been modified or the properties is higher in the inherited tree simpleformcontroller\n", "now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway\n", "inherited is more of an is-a relationship for example a usermodel is-a model thus all properties and methods of a model will be part of a usermodel\n", "less is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations also\n", "counter1 can be used with instanceof and inherited but is more verbose and doesn t have real private properties eg count properties is exposed\n", "now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway\n", "potentially you are trying to model something in inherited that is better suited for composition or your base class should be taking in an object instead of individual related properties if the properties aren t related then perhaps your base class is doing too much single responsibility principle\n", "counter1 can be used with instanceof and inherited but is more verbose and doesn t have real private properties eg count properties is exposed\n", "using dedicated methods for getting and setting properties is also more clear in inherited\n", "however i could not find it the documentation so it may inherited more than properties\n", "less is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations also\n", "this should handle all cases of setting the properties makes them easier to implement in your inherited classes and cleans things up\n", "multiple inherited makes it easier to compose classes from small mixin base classes that implement functionality and have properties to remember state\n", "if you need a globally accessible variable or properties that s more suited to a base class that your classes inherited from\n", "using dedicated methods for getting and setting properties is also more clear in inherited\n", "since the paddle object has properties that are shared by both player and enemy composition is a better choice than inherited\n", "qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n", "qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n", "qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n", "qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n", "textureview will display opengl-es rendering but is much more flexible than glsurfaceview and will follow the normal layout hierarchy in android which allows views to be moved on the display\n", "unless you know exactly what you are doing do not use the same layoutparams for more than one viewgroup\n", "unless you know exactly what you are doing do not use the same layoutparams for more than one viewgroup\n", "i need show files from qfilesystemmodel in qtreeview and customize that tree to show one more column with qcheckbox so user can pick 0..n files from that qtreeview\n", "if the size of the qlist s element type is greater than the pointer s size qlist performs better than qvector because it doesn t store the objects sequentially but stores sequentially pointers to heap copies\n", "if it stores it as pointers on the heap won t qlist be much worse off than qvector\n", "qlist code is generally less optimized than qvector one\n", "qlist code is generally less optimized than qvector one\n", "qvector will usually give better performance than qlist because qvector always stores its items sequentially in memory where qlist will allocate its items on the heap unless sizeof t sizeof void and t has been declared to be either a q_movable_type or a q_primitive_type using q_declare_typeinfo\n", "qvector is better than qlist in this case because it s easy to resize it\n", "size qlist performs better than qvector because it doesn t store the\n", "well obviously you created an implementation qabstracttablemodel which has a little bit more specialized interface than qabstractitemmodel\n", "the ardalahmet solution is not the right one if you need different backgrounds for each uinavigationbar when you have more than one uinavigationcontroller such as in a uitabbar because it using uinavigationbar categories\n", "the ardalahmet solution is not the right one if you need different backgrounds for each uinavigationbar when you have more than one uinavigationcontroller such as in a uitabbar because it using uinavigationbar categories\n", "i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n", "tcpdf was always slower than fpdf\n", "somewhat good news you could move to tcpdf which is much better at handling utf8 and is more modern in general than fpdf\n", "if anyone has some information on this problem i d really appreciate it - either things you did to make tcpdf faster or just confirmation that it runs slower than fpdf so i can forget about it and just stick with fpdf\n", "i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n", "i ve used tcpdf in the past and found it a lot better than fpdf\n", "i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n", "tcpdf was always slower than fpdf\n", "somewhat good news you could move to tcpdf which is much better at handling utf8 and is more modern in general than fpdf\n", "if anyone has some information on this problem i d really appreciate it - either things you did to make tcpdf faster or just confirmation that it runs slower than fpdf so i can forget about it and just stick with fpdf\n", "i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n", "i ve used tcpdf in the past and found it a lot better than fpdf\n", "i was originally using nsscanner because it was easier than nsnumberformatter to use but i ran into the same problem it doesn t parse the entire string just the first number in the string\n", "but in your case alertview is displayed above alertcontroller ie why it feels like uialertview is whitier than uialertcontroller\n", "however take some time to consider how you re currently using uialertview and whether you are able to give ios 8 users a better experience by supporting uialertcontroller\n", "but in your case alertview is displayed above alertcontroller ie why it feels like uialertview is whitier than uialertcontroller\n", "however take some time to consider how you re currently using uialertview and whether you are able to give ios 8 users a better experience by supporting uialertcontroller\n", "qtreeview is known for being slower than a qtableview and consume a lot of memory and you are using a plain table model anyways so try with a qtableview\n", "qtreeview is known for being slower than a qtableview and consume a lot of memory and you are using a plain table model anyways so try with a qtableview\n", "you need to create a fileoutputstream and decorates it with printstream or better filewriter with printwriter\n", "you need to create a fileoutputstream and decorates it with printstream or better filewriter with printwriter\n", "the uiview class methods are convenience methods for common animations but are more limited than catransition\n", "it means a declared properties is more than a pair of accessor methods getter setter\n", "that suggests another aspect where a declared properties is more than a pair of accessor methods that is more static type checking although it is undesirable here\n", "edit as willeke has pointed out accessing a properties directly is technically faster than doing so via an accessor via self\n", "a properties is nothing more than syntactic shorthand for a get set accessor\n", "aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n", "aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n", "aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n", "aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n", "you can use a bezier path either in a custom uiview w drawrect or easier with a cashapelayer whose curvature can be controlled via its control points\n", "you can use a bezier path either in a custom uiview w drawrect or easier with a cashapelayer whose curvature can be controlled via its control points\n", "it seems like if the uiimage is slightly larger the ciimage is double the size whereas if the uiimage is slightly smaller this isn t the case\n", "it seems like if the uiimage is slightly larger the ciimage is double the size whereas if the uiimage is slightly smaller this isn t the case\n", "dbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex features\n", "if adding 2000 entities and saving the changes at the end dbcontext is 3 to 5 times slower than objectcontext btw. i know that adding a large amount of entities would be better using sqlbulkcopy but that s not the point\n", "it is a feature it is about objectcontext api but the same is true or worse with dbcontext api\n", "i used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.\n", "you just need to connect using the entity framework driver and if you develop in any of technologies that uses dbcontext includes code first model first and data base first but is lighter than objectcontext you can use the list below\n", "dbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex features\n", "besides the dbcontext api is easier to use than objectcontext\n", "and dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n", "my understanding is that although dbcontext is newer it s not necessarily better than objectcontext it just provides a different api that might be considered simpler but doesn t that depend on the use case\n", "i used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.\n", "dbcontext is a much more pleasant api than objectcontext\n", "in 6.7 a graph it shown that states that the performance of a objectcontext linq query is better than dbcontext linq query\n", "dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n", "there are many reasons why the dbcontext api is better than the older objectcontext api but in your case it may initially feel like a downgrade\n", "when it comes to deletion it even gets worse when saving at the end of all entity removals dbcontext is around 18 times slower than objectcontext\n", "my understanding is that although dbcontext is newer it s not necessarily better than objectcontext it just provides a different api that might be considered simpler but doesn t that depend on the use case\n", "dbcontext api is easier to work with than objectcontext but both approaches use the former\n", "ostream is more general subclasses support writing to different places ostringstream is a specific one writing to a string\n", "ostream is more general subclasses support writing to different places ostringstream is a specific one writing to a string\n", "all-in all the reason is that nsmutablestring is able to do more things than nsstring and can do anything nsstring can hence the direction of inheritance\n", "note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n", "note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n", "nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n", "nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n", "all-in all the reason is that nsmutablestring is able to do more things than nsstring and can do anything nsstring can hence the direction of inheritance\n", "note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n", "note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n", "nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n", "nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n", "posting qevents to qobject is faster than using signal-slot invocations because there are no copy constructors called and there s no marshalling done except directly by you upon construction of a qevent\n", "both a renderscript and opengl are used for getting high performance graphics and animation s.but still opengl is the best option to get high performance graphics because it is well documented and you will have more control over the glsurfaceview .but in renderscript some of the classes are depreciated in the current versions .its almost not possible to make a rssurfaceview to transparent\n", "on the server side you re using tcplistener which is nothing more than a socket or tcpclient factory\n", "on the server side you re using tcplistener which is nothing more than a socket or tcpclient factory\n"], "package": ["yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable\n", "yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable\n", "beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n", "beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n", "possibly part of the reason of my problems is that the original code from ramnath uses rmaps while i m using rcharts also developed by ramnath as it is more developed better integrated with shiny and of course includes leaflet\n", "possibly part of the reason of my problems is that the original code from ramnath uses rmaps while i m using rcharts also developed by ramnath as it is more developed better integrated with shiny and of course includes leaflet\n", "i have tried weka too but mallet is smarter than weka on this aspect\n", "if you are on linux and have chosen blas and lapack from a repo it is very likely that they are much slower than openblas\n", "b magma runs always slower than lapack sequential around 10 times slower\n", "b magma runs always slower than lapack sequential around 10 times slower\n", "dist fonts gruntjs gruntfile.js js less license package.json readme.md\n", "dist fonts gruntjs gruntfile.js js less license package.json readme.md\n", "in either case mongoose is going to add a tiny amount of overhead so it s likely to be technically slower than mongojs but not by any meaningful amount like it takes 5.1 seconds to insert 20k records vs 5.0 seconds\n", "however there are many others ts xts which is generally faster than zoo .\n", "however there are many others ts xts which is generally faster than zoo .\n", "however there are many others ts xts which is generally faster than zoo .\n", "however there are many others ts xts which is generally faster than zoo .\n", "with library purrr you can have a prettier more compact form see soto s answer for an even more compact one with dplyr\n", "note that while you could use purrr for the job it s not particularly better suited than regular dplyr\n", "with library purrr you can have a prettier more compact form see soto s answer for an even more compact one with dplyr\n", "note that while you could use purrr for the job it s not particularly better suited than regular dplyr\n", "pyquery uses the css selector syntax familiar from jquery which i find more intuitive than beautifulsoup s\n", "also pyquery is significantly faster than beautifulsoup in many cases for processing results\n", "also pyquery is significantly faster than beautifulsoup in many cases for processing results\n", "could i use mapply to do this more succinctly than running melt and dcast separately for each of employed girls guys\n", "one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them\n", "for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n", "regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n", "alternatively you can use lxml module which is lot faster than beautifulsoup\n", "i do understand that traditionally they are saying that lxml are stricter than beautifulsoup however what i do not get is the following\n", "lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface\n", "edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup\n", "note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author\n", "the reason for using lxml for such a task is that it cleans html files better than beautifulsoup do\n", "i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml\n", "i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml\n", "it uses lxml underneath and is much faster than beautifulsoup\n", "lxml is much faster than beautifulsoup and probably the fastest parser available for python\n", "beautifulsoup is more suitable for html parsing than lxml\n", "for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n", "lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n", "you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else\n", "i prefere lxml it s a harder to understand but much faster than beautifulsoup\n", "lxml is supposed to be much faster and efficient and can do much more than beautifulsoup\n", "lxml is also much much faster than beautifulsoup\n", "beautifulsoup is more suitable for html parsing than lxml\n", "i prefere lxml it s a harder to understand but much faster than beautifulsoup\n", "lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api\n", "i prefer to use beautifulsoup better than lxml\n", "lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n", "how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup\n", "i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now\n", "note that using the beautifulsoup parser is a lot slower than lxml s default parser\n", "according to the above posts and my own experience lxml is definitely faster than beautifulsoup\n", "regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n", "i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude\n", "lxml also has more features and offers beautifulsoup too\n", "pyquery is based on lxml so it s also much faster than beautifulsoup\n", "it s generally accepted that lxml is faster than beautifulsoup ref\n", "lxml is much faster than beautifulsoup and probably the fastest parser available for python\n", "lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use\n", "lxml also has more features and offers beautifulsoup too\n", "according to the above posts and my own experience lxml is definitely faster than beautifulsoup\n", "regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n", "according to some benchmark tests lxml is nearly 100 times faster than beautifulsoup\n", "speed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoup\n", "since you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoup\n", "stargazer is at least in my experience more general than latex from hmisc\n", "stargazer is at least in my experience more general than latex from hmisc\n", "networkx is much easier to deal with and usually performance is good enough but for large brute force algorithms like this igraph will probably be at least an order of magnitude faster\n", "networkx is much easier to deal with and usually performance is good enough but for large brute force algorithms like this igraph will probably be at least an order of magnitude faster\n", "even when latex editors support knitr their support makes working with .rnw files much clunkier than pure latex .tex files\n", "you might want to use r markdown and knitr which is easier than using latex and r as also zhaoy suggested\n", "even when latex editors support knitr their support makes working with .rnw files much clunkier than pure latex .tex files\n", "you might want to use r markdown and knitr which is easier than using latex and r as also zhaoy suggested\n", "the httr package is a bit nicer than rcurl for making http requests in my opinion and it sets a user-agent string by default\n", "the httr package is a bit nicer than rcurl for making http requests in my opinion and it sets a user-agent string by default\n", "lxml.html deals with badly formed html better than beautifulsoup is actively maintained beautifulsoup isn t and is a lot faster since it uses libxml2 internally\n", "but if you are allowed to store whole tree into memory you can use lxml.html which is faster than beautifulsoup\n", "in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n", "in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n", "in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n", "in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n", "stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below\n", "stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below\n", "stringr is newer based on stringi internally and is often even faster\n"], "engine": ["from my personal use i experienced about 5 - 10 times less disk usage due to tokudb s compression and it s much much faster than myisam or innodb\n", "at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n", "odd that elasticsearch is more tolerant than kibana\n", "if you would like a unified front-end for elasticsearch and opentsdb you could consider grafana which has support for both elasticsearch and opentsdb but less functionality than kibana in regard to elasticsearch\n", "odd that elasticsearch is more tolerant than kibana\n", "rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n", "the benchmark shows rythm is 2 to 3 times faster than velocity on a normal page\n", "rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n", "rythm is a high performance 2 to 3 times faster than velocity pure java template which use razor like syntax\n", "double has its ieee floating point definition which is also much more complex than decimal\n", "the third line displays the data with the maximum useful precision - an ieee 754 64bit floating-point number has slightly less than 16 decimal digits of precision so all those digits of the literal in math.h are pointless perhaps they can be seen as future-proofing against a possible future redefinition in a format with more precision\n", "decimal types libraries are fantastic for financial applications because we re used to dealing with the style of rounding required in financial stuff but there is the cost that they tend to be slower than ieee floating point\n", "the maximum representable value with ieee 754-2008 binary32 is so the base 2 log of a number stored in binary 32 is less than decimal 128\n", "xhtml has a stronger syntax than html and is easier to convert to apache-fop this way\n", "xhtml has a stronger syntax than html and is easier to convert to apache-fop this way\n", "if you are targeting android you can use firefox for android by developing a webapp that has native mathml support and because of it will be much faster than mathjax or other javascript solution\n", "in addition the need for polyfills for mathml complicates matters further as they may handle the interaction differently as can be seen in the sample below when using the button to load mathjax\n", "ogre3d seems to be more mature than irrlicht judging by the amount of applications and games that is\n", "it is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loaded\n", "it is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loaded\n", "i m working in a spring mvc project and i want to use a template engine i originally choose apache velocity because a slideshare presentation that says it was two times faster than thymeleaf page 41 and since i m working with big tables i need to use a fast template engine does apache velocity supports html5 if not is there other template engine that supports html5 that is not thymeleaf\n", "i m working in a spring mvc project and i want to use a template engine i originally choose apache velocity because a slideshare presentation that says it was two times faster than thymeleaf page 41 and since i m working with big tables i need to use a fast template engine does apache velocity supports html5 if not is there other template engine that supports html5 that is not thymeleaf\n", "i m using the module graphlab in my python script and many more such as pandas and numpy etc graphlab module only works on python2 not for python3\n", "so the easiest way is to use one either webkit or gecko webkit has probably better support for svg these days plus i can t find package of gecko right now\n", "it s called web audio api and is currently a draft but is well supported by webkit you ll need to use prefixes and a little less by gecko\n", "my understanding is webkit is pretty good smaller than gecko\n", "gecko seems to like anti-aliasing more than webkit\n", "gecko is often considered to consume less memory than webkit but this depends a lot on how the browser is implemented\n", "somehow webkit seems to do better than gecko on the html5 single-page spec scripts and i can t figure out why at this point\n", "i m developing with canvas too and have found that webkit based browsers in general handle canvas operations quicker than gecko in most cases\n", "webkit is stricter than gecko\n", "anyway i just prefer not to use it because gecko is slower then webkit\n", "anyway i just prefer not to use it because gecko is slower then webkit\n", "so the easiest way is to use one either webkit or gecko webkit has probably better support for svg these days plus i can t find package of gecko right now\n", "it s called web audio api and is currently a draft but is well supported by webkit you ll need to use prefixes and a little less by gecko\n", "my understanding is webkit is pretty good smaller than gecko\n", "gecko seems to like anti-aliasing more than webkit\n", "gecko is often considered to consume less memory than webkit but this depends a lot on how the browser is implemented\n", "somehow webkit seems to do better than gecko on the html5 single-page spec scripts and i can t figure out why at this point\n", "i m developing with canvas too and have found that webkit based browsers in general handle canvas operations quicker than gecko in most cases\n", "webkit is stricter than gecko\n", "anyway i just prefer not to use it because gecko is slower then webkit\n", "anyway i just prefer not to use it because gecko is slower then webkit\n", "in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n", "in many discussions and even in mysql documents it has been mentioned that in case of updates innodb performs much better than myisam\n", "i currently have myisam and i would like to stay with it because it had far better performance than innodb in my case but i heard that innodb has acid transactions\n", "i heard correct me if i am wrong that innodb is better for tables that will be updated a lot because of row locking opposed to myisam s table locking\n", "innodb is more strict in data integrity while myisam is loose\n", "i ve figure out that even though myisam has locking contention it s still faster than innodb in most scenarios because of the rapid lock acquisition scheme it uses\n", "you are right because myisam is really faster than innodb\n", "innodb is more reliable than myisam\n", "innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n", "innodb is more strict in data integrity while myisam is loose\n", "someone just told me that innodb is much better than myisam\n", "myisam supports longer rows than innodb does\n", "myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n", "innodb is a better choice as myisam is really old engine and would fade away in near future\n", "one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n", "generally innodb is much better for preserving your data integrity so stick with it and do not go back to myisam there is also a matter of what each engine is best fore but unless you give us more details there is no point in dwelling on that\n", "innodb is newer while myisam is older\n", "finally even if somehow you could manage myisam to perform better than innodb that doesn t mean innodb is inadecuate at all\n", "myisam is more space friendly than innodb you can start with that one\n", "but when myisam is really better than innodb\n", "innodb is often slower than myisam being a transactional db engine with acid properties\n", "innodb has a higher resource consumption rates then myisam so keep that in mind\n", "speed does matter here myisam is still slightly faster than innodb especially for reads\n", "for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n", "myisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queries\n", "myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n", "i am not sure if this is no longer true myisam is faster than innodb for reads\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "innodb is more complex while myisam is simpler\n", "innodb tables are about 4x bigger than their myisam counterparts\n", "myisam generally performs faster because it lacks certain functions innodb has such as rollback... but it has only table locking\n", "innodb is transactional so inserts will generally be slower than myisam\n", "innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n", "innodb is more strict in data integrity while myisam is loose\n", "their conclusion innodb has 30 higher performance than myisam on average\n", "furthermore i do not have control over the engine \u00e2 myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n", "innodb is more reliable than myisam\n", "in many discussions and even in mysql documents it has been mentioned that in case of updates innodb performs much better than myisam\n", "although 4m isn t that many rows with contention and depending on your structure and database engine it may take a while i think myisam alters take longer than innodb because myisam requires whole table locks and handles concurrency less well\n", "oh and just incase you were thinking innodb is slower than myisam - the myisam implementation i tested was twice as slow in all counts\n", "innodb when tuned well performs better than myisam\n", "you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n", "i did a search online comparing myisam and innodb but all of the articles i read judged myisam being faster than innodb on select queries\n", "innodb is more strict in data integrity while myisam is loose\n", "innodb has a higher resource consumption rates then myisam so keep that in mind\n", "innodb not only has the advantages you list but it is also faster than myisam in many benchmarks\n", "plus you have to make your tables myisam which is generally less suitable than innodb\n", "innodb shouldn t be much slower than myisam\n", "innodb is newer while myisam is older\n", "myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n", "innodb seems slightly faster than myisam but this is really marginal\n", "there are several q a for why is innodb much slower than myisam but i could not find any topic for the opposite\n", "myisam tables have smaller footprints than innodb ones myth\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n", "innodb is more strict in data integrity while myisam is loose\n", "with innodb there is less time lost from table locking while myisam is faster in table readings\n", "myisam table is much faster than innodb but no rollback is possible\n", "generally speaking innodb is slower than myisam as innodb is atomic while myisam is not\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "edit for the read-performance this link shows that innodb often is actually not slower than myisam\n", "almost always innodb is a better choice than myisam\n", "innodb is more concurrent than myisam since it provides row-level locking\n", "innodb is more strict in data integrity while myisam is loose\n", "tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n", "innodb is more strict in data integrity while myisam is loose\n", "this is a huge performance boost look like myisam is much more quicker for fulltext in mysql than innodb\n", "myisam table is much faster than innodb but no rollback is possible\n", "and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n", "the trope about myisam being faster than innodb is a holdover from code that was current in the mid-2000 s\n", "also mysql version starting from 5.5 - innodb performs faster than myisam\n", "myisam is much faster for reads but since it locks the whole table for writes this is where overall throughput drops compared with innodb\n", "most of the literature that says myisam is better faster whatever then innodb is old literature\n", "innodb is more resistant to table corruption than myisam\n", "myisam for reads may well be faster than innodb\n", "therefore accessing myisam consumes less resources than innodb\n", "innodb is more strict in data integrity while myisam is loose\n", "myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n", "in my opinion myisam use to be faster than innodb now they are pretty much the same in speed\n", "innodb is more complex while myisam is simpler\n", "mostly innodb is better choice than a myisam\n", "3 mysqlhotcopy inly works on myisam tables and in most applications you are better off with innodb\n", "edited to add myisam is faster than innodb because it is simpler\n", "myisam is almost 4 time faster than innodb which is not acceptable in the environment we are working as i mentioned earlier that every second is worth many dollers for us\n", "innodb is relatively newer than myisam and is transaction safe\n", "innodb supports better locking semantics so if there will be occasional or frequent writes or if you want better data integrity i d suggest starting there and then benchmarking myisam later if you can t hit your performance targets\n", "why is innodb so much slower than myisam in my case\n", "myisam also tends to store data in less space than innodb\n", "and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n", "but innodb has improved dramatically in the past few years and in most cases today innodb performs faster than myisam\n", "i know innodb is heavier than myisam but just how much more\n", "in terms of pure speed it is not always the case that myisam is faster than innodb but in my experience it tends to be faster for pure read working environments by a factor of about 2.0-2.5 times\n", "i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n", "this is one way in which innodb is sometimes better than myisam\n", "innodb is more complex while myisam is simpler\n", "myisam is faster when the query is simple but it s much slower in a high concurrent environment as its table level lock comparing to innodb s row level lock\n", "innodb implements mvcc multi-versioning concurrency control so locking is much more complex than with myisam\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "note however that for high traffic websites we do modify the joomla core and we also switch the tables from innodb to myisam regardless what others might think here myisam is much faster than innodb\n", "innodb is usually much better than myisam at tables being available while insert update and delete are happening because innodb uses row level locking for updates whereas myisam uses table level locking\n", "almost always innodb is a better choice than myisam\n", "as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n", "innodb doesnt read number of rows from stored cached value like myisam does if column is not null cause innodb is more optimized for writing than reading opposing to myisam\n", "but in certain scenarios myisam works better than innodb\n", "innodb is more concurrent than myisam since it provides row-level locking\n", "innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n", "this is one way in which innodb is sometimes better than myisam\n", "i know innodb tends to be a bit slower than myisam on counting but this is far too long\n", "innodb is more resistant to table corruption than myisam\n", "first question is it normal that innodb is much slower 7x slower than myisam for such usage\n", "after testing it seems that myisam is faster than innodb when using when there is no where clause\n", "myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n", "in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n", "the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n", "myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n", "it is said that if you have a mostly read based application you should use myisam as it is better than innodb\n", "2 - i have read about myisam vs innodb the conclusion for me was that myisam is faster when it comes to read-only whereas innodb is designed for tables that get updated or inserts more frequently\n", "however innodb tends to be slower as myisam\n", "also i can t see your table engine but myisam is better for full text searching rather than innodb\n", "myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n", "innodb seems slightly faster than myisam but this is really marginal\n", "innodb is more scalable and myisam doesn t support any of the properties of acid\n", "myisam is faster for certain queries and supports fulltext and spatial indexes while innodb is transactional and more concurrent\n", "with innodb there is less time lost from table locking while myisam is faster in table readings\n", "we know that myisam is faster than innodb when we don t have many concurrent updates inserts\n", "so for such an application is it will innodb be a better choice over myisam\n", "3 a first of all if you haven t done yet change the storage engine to innodb which has row level locking and in newer versions of mysql has more optimization than myisam has\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "if you find that innodb is much slower for inserts updates bear in mind that it offers a much better level of durability - if you tune it for approximately the same durability as myisam then you ll see good performance hopefully\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n", "innodb has better crash recovery while myisam is poor at recovering\n", "innodb is more strict in data integrity while myisam is loose\n", "innodb is often slower than myisam being a transactional db engine with acid properties\n", "there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n", "note however that for high traffic websites we do modify the joomla core and we also switch the tables from innodb to myisam regardless what others might think here myisam is much faster than innodb\n", "innodb is more resistant to table corruption than myisam\n", "innodb is newer while myisam is older\n", "also innodb is slower than myisam unless myisam is blocking for a huge select\n", "i heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize it\n", "innodb is slower than myisam but in which cases\n", "innodb scales better than myisam\n", "the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n", "mostly innodb is better choice than a myisam\n", "as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n", "use myisam usually much faster than innodb if your data base isnt transaction oriented\n", "at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n", "during my tests of innodb v myisam i found that when i did resolve any contention issues the innodb model was 40 slower than myisam\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "innodb is newer while myisam is older\n", "am i right that innodb is better for frequent concurrent updates and inserts than myisam\n", "after all innodb shouldn t be slower than myisam when using count + where but that s exactly what is happening here\n", "yes it is an old wives tale that myisam is faster than innodb\n", "someone just told me that innodb is much better than myisam\n", "myisam is more prone to locking problems than innodb i believe\n", "innodb is relatively newer than myisam and is transaction safe\n", "innodb -- more effecient than myisam because of the way the primary key is clustered with the data in innodb\n", "myisam is often faster than innodb but isn t safe to use in a production environment for critical data\n", "myisam is often faster than innodb in terms of raw performance mostly because it is not acid\n", "myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n", "innodb does support transactions and referential integrity but the trade-off is that it is a bit slower than myisam\n", "the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n", "furthermore i do not have control over the engine \u00e2 myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n", "innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n", "nothing is 100 safe but innodb properly used is a lot safer than myisam against data loss and corruption\n", "some people have said that for reads myisam is faster but recent improvements in innodb have either alleviated or eradicated this difference\n", "you can also try using innodb since it s said is better than myisam handling bulk inserts with data already on it\n", "it is a massive over simplification in some cases and plain wrong in others to say we know that myisam is faster than innodb\n", "innodb is a safer acid compliant engine with some integrity features that myisam lacks\n", "if you have so many records in the table then the first thing is to change the table engine to innodb if its not innodb because for large number of records innodb is much faster as it caches the table data while on the contrary myisam engine only caches the indexes so each time it has to do a full table scan from disk if the data required cannot be fetched from index\n", "also note that some mysql engines are faster than others for example myisam may run faster than innodb at expense of the lack of real foreign keys\n", "innodb is more complex while myisam is simpler\n", "have you considered changing to innodb - it has much better concurrency support and in some contexts will run faster than myisam\n", "in some benchmarks i see that myisam is faster than innodb but seems i have a little improvement\n", "innodb consumes more disk space than myisam -- typically 2x-3x\n", "but when myisam is really better than innodb\n", "you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n", "since myisam is better on selecting while innodb is better on writing\n", "innodb is more resistant to table corruption than myisam\n", "myisam is better than innodb when you don t need those advanced features and storage speed is more important than other concerns\n", "the engine is myisam i ve heard people recommend switching to innodb but many others said myisam is faster with large amounts of data in terms of counting and innodb better for safe transactions\n", "innodb has better crash recovery while myisam is poor at recovering\n", "innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n", "innodb tables are even slower than myisam tables for inserts and the delayed key write option is not available\n", "their conclusion innodb has 30 higher performance than myisam on average\n", "innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns\n", "innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n", "innodb delivered 4.6x higher throughput than myisam while achieving\n", "innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism\n", "myisam is more prone to locking problems than innodb i believe\n", "myisam has proved to be faster than innodb for me\n", "myisam is not faster than innodb anymore for most types of queries\n", "newer versions of mysql 5.5+ have extended innodb to support all the features that were previously only available on myisam such as fulltext and geospatial indexing and innodb performance is usually considerably better than myisam when configured properly\n", "you will need about six times less disk space to store and memory to process your dataset compared to innodb or about 2-3 times less than archived myisam\n", "1 in mysql engines myisam is better or innodb\n", "innodb is more scalable and myisam doesn t support any of the properties of acid\n", "myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n", "i am trying to compare the myisam and innodb write read performance but i am suprised that the myisam s read is much more slower than innodb while its write is much more faster this is totally opposite compared to what i have learned\n", "innodb is newer while myisam is older\n", "myisam is more space friendly than innodb you can start with that one\n", "database performance of the innodb is not necessary faster than the myisam engine\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "i have heard that myisam performs better than innodb on read-oriented tables\n", "generally you can have as good performance for reading as in myisam in innodb tables - you just can use count without where clause and you always should have a suitable index for where clauses as in innodb table scan will be slower than in myisam\n", "innodb is more resistant to table corruption than myisam\n", "innodb is more strict in data integrity while myisam is not as\n", "plus you have to make your tables myisam which is generally less suitable than innodb\n", "innodb is more complex while myisam is simpler\n", "put another way let s say i start with a new innodb table and insert 20 gb of data assuming that 20 gb incorporates all the excess innodb stuff i realize data stored in innodb is larger than myisam then i delete all data then i insert 10 gb of data\n", "therefore innodb can handle higher levels of concurrency better than myisam\n", "first question is it normal that innodb is much slower 7x slower than myisam for such usage\n", "sometimes i got asked on some interviews what benefits does innodb have against myisam and when myisam is better than innodb\n", "so that means that in practice an innodb write will take 3 times longer than a myisam write\n", "in this area i think innodb s change buffer does a better job than myisam s do it now\n", "this is a huge performance boost look like myisam is much more quicker for fulltext in mysql than innodb\n", "one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n", "innodb is a better choice as myisam is really old engine and would fade away in near future\n", "there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n", "innodb is more complex while myisam is simpler\n", "innodb is much much stricter than myisam\n", "select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n", "plus you have to make your tables myisam which is generally less suitable than innodb\n", "for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n", "myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n", "tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n", "ok there are some cases where myisam is faster than innodb but rarely enough that it s worth putting up with the lack of acid-compliance\n", "myisam is not faster than innodb anymore for most types of queries\n", "there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n", "innodb is more strict in data integrity while myisam is loose\n", "for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n", "there may be some exotic corner cases where myisam performs marginally better for certain workloads table-scans or high-volume insert-only work but the default choice should be innodb unless you can prove you have a case that myisam does better\n", "in innodb the count s when where group by or join is not used execute slower than in myisam because the row count is not stored internally\n", "in general is myisam faster than innodb\n", "in fact oracle is so sure that innodb is better that they removed myisam from 8.0\n", "innodb is more complex while myisam is simpler\n", "innodb is more complex while myisam is simpler\n", "innodb is a safer acid compliant engine with some integrity features that myisam lacks\n", "the script was tested using myisam and it indexes products relatively fast much much faster than innodb\n", "innodb is more resistant to table corruption than myisam\n", "myisam is faster but does not support the use of transactions like innodb does\n", "innodb is more complex while myisam is simpler\n", "innodb is more complex while myisam is simpler\n", "innodb is more complex while myisam is simpler\n", "your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n", "myisam is better for high read volumes innodb for high update volumes due to table vs row locking\n", "innodb is also being developed more than myisam\n", "myisam is faster than innodb for reads myth\n", "if you are not using transactions while storing or updating tables switch table type to myisam its quite faster than innodb with much less overhead\n", "even this blog from 2007 shows benchmark results that innodb is on par with or faster than myisam under most workloads\n", "innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n", "innodb uses row level locking while myisam can only use table level locking that is why innodb has crash revovery is better than myisam\n", "therefore accessing myisam consumes less resources than innodb\n", "you insert in there but never select from there as far as i know today myisam is better than innodb in this case\n", "your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n", "to answer the real question why is myisam slower than innodb i can t give an authoritative answer\n", "myisam is the perfect choice since the database is almost only used for reading and myisam is significantly faster that innodb\n", "innodb is newer while myisam is older\n", "innodb would be a better choice than myisam for a high-write table\n", "this also affects how it is stored which leads to myisam being slower than innodb on insert due to myisam requiring a full index re-write on every insertion\n", "myisam inserts are going to be faster than innodb so if you re logging data and retrieving it later that will be a win\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "beststat is innodb so i have row-level locking and consindering i do a lot of inserts-updates it should be faster than myisam\n", "oracle has kept improving innodb by so much that they declare that it is better than myisam in virtually all situations\n", "innodb is more strict in data integrity while myisam is not as\n", "myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n", "anyone who thinks myisam is faster is either not tuning innodb correctly or has such small data that who cares\n", "now the response i got from my boss is that i need to prove that innodb will run faster than myisam\n", "it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n", "there are other optimizations available but general rule is that innodb will be quicker than myisam is even with table growth\n", "as you know myisam table sizes are about three or more times smaller than same innodb tables\n", "in a thread i came to know that myisam is faster for reads innodb is faster for writes\n", "innodb handles inserts with composite primary keys quicker than myisam\n", "select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n", "not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n", "to our suprise innodb took hours more than myisam\n", "myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "innodb is more complex while myisam is simpler\n", "myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n", "myisam supports longer rows than innodb does\n", "out of experience i m involved to a project that uses huge amount of data using mysql and we mostly prefer myisam for data that can be generated it allows to achieve much higher performance losing transactions but generally speaking myisam is faster but innodb is more reliable\n", "you are right because myisam is really faster than innodb\n", "if there are many modifications of the data it s said that innodb works faster because it uses row locking instead of table locking like myisam\n", "if you use a where clause though it changes the execution pattern to use indexes so in general innodb will be slower than myisam on full unrestricted counts where as the performance matches up on restricted counts\n", "innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n", "innodb is affected by the primary key much more than myisam and it could make a noticeable difference\n", "i am creating an commerce website and i am stuck in a database problem i am storing customer orders please tell me which is better myisam or innodb i have to use transaction like feature in customer order table and i personally prefer myisam because it is much faster than innodb and it also supports full-text searching is there any way to use transaction like rollback feature in myisam so that if anything goes wrong table will be rollback to its previous state how to do that without any external library or any other server side access and i have to use mysql\n", "if your database has a large innodb buffer pool and a small key buffer then innodb performance is going to be better than myisam performance especially for large tables\n", "there is a difference between the different storage engines though myisam is faster for a lot of select innodb is faster for a lot of insert update because it uses row locking instead of table locking and the way it handles indexes\n", "since you don t do updates i think myisam would be better than innodb in this scenario\n", "most of the literature that says myisam is better faster whatever then innodb is old literature\n", "myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n", "innodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves out\n", "innodb consumes more disk space than myisam -- typically 2x-3x\n", "i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n", "first question is it normal that innodb is much slower 7x slower than myisam for such usage\n", "innodb table is a bit slower than myisam tables but i don t think it is a major problem as you told you are using drupal system is that a kind of mult-sites like a word-press system\n", "in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n", "in many discussions and even in mysql documents it has been mentioned that in case of updates innodb performs much better than myisam\n", "i currently have myisam and i would like to stay with it because it had far better performance than innodb in my case but i heard that innodb has acid transactions\n", "i heard correct me if i am wrong that innodb is better for tables that will be updated a lot because of row locking opposed to myisam s table locking\n", "innodb is more strict in data integrity while myisam is loose\n", "i ve figure out that even though myisam has locking contention it s still faster than innodb in most scenarios because of the rapid lock acquisition scheme it uses\n", "you are right because myisam is really faster than innodb\n", "innodb is more reliable than myisam\n", "innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n", "innodb is more strict in data integrity while myisam is loose\n", "someone just told me that innodb is much better than myisam\n", "myisam supports longer rows than innodb does\n", "myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n", "innodb is a better choice as myisam is really old engine and would fade away in near future\n", "one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n", "generally innodb is much better for preserving your data integrity so stick with it and do not go back to myisam there is also a matter of what each engine is best fore but unless you give us more details there is no point in dwelling on that\n", "innodb is newer while myisam is older\n", "finally even if somehow you could manage myisam to perform better than innodb that doesn t mean innodb is inadecuate at all\n", "myisam is more space friendly than innodb you can start with that one\n", "but when myisam is really better than innodb\n", "innodb is often slower than myisam being a transactional db engine with acid properties\n", "innodb has a higher resource consumption rates then myisam so keep that in mind\n", "speed does matter here myisam is still slightly faster than innodb especially for reads\n", "for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n", "myisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queries\n", "myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n", "i am not sure if this is no longer true myisam is faster than innodb for reads\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "innodb is more complex while myisam is simpler\n", "innodb tables are about 4x bigger than their myisam counterparts\n", "myisam generally performs faster because it lacks certain functions innodb has such as rollback... but it has only table locking\n", "innodb is transactional so inserts will generally be slower than myisam\n", "innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n", "innodb is more strict in data integrity while myisam is loose\n", "their conclusion innodb has 30 higher performance than myisam on average\n", "furthermore i do not have control over the engine \u00e2 myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n", "innodb is more reliable than myisam\n", "in many discussions and even in mysql documents it has been mentioned that in case of updates innodb performs much better than myisam\n", "although 4m isn t that many rows with contention and depending on your structure and database engine it may take a while i think myisam alters take longer than innodb because myisam requires whole table locks and handles concurrency less well\n", "oh and just incase you were thinking innodb is slower than myisam - the myisam implementation i tested was twice as slow in all counts\n", "innodb when tuned well performs better than myisam\n", "you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n", "i did a search online comparing myisam and innodb but all of the articles i read judged myisam being faster than innodb on select queries\n", "innodb is more strict in data integrity while myisam is loose\n", "innodb has a higher resource consumption rates then myisam so keep that in mind\n", "innodb not only has the advantages you list but it is also faster than myisam in many benchmarks\n", "plus you have to make your tables myisam which is generally less suitable than innodb\n", "innodb shouldn t be much slower than myisam\n", "innodb is newer while myisam is older\n", "myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n", "innodb seems slightly faster than myisam but this is really marginal\n", "there are several q a for why is innodb much slower than myisam but i could not find any topic for the opposite\n", "myisam tables have smaller footprints than innodb ones myth\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n", "innodb is more strict in data integrity while myisam is loose\n", "with innodb there is less time lost from table locking while myisam is faster in table readings\n", "myisam table is much faster than innodb but no rollback is possible\n", "generally speaking innodb is slower than myisam as innodb is atomic while myisam is not\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "edit for the read-performance this link shows that innodb often is actually not slower than myisam\n", "almost always innodb is a better choice than myisam\n", "innodb is more concurrent than myisam since it provides row-level locking\n", "innodb is more strict in data integrity while myisam is loose\n", "tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n", "innodb is more strict in data integrity while myisam is loose\n", "this is a huge performance boost look like myisam is much more quicker for fulltext in mysql than innodb\n", "myisam table is much faster than innodb but no rollback is possible\n", "and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n", "the trope about myisam being faster than innodb is a holdover from code that was current in the mid-2000 s\n", "also mysql version starting from 5.5 - innodb performs faster than myisam\n", "myisam is much faster for reads but since it locks the whole table for writes this is where overall throughput drops compared with innodb\n", "most of the literature that says myisam is better faster whatever then innodb is old literature\n", "innodb is more resistant to table corruption than myisam\n", "myisam for reads may well be faster than innodb\n", "therefore accessing myisam consumes less resources than innodb\n", "innodb is more strict in data integrity while myisam is loose\n", "myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n", "in my opinion myisam use to be faster than innodb now they are pretty much the same in speed\n", "innodb is more complex while myisam is simpler\n", "mostly innodb is better choice than a myisam\n", "3 mysqlhotcopy inly works on myisam tables and in most applications you are better off with innodb\n", "edited to add myisam is faster than innodb because it is simpler\n", "myisam is almost 4 time faster than innodb which is not acceptable in the environment we are working as i mentioned earlier that every second is worth many dollers for us\n", "innodb is relatively newer than myisam and is transaction safe\n", "innodb supports better locking semantics so if there will be occasional or frequent writes or if you want better data integrity i d suggest starting there and then benchmarking myisam later if you can t hit your performance targets\n", "why is innodb so much slower than myisam in my case\n", "myisam also tends to store data in less space than innodb\n", "and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n", "but innodb has improved dramatically in the past few years and in most cases today innodb performs faster than myisam\n", "i know innodb is heavier than myisam but just how much more\n", "in terms of pure speed it is not always the case that myisam is faster than innodb but in my experience it tends to be faster for pure read working environments by a factor of about 2.0-2.5 times\n", "i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n", "this is one way in which innodb is sometimes better than myisam\n", "innodb is more complex while myisam is simpler\n", "myisam is faster when the query is simple but it s much slower in a high concurrent environment as its table level lock comparing to innodb s row level lock\n", "innodb implements mvcc multi-versioning concurrency control so locking is much more complex than with myisam\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "note however that for high traffic websites we do modify the joomla core and we also switch the tables from innodb to myisam regardless what others might think here myisam is much faster than innodb\n", "innodb is usually much better than myisam at tables being available while insert update and delete are happening because innodb uses row level locking for updates whereas myisam uses table level locking\n", "almost always innodb is a better choice than myisam\n", "as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n", "innodb doesnt read number of rows from stored cached value like myisam does if column is not null cause innodb is more optimized for writing than reading opposing to myisam\n", "but in certain scenarios myisam works better than innodb\n", "innodb is more concurrent than myisam since it provides row-level locking\n", "innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n", "this is one way in which innodb is sometimes better than myisam\n", "i know innodb tends to be a bit slower than myisam on counting but this is far too long\n", "innodb is more resistant to table corruption than myisam\n", "first question is it normal that innodb is much slower 7x slower than myisam for such usage\n", "after testing it seems that myisam is faster than innodb when using when there is no where clause\n", "myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n", "in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n", "the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n", "myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n", "it is said that if you have a mostly read based application you should use myisam as it is better than innodb\n", "2 - i have read about myisam vs innodb the conclusion for me was that myisam is faster when it comes to read-only whereas innodb is designed for tables that get updated or inserts more frequently\n", "however innodb tends to be slower as myisam\n", "also i can t see your table engine but myisam is better for full text searching rather than innodb\n", "myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n", "innodb seems slightly faster than myisam but this is really marginal\n", "innodb is more scalable and myisam doesn t support any of the properties of acid\n", "myisam is faster for certain queries and supports fulltext and spatial indexes while innodb is transactional and more concurrent\n", "with innodb there is less time lost from table locking while myisam is faster in table readings\n", "we know that myisam is faster than innodb when we don t have many concurrent updates inserts\n", "so for such an application is it will innodb be a better choice over myisam\n", "3 a first of all if you haven t done yet change the storage engine to innodb which has row level locking and in newer versions of mysql has more optimization than myisam has\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "if you find that innodb is much slower for inserts updates bear in mind that it offers a much better level of durability - if you tune it for approximately the same durability as myisam then you ll see good performance hopefully\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n", "innodb has better crash recovery while myisam is poor at recovering\n", "innodb is more strict in data integrity while myisam is loose\n", "innodb is often slower than myisam being a transactional db engine with acid properties\n", "there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n", "note however that for high traffic websites we do modify the joomla core and we also switch the tables from innodb to myisam regardless what others might think here myisam is much faster than innodb\n", "innodb is more resistant to table corruption than myisam\n", "innodb is newer while myisam is older\n", "also innodb is slower than myisam unless myisam is blocking for a huge select\n", "i heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize it\n", "innodb is slower than myisam but in which cases\n", "innodb scales better than myisam\n", "the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n", "mostly innodb is better choice than a myisam\n", "as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n", "use myisam usually much faster than innodb if your data base isnt transaction oriented\n", "at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n", "during my tests of innodb v myisam i found that when i did resolve any contention issues the innodb model was 40 slower than myisam\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "innodb is newer while myisam is older\n", "am i right that innodb is better for frequent concurrent updates and inserts than myisam\n", "after all innodb shouldn t be slower than myisam when using count + where but that s exactly what is happening here\n", "yes it is an old wives tale that myisam is faster than innodb\n", "someone just told me that innodb is much better than myisam\n", "myisam is more prone to locking problems than innodb i believe\n", "innodb is relatively newer than myisam and is transaction safe\n", "innodb -- more effecient than myisam because of the way the primary key is clustered with the data in innodb\n", "myisam is often faster than innodb but isn t safe to use in a production environment for critical data\n", "myisam is often faster than innodb in terms of raw performance mostly because it is not acid\n", "myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n", "innodb does support transactions and referential integrity but the trade-off is that it is a bit slower than myisam\n", "the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n", "furthermore i do not have control over the engine \u00e2 myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n", "innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n", "nothing is 100 safe but innodb properly used is a lot safer than myisam against data loss and corruption\n", "some people have said that for reads myisam is faster but recent improvements in innodb have either alleviated or eradicated this difference\n", "you can also try using innodb since it s said is better than myisam handling bulk inserts with data already on it\n", "it is a massive over simplification in some cases and plain wrong in others to say we know that myisam is faster than innodb\n", "innodb is a safer acid compliant engine with some integrity features that myisam lacks\n", "if you have so many records in the table then the first thing is to change the table engine to innodb if its not innodb because for large number of records innodb is much faster as it caches the table data while on the contrary myisam engine only caches the indexes so each time it has to do a full table scan from disk if the data required cannot be fetched from index\n", "also note that some mysql engines are faster than others for example myisam may run faster than innodb at expense of the lack of real foreign keys\n", "innodb is more complex while myisam is simpler\n", "have you considered changing to innodb - it has much better concurrency support and in some contexts will run faster than myisam\n", "in some benchmarks i see that myisam is faster than innodb but seems i have a little improvement\n", "innodb consumes more disk space than myisam -- typically 2x-3x\n", "but when myisam is really better than innodb\n", "you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n", "since myisam is better on selecting while innodb is better on writing\n", "innodb is more resistant to table corruption than myisam\n", "myisam is better than innodb when you don t need those advanced features and storage speed is more important than other concerns\n", "the engine is myisam i ve heard people recommend switching to innodb but many others said myisam is faster with large amounts of data in terms of counting and innodb better for safe transactions\n", "innodb has better crash recovery while myisam is poor at recovering\n", "innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n", "innodb tables are even slower than myisam tables for inserts and the delayed key write option is not available\n", "their conclusion innodb has 30 higher performance than myisam on average\n", "innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns\n", "innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n", "innodb delivered 4.6x higher throughput than myisam while achieving\n", "innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism\n", "myisam is more prone to locking problems than innodb i believe\n", "myisam has proved to be faster than innodb for me\n", "myisam is not faster than innodb anymore for most types of queries\n", "newer versions of mysql 5.5+ have extended innodb to support all the features that were previously only available on myisam such as fulltext and geospatial indexing and innodb performance is usually considerably better than myisam when configured properly\n", "you will need about six times less disk space to store and memory to process your dataset compared to innodb or about 2-3 times less than archived myisam\n", "1 in mysql engines myisam is better or innodb\n", "innodb is more scalable and myisam doesn t support any of the properties of acid\n", "myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n", "i am trying to compare the myisam and innodb write read performance but i am suprised that the myisam s read is much more slower than innodb while its write is much more faster this is totally opposite compared to what i have learned\n", "innodb is newer while myisam is older\n", "myisam is more space friendly than innodb you can start with that one\n", "database performance of the innodb is not necessary faster than the myisam engine\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "i have heard that myisam performs better than innodb on read-oriented tables\n", "generally you can have as good performance for reading as in myisam in innodb tables - you just can use count without where clause and you always should have a suitable index for where clauses as in innodb table scan will be slower than in myisam\n", "innodb is more resistant to table corruption than myisam\n", "innodb is more strict in data integrity while myisam is not as\n", "plus you have to make your tables myisam which is generally less suitable than innodb\n", "innodb is more complex while myisam is simpler\n", "put another way let s say i start with a new innodb table and insert 20 gb of data assuming that 20 gb incorporates all the excess innodb stuff i realize data stored in innodb is larger than myisam then i delete all data then i insert 10 gb of data\n", "therefore innodb can handle higher levels of concurrency better than myisam\n", "first question is it normal that innodb is much slower 7x slower than myisam for such usage\n", "sometimes i got asked on some interviews what benefits does innodb have against myisam and when myisam is better than innodb\n", "so that means that in practice an innodb write will take 3 times longer than a myisam write\n", "in this area i think innodb s change buffer does a better job than myisam s do it now\n", "this is a huge performance boost look like myisam is much more quicker for fulltext in mysql than innodb\n", "one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n", "innodb is a better choice as myisam is really old engine and would fade away in near future\n", "there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n", "innodb is more complex while myisam is simpler\n", "innodb is much much stricter than myisam\n", "select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n", "plus you have to make your tables myisam which is generally less suitable than innodb\n", "for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n", "myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n", "tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n", "ok there are some cases where myisam is faster than innodb but rarely enough that it s worth putting up with the lack of acid-compliance\n", "myisam is not faster than innodb anymore for most types of queries\n", "there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n", "innodb is more strict in data integrity while myisam is loose\n", "for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n", "there may be some exotic corner cases where myisam performs marginally better for certain workloads table-scans or high-volume insert-only work but the default choice should be innodb unless you can prove you have a case that myisam does better\n", "in innodb the count s when where group by or join is not used execute slower than in myisam because the row count is not stored internally\n", "in general is myisam faster than innodb\n", "in fact oracle is so sure that innodb is better that they removed myisam from 8.0\n", "innodb is more complex while myisam is simpler\n", "innodb is more complex while myisam is simpler\n", "innodb is a safer acid compliant engine with some integrity features that myisam lacks\n", "the script was tested using myisam and it indexes products relatively fast much much faster than innodb\n", "innodb is more resistant to table corruption than myisam\n", "myisam is faster but does not support the use of transactions like innodb does\n", "innodb is more complex while myisam is simpler\n", "innodb is more complex while myisam is simpler\n", "innodb is more complex while myisam is simpler\n", "your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n", "myisam is better for high read volumes innodb for high update volumes due to table vs row locking\n", "innodb is also being developed more than myisam\n", "myisam is faster than innodb for reads myth\n", "if you are not using transactions while storing or updating tables switch table type to myisam its quite faster than innodb with much less overhead\n", "even this blog from 2007 shows benchmark results that innodb is on par with or faster than myisam under most workloads\n", "innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n", "innodb uses row level locking while myisam can only use table level locking that is why innodb has crash revovery is better than myisam\n", "therefore accessing myisam consumes less resources than innodb\n", "you insert in there but never select from there as far as i know today myisam is better than innodb in this case\n", "your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n", "to answer the real question why is myisam slower than innodb i can t give an authoritative answer\n", "myisam is the perfect choice since the database is almost only used for reading and myisam is significantly faster that innodb\n", "innodb is newer while myisam is older\n", "innodb would be a better choice than myisam for a high-write table\n", "this also affects how it is stored which leads to myisam being slower than innodb on insert due to myisam requiring a full index re-write on every insertion\n", "myisam inserts are going to be faster than innodb so if you re logging data and retrieving it later that will be a win\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "beststat is innodb so i have row-level locking and consindering i do a lot of inserts-updates it should be faster than myisam\n", "oracle has kept improving innodb by so much that they declare that it is better than myisam in virtually all situations\n", "innodb is more strict in data integrity while myisam is not as\n", "myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n", "anyone who thinks myisam is faster is either not tuning innodb correctly or has such small data that who cares\n", "now the response i got from my boss is that i need to prove that innodb will run faster than myisam\n", "it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n", "there are other optimizations available but general rule is that innodb will be quicker than myisam is even with table growth\n", "as you know myisam table sizes are about three or more times smaller than same innodb tables\n", "in a thread i came to know that myisam is faster for reads innodb is faster for writes\n", "innodb handles inserts with composite primary keys quicker than myisam\n", "select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n", "not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n", "to our suprise innodb took hours more than myisam\n", "myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n", "innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n", "innodb is more complex while myisam is simpler\n", "myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n", "myisam supports longer rows than innodb does\n", "out of experience i m involved to a project that uses huge amount of data using mysql and we mostly prefer myisam for data that can be generated it allows to achieve much higher performance losing transactions but generally speaking myisam is faster but innodb is more reliable\n", "you are right because myisam is really faster than innodb\n", "if there are many modifications of the data it s said that innodb works faster because it uses row locking instead of table locking like myisam\n", "if you use a where clause though it changes the execution pattern to use indexes so in general innodb will be slower than myisam on full unrestricted counts where as the performance matches up on restricted counts\n", "innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n", "innodb is affected by the primary key much more than myisam and it could make a noticeable difference\n", "i am creating an commerce website and i am stuck in a database problem i am storing customer orders please tell me which is better myisam or innodb i have to use transaction like feature in customer order table and i personally prefer myisam because it is much faster than innodb and it also supports full-text searching is there any way to use transaction like rollback feature in myisam so that if anything goes wrong table will be rollback to its previous state how to do that without any external library or any other server side access and i have to use mysql\n", "if your database has a large innodb buffer pool and a small key buffer then innodb performance is going to be better than myisam performance especially for large tables\n", "there is a difference between the different storage engines though myisam is faster for a lot of select innodb is faster for a lot of insert update because it uses row locking instead of table locking and the way it handles indexes\n", "since you don t do updates i think myisam would be better than innodb in this scenario\n", "most of the literature that says myisam is better faster whatever then innodb is old literature\n", "myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n", "innodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves out\n", "innodb consumes more disk space than myisam -- typically 2x-3x\n", "i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n", "first question is it normal that innodb is much slower 7x slower than myisam for such usage\n", "innodb table is a bit slower than myisam tables but i don t think it is a major problem as you told you are using drupal system is that a kind of mult-sites like a word-press system\n", "i ve also noticed that qtwebengine is significantly faster and more stable that the old qtwebkit based widgets\n", "unfortunately qtwebengine has much worse and poorer integration with the rest of qt facilities than qtwebkit\n", "i ve also noticed that qtwebengine is significantly faster and more stable that the old qtwebkit based widgets\n", "unfortunately qtwebengine has much worse and poorer integration with the rest of qt facilities than qtwebkit\n", "if you use twig which i like better than smarty - although i still prefer self-restraint+plain php most ide s that support django templating should work with it since the syntax is nearly the same\n", "either way i intend to use smarty partly because i have lots of experience with it and partly because its much more well documented and has much more functionality than blade and to me the syntax is slightly cleaner than twig although the template engine is not the point of this question really\n", "if your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imho\n", "if you use twig which i like better than smarty - although i still prefer self-restraint+plain php most ide s that support django templating should work with it since the syntax is nearly the same\n", "either way i intend to use smarty partly because i have lots of experience with it and partly because its much more well documented and has much more functionality than blade and to me the syntax is slightly cleaner than twig although the template engine is not the point of this question really\n", "if your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imho\n", "template engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etc\n", "template engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etc\n", "so basically when box2d is more about how objects will behave themselves during application running the scene2d is more about how you write your code before application running\n", "freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n", "freemarker is more advanced but a little complex as compared to apache velocity\n", "freemarker is more advanced but a little complex as compared to apache velocity\n", "velocity is simpler than freemarker\n", "freemarker is more powerful than velocity\n", "i m trying to create a template in velocity since i have more knoledge than freemarker\n", "velocity is worse than freemarker and stringtemplate has got its own issues\n", "freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n", "freemarker is more powerful than velocity\n", "freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n", "freemarker is more advanced but a little complex as compared to apache velocity\n", "freemarker is more advanced but a little complex as compared to apache velocity\n", "velocity is simpler than freemarker\n", "freemarker is more powerful than velocity\n", "i m trying to create a template in velocity since i have more knoledge than freemarker\n", "velocity is worse than freemarker and stringtemplate has got its own issues\n", "freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n", "freemarker is more powerful than velocity\n", "qweb is nicer templating tool and it was created by odoo and its designed to work cross language originally which can be forked from git - qweb\n", "qweb is nicer templating tool and it was created by odoo and its designed to work cross language originally which can be forked from git - qweb\n", "probably you can take a look at rythm template engine which is much faster than freemarker and velocity also much easier to use\n", "irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion\n", "irrlicht is no way better than ogre 3d or am not trying to prove that\n", "irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion\n", "i use tokudb on tables of up to 18 billion rows and nothing else comes close it s at least 100 times faster than innodb for random inserts on big tables\n", "is myisam engine safer than innodb about loss of data due to filesystem error\n", "is myisam engine safer than innodb about loss of data due to filesystem error\n"], "system": ["plus the overhead of doing it is extremely costly- hive queries against hbase are on my cluster at least an order of magnitude slower than against plain hdfs files\n", "plus the overhead of doing it is extremely costly- hive queries against hbase are on my cluster at least an order of magnitude slower than against plain hdfs files\n", "double has its ieee floating point definition which is also much more complex than decimal\n", "the third line displays the data with the maximum useful precision - an ieee 754 64bit floating-point number has slightly less than 16 decimal digits of precision so all those digits of the literal in math.h are pointless perhaps they can be seen as future-proofing against a possible future redefinition in a format with more precision\n", "decimal types libraries are fantastic for financial applications because we re used to dealing with the style of rounding required in financial stuff but there is the cost that they tend to be slower than ieee floating point\n", "the maximum representable value with ieee 754-2008 binary32 is so the base 2 log of a number stored in binary 32 is less than decimal 128\n", "extfs4 or xfs are between 25 and 40 faster than ntfs or refs depending on the optimization\n", "magento is way ahead and has larger extensions than opencart\n", "consider umbraco its architecture is definitely better than dotnetnuke s\n", "i also had good result with umbraco cms it s a bit more lean than dotnetnuke but not as user friendly and definitely not as popular\n", "consider umbraco its architecture is definitely better than dotnetnuke s\n", "i also had good result with umbraco cms it s a bit more lean than dotnetnuke but not as user friendly and definitely not as popular\n", "i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n", "i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n", "i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n", "i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n", "it is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loaded\n", "it is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loaded\n", "but in my opinion for most sites expressionengine is a better choice than wordpress\n", "but in my opinion for most sites expressionengine is a better choice than wordpress\n", "but in my opinion for most sites expressionengine is a better choice than wordpress\n", "but in my opinion for most sites expressionengine is a better choice than wordpress\n", "since mantis is a bit more complete than bugzilla when it comes to features you could define separate issues with custom field for your tasks\n", "research showed me that mantis is simpler to use over bugzilla so i decided to use mantis but have no idea how to install it.can anyone please tell me what are the steps you need to take in order to install mantis bug tracking system in a small company to track website mobile portal bugs\n", "your spf record requires more than 10 dns lookups to process\n", "your spf record requires more than 10 dns lookups to process\n", "your spf record requires more than 10 dns lookups to process\n", "your spf record requires more than 10 dns lookups to process\n", "perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update\n", "if anything i find working with svn easier and more intuitive than perforce\n", "if you have the money ericgorr is right perforce is much nicer to work with then svn\n", "perforce does have support for many other oses but our non-windows devs feel more comfortable with svn too\n", "svn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkout\n", "perforce offers more advanced branching and merging capabilities than svn\n", "perforce offers more advanced branching and merging capabilities than svn\n", "make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free\n", "if you want to a little bit further you can imagine use more powerfull scm clearcase perforce ... but maven integration is fewer not well documented and community provide less examples than svn or git\n", "perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update\n", "if anything i find working with svn easier and more intuitive than perforce\n", "if you have the money ericgorr is right perforce is much nicer to work with then svn\n", "perforce does have support for many other oses but our non-windows devs feel more comfortable with svn too\n", "svn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkout\n", "perforce offers more advanced branching and merging capabilities than svn\n", "perforce offers more advanced branching and merging capabilities than svn\n", "make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free\n", "if you want to a little bit further you can imagine use more powerfull scm clearcase perforce ... but maven integration is fewer not well documented and community provide less examples than svn or git\n", "i have been trying out redmine to see if i like it better than mantis\n", "i ve read that mantis contains less project management tools than redmine\n", "i ve read that mantis contains less project management tools than redmine\n", "however if i d built a new site with a cms on java i d probably go with magnolia cms because the documentation and community is more mature despite that it s newer than opencms\n", "imho creating templates for joomla is the easier than most other cms i know typo wordpress modx as you simply have to replace parts of the static version with joomla tags menu content etc. it still needs some time to get used to the system but its not that hard\n", "imho wordpress is better do work and customize than joomla\n", "yes joomla takes more time in cooking the resulting html when compared to wordpress\n", "i seem to be getting the impression that wordpress is more popular than joomla nowadays\n", "if that will solved later than wordpress menu is better than joomla\n", "yes joomla takes more time in cooking the resulting html when compared to wordpress\n", "i seem to be getting the impression that wordpress is more popular than joomla nowadays\n", "if that will solved later than wordpress menu is better than joomla\n", "imho creating templates for joomla is the easier than most other cms i know typo wordpress modx as you simply have to replace parts of the static version with joomla tags menu content etc. it still needs some time to get used to the system but its not that hard\n", "imho wordpress is better do work and customize than joomla\n", "yes joomla takes more time in cooking the resulting html when compared to wordpress\n", "i seem to be getting the impression that wordpress is more popular than joomla nowadays\n", "if that will solved later than wordpress menu is better than joomla\n", "yes joomla takes more time in cooking the resulting html when compared to wordpress\n", "i seem to be getting the impression that wordpress is more popular than joomla nowadays\n", "if that will solved later than wordpress menu is better than joomla\n", "since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n", "since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n", "since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n", "since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n", "ansible is in an earlier stage than chef puppet and other tools out there when it comes to community support\n", "ansible is in an earlier stage than chef puppet and other tools out there when it comes to community support\n", "mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference\n", "it works fine and fits all my needs but recently i found that git works better than bazaar so i decided to use it but i face a problem with git usability because most git s gui not user friendly as bazaar explorer so i want your advice based on a practical experience which best git s gui user friendly or which one is most similar to bazaar explorer\n", "i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n", "an incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases tested\n", "bazaar is easier to extend in an api way git is easier to extend in a unix way pipes\n", "note most recently i have been using bazaar and hg with fully powerful regexps so may be looking for stuff more powerful than git provides\n", "i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n", "i hear all this stuff about bazaar being slower than git\n", "a lot of articles about bazaar will tell you it is a lot slower than git or mercurial\n", "bazaar is imho easier to learn than git\n", "mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference\n", "it works fine and fits all my needs but recently i found that git works better than bazaar so i decided to use it but i face a problem with git usability because most git s gui not user friendly as bazaar explorer so i want your advice based on a practical experience which best git s gui user friendly or which one is most similar to bazaar explorer\n", "i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n", "an incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases tested\n", "bazaar is easier to extend in an api way git is easier to extend in a unix way pipes\n", "note most recently i have been using bazaar and hg with fully powerful regexps so may be looking for stuff more powerful than git provides\n", "i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n", "i hear all this stuff about bazaar being slower than git\n", "a lot of articles about bazaar will tell you it is a lot slower than git or mercurial\n", "bazaar is imho easier to learn than git\n", "thinking you can format magento blocks any better in a cms such as expressionengine and use magento just for the backend will put you on a hiding to nothing to end up with a fairly useless setup that isn t going to go anywhere\n", "granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n", "granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n", "since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n", "most modern filesystems are also considerably more complex than fat which would add further difficulty to the implementation\n", "since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n", "granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n", "granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n", "since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n", "most modern filesystems are also considerably more complex than fat which would add further difficulty to the implementation\n", "since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n", "fossil is another one that s easy to use i would say easier than git to learn but it uses an sqlite file to store your code and i m not sure if it scales to really big projects\n", "from the article it sounds like fossil isn t a database any more than git is a database\n", "i understand redmine is more of a trac clone but retrospectiva seem to support agile methodologies via a nice plugin\n", "we ve recently switched from trac to redmine where i work and i think i like it a little more than trac and use the wiki functionality almost everyday\n", "the authors of redmine are trying to create a better trac than trac\n", "redmine was written to be a better trac than trac\n", "redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac\n", "redmine handles multiple projects and sub projects far nicer than trac\n", "for next projects i m going to try redmine seems more clean and hipe than trac\n", "we found redmine to be a better than trac simply because it is easier to use\n", "redmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administer\n", "i wound up going with redmine and it s way better than trac\n", "i d recommend redmine like the other posters as it is more complete than trac\n", "for next projects i m going to try redmine seems more clean and hipe than trac\n", "actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n", "if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n", "although i myself have prior experience in implementing filesystems much simpler ones than ntfs xfs or ext2 i would not tackle this job\n", "when people say that unix filesystems are better they might mean to be saying oh ext3 stores bits in such as way that corruption happens way less than ntfs but they might also be talking about design choices made at the common layer above\n", "ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n", "if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n", "generally the performance of hard filesystems like ntfs is better than that of traditional unix filesystems\n", "ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n", "actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n", "the problem is that windows ntfs is slower than typical linux filesystems for these lookups\n", "actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n", "if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n", "although i myself have prior experience in implementing filesystems much simpler ones than ntfs xfs or ext2 i would not tackle this job\n", "when people say that unix filesystems are better they might mean to be saying oh ext3 stores bits in such as way that corruption happens way less than ntfs but they might also be talking about design choices made at the common layer above\n", "ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n", "if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n", "generally the performance of hard filesystems like ntfs is better than that of traditional unix filesystems\n", "ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n", "actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n", "the problem is that windows ntfs is slower than typical linux filesystems for these lookups\n", "nobody has ever accused git of being easy-to-use no tortoisegit for example although i hear it s coming so you might be better off with svn beanstalk\n", "the compare dialog of tortoisegit is more about file and with git you have to compare two master branches not just two commits of the same branches both pointing to the same svn central repo\n", "from what i understand octal was more popular than hex among users of 18-bit architectures since a word would be exactly 6 octal digits\n", "the octal encoding mechanism is less error-prone than hex so i ll demonstrate using octal\n", "apparently octal format was more popular than hex format\n", "from what i understand octal was more popular than hex among users of 18-bit architectures since a word would be exactly 6 octal digits\n", "the octal encoding mechanism is less error-prone than hex so i ll demonstrate using octal\n", "apparently octal format was more popular than hex format\n", "conceptually it seems like a type of central authentication system cas but is more similar to shibboleth also a federated identity management system\n", "conceptually it seems like a type of central authentication system cas but is more similar to shibboleth also a federated identity management system\n", "unfortunately using hex consumes way more space and takes significantly longer i m dealing with 500gb of data and around 1 2 million records so i would really like to get the straight binary method to work\n", "as others have pointed out hex is much more convenient than binary anyway - you just need to remember how each of the hex digit 0-f looks in binary and replace groups of 4 bits with a single hex digit\n", "hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n", "unfortunately using hex consumes way more space and takes significantly longer i m dealing with 500gb of data and around 1 2 million records so i would really like to get the straight binary method to work\n", "hex is just less verbose and can express anything a binary number can\n", "and because hex is much more readable and useful than binary - it s often used and shown\n", "format_int in binary case it loops 4 times then 4 times more than hex and dec cases\n", "hex is just less verbose and can express anything a binary number can\n", "the conversion from hex to binary is even simpler since you can simply expand each hex digit into the corresponding binary for example 0xa4 - 1010 0100\n", "as others have pointed out hex is much more convenient than binary anyway - you just need to remember how each of the hex digit 0-f looks in binary and replace groups of 4 bits with a single hex digit\n", "those hex values seem a bit odd they re powers of two in decimal but in any case 0x128 the 0x is a standard prefix for hex numbers is the larger of the numbers in magnitude and its binary representation is 100101000\n", "base64 is usually used in instances to represent arbitrary binary data in a text format it has a 33.3 overhead but that s better than say hex notation which has a 50 overhead\n", "this is still accepted by calls like inet_addr and has several advantages all fields are fixed width there are only 8 characters to update and the binary to hex conversion is usually faster than binary to decimal\n", "hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n", "one important reason is because hex is alot shorter and easier to read than binary is for humans\n", "as others have pointed out hex is much more convenient than binary anyway - you just need to remember how each of the hex digit 0-f looks in binary and replace groups of 4 bits with a single hex digit\n", "- i usually find debugging memory in hex x command is easier than binary so i will not use my solution\n", "this is still accepted by calls like inet_addr and has several advantages all fields are fixed width there are only 8 characters to update and the binary to hex conversion is usually faster than binary to decimal\n", "it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers\n", "if the right side the binary side is greater than or equal to the hex side then you print true if not then you print false\n", "hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n", "it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers\n", "hex is easier for most people to convert to and from binary in their heads since binary numbers are usually expressed in blocks of eight because that s the size of a byte and eight is exactly two hex digits but hex notation would have been clunky and misleading in dennis time implying the ability to address 16 bits\n", "i ve been using images to store data since editing binary data through paint.net is much friendlier than most hex editors\n", "hex encoding is far more readable than binary that s why sublime uses it\n", "hex encoding is far more readable than binary that s why sublime uses it\n", "converting between decimal and hex is more involving and at least to me it s been easier if i have to do it in my head to first convert the decimal into binary representation and then the binary number into hex\n", "but when anyone human looks at it they look at it in hex using a hex editor which is much easier than reading binary\n", "a hex string is significantly longer than the corresponding binary string\n", "hex encoding is far more readable than binary that s why sublime uses it\n", "and because hex is much more readable and useful than binary - it s often used and shown\n", "in this case i converted the cvs to svn and found the file size on the hard drive it was on my own laptop at the time but it was much smaller in svn than in cvs but there could have been some compression applied i dont know but everything on the web said svn would actually be bigger than cvs\n", "that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs\n", "wondering mainly if svn uses less disk space or more than the same in cvs\n", "the other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes years\n", "svn was supposed to be better than cvs but in some areas that didn t work well\n", "if you use svn then it still okay because svn handles binary files much better than cvs\n", "in addition another coworker said cvs was a lot more popular than svn\n", "part of the point of svn was to make the use of branches and merging much easier than in cvs\n", "i can only guess at the reasons and i don t worry much about the occasional downvote but perhaps some readers think i m advocating cvs as a better system than svn or git\n", "svn is much better then cvs and git or mercurial are even better again\n", "svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features\n", "svn in much better than cvs and have lot of mature tools for every platform\n", "in fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faq\n", "svn is much better then cvs and git or mercurial are even better again\n", "svn is better than cvs\n", "for all the reasons linked in the comment and elsewhere svn tends to be a much better enviroment than cvs or vss unless you have some weird requirements - so if you can successfully import your history and save the company money i wouldn t see why the bosses wouldn t go for it\n", "wondering mainly if svn uses less disk space or more than the same in cvs\n", "the first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as well\n", "in this case i converted the cvs to svn and found the file size on the hard drive it was on my own laptop at the time but it was much smaller in svn than in cvs but there could have been some compression applied i dont know but everything on the web said svn would actually be bigger than cvs\n", "that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs\n", "wondering mainly if svn uses less disk space or more than the same in cvs\n", "the other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes years\n", "svn was supposed to be better than cvs but in some areas that didn t work well\n", "if you use svn then it still okay because svn handles binary files much better than cvs\n", "in addition another coworker said cvs was a lot more popular than svn\n", "part of the point of svn was to make the use of branches and merging much easier than in cvs\n", "i can only guess at the reasons and i don t worry much about the occasional downvote but perhaps some readers think i m advocating cvs as a better system than svn or git\n", "svn is much better then cvs and git or mercurial are even better again\n", "svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features\n", "svn in much better than cvs and have lot of mature tools for every platform\n", "in fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faq\n", "svn is much better then cvs and git or mercurial are even better again\n", "svn is better than cvs\n", "for all the reasons linked in the comment and elsewhere svn tends to be a much better enviroment than cvs or vss unless you have some weird requirements - so if you can successfully import your history and save the company money i wouldn t see why the bosses wouldn t go for it\n", "wondering mainly if svn uses less disk space or more than the same in cvs\n", "the first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as well\n", "just a wild guess here but if you re using cvsnt on the server this observation might be based on the fact that cvsnt simply is much better at merging than svn because it has the notion of mergepoints\n", "you ll need to convert binary to another base here i use decimal when writing this code because c doesn t have binary constants which would be ten times more useful than octal constants\n", "however svn protocol is much faster so i suggest using collabnet svn for performance reasons\n", "however svn protocol is much faster so i suggest using collabnet svn for performance reasons\n", "microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already\n", "microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already\n", "this means the buffer is enough for printing the number in octal and since decimal representation uses no more digits than octal it will be enough for decimal representation too\n", "this means the buffer is enough for printing the number in octal and since decimal representation uses no more digits than octal it will be enough for decimal representation too\n", "bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n", "bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n", "hex or maybe octal depending on the machine being emulated will be clearer than using decimal since similar opcodes tend to vary in bits not digits\n", "this means the buffer is enough for printing the number in octal and since decimal representation uses no more digits than octal it will be enough for decimal representation too\n", "this means the buffer is enough for printing the number in octal and since decimal representation uses no more digits than octal it will be enough for decimal representation too\n", "bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n", "bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n", "hex or maybe octal depending on the machine being emulated will be clearer than using decimal since similar opcodes tend to vary in bits not digits\n", "trac s issue tracking is little better than bugzilla s...i know a lot of folks love trac but i find it very inflexible\n", "can a nsis section create more than 1 uninstaller\n", "i didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomla\n", "i didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomla\n", "hdfs high availabilty is only available when you have more than one namenode configured\n", "bazaar seems much more like svn with branches just being separate directories so maybe not\n", "bazaar seems much more like svn with branches just being separate directories so maybe not\n", "for a presentation i need to show ext4 filesystems is better than ntfs\n", "for a presentation i need to show ext4 filesystems is better than ntfs\n", "btrfs is more sophisticated than most filesystems and it includes support for multiple devices\n", "btrfs is more sophisticated than most filesystems and it includes support for multiple devices\n", "grub can boot btrfs partitions however the module may be larger than other filesystems\n", "the latter spf is easier make an entry in your dns entries for the server sender domain in question that looks like this\n", "the latter spf is easier make an entry in your dns entries for the server sender domain in question that looks like this\n", "ansible will be hard to combine with docker at least harder than puppet or chef\n", "ansible will be hard to combine with docker at least harder than puppet or chef\n", "and linux read write support for ntfs is more omnipresent than for hfs+ \u00e2 linux still can t write to hfs+ formatted volumes with journaling enabled\n", "and linux read write support for ntfs is more omnipresent than for hfs+ \u00e2 linux still can t write to hfs+ formatted volumes with journaling enabled\n", "not sure if the transfer speed with xfs will be much better than with ntfs - 25 mb s is a typical limit for some usb controllers\n", "or i prefer a multiboot usb even if there s only one .iso to boot since it doesn t overwrite the whole drive s partition table like plain dd does and you can use a filesystems like ext3 4 or something more reliable than fat fat usb s tend to erase all their filenames somewhat regularly for me somehow never a problem on the same usb with ext3\n", "or i prefer a multiboot usb even if there s only one .iso to boot since it doesn t overwrite the whole drive s partition table like plain dd does and you can use a filesystems like ext3 4 or something more reliable than fat fat usb s tend to erase all their filenames somewhat regularly for me somehow never a problem on the same usb with ext3\n", "to be honest i found hex easier than binary to read\n", "grub can boot btrfs partitions however the module may be larger than other filesystems\n", "some of the higher-end synology models alternatively allow the use of btrfs which is a more modern filesystems with its own support for raid\n", "some of the higher-end synology models alternatively allow the use of btrfs which is a more modern filesystems with its own support for raid\n", "since no one mentioned any specific filesystems more modern filesystems ext3 ext4 ntfs are able to handle crashes much better than older filesystems ext2 ext fat32 due to journaling\n", "the device driver usually applies this restriction to the higher level and also reading whole sector with ntfs superblock is much more faster than reading the same sector several times implicitly because of a driver that translates byte range requests to sector requests so filesystems drivers are also performing read and write operations by sectors or any multiplies of sectors there exists a technology called dma -- direct memory access -- that allows reading and writing large bursts of sectors without using cpu time thus making disk access very fast\n", "i was wondering if copying files between different filesystems for example from ext4 to ntfs is slower than copying to the same filesystems from ext4 to ext 4\n", "one way to help with data recovery is to use a filesystems that is more tolerant of corruption and contains better backup and recovery functions such as ntfs over fat32\n", "ntfs has always been a more powerful filesystems than fat and fat32\n", "ntfs is more robust as filesystems go but isn t supported as well on non-windows operating systems\n", "the device driver usually applies this restriction to the higher level and also reading whole sector with ntfs superblock is much more faster than reading the same sector several times implicitly because of a driver that translates byte range requests to sector requests so filesystems drivers are also performing read and write operations by sectors or any multiplies of sectors there exists a technology called dma -- direct memory access -- that allows reading and writing large bursts of sectors without using cpu time thus making disk access very fast\n", "as that is described as a notable feature of this filesystems such features are likely more developed than with ntfs and certainly more than fat which was comparatively simple in nature and so had virtually no such features\n", "most likely your ubuntu and fedora partitions will use the ext4 filesystems that has a higher degree of resiliency against disk fragmentation than the windows-used ntfs\n", "ntfs is more robust as filesystems go but isn t supported as well on non-windows operating systems\n", "one way to help with data recovery is to use a filesystems that is more tolerant of corruption and contains better backup and recovery functions such as ntfs over fat32\n", "most likely your ubuntu and fedora partitions will use the ext4 filesystems that has a higher degree of resiliency against disk fragmentation than the windows-used ntfs\n", "since no one mentioned any specific filesystems more modern filesystems ext3 ext4 ntfs are able to handle crashes much better than older filesystems ext2 ext fat32 due to journaling\n", "the device driver usually applies this restriction to the higher level and also reading whole sector with ntfs superblock is much more faster than reading the same sector several times implicitly because of a driver that translates byte range requests to sector requests so filesystems drivers are also performing read and write operations by sectors or any multiplies of sectors there exists a technology called dma -- direct memory access -- that allows reading and writing large bursts of sectors without using cpu time thus making disk access very fast\n", "i was wondering if copying files between different filesystems for example from ext4 to ntfs is slower than copying to the same filesystems from ext4 to ext 4\n", "one way to help with data recovery is to use a filesystems that is more tolerant of corruption and contains better backup and recovery functions such as ntfs over fat32\n", "ntfs has always been a more powerful filesystems than fat and fat32\n", "ntfs is more robust as filesystems go but isn t supported as well on non-windows operating systems\n", "the device driver usually applies this restriction to the higher level and also reading whole sector with ntfs superblock is much more faster than reading the same sector several times implicitly because of a driver that translates byte range requests to sector requests so filesystems drivers are also performing read and write operations by sectors or any multiplies of sectors there exists a technology called dma -- direct memory access -- that allows reading and writing large bursts of sectors without using cpu time thus making disk access very fast\n", "as that is described as a notable feature of this filesystems such features are likely more developed than with ntfs and certainly more than fat which was comparatively simple in nature and so had virtually no such features\n", "most likely your ubuntu and fedora partitions will use the ext4 filesystems that has a higher degree of resiliency against disk fragmentation than the windows-used ntfs\n", "ntfs is more robust as filesystems go but isn t supported as well on non-windows operating systems\n", "one way to help with data recovery is to use a filesystems that is more tolerant of corruption and contains better backup and recovery functions such as ntfs over fat32\n", "most likely your ubuntu and fedora partitions will use the ext4 filesystems that has a higher degree of resiliency against disk fragmentation than the windows-used ntfs\n"], "structure": ["namedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named access\n", "namedtuple is faster and significantly more memory efficient than a dictionary\n", "2 you probably want a namedtuple - i m pretty sure they re lighter than dictionary and you can access properties using dot notation for which i have an aesthetic preference anyway\n", "depending on your use case a dictionary might fit better than a namedtuple\n", "creating an instance of the namedtuple is easier than creating a dictionary\n", "as namedtuple lighter than dictionary\n", "namedtuple should perform better less overhead than dictionary if the lists are long\n", "namedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named access\n", "namedtuple is faster and significantly more memory efficient than a dictionary\n", "2 you probably want a namedtuple - i m pretty sure they re lighter than dictionary and you can access properties using dot notation for which i have an aesthetic preference anyway\n", "depending on your use case a dictionary might fit better than a namedtuple\n", "creating an instance of the namedtuple is easier than creating a dictionary\n", "as namedtuple lighter than dictionary\n", "namedtuple should perform better less overhead than dictionary if the lists are long\n", "1 might not yet be sparse enough to make this better compared to just a plain bitarray assuming longs storing 64 bits each it doesn t take more than 2 longs to have more than one bitset on average but if the sparsity increases beyond that the space and time savings will show\n", "1 might not yet be sparse enough to make this better compared to just a plain bitarray assuming longs storing 64 bits each it doesn t take more than 2 longs to have more than one bitset on average but if the sparsity increases beyond that the space and time savings will show\n", "if you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple places\n", "if you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple places\n", "if you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple places\n", "if you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple places\n", "in a single thread world is different you can use a sorted set a binary tree or your custom data structure that would perform better than concurrent skip-lists\n", "so as you can see the random binary search tree was rather a lot better than the skip-lists\n", "i have to develop a better queue that works more efficiently than the fifo queue\n", "i have to develop a better queue that works more efficiently than the fifo queue\n", "i have to develop a better queue that works more efficiently than the fifo queue\n", "i have to develop a better queue that works more efficiently than the fifo queue\n", "kdtree needs less memory than octree and sometimes is even faster\n", "kdtree needs less memory than octree and sometimes is even faster\n", "why is the bitvector 32 structure more efficient than bitarray\n", "you will probably find that bitvector performs a good deal better than bitarray\n", "the other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposes\n", "for-loop is more suitable for any countable loops\n", "if the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrays\n", "the only difference in the two loops is the one if statement in the second double for-loop and loops is slightly longer but in the game the second for-loop is only rendering 3 things as there are only 3 platforms being rendered at this point int time\n", "i think using for-loop is much more easier than using foreach loops to do this\n", "that is because that style of loops is a better fit for what you are doing than the for-loop you used earlier\n", "because i heard that for-loop is much faster than foreach loops\n", "can you explain me why in this case the parfor loops is slower than the for-loop\n", "i noticed some time ago that a for-loop typically generates several more machine instructions than a while loops\n", "in a language like c a for-loop is more or less syntactic sugar for a while loops\n", "a while loops is more readable than a for-loop\n", "i just wanted to point out my answer since i know for-loop is faster then loops\n", "here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n", "so i decide instead of writing out chucks of code for each of the 10 possible health point not to mention there are other player stats that will be done in the same format i decided upon scraping together a for-loop with two if-else statements to attempt a loops to fill each grid element as long as the health value is greater than the for-loop s i\n", "instead of using a while loops it is easier to use a for-loop\n", "a while loops makes more sense to me than your use of a for-loop\n", "a loops using a callback function like the standard foreach was approximately 10 times slower than the for-loop\n", "says that enhanced for loops is 3x faster than the regular for-loop well that great and its easier to write anyways but what if i need the index\n", "for looping over lines in files you can use a for-loop which is more readable than while loops\n", "here i started above testing with the aim that c for-loop performance will be better than c# loops but it goes exactly opposite with my understanding and gone with this question and agreed...but when i increase the upper range of for-loop the c performance goes well as compared to c#.\n", "since i am using two for loops it is consuming more time and is affecting the execution time of my entire program which already had a for-loop\n", "although both approaches are o n the for-loop has a larger constant because of loops overhead\n", "0 a do while loops that pre-decrements count --count and compares to zero is better than a for-loop that compares two variables\n", "this is a use case where a for-loop is cleaner to use than a while loops\n", "a for-loop is more natural than a while loops but you requested no for\n", "loops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expression\n", "the while loops with decrements was approximately 1.5 times slower than the for-loop\n", "in your case for-loop is better as changed in loops value is numeric\n", "a while loops makes more sense in this situation or a for-loop without initialization\n", "the while loops runs 3000 times faster than the for-loop\n", "also if you can do the above you can probably just as easily turn your code into a for-loop which seems more appropriate given your desire to a break out of loops b use the operator to cause side effects\n", "a basic for-loop is slower than a for - loops with simplified test condition\n", "i came across a situation where i need to implement a for-loop with more than one loops control variable\n", "this is why a regular for-loop is better to use for this scenario rather than a foreach loops\n", "so we can see that an optimised while loops is faster than a for-loop by 2 operations however it uses more stack space\n", "the result amazed me in the way that as loops goes over bigger range the performance of c# decreases as compared to c..for smaller range c# shown well performance over c....but as upper range of for-loop increases the c# performance degrades as compare to c..\n", "you should use a for-loop which is more convenient to loops in an arrays\n", "the range-based for-loop syntax is cleaner and more universal but you can t execute the code in loops for a specified range different than from begin to end\n", "the reverse while loops is generally faster than a for-loop as well\n", "the class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascal\n", "that means you don t know how many iterations you re going to need so a while loops is more suited to this task than a for-loop\n", "but certainly wrong syntax in the for-loop is there better way to code it so that after loops i can get\n", "so why while loops is faster than for-loop and why need bunch of lists\n", "i prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as follows\n", "finally we concluded after we put print statement inside for-loop that it will take much more time than loops in the first case without print statement\n", "if you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at this\n", "this conclusion would follow from a logic if an unrolled loops is faster than a for-loop executing a lot of unrolled loops should be faster than executing a lot of for loops\n", "but is there any specific situation when while loops is better than for-loop\n", "on the other hand for-loop is more like counter based where you want to specify for how many times should loops happened\n", "also a while loops seems more appropriate and self-explanatory in this situation than a for-loop\n", "a for-loop is faster than a foreach loops\n", "that is because that style of loops is a better fit for what you are doing than the for-loop you used earlier\n", "which loops is a better fit do while or a for-loop\n", "a for-loop is more natural for this than a while loops\n", "even if a foreach loops were faster than a for-loop there are still operations being carried out that wouldn t be in your manual example\n", "as for your question a for-loop is usually better when you want a piece of code to run a certain number of times and a while loops is better when the condition for the code to keep running is more general such as having a boolean flag that is only set to true when a certain condition is met in the code block\n", "a becomes 10 while it is still inside of the for-loop and gets larger than 10 when the while loops goes for a second run\n", "i have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loops\n", "a for-loop is more sppropriate than a while loops\n", "is the foreach loops slower than the for-loop\n", "a single for-loop is generally faster than using 2 nested for loops to traverse the image with x y counters\n", "a while loops or do...while loops is more appropriate here than a for-loop because you do not know how many times the user wants to execute loops\n", "but certainly wrong syntax in the for-loop is there better way to code it so that after loops i can get\n", "having said i am really not sure why you are getting unexpected behavior i ran your code both in eclipse and intellij ide and i always got for-loop approach as faster than while loops\n", "a while loops is better thought of as a looping version of an if statement than akin to a for-loop\n", "your loops would be cleaner as a for-loop\n", "secondly you will find a for-loop is easier than a do loops for implementing the logic as you don t need to keep track of loops counter manually\n", "some people use array.prototype.slice to do that but i m not a fan and i think a for-loop is faster in most browsers - but either way i have nothing against for loops and the slice often feels like a hack to me\n", "they are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there together\n", "a for-loop is more natural than a while loops but you requested no for\n", "i found a simple condition where using while loops is better than for-loop\n", "the conclusion of the article is that using for-loop is generally better and faster than the foreach loops\n", "i have the impression that the implementantion has something to do with a for-loop and some kind of adaptive delay that gets bigger as loops count increases\n", "a for-loop fits better to your requirements than a while loops\n", "then you should achive them with a counter and maybe a for-loop is better then while loops\n", "if you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at this\n", "in your case for-loop is better as changed in loops value is numeric\n", "again same error but while loops clearly survived more than for-loop\n", "they are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there together\n", "note that the for-loop based on the string assignment a_string runs one time more than loops based on the inline assignment a_inline -- notice the last number -3.46945e-18\n", "i personally think the while loops looks less clean than the nested for-loop\n", "-in the same laptop but using the hpc cluster of my department with 30 workers the parfor loops is much much slower than the for-loop and than the parfor loops using the local cluster with 12 workers\n", "for-loop is more suitable for any countable loops\n", "a while loops makes more sense in this situation or a for-loop without initialization\n", "loops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expression\n", "to achieve the actual goal you maybe able to use plain for-loop which provides more flexibility in controlling loops instead of using while\n", "and last if you know the number of loops it is much easier and better to read when you use a for-loop instead of a while loops\n", "a for-loop is more natural for this than a while loops\n", "also the for-loop is more readable than the while loops because it puts all loops variable manipulation in one place\n", "in some cases hand-writing a for-loop is much faster than the equivalent accelerate functions because the compiler can optimize your loops better than the function\n", "you should use a for-loop which is more convenient to loops in an arrays\n", "you need here while loops better than for-loop\n", "hey guys can anyone tell me why my code in this jsperf seems to indicate that a for-loop is actually faster than a while loops\n", "putting the whole thing in a for-loop makes it neater and ensures that the iterating isread is called each loops\n", "but the the foreach loops takes more time than a the for-loop\n", "in practical programming languages the distinction between the two is a bit blurred but is important to know that the c java for-loop is closer to a theoretical while loops while the pascal for behaves more like the theoretical for-loop\n", "you could also use a for each loops to handle this though that type of loops is slower than a standard for-loop depending on application\n", "the nested loops version is the slower of the two due to the extra the interpreter overhead of the for-loop\n", "if i have to use the value of counter in my program then i think while loops is better than for-loop\n", "for-loop is faster then foreach and foreach is faster then for in loops\n", "also if you can do the above you can probably just as easily turn your code into a for-loop which seems more appropriate given your desire to a break out of loops b use the operator to cause side effects\n", "can anyone explain why the while loops is taking more time than the for-loop even though the looping of i and j is almost same\n", "however the while loops remains a little slower than the for-loop\n", "now assuming that your inner loops is more complex and the simple for-loop is slower let s look at how much memory we save by avoiding broadcasted data in a parfor with 4 workers and a dataset with 50 million rows for about 760 mb in ram\n", "each line can do one of three things it can call a function which modifies it s argument start a while loops which is really more of a for-loop or assign a variable\n", "a for-loop is more sppropriate than a while loops\n", "i ve done a small experiment as will be shown below and it looks like that a while loops is faster than a for-loop in perl\n", "is for-loop is faster than while loops\n", "in my tests i found that one of the loops i tested titled for-loop is astronomically slower than the other loops\n", "in ... for-loop it s consider better practice to loops trough it with a regular for\n", "i think you can best use the for-loop this gives you a little bit more control over loops\n", "but according to this answer a for-loop is executed faster than the equivalent while loops\n", "i have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loops\n", "recently i ve stumbled upon a parralel.for loops that performs way better than a regular for-loop for my purposes\n", "also as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counter\n", "usually if you re going to consume all the elements of the iterator in a single loops it is better to use the for-loop approach and it will be better using the enhanced for-loop that already uses iterator behind the scenes\n", "if you need to do something a set number of times a for-loop is generally more concise than a while loops\n", "update i made some changes to my code but was already suspecting what others here have already pointed out sure the enhanced for-loop is slower but outside of very trivial tight loops the cost should be a miniscule fraction of the cost of the logic of loops\n", "a for-loop is nothing more than a glorified while loops\n", "since i am using two for loops it is consuming more time and is affecting the execution time of my entire program which already had a for-loop\n", "and the results is that foreach loops is 5-6 times faster than the for-loop\n", "my view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2\n", "i just wanted to point out my answer since i know for-loop is faster then loops\n", "also the for-loop is more readable than the while loops because it puts all loops variable manipulation in one place\n", "to my mind a for-loop is simpler to understand than traversing the list backwards with a while loops\n", "using a while loops we can control the flow of i better than a for-loop\n", "loops recur is faster - it s one of the most efficient constructs in clojure done correctly it should match the speed of an equivalent for-loop in java code\n", "it s worth pointing out that in general the foreach loops is more expensive memory-wise compared to the for-loop see here for details\n", "it might be better than a for-loop in the terms of readability maintainability but keep in mind that linq usually slower than plain loops tl\n", "lastly whenever you want to iterate x amount of times a for-loop is always more readable than a while loops that uses a counter variable\n", "if you won t be changing the string in loops it is better faster to store the value in and then include it in the for-loop\n", "the multiprocessed loops is slower than doing the for-loop\n", "additionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loops\n", "i personally think the while loops looks less clean than the nested for-loop\n", "a for-loop should be used don t you think what loops makes is more clearly stated in the for-loop\n", "a for-loop is usually faster than a while loops and it is more difficult to build an endless loops than it is by using a while loops\n", "xrange will give you an iterable object that won t use memory as you iterate a for-loop is cleaner than a while loops + counter if you ask me\n", "i think that instead of a for-loop is better a while because when you find your item can break loops\n", "i would expect a while loops to be slower than a for-loop since it needs to test a condition before each iteration\n", "foreach or for-loop is somewhat slower than an equivalent while loops or tail recursion the benchmark i linked to above shows a 15x performance difference with 1000+ iterations though it will likely depend on the version of scala and the version of the jre...\n", "however arrayfun is just a for-loop in disguise and is often slower than writing loops explicitly\n", "it s worth pointing out that in general the foreach loops is more expensive memory-wise compared to the for-loop see here for details\n", "the for-loop is faster than the while loops when n 1000000 each takes roughly 0.105544 and 0.2389421\n", "arraylist - for-loop is about more than 2 times faster speed than foreach loops\n", "the problem is that when the program first gets to the for-loop 9 is not less than 0 so the value is false and it skips loops\n", "i m binding a grid view inside a for-loop which executes more than once.now when loops ends the data in grid view is the data binded at the last run of for-loop i.e all previous binds in the for-loop over overwritten.i dont want this .i want new rows to be inserted at each run of the for-loop ..plz help somebody\n", "the for-loop is using i as a global variable so if your instance.set_marker function is also using i as a global variable and sets its value to something greater than 6 loops will exit\n", "really a while loops would probably have been clearer than a for-loop on reflection\n", "its really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop\n", "thus your for-loop is probably better expressed as following while loops\n", "a c-style for-loop has more flexibility but ultimately you can write an equivalent loops with python s while or c s while for that matter which touches not only on the \u00e2 \u0153one obvious way\u00e2 principle but also \u00e2 \u0153simple is better than complex\u00e2 amongst others\n", "the class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascal\n", "the result amazed me in the way that as loops goes over bigger range the performance of c# decreases as compared to c..for smaller range c# shown well performance over c....but as upper range of for-loop increases the c# performance degrades as compare to c..\n", "2 second loops is and easier for-loop to read\n", "but the the foreach loops takes more time than a the for-loop\n", "now assuming that your inner loops is more complex and the simple for-loop is slower let s look at how much memory we save by avoiding broadcasted data in a parfor with 4 workers and a dataset with 50 million rows for about 760 mb in ram\n", "its really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop\n", "this is one of the few cases where a while loops can be clearer and simpler than a for-loop\n", "the decremented while loops is still faster than the for-loop or the incremented while loops with length upper limit comparison by a fair margin\n", "max_size must be big enough because a for-loop is slower than lapply you want to do as little loops through the for as possible but not too big or the list extension overhead will make the program slower\n", "as the simple for-loop is faster than a foreach loops\n", "in theory the while loops is quicker because the for-loop looks up the length attribute of foo every time though loops but in real-world use it s going to make an immeasurably small difference\n", "imho loops looks better with a for-loop iterating in the right direction\n", "if the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrays\n", "for-loop is widly used and has more advantages over while loops but ther are some cases when while loops is perferable\n", "a for-loop is more appropriate than a while loops in your code\n", "and normal for-loop is faster than for-in loops\n", "i suspect your curly braces aren t in the correct place as per scheff s comment the scope of the page variable is contained within the for-loop and you are attempting to do more operations after loops is over\n", "now i went into this script there are for loops which are adding some values to the classpath for there are more than one for-loop\n", "as an aside i would suggest a while loops would be a bit clearer than a for-loop without a next clause\n", "therefore the parfor loops simply must be slower than the for-loop because it has to transmit data to the workers for them to operate on\n", "although both approaches are o n the for-loop has a larger constant because of loops overhead\n", "i am adding views dynamically to linear layout in a for-loop of more than 100 loops\n", "based on this not created by me the while loops is 22 slower than a for-loop in general\n", "a while loops is imo more complicated to read than a for-loop\n", "also the native for-loop is faster than any other jquery loops method\n", "here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n", "the for-loop question is more of someone building a loops with exit criterion inside the actual loops\n", "i did test it a while ago with the result that a for-loop is much faster than a foreach loops\n", "if you won t be changing the string in loops it is better faster to store the value in and then include it in the for-loop\n", "here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n", "i noticed some time ago that a for-loop typically generates several more machine instructions than a while loops\n", "a while loops is more readable than a for-loop\n", "i did this with for-loop too and while loops was clearly faster than for-loop again\n", "in this case i found while loops is better than for-loop because if i want to achieve the same in for-loop i have to assign the value of counter to another variable\n", "also as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counter\n", "lastly whenever you want to iterate x amount of times a for-loop is always more readable than a while loops that uses a counter variable\n", "can anyone explain why the while loops is taking more time than the for-loop even though the looping of i and j is almost same\n", "then you should achive them with a counter and maybe a for-loop is better then while loops\n", "foreach can simplify the code in a for-loop but it is a heavy object and is slower than a loops written using for.\n", "in ... for-loop it s consider better practice to loops trough it with a regular for\n", "the only browser where the while loops was slower than the for-loop was in opera\n", "to explain why a for-loop is faster than a for in loops is basically understand the underlying data structures used to store the data in memory\n", "if you need to do something a set number of times a for-loop is generally more concise than a while loops\n", "because i heard that for-loop is much faster than foreach loops\n", "a for-loop should be used don t you think what loops makes is more clearly stated in the for-loop\n", "note using apply functions instead of a for-loop is better but it depends on the actual purpose of your loops\n", "i think in terms of performance using a single for-loop is faster am i right 3 linqs will be eventually converted to 3 loops\n", "further as a for-loop it is easier to read as everything initialization loops condition expression to be executed after each iteration are all on one line\n", "the incrementor in the for-loop is more of a while 1 endless loops\n", "the other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposes\n", "salu is used for-loop counter so when you nest them more salu pressure is done and becomes a bottleneck when there are more than 9-10 loops nested maybe some intelligent algorithm using same counter for all loops should do the trick so not doing only salu in loops body but adding some valu instructions is a plus\n", "even if you use a lowly for-loop it s much easier to loops over the elements of a list than it is to construct variable names with paste and access the objects with get\n", "for-loop is easier to read than a while loops\n", "according to benchmark both sefan and the while loops answers take the same ammount of time fruity the while loops answers take a bit shorter with the for-loop answers in second but the multiple loops do answers take far longer\n", "one place where the enhanced for-loop is faster than a naively implemented traditional loops is something like this\n", "alternatively you could initialize i outside of the for-loop but then it s scoped larger than loops itself\n", "also this loops is better created as a for-loop\n", "additionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loops\n", "in a for-loop of more than 100 loops\n", "the scope of the variable in the test of the while loops is wider than the scope of variables declared in the header of the for-loop\n", "a while loops makes more sense to me than your use of a for-loop\n", "a while loops is imo more complicated to read than a for-loop\n", "for looping over lines in files you can use a for-loop which is more readable than while loops\n", "rewriting the while loops as a for-loop is nicer and makes it less likely to get an infinite loops\n", "i think using for-loop is much more easier than using foreach loops to do this\n", "your while loops always runs a fixed number of times so from a stylistic point of view you would be better off with a for-loop\n", "even if the hypothesis of the while loops being faster than the for-loop were true and it s not the loops you d had to change optimize wouldn t be the outer ones but the inner ones because those are executed more times\n", "the for-loop is slightly slower than the foreach loops\n", "the way you are using the kotlin for-loop is much closer to java s foreach loops for i indexes\n", "the while loops seems tighter than a for-loop from previous answer but look up for vs while logic\n", "a for-loop is more appropriate than a while loops in your code\n", "for-loop is faster then foreach and foreach is faster then for in loops\n", "the reverse while loops is generally faster than a for-loop as well\n", "also a while loops seems more appropriate and self-explanatory in this situation than a for-loop\n", "which loops is a better fit do while or a for-loop\n", "a while loops or do...while loops is more appropriate here than a for-loop because you do not know how many times the user wants to execute loops\n", "in example sendp method included in for-loop which is slower than making other loops to send packets\n", "as others have stated the python for-loop is more like a a traditional foreach loops in the sense that it iterates over a collection of items without checking a condition\n", "on windows the while loops above is 20 faster than the original for-loop in google-chrome in ie and firefox both loops perform the same\n", "a c-style for-loop has more flexibility but ultimately you can write an equivalent loops with python s while or c s while for that matter which touches not only on the \u00e2 \u0153one obvious way\u00e2 principle but also \u00e2 \u0153simple is better than complex\u00e2 amongst others\n", "why simd for-loop only 14 faster than foreach loops\n", "i find lapply loops easier than a for-loop in your case as initializing the list and using the counter can be avoided\n", "arraylist - for-loop is about more than 2 times faster speed than foreach loops\n", "the foreach loops is slower than the for-loop yet most people don t rewrite all of their code to use the for\n", "a while loops is better thought of as a looping version of an if statement than akin to a for-loop\n", "note my use of a foreach loops here which is much neater than your for-loop for this kind of thing\n", "this is happening because of speed of for-loop which is faster than your time .as loops iterates in time of less than miliseconds and generates values.you can only call it when you want to insert single value to database and don t iterate for values\n", "the other advice i have is that a for-each loops is faster than a for-loop\n", "i m working on an app to load an amount of images from sd card using asynctask + for-loop i ve test the app on my galaxy nexus the app working perfectly but it will crash if i use more than 33 loops\n", "i prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as follows\n", "the main problem i know is the while loops the logic behind it is not correct because last didah is always bigger than n for-loop counter\n", "using for-loop is much simpler if you use condition as limit for breaking loops\n", "to achieve the actual goal you maybe able to use plain for-loop which provides more flexibility in controlling loops instead of using while\n", "your while loops would be better written as a for-loop\n", "my view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2\n", "the decremented while loops is still faster than the for-loop or the incremented while loops with length upper limit comparison by a fair margin\n", "the other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposes\n", "for-loop is more suitable for any countable loops\n", "if the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrays\n", "the only difference in the two loops is the one if statement in the second double for-loop and loops is slightly longer but in the game the second for-loop is only rendering 3 things as there are only 3 platforms being rendered at this point int time\n", "i think using for-loop is much more easier than using foreach loops to do this\n", "that is because that style of loops is a better fit for what you are doing than the for-loop you used earlier\n", "because i heard that for-loop is much faster than foreach loops\n", "can you explain me why in this case the parfor loops is slower than the for-loop\n", "i noticed some time ago that a for-loop typically generates several more machine instructions than a while loops\n", "in a language like c a for-loop is more or less syntactic sugar for a while loops\n", "a while loops is more readable than a for-loop\n", "i just wanted to point out my answer since i know for-loop is faster then loops\n", "here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n", "so i decide instead of writing out chucks of code for each of the 10 possible health point not to mention there are other player stats that will be done in the same format i decided upon scraping together a for-loop with two if-else statements to attempt a loops to fill each grid element as long as the health value is greater than the for-loop s i\n", "instead of using a while loops it is easier to use a for-loop\n", "a while loops makes more sense to me than your use of a for-loop\n", "a loops using a callback function like the standard foreach was approximately 10 times slower than the for-loop\n", "says that enhanced for loops is 3x faster than the regular for-loop well that great and its easier to write anyways but what if i need the index\n", "for looping over lines in files you can use a for-loop which is more readable than while loops\n", "here i started above testing with the aim that c for-loop performance will be better than c# loops but it goes exactly opposite with my understanding and gone with this question and agreed...but when i increase the upper range of for-loop the c performance goes well as compared to c#.\n", "since i am using two for loops it is consuming more time and is affecting the execution time of my entire program which already had a for-loop\n", "although both approaches are o n the for-loop has a larger constant because of loops overhead\n", "0 a do while loops that pre-decrements count --count and compares to zero is better than a for-loop that compares two variables\n", "this is a use case where a for-loop is cleaner to use than a while loops\n", "a for-loop is more natural than a while loops but you requested no for\n", "loops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expression\n", "the while loops with decrements was approximately 1.5 times slower than the for-loop\n", "in your case for-loop is better as changed in loops value is numeric\n", "a while loops makes more sense in this situation or a for-loop without initialization\n", "the while loops runs 3000 times faster than the for-loop\n", "also if you can do the above you can probably just as easily turn your code into a for-loop which seems more appropriate given your desire to a break out of loops b use the operator to cause side effects\n", "a basic for-loop is slower than a for - loops with simplified test condition\n", "i came across a situation where i need to implement a for-loop with more than one loops control variable\n", "this is why a regular for-loop is better to use for this scenario rather than a foreach loops\n", "so we can see that an optimised while loops is faster than a for-loop by 2 operations however it uses more stack space\n", "the result amazed me in the way that as loops goes over bigger range the performance of c# decreases as compared to c..for smaller range c# shown well performance over c....but as upper range of for-loop increases the c# performance degrades as compare to c..\n", "you should use a for-loop which is more convenient to loops in an arrays\n", "the range-based for-loop syntax is cleaner and more universal but you can t execute the code in loops for a specified range different than from begin to end\n", "the reverse while loops is generally faster than a for-loop as well\n", "the class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascal\n", "that means you don t know how many iterations you re going to need so a while loops is more suited to this task than a for-loop\n", "but certainly wrong syntax in the for-loop is there better way to code it so that after loops i can get\n", "so why while loops is faster than for-loop and why need bunch of lists\n", "i prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as follows\n", "finally we concluded after we put print statement inside for-loop that it will take much more time than loops in the first case without print statement\n", "if you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at this\n", "this conclusion would follow from a logic if an unrolled loops is faster than a for-loop executing a lot of unrolled loops should be faster than executing a lot of for loops\n", "but is there any specific situation when while loops is better than for-loop\n", "on the other hand for-loop is more like counter based where you want to specify for how many times should loops happened\n", "also a while loops seems more appropriate and self-explanatory in this situation than a for-loop\n", "a for-loop is faster than a foreach loops\n", "that is because that style of loops is a better fit for what you are doing than the for-loop you used earlier\n", "which loops is a better fit do while or a for-loop\n", "a for-loop is more natural for this than a while loops\n", "even if a foreach loops were faster than a for-loop there are still operations being carried out that wouldn t be in your manual example\n", "as for your question a for-loop is usually better when you want a piece of code to run a certain number of times and a while loops is better when the condition for the code to keep running is more general such as having a boolean flag that is only set to true when a certain condition is met in the code block\n", "a becomes 10 while it is still inside of the for-loop and gets larger than 10 when the while loops goes for a second run\n", "i have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loops\n", "a for-loop is more sppropriate than a while loops\n", "is the foreach loops slower than the for-loop\n", "a single for-loop is generally faster than using 2 nested for loops to traverse the image with x y counters\n", "a while loops or do...while loops is more appropriate here than a for-loop because you do not know how many times the user wants to execute loops\n", "but certainly wrong syntax in the for-loop is there better way to code it so that after loops i can get\n", "having said i am really not sure why you are getting unexpected behavior i ran your code both in eclipse and intellij ide and i always got for-loop approach as faster than while loops\n", "a while loops is better thought of as a looping version of an if statement than akin to a for-loop\n", "your loops would be cleaner as a for-loop\n", "secondly you will find a for-loop is easier than a do loops for implementing the logic as you don t need to keep track of loops counter manually\n", "some people use array.prototype.slice to do that but i m not a fan and i think a for-loop is faster in most browsers - but either way i have nothing against for loops and the slice often feels like a hack to me\n", "they are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there together\n", "a for-loop is more natural than a while loops but you requested no for\n", "i found a simple condition where using while loops is better than for-loop\n", "the conclusion of the article is that using for-loop is generally better and faster than the foreach loops\n", "i have the impression that the implementantion has something to do with a for-loop and some kind of adaptive delay that gets bigger as loops count increases\n", "a for-loop fits better to your requirements than a while loops\n", "then you should achive them with a counter and maybe a for-loop is better then while loops\n", "if you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at this\n", "in your case for-loop is better as changed in loops value is numeric\n", "again same error but while loops clearly survived more than for-loop\n", "they are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there together\n", "note that the for-loop based on the string assignment a_string runs one time more than loops based on the inline assignment a_inline -- notice the last number -3.46945e-18\n", "i personally think the while loops looks less clean than the nested for-loop\n", "-in the same laptop but using the hpc cluster of my department with 30 workers the parfor loops is much much slower than the for-loop and than the parfor loops using the local cluster with 12 workers\n", "for-loop is more suitable for any countable loops\n", "a while loops makes more sense in this situation or a for-loop without initialization\n", "loops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expression\n", "to achieve the actual goal you maybe able to use plain for-loop which provides more flexibility in controlling loops instead of using while\n", "and last if you know the number of loops it is much easier and better to read when you use a for-loop instead of a while loops\n", "a for-loop is more natural for this than a while loops\n", "also the for-loop is more readable than the while loops because it puts all loops variable manipulation in one place\n", "in some cases hand-writing a for-loop is much faster than the equivalent accelerate functions because the compiler can optimize your loops better than the function\n", "you should use a for-loop which is more convenient to loops in an arrays\n", "you need here while loops better than for-loop\n", "hey guys can anyone tell me why my code in this jsperf seems to indicate that a for-loop is actually faster than a while loops\n", "putting the whole thing in a for-loop makes it neater and ensures that the iterating isread is called each loops\n", "but the the foreach loops takes more time than a the for-loop\n", "in practical programming languages the distinction between the two is a bit blurred but is important to know that the c java for-loop is closer to a theoretical while loops while the pascal for behaves more like the theoretical for-loop\n", "you could also use a for each loops to handle this though that type of loops is slower than a standard for-loop depending on application\n", "the nested loops version is the slower of the two due to the extra the interpreter overhead of the for-loop\n", "if i have to use the value of counter in my program then i think while loops is better than for-loop\n", "for-loop is faster then foreach and foreach is faster then for in loops\n", "also if you can do the above you can probably just as easily turn your code into a for-loop which seems more appropriate given your desire to a break out of loops b use the operator to cause side effects\n", "can anyone explain why the while loops is taking more time than the for-loop even though the looping of i and j is almost same\n", "however the while loops remains a little slower than the for-loop\n", "now assuming that your inner loops is more complex and the simple for-loop is slower let s look at how much memory we save by avoiding broadcasted data in a parfor with 4 workers and a dataset with 50 million rows for about 760 mb in ram\n", "each line can do one of three things it can call a function which modifies it s argument start a while loops which is really more of a for-loop or assign a variable\n", "a for-loop is more sppropriate than a while loops\n", "i ve done a small experiment as will be shown below and it looks like that a while loops is faster than a for-loop in perl\n", "is for-loop is faster than while loops\n", "in my tests i found that one of the loops i tested titled for-loop is astronomically slower than the other loops\n", "in ... for-loop it s consider better practice to loops trough it with a regular for\n", "i think you can best use the for-loop this gives you a little bit more control over loops\n", "but according to this answer a for-loop is executed faster than the equivalent while loops\n", "i have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loops\n", "recently i ve stumbled upon a parralel.for loops that performs way better than a regular for-loop for my purposes\n", "also as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counter\n", "usually if you re going to consume all the elements of the iterator in a single loops it is better to use the for-loop approach and it will be better using the enhanced for-loop that already uses iterator behind the scenes\n", "if you need to do something a set number of times a for-loop is generally more concise than a while loops\n", "update i made some changes to my code but was already suspecting what others here have already pointed out sure the enhanced for-loop is slower but outside of very trivial tight loops the cost should be a miniscule fraction of the cost of the logic of loops\n", "a for-loop is nothing more than a glorified while loops\n", "since i am using two for loops it is consuming more time and is affecting the execution time of my entire program which already had a for-loop\n", "and the results is that foreach loops is 5-6 times faster than the for-loop\n", "my view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2\n", "i just wanted to point out my answer since i know for-loop is faster then loops\n", "also the for-loop is more readable than the while loops because it puts all loops variable manipulation in one place\n", "to my mind a for-loop is simpler to understand than traversing the list backwards with a while loops\n", "using a while loops we can control the flow of i better than a for-loop\n", "loops recur is faster - it s one of the most efficient constructs in clojure done correctly it should match the speed of an equivalent for-loop in java code\n", "it s worth pointing out that in general the foreach loops is more expensive memory-wise compared to the for-loop see here for details\n", "it might be better than a for-loop in the terms of readability maintainability but keep in mind that linq usually slower than plain loops tl\n", "lastly whenever you want to iterate x amount of times a for-loop is always more readable than a while loops that uses a counter variable\n", "if you won t be changing the string in loops it is better faster to store the value in and then include it in the for-loop\n", "the multiprocessed loops is slower than doing the for-loop\n", "additionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loops\n", "i personally think the while loops looks less clean than the nested for-loop\n", "a for-loop should be used don t you think what loops makes is more clearly stated in the for-loop\n", "a for-loop is usually faster than a while loops and it is more difficult to build an endless loops than it is by using a while loops\n", "xrange will give you an iterable object that won t use memory as you iterate a for-loop is cleaner than a while loops + counter if you ask me\n", "i think that instead of a for-loop is better a while because when you find your item can break loops\n", "i would expect a while loops to be slower than a for-loop since it needs to test a condition before each iteration\n", "foreach or for-loop is somewhat slower than an equivalent while loops or tail recursion the benchmark i linked to above shows a 15x performance difference with 1000+ iterations though it will likely depend on the version of scala and the version of the jre...\n", "however arrayfun is just a for-loop in disguise and is often slower than writing loops explicitly\n", "it s worth pointing out that in general the foreach loops is more expensive memory-wise compared to the for-loop see here for details\n", "the for-loop is faster than the while loops when n 1000000 each takes roughly 0.105544 and 0.2389421\n", "arraylist - for-loop is about more than 2 times faster speed than foreach loops\n", "the problem is that when the program first gets to the for-loop 9 is not less than 0 so the value is false and it skips loops\n", "i m binding a grid view inside a for-loop which executes more than once.now when loops ends the data in grid view is the data binded at the last run of for-loop i.e all previous binds in the for-loop over overwritten.i dont want this .i want new rows to be inserted at each run of the for-loop ..plz help somebody\n", "the for-loop is using i as a global variable so if your instance.set_marker function is also using i as a global variable and sets its value to something greater than 6 loops will exit\n", "really a while loops would probably have been clearer than a for-loop on reflection\n", "its really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop\n", "thus your for-loop is probably better expressed as following while loops\n", "a c-style for-loop has more flexibility but ultimately you can write an equivalent loops with python s while or c s while for that matter which touches not only on the \u00e2 \u0153one obvious way\u00e2 principle but also \u00e2 \u0153simple is better than complex\u00e2 amongst others\n", "the class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascal\n", "the result amazed me in the way that as loops goes over bigger range the performance of c# decreases as compared to c..for smaller range c# shown well performance over c....but as upper range of for-loop increases the c# performance degrades as compare to c..\n", "2 second loops is and easier for-loop to read\n", "but the the foreach loops takes more time than a the for-loop\n", "now assuming that your inner loops is more complex and the simple for-loop is slower let s look at how much memory we save by avoiding broadcasted data in a parfor with 4 workers and a dataset with 50 million rows for about 760 mb in ram\n", "its really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop\n", "this is one of the few cases where a while loops can be clearer and simpler than a for-loop\n", "the decremented while loops is still faster than the for-loop or the incremented while loops with length upper limit comparison by a fair margin\n", "max_size must be big enough because a for-loop is slower than lapply you want to do as little loops through the for as possible but not too big or the list extension overhead will make the program slower\n", "as the simple for-loop is faster than a foreach loops\n", "in theory the while loops is quicker because the for-loop looks up the length attribute of foo every time though loops but in real-world use it s going to make an immeasurably small difference\n", "imho loops looks better with a for-loop iterating in the right direction\n", "if the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrays\n", "for-loop is widly used and has more advantages over while loops but ther are some cases when while loops is perferable\n", "a for-loop is more appropriate than a while loops in your code\n", "and normal for-loop is faster than for-in loops\n", "i suspect your curly braces aren t in the correct place as per scheff s comment the scope of the page variable is contained within the for-loop and you are attempting to do more operations after loops is over\n", "now i went into this script there are for loops which are adding some values to the classpath for there are more than one for-loop\n", "as an aside i would suggest a while loops would be a bit clearer than a for-loop without a next clause\n", "therefore the parfor loops simply must be slower than the for-loop because it has to transmit data to the workers for them to operate on\n", "although both approaches are o n the for-loop has a larger constant because of loops overhead\n", "i am adding views dynamically to linear layout in a for-loop of more than 100 loops\n", "based on this not created by me the while loops is 22 slower than a for-loop in general\n", "a while loops is imo more complicated to read than a for-loop\n", "also the native for-loop is faster than any other jquery loops method\n", "here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n", "the for-loop question is more of someone building a loops with exit criterion inside the actual loops\n", "i did test it a while ago with the result that a for-loop is much faster than a foreach loops\n", "if you won t be changing the string in loops it is better faster to store the value in and then include it in the for-loop\n", "here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n", "i noticed some time ago that a for-loop typically generates several more machine instructions than a while loops\n", "a while loops is more readable than a for-loop\n", "i did this with for-loop too and while loops was clearly faster than for-loop again\n", "in this case i found while loops is better than for-loop because if i want to achieve the same in for-loop i have to assign the value of counter to another variable\n", "also as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counter\n", "lastly whenever you want to iterate x amount of times a for-loop is always more readable than a while loops that uses a counter variable\n", "can anyone explain why the while loops is taking more time than the for-loop even though the looping of i and j is almost same\n", "then you should achive them with a counter and maybe a for-loop is better then while loops\n", "foreach can simplify the code in a for-loop but it is a heavy object and is slower than a loops written using for.\n", "in ... for-loop it s consider better practice to loops trough it with a regular for\n", "the only browser where the while loops was slower than the for-loop was in opera\n", "to explain why a for-loop is faster than a for in loops is basically understand the underlying data structures used to store the data in memory\n", "if you need to do something a set number of times a for-loop is generally more concise than a while loops\n", "because i heard that for-loop is much faster than foreach loops\n", "a for-loop should be used don t you think what loops makes is more clearly stated in the for-loop\n", "note using apply functions instead of a for-loop is better but it depends on the actual purpose of your loops\n", "i think in terms of performance using a single for-loop is faster am i right 3 linqs will be eventually converted to 3 loops\n", "further as a for-loop it is easier to read as everything initialization loops condition expression to be executed after each iteration are all on one line\n", "the incrementor in the for-loop is more of a while 1 endless loops\n", "the other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposes\n", "salu is used for-loop counter so when you nest them more salu pressure is done and becomes a bottleneck when there are more than 9-10 loops nested maybe some intelligent algorithm using same counter for all loops should do the trick so not doing only salu in loops body but adding some valu instructions is a plus\n", "even if you use a lowly for-loop it s much easier to loops over the elements of a list than it is to construct variable names with paste and access the objects with get\n", "for-loop is easier to read than a while loops\n", "according to benchmark both sefan and the while loops answers take the same ammount of time fruity the while loops answers take a bit shorter with the for-loop answers in second but the multiple loops do answers take far longer\n", "one place where the enhanced for-loop is faster than a naively implemented traditional loops is something like this\n", "alternatively you could initialize i outside of the for-loop but then it s scoped larger than loops itself\n", "also this loops is better created as a for-loop\n", "additionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loops\n", "in a for-loop of more than 100 loops\n", "the scope of the variable in the test of the while loops is wider than the scope of variables declared in the header of the for-loop\n", "a while loops makes more sense to me than your use of a for-loop\n", "a while loops is imo more complicated to read than a for-loop\n", "for looping over lines in files you can use a for-loop which is more readable than while loops\n", "rewriting the while loops as a for-loop is nicer and makes it less likely to get an infinite loops\n", "i think using for-loop is much more easier than using foreach loops to do this\n", "your while loops always runs a fixed number of times so from a stylistic point of view you would be better off with a for-loop\n", "even if the hypothesis of the while loops being faster than the for-loop were true and it s not the loops you d had to change optimize wouldn t be the outer ones but the inner ones because those are executed more times\n", "the for-loop is slightly slower than the foreach loops\n", "the way you are using the kotlin for-loop is much closer to java s foreach loops for i indexes\n", "the while loops seems tighter than a for-loop from previous answer but look up for vs while logic\n", "a for-loop is more appropriate than a while loops in your code\n", "for-loop is faster then foreach and foreach is faster then for in loops\n", "the reverse while loops is generally faster than a for-loop as well\n", "also a while loops seems more appropriate and self-explanatory in this situation than a for-loop\n", "which loops is a better fit do while or a for-loop\n", "a while loops or do...while loops is more appropriate here than a for-loop because you do not know how many times the user wants to execute loops\n", "in example sendp method included in for-loop which is slower than making other loops to send packets\n", "as others have stated the python for-loop is more like a a traditional foreach loops in the sense that it iterates over a collection of items without checking a condition\n", "on windows the while loops above is 20 faster than the original for-loop in google-chrome in ie and firefox both loops perform the same\n", "a c-style for-loop has more flexibility but ultimately you can write an equivalent loops with python s while or c s while for that matter which touches not only on the \u00e2 \u0153one obvious way\u00e2 principle but also \u00e2 \u0153simple is better than complex\u00e2 amongst others\n", "why simd for-loop only 14 faster than foreach loops\n", "i find lapply loops easier than a for-loop in your case as initializing the list and using the counter can be avoided\n", "arraylist - for-loop is about more than 2 times faster speed than foreach loops\n", "the foreach loops is slower than the for-loop yet most people don t rewrite all of their code to use the for\n", "a while loops is better thought of as a looping version of an if statement than akin to a for-loop\n", "note my use of a foreach loops here which is much neater than your for-loop for this kind of thing\n", "this is happening because of speed of for-loop which is faster than your time .as loops iterates in time of less than miliseconds and generates values.you can only call it when you want to insert single value to database and don t iterate for values\n", "the other advice i have is that a for-each loops is faster than a for-loop\n", "i m working on an app to load an amount of images from sd card using asynctask + for-loop i ve test the app on my galaxy nexus the app working perfectly but it will crash if i use more than 33 loops\n", "i prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as follows\n", "the main problem i know is the while loops the logic behind it is not correct because last didah is always bigger than n for-loop counter\n", "using for-loop is much simpler if you use condition as limit for breaking loops\n", "to achieve the actual goal you maybe able to use plain for-loop which provides more flexibility in controlling loops instead of using while\n", "your while loops would be better written as a for-loop\n", "my view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2\n", "the decremented while loops is still faster than the for-loop or the incremented while loops with length upper limit comparison by a fair margin\n", "quadtree is better for big open spaces and octree is better for in-door spaces with many levels\n", "this is little strange to me why if-statement is in this aspect treated worse than for-loop\n", "this is little strange to me why if-statement is in this aspect treated worse than for-loop\n", "the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n", "use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n", "finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n", "ps radix tree is usually faster and more compact then trie but suffers from the same side effects of trie comparing to hash tables though less significant of course\n", "should i change my project to trie or is there any other good reasons where avl tree woud be more efficient than trie in case of phonebook\n", "a suffix tree has less dummy nodes than the suffix trie\n", "use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n", "finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n", "the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n", "most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n", "a trie is better than a binary search tree for searching elements\n", "recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n", "for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n", "a suffix tree has less dummy nodes than the suffix trie\n", "the article says that a trie is better than binary tree as for a string of length m for trie it takes o m time and for binary tree it takes o m logn time\n", "most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n", "the article says that a trie is better than binary tree as for a string of length m for trie it takes o m time and for binary tree it takes o m logn time\n", "for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n", "a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie\n", "finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n", "recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n", "a trie is better suited to this kind of thing because it lets you store your symbols as a tree and quickly parse it to match values or reject them\n", "the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n", "use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n", "finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n", "ps radix tree is usually faster and more compact then trie but suffers from the same side effects of trie comparing to hash tables though less significant of course\n", "should i change my project to trie or is there any other good reasons where avl tree woud be more efficient than trie in case of phonebook\n", "a suffix tree has less dummy nodes than the suffix trie\n", "use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n", "finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n", "the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n", "most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n", "a trie is better than a binary search tree for searching elements\n", "recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n", "for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n", "a suffix tree has less dummy nodes than the suffix trie\n", "the article says that a trie is better than binary tree as for a string of length m for trie it takes o m time and for binary tree it takes o m logn time\n", "most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n", "the article says that a trie is better than binary tree as for a string of length m for trie it takes o m time and for binary tree it takes o m logn time\n", "for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n", "a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie\n", "finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n", "recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n", "a trie is better suited to this kind of thing because it lets you store your symbols as a tree and quickly parse it to match values or reject them\n", "the real dataframe has more columns in the multi-index\n", "the real dataframe has more columns in the multi-index\n", "the real dataframe has more columns in the multi-index\n", "the real dataframe has more columns in the multi-index\n", "i have also found that a while-loop is faster than a for-loop\n", "the reason for the second case much slower on sorted data is that a while-loop is cheaper than the equivalent for-loop when there are zero iterations\n", "also it seems like a for-loop is of greater cost to the compiler than a while-loop\n", "and now we know that for-loop is faster than while-loop\n", "edit just realized a while-loop may well be a lot cleaner than a for-loop for this\n", "also it seems like a for-loop is of greater cost to the compiler than a while-loop\n", "i have also found that a while-loop is faster than a for-loop\n", "the reason for the second case much slower on sorted data is that a while-loop is cheaper than the equivalent for-loop when there are zero iterations\n", "also it seems like a for-loop is of greater cost to the compiler than a while-loop\n", "and now we know that for-loop is faster than while-loop\n", "edit just realized a while-loop may well be a lot cleaner than a for-loop for this\n", "also it seems like a for-loop is of greater cost to the compiler than a while-loop\n", "i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and\u00e2 in at least some implementations\u00e2 leaves some optimisations to the user that dictionary already has\n", "i know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#\n", "map is slightly better because the shared dictionary has around 480 entries instead of around 450 but it s still inconsistent and not all 500 as expected\n", "if what you are making is a map from one word to another you might be better off with a dictionary\n", "the immutable dictionary implementation is faster but no less pure in usage than the map implementation\n", "the difference between a map and vector is a like an array while a map is more a dictionary of key value pairs\n", "i know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#\n", "c++ std map behaves more like a python defaultdict than dictionary\n", "for suitably large examples of each dictionary overcomes the constant factor by which it s slower than std map and will actually do operations like lookup insertion etc\n", "std map though is actually implemented in a way that many operations are slower than dictionary as its size gets large\n", "using this hint we can try to guess that a fixmap must correspond to a dictionary data type in c# since a map is more or less like a dictionary of key-value pairs\n", "i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and\u00e2 in at least some implementations\u00e2 leaves some optimisations to the user that dictionary already has\n", "data structure to implement reverse functionality of a dictionary that is more than one key map to a common value using python\n", "i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and\u00e2 in at least some implementations\u00e2 leaves some optimisations to the user that dictionary already has\n", "i know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#\n", "map is slightly better because the shared dictionary has around 480 entries instead of around 450 but it s still inconsistent and not all 500 as expected\n", "if what you are making is a map from one word to another you might be better off with a dictionary\n", "the immutable dictionary implementation is faster but no less pure in usage than the map implementation\n", "the difference between a map and vector is a like an array while a map is more a dictionary of key value pairs\n", "i know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#\n", "c++ std map behaves more like a python defaultdict than dictionary\n", "for suitably large examples of each dictionary overcomes the constant factor by which it s slower than std map and will actually do operations like lookup insertion etc\n", "std map though is actually implemented in a way that many operations are slower than dictionary as its size gets large\n", "using this hint we can try to guess that a fixmap must correspond to a dictionary data type in c# since a map is more or less like a dictionary of key-value pairs\n", "i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and\u00e2 in at least some implementations\u00e2 leaves some optimisations to the user that dictionary already has\n", "data structure to implement reverse functionality of a dictionary that is more than one key map to a common value using python\n", "an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n", "since it s an arrays it s better to use a for-loop with a counter variable i which starts from 1\n", "when you know both objects are arrays method is a faster way to check equality than for-loop\n", "looping with a for-loop is nothing more than a basic iteration of an arrays using a for-loop\n", "but the outer for-loop still runs 9 more times pushing temp which is already a set number onto the numbers arrays\n", "notice that besides using the filter method or not even with a plain for-loop is much better for performance create a new arrays from scratch instead of mutate the current one multiple times\n", "thus the for-loop is faster than the foreach-loop if the arrays must\n", "i completely failed to check that assertion and just jumped into the analysis of how the enhanced for-loop is faster on arrays than lists\n", "iterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loop\n", "to my knowledge and research so far - javascript s native for-loop is quicker than arrays map for iterating through the arrays\n", "i ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arrays\n", "the for-loop is faster than the foreach-loop if the arrays must only be accessed once per iteration\n", "the for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is found\n", "an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n", "but the outer for-loop still runs 9 more times pushing temp which is already a set number onto the numbers arrays\n", "edit using an enhanced for-loop is a lot better than using arrays\n", "on the last iteration of the outer for-loop ndx is one less than array.length so when you call arrays ndx+1 that is equivalent to arrays array.length which out of bounds since arrays start indexing at 0\n", "in such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arrays\n", "use a for-each loops to go through a range it s not as fast as using a variant arrays but keeps things simple and offers better speed than a for-loop\n", "the longer the arrays gets the more iterations your for-loop will need\n", "note that this is one of those cases where matrix division of large arrays takes longer than a for-loop\n", "the questions should i use for-loop or is it better to do it recursively next insert will be called after previous is done should i check if saved.length datalength and then return the arrays or is there some better way how to do it\n", "in this case instead of generating two large matrices with the row and column indices you can use a for-loop on the rows of your arrays it s slower but not as slow as a double for-loop\n", "with one arrays one can do which is easier than a for-loop\n", "as mentioned above as you remove items the arrays gets smaller so a for-loop is probably not the best solution\n", "it returns a byte arrays of all the pixels which can be iterated much faster than a for-loop with a call to getpixel inside nested inside another for-loop\n", "would an arrays be faster than a for-loop in this case\n", "a for-loop is more suitable to iterate through the arrays\n", "also change your logic in the for-loop to be not since i will not ever be greater than the arrays length\n", "i ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arrays\n", "so then i think to go with that approach i would end up with a for-loop and loads of add calls but surely that is even worse than the arrays copy isn t it\n", "so when you go up an arrays 0-9 you want the top of a for-loop to be less than the arrays length when you are going down the arrays 9-0 you want the lower bound to be less than or equal to the bottom of the arrays otherwise you will start out trying to access at 10 the arrays length and get an outofrangeexception\n", "im going to have a second for-loop that makes more arrays and names these arrays as the strings from my previous arrays\n", "the longer the arrays gets the more iterations your for-loop will need\n", "in your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default int\n", "but i don t want to use a for-loop as my json arrays has more than 3 entries and if i request a lot of data in short time it takes long time till the for-loop goes through every entry\n", "but you will have loops the outer arrays in order to get it to work which would be better done with a for-loop so you reference both at once\n", "but modifying the arrays is more work than a simple for-loop again\n", "it is clear without any performance tests that native javascript for-loop is faster but there is no big difference for small arrays like 10-20 small items\n", "also with the for-loop it s considered better to limit the scope of the iterating variable i and to use println you need system.out not just system and you need a string java arrays do not override tostring so something to output the numbers the user entered after loops like\n", "try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n", "i tried this code with my the big arrays it is around 10 to 20 times faster than a for-loop solution and around 200 times fast than the old code\n", "when summing an arrays over a specific axis the dedicated arrays method array.sum ax may actually be slower than a for-loop\n", "i am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrays\n", "running a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacements\n", "try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n", "the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n", "the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n", "but modifying the arrays is more work than a simple for-loop again\n", "note that you should check if index is within arrays bounds in such cases and that system.arraycopy is more efficient and arguably simpler than a for-loop for copying arrays\n", "this is a scenario where a traditional for-loop is more handy than just iterating over the arrays\n", "a for-loop is more adequate than a do while for simply iterating an arrays string\n", "the for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is found\n", "the hits arrays is longer than numtotalhits so your for-loop limit should be numtotalhits instead of hits.length\n", "but for the arrays it is better to use for-loop as shown by alnitak than for-in\n", "you can use array.prototype.find method to check if the element exists in arrays which is much better than perform a traditional for-loop\n", "i suppose the first option is good for small arrays but a for-loop is probably better practice as the amount of code would remain the same regardless of arrays size\n", "a for-loop is more suitable to iterate through the arrays\n", "in its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loop\n", "a for-loop is more adequate than a do while for simply iterating an arrays string\n", "when i try to access it with a for-loop where its index is less than the arrays length i get the following error message typeerror function object is unsubscriptable\n", "but the for-loop is not reading writing the last part of the parent file which is less than the arrays size\n", "to use this in a loops you can write a simple for-loop which always checks if the index stil is smaller than the arrays length\n", "but then normal for-loop is far better for arrays than using for-in which is actually for object\n", "in this case if any element in arrays is shorter than 11 symbols will become big and for-loop will stop executing\n", "the for-loop is faster than the foreach-loop if the arrays must only be\n", "when you know both objects are arrays method is a faster way to check equality than for-loop\n", "running a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacements\n", "it turns out i had a hard coded maximum index in my for-loop which was bigger than the arrays i was trying to assign to\n", "but when looping through an arrays it s better to use a regular for-loop\n", "because if the first word in arrays is shorter than second one you need second for-loop\n", "in such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arrays\n", "i fixed this by adding after the for-loop and before the return statement which fixes the problem but if the for-loop is written to continue while i is less than the arrays length and when the arrays only contains a the length is one and i is 0 shouldn t it also pop a\n", "if the length of the arrays is less than 8 a regular for-loop summation is performed\n", "for example sometimes a for-loop is faster than the built-in arrays methods in some browsers\n", "in my opinion a for-loop is usually better for doing something a specific number of times and if you re just iterating over every item in an arrays foreach is usually more straightforward\n", "i am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrays\n", "in your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default int\n", "okay so after telling the user to enter the size of the arrays the arrays was assigned to lets say 5 therefore in the first for-loop the program is checking if i is less than the arrays size so it can only be entered 5 times as that is the size of the arrays\n", "next i can use 3rd 4th and 5th level of arrays means more than for-loop statement will be assign\n", "above is a simplified version of my actual code where the c arrays is much larger so i have to use a for-loop to get every index\n", "in its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loop\n", "this is the reason why working with the higher-dimensional arrays ends up being so much faster than the for-loop -based code\n", "this is a scenario where a traditional for-loop is more handy than just iterating over the arrays\n", "an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n", "since it s an arrays it s better to use a for-loop with a counter variable i which starts from 1\n", "when you know both objects are arrays method is a faster way to check equality than for-loop\n", "looping with a for-loop is nothing more than a basic iteration of an arrays using a for-loop\n", "but the outer for-loop still runs 9 more times pushing temp which is already a set number onto the numbers arrays\n", "notice that besides using the filter method or not even with a plain for-loop is much better for performance create a new arrays from scratch instead of mutate the current one multiple times\n", "thus the for-loop is faster than the foreach-loop if the arrays must\n", "i completely failed to check that assertion and just jumped into the analysis of how the enhanced for-loop is faster on arrays than lists\n", "iterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loop\n", "to my knowledge and research so far - javascript s native for-loop is quicker than arrays map for iterating through the arrays\n", "i ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arrays\n", "the for-loop is faster than the foreach-loop if the arrays must only be accessed once per iteration\n", "the for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is found\n", "an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n", "but the outer for-loop still runs 9 more times pushing temp which is already a set number onto the numbers arrays\n", "edit using an enhanced for-loop is a lot better than using arrays\n", "on the last iteration of the outer for-loop ndx is one less than array.length so when you call arrays ndx+1 that is equivalent to arrays array.length which out of bounds since arrays start indexing at 0\n", "in such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arrays\n", "use a for-each loops to go through a range it s not as fast as using a variant arrays but keeps things simple and offers better speed than a for-loop\n", "the longer the arrays gets the more iterations your for-loop will need\n", "note that this is one of those cases where matrix division of large arrays takes longer than a for-loop\n", "the questions should i use for-loop or is it better to do it recursively next insert will be called after previous is done should i check if saved.length datalength and then return the arrays or is there some better way how to do it\n", "in this case instead of generating two large matrices with the row and column indices you can use a for-loop on the rows of your arrays it s slower but not as slow as a double for-loop\n", "with one arrays one can do which is easier than a for-loop\n", "as mentioned above as you remove items the arrays gets smaller so a for-loop is probably not the best solution\n", "it returns a byte arrays of all the pixels which can be iterated much faster than a for-loop with a call to getpixel inside nested inside another for-loop\n", "would an arrays be faster than a for-loop in this case\n", "a for-loop is more suitable to iterate through the arrays\n", "also change your logic in the for-loop to be not since i will not ever be greater than the arrays length\n", "i ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arrays\n", "so then i think to go with that approach i would end up with a for-loop and loads of add calls but surely that is even worse than the arrays copy isn t it\n", "so when you go up an arrays 0-9 you want the top of a for-loop to be less than the arrays length when you are going down the arrays 9-0 you want the lower bound to be less than or equal to the bottom of the arrays otherwise you will start out trying to access at 10 the arrays length and get an outofrangeexception\n", "im going to have a second for-loop that makes more arrays and names these arrays as the strings from my previous arrays\n", "the longer the arrays gets the more iterations your for-loop will need\n", "in your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default int\n", "but i don t want to use a for-loop as my json arrays has more than 3 entries and if i request a lot of data in short time it takes long time till the for-loop goes through every entry\n", "but you will have loops the outer arrays in order to get it to work which would be better done with a for-loop so you reference both at once\n", "but modifying the arrays is more work than a simple for-loop again\n", "it is clear without any performance tests that native javascript for-loop is faster but there is no big difference for small arrays like 10-20 small items\n", "also with the for-loop it s considered better to limit the scope of the iterating variable i and to use println you need system.out not just system and you need a string java arrays do not override tostring so something to output the numbers the user entered after loops like\n", "try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n", "i tried this code with my the big arrays it is around 10 to 20 times faster than a for-loop solution and around 200 times fast than the old code\n", "when summing an arrays over a specific axis the dedicated arrays method array.sum ax may actually be slower than a for-loop\n", "i am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrays\n", "running a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacements\n", "try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n", "the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n", "the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n", "but modifying the arrays is more work than a simple for-loop again\n", "note that you should check if index is within arrays bounds in such cases and that system.arraycopy is more efficient and arguably simpler than a for-loop for copying arrays\n", "this is a scenario where a traditional for-loop is more handy than just iterating over the arrays\n", "a for-loop is more adequate than a do while for simply iterating an arrays string\n", "the for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is found\n", "the hits arrays is longer than numtotalhits so your for-loop limit should be numtotalhits instead of hits.length\n", "but for the arrays it is better to use for-loop as shown by alnitak than for-in\n", "you can use array.prototype.find method to check if the element exists in arrays which is much better than perform a traditional for-loop\n", "i suppose the first option is good for small arrays but a for-loop is probably better practice as the amount of code would remain the same regardless of arrays size\n", "a for-loop is more suitable to iterate through the arrays\n", "in its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loop\n", "a for-loop is more adequate than a do while for simply iterating an arrays string\n", "when i try to access it with a for-loop where its index is less than the arrays length i get the following error message typeerror function object is unsubscriptable\n", "but the for-loop is not reading writing the last part of the parent file which is less than the arrays size\n", "to use this in a loops you can write a simple for-loop which always checks if the index stil is smaller than the arrays length\n", "but then normal for-loop is far better for arrays than using for-in which is actually for object\n", "in this case if any element in arrays is shorter than 11 symbols will become big and for-loop will stop executing\n", "the for-loop is faster than the foreach-loop if the arrays must only be\n", "when you know both objects are arrays method is a faster way to check equality than for-loop\n", "running a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacements\n", "it turns out i had a hard coded maximum index in my for-loop which was bigger than the arrays i was trying to assign to\n", "but when looping through an arrays it s better to use a regular for-loop\n", "because if the first word in arrays is shorter than second one you need second for-loop\n", "in such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arrays\n", "i fixed this by adding after the for-loop and before the return statement which fixes the problem but if the for-loop is written to continue while i is less than the arrays length and when the arrays only contains a the length is one and i is 0 shouldn t it also pop a\n", "if the length of the arrays is less than 8 a regular for-loop summation is performed\n", "for example sometimes a for-loop is faster than the built-in arrays methods in some browsers\n", "in my opinion a for-loop is usually better for doing something a specific number of times and if you re just iterating over every item in an arrays foreach is usually more straightforward\n", "i am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrays\n", "in your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default int\n", "okay so after telling the user to enter the size of the arrays the arrays was assigned to lets say 5 therefore in the first for-loop the program is checking if i is less than the arrays size so it can only be entered 5 times as that is the size of the arrays\n", "next i can use 3rd 4th and 5th level of arrays means more than for-loop statement will be assign\n", "above is a simplified version of my actual code where the c arrays is much larger so i have to use a for-loop to get every index\n", "in its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loop\n", "this is the reason why working with the higher-dimensional arrays ends up being so much faster than the for-loop -based code\n", "this is a scenario where a traditional for-loop is more handy than just iterating over the arrays\n", "it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes\n", "use a dawg which is more efficient than a trie in terms of space waste\n", "use a dawg which is more efficient than a trie in terms of space waste\n", "a dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trie\n", "a dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trie\n", "it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes\n", "i am interested in this because the factor oracle is easy to construct with 30 lines of c++ suffix-array needs about 60 and suffix-tree needs 150 and it runs faster than suffix-array and suffix-tree\n", "nevertheless i need a dynamic list for my loops with nested loops which is processed more than 500 times and multiple if-statement therefore the arraylist\n", "nevertheless i need a dynamic list for my loops with nested loops which is processed more than 500 times and multiple if-statement therefore the arraylist\n", "the other question why not use a concurrenthashmap here since it will provide some concurrent writes to different mapentries and provide more concurrency than readwritelock\n", "a quadtree is a simpler data structure than the r-tree\n", "on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n", "r-tree are substantially faster than quadtree for window queries like inside contains covers etc\n", "i use quadtree more than r-tree and find them super flexible\n", "you can also try a quadtree it has some better perfomance over a r-tree\n", "a quadtree is a simpler data structure than the r-tree\n", "r-tree are much faster than quadtree for nearest neighbours queries\n", "quadtree indexes are created faster than r-tree\n", "you can also try a quadtree it has some better perfomance over a r-tree\n", "on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n", "you can also try a quadtree it has some better perfomance over a r-tree\n", "a quadtree is a simpler data structure than the r-tree\n", "on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n", "r-tree are substantially faster than quadtree for window queries like inside contains covers etc\n", "i use quadtree more than r-tree and find them super flexible\n", "you can also try a quadtree it has some better perfomance over a r-tree\n", "a quadtree is a simpler data structure than the r-tree\n", "r-tree are much faster than quadtree for nearest neighbours queries\n", "quadtree indexes are created faster than r-tree\n", "you can also try a quadtree it has some better perfomance over a r-tree\n", "on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n", "you can also try a quadtree it has some better perfomance over a r-tree\n"], "language": ["the swift one is dramatically slower then objective-c implementation\n", "swift in that case would not be safer but less safe than objective-c\n", "swift is lot smarter than objective-c about singleton class\n", "there are multiple reasons why the swift code is slower than the objective-c code\n", "this article seems to suggest that this is possible by swizzling a fake location into apple s cllocationmanager class to be used by other apps but i am unfamiliar with the objective-c code more familiar with swift\n", "this is because the swift dictionary is more strongly typed than the objective-c nsdictionary\n", "on the other hand swift is easier to learn especially if you have objective-c background so it can be adopted during the time slowly and paralelly with using objective-c\n", "i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n", "swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n", "there are multiple reasons why the swift code is slower than the objective-c code\n", "im new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-c\n", "writing swift 2.0 in my professional work my personal opinion is that it s indeed ready for enterprise applications -- maybe even more than objective-c ever were\n", "as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n", "swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n", "objective-c -documentary provides more content than the documentary for swift\n", "swift also prevents us i believe from overriding a parent class s property but also still lets us observe changes to that property--this is much better than objective-c s approach\n", "i know that swift is buggy as heck i run into bugs everyday but ill bet objective-c was even worse when it started out benefits of hindsight so in a couple of years swift will be equal or greater than objective-c keeping its basic simplicity as well\n", "it is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anyway\n", "the perf hit will be ridiculous i know apple say swift execute faster than objective-c but this is low level so it will be harmless\n", "personally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientated\n", "download xcode free and learn objective-c or swift swift is easier to learn than objective-c\n", "objective-c is much more free and easy with types and compilation checks where swift isn t\n", "swift is more strictly typed than objective-c\n", "as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n", "swift is stricter about runtime type correctness than objective-c so duck typing alone is not enough\n", "as you can see the swift example is more complex and error prone than your objective-c code\n", "the swift one is dramatically slower then objective-c implementation\n", "most importantly for your image processing app the compiler will optimize swift code to run faster than objective-c\n", "swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n", "but swift is less dynamically typed than objective-c and has less support for reflection\n", "however when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-c\n", "while i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-c\n", "as you can see the swift example is more complex and error prone than your objective-c code\n", "i find that objective-c is much nicer for working with core audio than swift\n", "as you can see defining a singleton class in swift is much easier than in objective-c\n", "the swift designers went through a lot of trouble to make sure that it s more than just objective-c without the constraints of c in fact i almost wish they hadn t said that since it s so often misquoted\n", "after reading some related articles i don t think swift is more effective than objective-c\n", "so it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2d\n", "objective-c -documentary provides more content than the documentary for swift\n", "i m learning swift and much less familiar with objective-c but for the life of me i can t figure out how they are trying to achieve the goal stated as build list of encodings sorted and including only those with human readable names.\n", "if you get a difference between swift and objective-c it s more because swift is probably better on optimisation\n", "however i read that swift was the successor of objective-c and i would feel more comfortable with swift syntax\n", "we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n", "while i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-c\n", "i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n", "after reading some related articles i don t think swift is more effective than objective-c\n", "objective-c is much more free and easy with types and compilation checks where swift isn t\n", "those attributes let you create objective-c code which is more understandable by swift and complier warn you when you break the rule for example\n", "my view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slower\n", "it seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-c\n", "swift is more strictly typed than objective-c\n", "as you can see defining a singleton class in swift is much easier than in objective-c\n", "bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa\n", "we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n", "one of the reasons we want to move is because swift is more secure than objective-c\n", "one of the reasons we want to move is because swift is more secure than objective-c\n", "the swift runtime is smaller than the objective-c runtime\n", "adding lightweight generics to your objective-c api makes it easier to interface with swift because your api gets translated more precisely\n", "swift seems to be less dynamic than objective-c in these stuffs\n", "objective-c print is more readable compared to swift\n", "so it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2d\n", "objective-c print is more readable compared to swift\n", "swift is neither easier to read nor understand than objective-c\n", "swift will incur this penalty in fewer situations than objective-c will for instance method calls to swift-only protocol methods do not hit objc_msgsend but if the protocol is declared in objective-c or if the swift protocol is decorated with objective-c such that it can be adopted by objective-c objects as well then method calls to methods in that protocol adopted by swift objects appear to be dispatched via objc_msgsend\n", "i also use objective-c more than swift but here s what my guess is as to what the objective-c code would come to\n", "but swift is less dynamically typed than objective-c and has less support for reflection\n", "so i ve started learning swift because it looks way better than objective-c\n", "apple seems to claim that the optional type in swift is safer than nil in objective-c but i don t understand why this is so\n", "better if you have a code swift is better but is not problem objective-c\n", "wouldn t swift be slower than objective-c in this case since it is layered on top of it\n", "no objects come magically into existence in swift any more than in objective-c\n", "early this month i started learning swift as i found it fun and easier than objective-c\n", "wouldn t swift be slower than objective-c in this case since it is layered on top of it\n", "i have a objective-c application working fine and smooth to be more comfortable with swift i decided to write the unit tests for this app in swift\n", "you will notice that swift bundles are always about 4-5 mb larger than their objective-c counterparts and this is precisely why\n", "and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n", "as craig revealed within the announcement of swift it is said to be faster than objective-c by far\n", "with swift the code is much more readable than with objective-c\n", "however when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-c\n", "i use objective-c more than swift\n", "it seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-c\n", "also note that i use objective-c more than swift\n", "the swift runtime is smaller than the objective-c runtime\n", "i feel swift is better than objective-c in many aspects but my major question is - will swift dynamic libraries support older version of swift\n", "specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c\n", "and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n", "furthermore swift is stricter than objective-c when it comes to initialisers\n", "personally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientated\n", "swift s compiler is also doing a lot more than objective-c s compiler considering swift is more strongly typed and does not required specifying imports among other things\n", "executable size of swift application is much bigger than size of objective-c application\n", "the swift compiler is doing a lot more and is quite a bit newer than the objective-c compiler so it unlikely it will be as stable fast for quite some time\n", "note that swift s arrays are much more sensible than objective-c s\n", "swift is clearer on versions releases and i keep asking myself if i am missing something related to objective-c since i can t find this information\n", "this is because the swift dictionary is more strongly typed than the objective-c nsdictionary\n", "usually i find swift s method naming to be cleaner than objective-c s but init methods can be an exception\n", "or is it merely a hint to whatever tool converts between swift and objective-c to better deal with swift optionals\n", "specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c\n", "injecting code in a swift application is harder than it was for an objective-c application but it s still possible\n", "the swift one is dramatically slower then objective-c implementation\n", "swift in that case would not be safer but less safe than objective-c\n", "swift is lot smarter than objective-c about singleton class\n", "there are multiple reasons why the swift code is slower than the objective-c code\n", "this article seems to suggest that this is possible by swizzling a fake location into apple s cllocationmanager class to be used by other apps but i am unfamiliar with the objective-c code more familiar with swift\n", "this is because the swift dictionary is more strongly typed than the objective-c nsdictionary\n", "on the other hand swift is easier to learn especially if you have objective-c background so it can be adopted during the time slowly and paralelly with using objective-c\n", "i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n", "swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n", "there are multiple reasons why the swift code is slower than the objective-c code\n", "im new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-c\n", "writing swift 2.0 in my professional work my personal opinion is that it s indeed ready for enterprise applications -- maybe even more than objective-c ever were\n", "as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n", "swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n", "objective-c -documentary provides more content than the documentary for swift\n", "swift also prevents us i believe from overriding a parent class s property but also still lets us observe changes to that property--this is much better than objective-c s approach\n", "i know that swift is buggy as heck i run into bugs everyday but ill bet objective-c was even worse when it started out benefits of hindsight so in a couple of years swift will be equal or greater than objective-c keeping its basic simplicity as well\n", "it is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anyway\n", "the perf hit will be ridiculous i know apple say swift execute faster than objective-c but this is low level so it will be harmless\n", "personally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientated\n", "download xcode free and learn objective-c or swift swift is easier to learn than objective-c\n", "objective-c is much more free and easy with types and compilation checks where swift isn t\n", "swift is more strictly typed than objective-c\n", "as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n", "swift is stricter about runtime type correctness than objective-c so duck typing alone is not enough\n", "as you can see the swift example is more complex and error prone than your objective-c code\n", "the swift one is dramatically slower then objective-c implementation\n", "most importantly for your image processing app the compiler will optimize swift code to run faster than objective-c\n", "swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n", "but swift is less dynamically typed than objective-c and has less support for reflection\n", "however when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-c\n", "while i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-c\n", "as you can see the swift example is more complex and error prone than your objective-c code\n", "i find that objective-c is much nicer for working with core audio than swift\n", "as you can see defining a singleton class in swift is much easier than in objective-c\n", "the swift designers went through a lot of trouble to make sure that it s more than just objective-c without the constraints of c in fact i almost wish they hadn t said that since it s so often misquoted\n", "after reading some related articles i don t think swift is more effective than objective-c\n", "so it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2d\n", "objective-c -documentary provides more content than the documentary for swift\n", "i m learning swift and much less familiar with objective-c but for the life of me i can t figure out how they are trying to achieve the goal stated as build list of encodings sorted and including only those with human readable names.\n", "if you get a difference between swift and objective-c it s more because swift is probably better on optimisation\n", "however i read that swift was the successor of objective-c and i would feel more comfortable with swift syntax\n", "we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n", "while i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-c\n", "i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n", "after reading some related articles i don t think swift is more effective than objective-c\n", "objective-c is much more free and easy with types and compilation checks where swift isn t\n", "those attributes let you create objective-c code which is more understandable by swift and complier warn you when you break the rule for example\n", "my view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slower\n", "it seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-c\n", "swift is more strictly typed than objective-c\n", "as you can see defining a singleton class in swift is much easier than in objective-c\n", "bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa\n", "we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n", "one of the reasons we want to move is because swift is more secure than objective-c\n", "one of the reasons we want to move is because swift is more secure than objective-c\n", "the swift runtime is smaller than the objective-c runtime\n", "adding lightweight generics to your objective-c api makes it easier to interface with swift because your api gets translated more precisely\n", "swift seems to be less dynamic than objective-c in these stuffs\n", "objective-c print is more readable compared to swift\n", "so it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2d\n", "objective-c print is more readable compared to swift\n", "swift is neither easier to read nor understand than objective-c\n", "swift will incur this penalty in fewer situations than objective-c will for instance method calls to swift-only protocol methods do not hit objc_msgsend but if the protocol is declared in objective-c or if the swift protocol is decorated with objective-c such that it can be adopted by objective-c objects as well then method calls to methods in that protocol adopted by swift objects appear to be dispatched via objc_msgsend\n", "i also use objective-c more than swift but here s what my guess is as to what the objective-c code would come to\n", "but swift is less dynamically typed than objective-c and has less support for reflection\n", "so i ve started learning swift because it looks way better than objective-c\n", "apple seems to claim that the optional type in swift is safer than nil in objective-c but i don t understand why this is so\n", "better if you have a code swift is better but is not problem objective-c\n", "wouldn t swift be slower than objective-c in this case since it is layered on top of it\n", "no objects come magically into existence in swift any more than in objective-c\n", "early this month i started learning swift as i found it fun and easier than objective-c\n", "wouldn t swift be slower than objective-c in this case since it is layered on top of it\n", "i have a objective-c application working fine and smooth to be more comfortable with swift i decided to write the unit tests for this app in swift\n", "you will notice that swift bundles are always about 4-5 mb larger than their objective-c counterparts and this is precisely why\n", "and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n", "as craig revealed within the announcement of swift it is said to be faster than objective-c by far\n", "with swift the code is much more readable than with objective-c\n", "however when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-c\n", "i use objective-c more than swift\n", "it seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-c\n", "also note that i use objective-c more than swift\n", "the swift runtime is smaller than the objective-c runtime\n", "i feel swift is better than objective-c in many aspects but my major question is - will swift dynamic libraries support older version of swift\n", "specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c\n", "and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n", "furthermore swift is stricter than objective-c when it comes to initialisers\n", "personally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientated\n", "swift s compiler is also doing a lot more than objective-c s compiler considering swift is more strongly typed and does not required specifying imports among other things\n", "executable size of swift application is much bigger than size of objective-c application\n", "the swift compiler is doing a lot more and is quite a bit newer than the objective-c compiler so it unlikely it will be as stable fast for quite some time\n", "note that swift s arrays are much more sensible than objective-c s\n", "swift is clearer on versions releases and i keep asking myself if i am missing something related to objective-c since i can t find this information\n", "this is because the swift dictionary is more strongly typed than the objective-c nsdictionary\n", "usually i find swift s method naming to be cleaner than objective-c s but init methods can be an exception\n", "or is it merely a hint to whatever tool converts between swift and objective-c to better deal with swift optionals\n", "specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c\n", "injecting code in a swift application is harder than it was for an objective-c application but it s still possible\n", "because you can determine what code in a compiled-language is likely to do better than a dynamic-languages it has been determined more error free to use a compiled perspective for more things so as you can see with the availability of offset-management and lookup compiled behavior given to you in core perl there is no reason to mess with the symbol table if you don t have to\n", "vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n", "vba being a whole lot less than vb6\n", "fortunately the vbide for vb6 has more classes and methods for working with vb projects than the vba version of vbide\n", "vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n", "fortunately the vbide for vb6 has more classes and methods for working with vb projects than the vba version of vbide\n", "vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n", "vba being a whole lot less than vb6\n", "fortunately the vbide for vb6 has more classes and methods for working with vb projects than the vba version of vbide\n", "vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n", "fortunately the vbide for vb6 has more classes and methods for working with vb projects than the vba version of vbide\n", "xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n", "i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n", "xslt is significantly more appropriate to use than xquery for such kind of tasks\n", "xslt is significantly more appropriate to use than xquery for such kind of tasks\n", "my usual rule-of-thumb is that xquery is better than xslt for simple tasks whereas xslt is better for complex tasks\n", "saxon-ee supports streaming of large xml documents using xslt or xquery streaming is better supported in xslt than in xquery\n", "xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n", "unless you are using the static typing feature xquery is no more strongly typed than xslt\n", "this kind of processing is most easily done with xslt which is more expressive than xquery\n", "xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules\n", "as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries\n", "unless you are using the static typing feature xquery is no more strongly typed than xslt\n", "this kind of processing is most easily done with xslt which is more expressive than xquery\n", "generally i know it sounds banal xslt is better at transformation generating a new document from each source document while xquery is better at query extracting a small amount of information from each source document\n", "as dimitre says xslt is much better at this class of problem than xquery\n", "i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n", "if your output is going to be similar to your input with small changes then the xslt solution is often a lot simpler than the xquery solution\n", "xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n", "i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n", "xslt is significantly more appropriate to use than xquery for such kind of tasks\n", "xslt is significantly more appropriate to use than xquery for such kind of tasks\n", "my usual rule-of-thumb is that xquery is better than xslt for simple tasks whereas xslt is better for complex tasks\n", "saxon-ee supports streaming of large xml documents using xslt or xquery streaming is better supported in xslt than in xquery\n", "xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n", "unless you are using the static typing feature xquery is no more strongly typed than xslt\n", "this kind of processing is most easily done with xslt which is more expressive than xquery\n", "xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules\n", "as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries\n", "unless you are using the static typing feature xquery is no more strongly typed than xslt\n", "this kind of processing is most easily done with xslt which is more expressive than xquery\n", "generally i know it sounds banal xslt is better at transformation generating a new document from each source document while xquery is better at query extracting a small amount of information from each source document\n", "as dimitre says xslt is much better at this class of problem than xquery\n", "i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n", "if your output is going to be similar to your input with small changes then the xslt solution is often a lot simpler than the xquery solution\n", "all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementations\n", "racket is closer to scheme than to common lisp but you could dip your toes into the lisp family without the speed bump of the emacs style of development\n", "all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementations\n", "on the side of using macros racket has always been more advanced than other scheme and lisp implementations\n", "i would suggest you start with scheme and more specifically with racket formerly plt scheme\n", "there are various object systems you can load as libraries when you want to do oop but integration with existing code heavily depends on the scheme dialect and its surrounding culture chicken scheme seems to be more object-oriented than racket for instance\n", "all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementations\n", "racket is closer to scheme than to common lisp but you could dip your toes into the lisp family without the speed bump of the emacs style of development\n", "all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementations\n", "on the side of using macros racket has always been more advanced than other scheme and lisp implementations\n", "i would suggest you start with scheme and more specifically with racket formerly plt scheme\n", "there are various object systems you can load as libraries when you want to do oop but integration with existing code heavily depends on the scheme dialect and its surrounding culture chicken scheme seems to be more object-oriented than racket for instance\n", "erlang has a steeper learning curve compared to elixir\n", "erlang has a steeper learning curve compared to elixir\n", "i agree some mechanisms in elixir are slightly more verbose than erlang function definitions being my personal pet peeve and vice-versa\n", "i m doing a comparison of erlang haskell elixir and es6 and i m less farmiliar with erlang and elixir but i want to represent all of these languages fairly so is this good erlang code\n", "erlang has a steeper learning curve compared to elixir\n", "erlang has a steeper learning curve compared to elixir\n", "i agree some mechanisms in elixir are slightly more verbose than erlang function definitions being my personal pet peeve and vice-versa\n", "i m doing a comparison of erlang haskell elixir and es6 and i m less farmiliar with erlang and elixir but i want to represent all of these languages fairly so is this good erlang code\n", "right now oxygene is much better as it supports a broader set of language and platform features than delphi .net ever did\n", "from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n", "in free and turbo pascal file handling is much more easier than in delphi in pascal we have assign instead of assignfile and close instead of closefile\n", "from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n", "from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n", "in free and turbo pascal file handling is much more easier than in delphi in pascal we have assign instead of assignfile and close instead of closefile\n", "from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n", "livescript is coco but much more compatible with coffeescript more functional and more feature rich\n", "coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n", "coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n", "coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n", "coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n", "while erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more code\n", "while erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more code\n", "while erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more code\n", "while erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more code\n", "i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as\n", "i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n", "so yes it can be used with flash or rather pure actionscript but it is a little less convenient than with mxml where everything is set up by the framework because it takes more under the hood configuration to be able to run all the necessary parts for remoting\n", "what s the deal i thought actionscript would be nicer than mxml\n", "actionscript is quicker than mxml but for what you re going to do you re trading speed for convenience - mxml comes with all the different ui classes list scrollbars etc already there\n", "i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n", "i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as\n", "i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n", "so yes it can be used with flash or rather pure actionscript but it is a little less convenient than with mxml where everything is set up by the framework because it takes more under the hood configuration to be able to run all the necessary parts for remoting\n", "what s the deal i thought actionscript would be nicer than mxml\n", "actionscript is quicker than mxml but for what you re going to do you re trading speed for convenience - mxml comes with all the different ui classes list scrollbars etc already there\n", "i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n", "like the rest of rest wadl is lightweight easier to understand and easier to write than wsdl\n", "like the rest of rest wadl is lightweight easier to understand and easier to write than wsdl\n", "but xquery will be more than schematron and i use xquery heavily to validate xml values and i should be able to produce html reports well\n", "some background i m learning haskell now having earlier worked with scheme and cl and a little foray into clojure\n", "scheme is perhaps more approachable than haskell however\n", "scheme is perhaps more approachable than haskell however\n", "scheme is perhaps more approachable than haskell however\n", "some background i m learning haskell now having earlier worked with scheme and cl and a little foray into clojure\n", "scheme is perhaps more approachable than haskell however\n", "scheme is perhaps more approachable than haskell however\n", "scheme is perhaps more approachable than haskell however\n", "i believe that the reports are using something more along the lines of vbscript edit oregonghost says vba which actually makes more sense than vbscript than vb.net and very limited at that\n", "vb6 vba though a little better than vbscript in general still has many similar issues where for their domain they require much more boiler plate to do simple tasks than what i would like and have seen in other scripting languages\n", "i believe that the reports are using something more along the lines of vbscript edit oregonghost says vba which actually makes more sense than vbscript than vb.net and very limited at that\n", "vb6 vba though a little better than vbscript in general still has many similar issues where for their domain they require much more boiler plate to do simple tasks than what i would like and have seen in other scripting languages\n", "because hql is more or less superset of jpql it of course works also in hql\n", "because hql is more or less superset of jpql it of course works also in hql\n", "scala does not provide an alternative and any alternative that was provided would likely be less reliable as typesafe does not have the resources that sun oracle ibm etc\n", "scala does not provide an alternative and any alternative that was provided would likely be less reliable as typesafe does not have the resources that sun oracle ibm etc\n", "opengl is better for playing around and experimenting because you can easily draw triangle without messing with hardware buffers available on larger selection of platforms plus glsl is better than hlsl because it doesn t compile into assembly\n", "opengl is better for playing around and experimenting because you can easily draw triangle without messing with hardware buffers available on larger selection of platforms plus glsl is better than hlsl because it doesn t compile into assembly\n", "scheme has fewer libraries than common lisp\n", "scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n", "t s purpose is to test the thesis developed by steele and sussman in their series of papers about scheme that scheme may be used as the basis for a practical programming language of exceptional expressive power and that implementations of scheme could perform better than other lisp systems and competitively with implementations of programming languages such as c and bliss which are usually considered to be inherently more efficient than lisp on conventional machine architectures\n", "that said it is a scheme which has fewer batteries included as compared to common lisp\n", "it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n", "i ve also found scheme ides much more user-friendly than lisp s plt scheme is a good one\n", "i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n", "i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n", "scheme is also a good language for that purpose and it is simpler smaller than lisp\n", "it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n", "however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n", "scheme is also a good language for that purpose and it is simpler smaller than lisp\n", "scheme has fewer libraries than common lisp\n", "scheme is older than common lisp\n", "overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n", "scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n", "that said it is a scheme which has fewer batteries included as compared to common lisp\n", "overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n", "overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n", "i don t see why sbcl should be so fast - scheme is a far simpler language than common lisp\n", "scheme has fewer libraries than common lisp\n", "however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n", "it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n", "i ve noticed that the common lisp approach is more conservative than the approach scheme has\n", "scheme is older than common lisp\n", "for a counterexample i think scheme programs ran faster and used less memory than the lisp programs that preceded them mdash\n", "common lisp has a separate namespace for functions which makes operation like this more verbose than with scheme\n", "i ve noticed that the common lisp approach is more conservative than the approach scheme has\n", "my impression common lisp is more for getting stuff done scheme is more for education and fun\n", "here is a solution in scheme because i know that better than common lisp and have an interpreter for checking my work\n", "scheme has fewer libraries than common lisp\n", "scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n", "t s purpose is to test the thesis developed by steele and sussman in their series of papers about scheme that scheme may be used as the basis for a practical programming language of exceptional expressive power and that implementations of scheme could perform better than other lisp systems and competitively with implementations of programming languages such as c and bliss which are usually considered to be inherently more efficient than lisp on conventional machine architectures\n", "that said it is a scheme which has fewer batteries included as compared to common lisp\n", "it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n", "i ve also found scheme ides much more user-friendly than lisp s plt scheme is a good one\n", "i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n", "i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n", "scheme is also a good language for that purpose and it is simpler smaller than lisp\n", "it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n", "however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n", "scheme is also a good language for that purpose and it is simpler smaller than lisp\n", "scheme has fewer libraries than common lisp\n", "scheme is older than common lisp\n", "overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n", "scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n", "that said it is a scheme which has fewer batteries included as compared to common lisp\n", "overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n", "overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n", "i don t see why sbcl should be so fast - scheme is a far simpler language than common lisp\n", "scheme has fewer libraries than common lisp\n", "however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n", "it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n", "i ve noticed that the common lisp approach is more conservative than the approach scheme has\n", "scheme is older than common lisp\n", "for a counterexample i think scheme programs ran faster and used less memory than the lisp programs that preceded them mdash\n", "common lisp has a separate namespace for functions which makes operation like this more verbose than with scheme\n", "i ve noticed that the common lisp approach is more conservative than the approach scheme has\n", "my impression common lisp is more for getting stuff done scheme is more for education and fun\n", "here is a solution in scheme because i know that better than common lisp and have an interpreter for checking my work\n", "i also checked prolog and it seems a pretty cool language easy to do relations between data and easier than lisp but i d like to hear what you think\n", "i also checked prolog and it seems a pretty cool language easy to do relations between data and easier than lisp but i d like to hear what you think\n", "first you can use double-quotes or q it just takes more work than single-quotes or q\n", "another side note single-quotes inside xpath string looks a bit tidier than escaped double-quotes imo\n", "please consider also to use xtend for code generation that s much nicer than stringtemplate and integrates smoothly with xtext infrastructure\n", "please consider also to use xtend for code generation that s much nicer than stringtemplate and integrates smoothly with xtext infrastructure\n", "i am not sure it can satisfy you but hebrew test is 4 times slower than persian\n", "i am not sure it can satisfy you but hebrew test is 4 times slower than persian\n", "ats is a dependently-typed language that is designed for low-level programming though it s somewhat less elegant than agda\n", "all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo\n", "all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo\n", "also sml has stricter precedence rules than haskell\n", "also sml has stricter precedence rules than haskell\n", "because sml is eagerly evaluated the execution model is far easier to comprehend and debugging via printf works a lot better than in haskell\n", "also sml has stricter precedence rules than haskell\n", "also sml has stricter precedence rules than haskell\n", "because sml is eagerly evaluated the execution model is far easier to comprehend and debugging via printf works a lot better than in haskell\n", "aside does this mean rebol is more homoiconic than lisp\n", "aside does this mean rebol is more homoiconic than lisp\n", "aside does this mean rebol is more homoiconic than lisp\n", "aside does this mean rebol is more homoiconic than lisp\n", "the haskell zipwith is friendlier than the ocaml list.map2 which requires the lists to be the same length\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n", "secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n", "as others have pointed out ocaml s learning curve will be lower than haskell s\n", "haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n", "haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n", "haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n", "secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n", "you will also likely find the performance characteristics of your ocaml code more intuitive than haskell because of haskell s lazy evaluation\n", "i would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classes\n", "the reason i wanted to investigate this was because both c and ocaml were significantly faster than haskell for this program\n", "secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n", "haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n", "ocaml is closer to c++ because of it s imperative and oo features but i recommend you learn haskell as it is more functional more mindbending and has more resources\n", "the haskell zipwith is friendlier than the ocaml list.map2 which requires the lists to be the same length\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n", "secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n", "as others have pointed out ocaml s learning curve will be lower than haskell s\n", "haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n", "haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n", "haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n", "secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n", "keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n", "haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n", "you will also likely find the performance characteristics of your ocaml code more intuitive than haskell because of haskell s lazy evaluation\n", "i would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classes\n", "the reason i wanted to investigate this was because both c and ocaml were significantly faster than haskell for this program\n", "secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n", "haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n", "ocaml is closer to c++ because of it s imperative and oo features but i recommend you learn haskell as it is more functional more mindbending and has more resources\n", "in dependently-typed languages like idris it s probably more useful than in haskell\n", "in dependently-typed languages like idris it s probably more useful than in haskell\n", "in dependently-typed languages like idris it s probably more useful than in haskell\n", "in dependently-typed languages like idris it s probably more useful than in haskell\n", "...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me\n", "...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me\n", "when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n", "on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n", "on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n", "asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n", "the inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematic\n", "when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n", "when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n", "asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n", "...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me\n", "...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me\n", "when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n", "on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n", "on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n", "asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n", "the inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematic\n", "when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n", "when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n", "asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n", "vhdl is more popular in europe and verilog is dominating in the us\n", "pacoblaze was written in verilog which like adam said less common than vhdl\n", "by these numbers and only these numbers vhdl seems to be more widely-used than verilog\n", "yes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previously\n", "my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n", "my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n", "vhdl is more popular in europe and verilog is dominating in the us\n", "vhdl is more popular in europe and verilog is dominating in the us\n", "pacoblaze was written in verilog which like adam said less common than vhdl\n", "by these numbers and only these numbers vhdl seems to be more widely-used than verilog\n", "yes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previously\n", "my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n", "my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n", "vhdl is more popular in europe and verilog is dominating in the us\n", "i read somewhere that nemerle s macro service is more powerful than boo s\n", "i assume the same control in vb.net would be datagridview and i m fairly sure that you can probably make it look better than in vb6 but if you want really good looking ones you might want to look at thirdparty grid controls\n", "if you don t already know vb6 there s little point in learning it now - your time could be put to much better use by learning vb.net c#\n", "yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n", "biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n", "vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code\n", "fortunately vb.net finally ended all that and is completely pixel based you can still alter you viewport scaling but .net seems to handle that much better than vb6\n", "none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n", "quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n", "yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n", "also developing enterprise application is such new languages java c# vb.net rubby is easier that vb6 because they rely on frameworks every body can write c# java code that function but it requires tricks good practices and some of imagination to write vb6 strong and rehusable code\n", "vb.net appears much more complex then vb6 and the learning curve is tough\n", "can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n", "avoiding them by modifying vb6 is lot easier than fixing the issues in vb.net\n", "vb.net appears much more complex then vb6 and the learning curve is tough\n", "however i ve noticed that running the vb6 tools is becoming more and more painful over time so i m looking at the possibility of migrating this code to vb.net 2008\n", "none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n", "quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n", "biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n", "getting your project migrated to vb.net is certainly easier when you keep the old vb6 controls\n", "quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n", "vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code\n", "can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n", "can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n", "especially as vb6 is becoming more and more of a distant memory and the vb.net language takes on a life of its own in conjunction with the core .net framework advancing\n", "i assume the same control in vb.net would be datagridview and i m fairly sure that you can probably make it look better than in vb6 but if you want really good looking ones you might want to look at thirdparty grid controls\n", "if you don t already know vb6 there s little point in learning it now - your time could be put to much better use by learning vb.net c#\n", "yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n", "biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n", "vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code\n", "fortunately vb.net finally ended all that and is completely pixel based you can still alter you viewport scaling but .net seems to handle that much better than vb6\n", "none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n", "quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n", "yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n", "also developing enterprise application is such new languages java c# vb.net rubby is easier that vb6 because they rely on frameworks every body can write c# java code that function but it requires tricks good practices and some of imagination to write vb6 strong and rehusable code\n", "vb.net appears much more complex then vb6 and the learning curve is tough\n", "can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n", "avoiding them by modifying vb6 is lot easier than fixing the issues in vb.net\n", "vb.net appears much more complex then vb6 and the learning curve is tough\n", "however i ve noticed that running the vb6 tools is becoming more and more painful over time so i m looking at the possibility of migrating this code to vb.net 2008\n", "none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n", "quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n", "biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n", "getting your project migrated to vb.net is certainly easier when you keep the old vb6 controls\n", "quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n", "vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code\n", "can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n", "can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n", "especially as vb6 is becoming more and more of a distant memory and the vb.net language takes on a life of its own in conjunction with the core .net framework advancing\n", "owl is a more advanced language than rdf\n", "owl has more structure than rdf\n", "owl is a more advanced language than rdf\n", "owl is richer than languages such as rdf schema rdfs\n", "owl and rdfs are more expressive than rdf which means here that you can capture more complex relations for instance you can also represent the link between sets of things rdfs subclassof or use transitive properties hasancestor\n", "owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes\n", "owl has more structure than rdf\n", "owl is a more advanced language than rdf\n", "owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes\n", "owl is a more advanced language than rdf\n", "owl has more structure than rdf\n", "owl is a more advanced language than rdf\n", "owl is richer than languages such as rdf schema rdfs\n", "owl and rdfs are more expressive than rdf which means here that you can capture more complex relations for instance you can also represent the link between sets of things rdfs subclassof or use transitive properties hasancestor\n", "owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes\n", "owl has more structure than rdf\n", "owl is a more advanced language than rdf\n", "owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes\n", "just for the record the tipc addressing scheme is several years older than distributed erlang\n", "just for the record the tipc addressing scheme is several years older than distributed erlang\n", "ocaml is faster than racket for most of the benchmarks on languages benchmark game\n", "ocaml is faster than racket for most of the benchmarks on languages benchmark game\n", "smalltalk methods tend to be more fine-grained than lisp functions so that may be a good place to begin\n", "common lisp is an image base language although usually to a lesser extent than smalltalk\n", "smalltalk methods tend to be more fine-grained than lisp functions so that may be a good place to begin\n", "common lisp is an image base language although usually to a lesser extent than smalltalk\n", "in this case a traversal-oriented approach is best maybe gremlin is better since cypher doesn t allow you to specify traversal order\n", "but i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlin\n", "recently we noticed that cypher queries run faster than gremlin so we decided to convert our queries\n", "but i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlin\n", "cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n", "neo4j and cypher is still faster and obviously this has no effect on the gremlin queries on neo4j but that might be just a issue with the gremlin implementation for neo4j\n", "cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n", "in this case a traversal-oriented approach is best maybe gremlin is better since cypher doesn t allow you to specify traversal order\n", "but i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlin\n", "recently we noticed that cypher queries run faster than gremlin so we decided to convert our queries\n", "but i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlin\n", "cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n", "neo4j and cypher is still faster and obviously this has no effect on the gremlin queries on neo4j but that might be just a issue with the gremlin implementation for neo4j\n", "cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n", "vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n", "vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n", "vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n", "vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n", "while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby\n", "while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby\n", "tcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplomb\n", "it is written in tcl which is a language somewhat simpler than perl but broadly in the same family and not difficult to learn\n", "tcl is more verbose than perl here\n", "tcl is more verbose than perl here\n", "i know that perl performs better for some regex but will the tcl performance really be this bad in comparison\n", "while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby\n", "while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby\n", "tcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplomb\n", "it is written in tcl which is a language somewhat simpler than perl but broadly in the same family and not difficult to learn\n", "tcl is more verbose than perl here\n", "tcl is more verbose than perl here\n", "i know that perl performs better for some regex but will the tcl performance really be this bad in comparison\n", "in persian it s better to say farsi a decimal number like 32.98 is written 32 98 slash is used instead of point\n", "fortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3\n", "fortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3\n", "fortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3\n", "fortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3\n"], "app": ["i recommend to take a look on tastypie which turned out to work even nicer than piston it helps you also with things like versioning your api and mamange multiple endpoints nicly\n", "edit i found out that piston was proposing query throttling but everywhere people say that tastypie is better than piston\n", "tastypie is more tightly coupled to the orm than piston but there are methods that you can define in a tastypie resource to specify how to handle create read update delete\n", "tastypie is more tightly coupled to the orm than piston but there are methods that you can define in a tastypie resource to specify how to handle create read update delete\n", "- similar to piston but i ve had better luck with tastypie\n", "dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n", "do you have any situation where stateful is more appropriate than stateless\n", "in ejb3 there is no such thing as stateless is better than stateful session beans\n", "service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one\n", "while a lot of development has been done with stateless connections to solve most problems sometimes it s just simpler with stateful connections\n", "a stateful service is typically harder to develop and scale than stateless services\n", "for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n", "for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n", "but keep in mind that in many cases being stateful or not stateless is no problem and not all stateless applications are by definition better than stateful ones\n", "dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n", "do you have any situation where stateful is more appropriate than stateless\n", "or in short stateless is better than stateful\n", "dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n", "do you have any situation where stateful is more appropriate than stateless\n", "in ejb3 there is no such thing as stateless is better than stateful session beans\n", "service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one\n", "while a lot of development has been done with stateless connections to solve most problems sometimes it s just simpler with stateful connections\n", "a stateful service is typically harder to develop and scale than stateless services\n", "for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n", "for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n", "but keep in mind that in many cases being stateful or not stateless is no problem and not all stateless applications are by definition better than stateful ones\n", "dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n", "do you have any situation where stateful is more appropriate than stateless\n", "or in short stateless is better than stateful\n", "btw multitasking is really more fast switching than backgrounding in ios.\n", "btw multitasking is really more fast switching than backgrounding in ios.\n", "qweb is nicer templating tool and it was created by odoo and its designed to work cross language originally which can be forked from git - qweb\n", "qweb is nicer templating tool and it was created by odoo and its designed to work cross language originally which can be forked from git - qweb\n", "its just a name they choosed it because odoo provides more than openerp for example web site modules\n", "its just a name they choosed it because odoo provides more than openerp for example web site modules\n"], "framework": ["personally i think moles is much better suited for mocking the unmockable and i prefer a combination of moq for my own interfaces and classes and moq for framework and externalities like file i o gui db connections etc\n", "personally i think moles is much better suited for mocking the unmockable and i prefer a combination of moq for my own interfaces and classes and moq for framework and externalities like file i o gui db connections etc\n", "this is another reason why i d prefer rhinomocks and moq over nmock nmock uses the older expectation style whereas rhinomocks and moq both support the arrange act assert approach where you specify you expected interactions as assertions at the end of the test like this\n", "this is another reason why i d prefer rhinomocks and moq over nmock nmock uses the older expectation style whereas rhinomocks and moq both support the arrange act assert approach where you specify you expected interactions as assertions at the end of the test like this\n", "for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n", "for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n", "for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n", "for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n", "you can use asihttprequest which is quite better than cfnetwork\n", "you can use asihttprequest which is quite better than cfnetwork\n", "you can use asihttprequest which is quite better than cfnetwork\n", "you can use asihttprequest which is quite better than cfnetwork\n", "why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n", "in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n", "codeigniter has the lower learning curve overall so i would recommend it over cakephp\n", "cakephp is considered slower than codeigniter but you can tweak it to enhance speed\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "codeigniter has the lower learning curve overall so i would recommend it over cakephp\n", "why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "i suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpful\n", "i personally use codeigniter which probably falls in to the heavy framework category but is at least much lighter than cakephp and lighter than zend too i think\n", "in my opinion it will probably be easier to integrate with codeigniter although someone more experienced with cakephp might prove me wrong\n", "i have been reading about cakephp but it seems a bit more complicated than codeigniter\n", "why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n", "in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n", "codeigniter has the lower learning curve overall so i would recommend it over cakephp\n", "cakephp is considered slower than codeigniter but you can tweak it to enhance speed\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "codeigniter has the lower learning curve overall so i would recommend it over cakephp\n", "why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n", "cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n", "i suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpful\n", "i personally use codeigniter which probably falls in to the heavy framework category but is at least much lighter than cakephp and lighter than zend too i think\n", "in my opinion it will probably be easier to integrate with codeigniter although someone more experienced with cakephp might prove me wrong\n", "i have been reading about cakephp but it seems a bit more complicated than codeigniter\n", "i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n", "i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n", "i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n", "i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n", "or would a tool like typemock be better suited than moq in this case\n", "since apple has decided that qtkit is no more and avfoundation appears to only support prores 4444 and 422 flavors how are developers supposed to write modern software that can handle 4444xq 422lt and 422 proxy\n", "since apple has decided that qtkit is no more and avfoundation appears to only support prores 4444 and 422 flavors how are developers supposed to write modern software that can handle 4444xq 422lt and 422 proxy\n", "silex seems to have a bigger community than slim maybe it s just my point of view\n", "i think silex produces a bit uglier code than slim but i m afraid to choose slim because it s changing constantly and i will be stuck with the current version if it breaks backward compatibility\n", "silex seems to have a bigger community than slim maybe it s just my point of view\n", "i think silex produces a bit uglier code than slim but i m afraid to choose slim because it s changing constantly and i will be stuck with the current version if it breaks backward compatibility\n", "it fills the gap between scalatra and lift more powerful than scalatra and easier to use than lift\n", "it fills the gap between scalatra and lift more powerful than scalatra and easier to use than lift\n", "i did some reading on kombu and it seems to be able to do what i m thinking of although at a much lower level than celery\n", "compare the very active django tag on stack overflow with that of pylons or turbogears though and i d argue getting started is simply easier with django irrespective of anything to do with code\n", "web2py may be young but the mailing list has 2000 messages month which is similar to django and far more than turbogears\n", "compare the very active django tag on stack overflow with that of pylons or turbogears though and i d argue getting started is simply easier with django irrespective of anything to do with code\n", "web2py may be young but the mailing list has 2000 messages month which is similar to django and far more than turbogears\n", "it s very heavyweight and not fully featured for forms so prism or freshmvvm works better as these are designed for forms from the ground up but if you do use mvvmcross for forms its easy to go native if you need\n", "you cannot use mocks in conjunction with roboguice it s better to let robolectric provide the context you need here\n", "you cannot use mocks in conjunction with roboguice it s better to let robolectric provide the context you need here\n", "you can do it with qtkit but works better in 32bit quicktime framework\n", "you can do it with qtkit but works better in 32bit quicktime framework\n", "i ve only done one experiment with angular material myself and i wasn t experiencing any real performance issues at the time but i did read some people writing about it being slower than plain ionic\n", "the docs for ionic 2 are clear user-friendly and much less intimidating than angular 2 docs\n", "i think your code has no problem except that angular has deprecated legacy promise methods success and error of http after version 1.4.4 you should use standard then method instead if your ionic depends on higher angular version\n", "i ve only done one experiment with angular material myself and i wasn t experiencing any real performance issues at the time but i did read some people writing about it being slower than plain ionic\n", "the docs for ionic 2 are clear user-friendly and much less intimidating than angular 2 docs\n", "i think your code has no problem except that angular has deprecated legacy promise methods success and error of http after version 1.4.4 you should use standard then method instead if your ionic depends on higher angular version\n", "it s probably overkill for what you need but sproutcore is an mvc framework and it doesn t look any more heavyweight than javascriptmvc or trimpath s junction\n", "it s probably overkill for what you need but sproutcore is an mvc framework and it doesn t look any more heavyweight than javascriptmvc or trimpath s junction\n", "i have worked pretty heavily with both flavors of the gwt extjs libraries though i ve spent more time with gxt recently\n", "i have worked pretty heavily with both flavors of the gwt extjs libraries though i ve spent more time with gxt recently\n", "sproutcore makes use of bindings better than cappuccino currently does\n", "sproutcore has a better data store api than the one cappuccino has\n", "like bruz says cappuccino is probably more freeform at the data layer than sproutcore\n", "sproutcore has a better data store api than the one cappuccino has\n", "like bruz says cappuccino is probably more freeform at the data layer than sproutcore\n", "considering the lack of windows 8 love that xna is getting support being dropped apps won t be sellable on the app store -- i d go with slimdx -- it s better than xna anyway -- the only down side is that you can t make xbox apps with it\n", "considering the lack of windows 8 love that xna is getting support being dropped apps won t be sellable on the app store -- i d go with slimdx -- it s better than xna anyway -- the only down side is that you can t make xbox apps with it\n", "nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n", "nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n", "nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n", "from what i have read on here i here that nunit is more popular over mbunit\n", "nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n", "from what i have read on here i here that nunit is more popular over mbunit\n", "nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n", "nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n", "nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n", "from what i have read on here i here that nunit is more popular over mbunit\n", "nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n", "from what i have read on here i here that nunit is more popular over mbunit\n", "according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n", "developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer\n", "developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer\n", "according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n", "according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n", "according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n", "developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer\n", "developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer\n", "according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n", "according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n", "how can i connect a method and not a command with a binding from the viewmodel to an attached event to ask in a more general way with caliburn micro\n", "with caliburn it is even easier since you just need to bind a property on your viewmodel to selecteditem\n", "wicket probably has more resources than vaadin\n", "wicket probably has more resources than vaadin\n", "i would say vaadin would be easier over wicket as the default ui elements look really good\n", "this is only a guess and is not based on actual performance testing probably wicket will be doing better than vaadin\n", "wicket probably has more resources than vaadin\n", "with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n", "with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n", "wicket probably has more resources than vaadin\n", "wicket probably has more resources than vaadin\n", "i would say vaadin would be easier over wicket as the default ui elements look really good\n", "this is only a guess and is not based on actual performance testing probably wicket will be doing better than vaadin\n", "wicket probably has more resources than vaadin\n", "with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n", "with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n", "the thing that makes sinon a better choice than jasmine spies is that it is capable of programming spies expectations withargs ... .called.\n", "it should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used together\n", "it should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used together\n", "the thing that makes sinon a better choice than jasmine spies is that it is capable of programming spies expectations withargs ... .called.\n", "it should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used together\n", "it should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used together\n", "we started experimenting with hapijs on smaller services and kind of like it more than express\n", "we started experimenting with hapijs on smaller services and kind of like it more than express\n", "i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n", "yii has a higher learning curve than say codeigniter and cakephp\n", "i am currently looking at yii and while its more complex than codeigniter the documentation is much more informative and therefore understandable than cakephp s\n", "personally i d say yii might have the edge as it encourages convention more than codeigniter would\n", "i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n", "yii has a higher learning curve than say codeigniter and cakephp\n", "so latest codeigniter 2.0 is better than yii according to this benchmarks\n", "2 yii a bit more structured than codeigniter but you have a basic app up within 10 mins and if your familiar with mvc design its a great way to develop portals incredibly quickly\n", "i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n", "yii has a higher learning curve than say codeigniter and cakephp\n", "i am currently looking at yii and while its more complex than codeigniter the documentation is much more informative and therefore understandable than cakephp s\n", "personally i d say yii might have the edge as it encourages convention more than codeigniter would\n", "i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n", "yii has a higher learning curve than say codeigniter and cakephp\n", "so latest codeigniter 2.0 is better than yii according to this benchmarks\n", "2 yii a bit more structured than codeigniter but you have a basic app up within 10 mins and if your familiar with mvc design its a great way to develop portals incredibly quickly\n", "geddy is not better than connect express the big thing that differs is the structure of it\n", "geddy is not better than connect express the big thing that differs is the structure of it\n", "so what makes geddy significantly better than connect\n", "edit it seems junit has more printed books as references compared to testng on amazon\n", "testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n", "to be perfectly honest i junit is way more popular than testng at least here where i work and live\n", "if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n", "here is what it would look like with testng it s a little more contrived with junit since you can t pass parameters directly to test functions\n", "testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n", "testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n", "testng is much friendlier to this paradigm than junit though\n", "to be perfectly honest i junit is way more popular than testng at least here where i work and live\n", "testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n", "i know this can be achieved with junit but in my experience it is easier with testng\n", "in case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit\n", "junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n", "if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n", "to be perfectly honest i junit is way more popular than testng at least here where i work and live\n", "isn t testng supposed to a better than junit\n", "if there is a junit extension or similar framework that provides a better solution than testng then please let me know\n", "in case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit\n", "if you are familiar of using junit it is easier to switch into testng\n", "if you re doing non-unit testing testng might be a better option than junit\n", "junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n", "firstly i am not sure how to properly use multi-thread with junit last time i tried i had no success anyway i have had better results with testng\n", "testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n", "testng strives to be much more configurable than junit but in the end they both work equally well\n", "testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n", "edit it seems junit has more printed books as references compared to testng on amazon\n", "testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n", "to be perfectly honest i junit is way more popular than testng at least here where i work and live\n", "if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n", "here is what it would look like with testng it s a little more contrived with junit since you can t pass parameters directly to test functions\n", "testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n", "testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n", "testng is much friendlier to this paradigm than junit though\n", "to be perfectly honest i junit is way more popular than testng at least here where i work and live\n", "testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n", "i know this can be achieved with junit but in my experience it is easier with testng\n", "in case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit\n", "junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n", "if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n", "to be perfectly honest i junit is way more popular than testng at least here where i work and live\n", "isn t testng supposed to a better than junit\n", "if there is a junit extension or similar framework that provides a better solution than testng then please let me know\n", "in case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit\n", "if you are familiar of using junit it is easier to switch into testng\n", "if you re doing non-unit testing testng might be a better option than junit\n", "junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n", "firstly i am not sure how to properly use multi-thread with junit last time i tried i had no success anyway i have had better results with testng\n", "testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n", "testng strives to be much more configurable than junit but in the end they both work equally well\n", "testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n", "i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n", "web.py has a templating language of it s own it looks easier than django s\n", "web.py is more low-level comparing with django\n", "web.py is more low-level comparing with django\n", "i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n", "i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n", "web.py has a templating language of it s own it looks easier than django s\n", "web.py is more low-level comparing with django\n", "web.py is more low-level comparing with django\n", "i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n", "since cakephp seems to be much lighter than zend-framework i would suggest that you take a look at cakephp\n", "since cakephp seems to be much lighter than zend-framework i would suggest that you take a look at cakephp\n", "jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n", "seam certainly is far better than using plain jsf refer the link posted by damo a couple of answers above\n", "jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n", "well for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending story\n", "seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n", "seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n", "jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n", "seam certainly is far better than using plain jsf refer the link posted by damo a couple of answers above\n", "jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n", "well for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending story\n", "seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n", "seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n", "mef seemed a bit easier than prism and i started to do a hello world mef app with this tutorial\n", "mef seemed a bit easier than prism and i started to do a hello world mef app with this tutorial\n", "though openrasta looks more mature than wcf web api i m still a bit confused\n", "is openrasta better than wcf\n", "openrasta is much more mature than wcf web api\n", "though openrasta looks more mature than wcf web api i m still a bit confused\n", "openrasta is much more mature than wcf web api\n", "building restful services with openrasta is much simpler than with wcf in my experience\n", "building restful services with openrasta is much simpler than with wcf in my experience\n", "openrasta is much more mature than wcf web api\n", "you could argue that the struts style is simpler and you can do it in wicket too it just isn t optimal but keeping the state only in the server has many advantages\n", "you could argue that the struts style is simpler and you can do it in wicket too it just isn t optimal but keeping the state only in the server has many advantages\n", "if you actually need dao s this is something that comes out-of-the-box in appfuse and put partly in spring roo but there is also a great addon for spring roo hades addon that does a great job at this maybe even better than appfuse\n", "mockito has been around a lot longer than scalamock and is much more actively maintained because of it s much larger contributor base\n", "scalamock looks more natural when developing applications in scala however from what i read it seems to support fewer test scenarios compared to mockito and it s also less mature\n", "scalamock looks more natural when developing applications in scala however from what i read it seems to support fewer test scenarios compared to mockito and it s also less mature\n", "if you are looking for the latter then flask is a micro framework that is considerably smaller than django\n", "current task looks like flask is ok for it since it is smaller and simplier than django\n", "but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n", "i read that flask for beginner is better than django because educational reasons at the same time django have django oscar\n", "i m building an application in both bottle and flask to see which i am more comfortable with as django is too much batteries included\n", "both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need\n", "but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n", "flask is more focused on simplicity instead of functionality while django has more functionality\n", "but if the use of mongodb is a must then i suggest that you reconsider using django in the first place because mongodb has a better integration with flask through mongoengine\n", "flask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directory\n", "either will do the trick but bottle or in my preference flask will be faster as it is much more lightweight than django\n", "django is very batteries included meaning that it comes with much more out-of-the-box than say flask and to me a large part of that the user auth system\n", "both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need\n", "our team use django as our frame before but now we use flask as our frame because it is more light than django but we still use django template.\n", "if you are looking for the latter then flask is a micro framework that is considerably smaller than django\n", "current task looks like flask is ok for it since it is smaller and simplier than django\n", "but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n", "i read that flask for beginner is better than django because educational reasons at the same time django have django oscar\n", "i m building an application in both bottle and flask to see which i am more comfortable with as django is too much batteries included\n", "both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need\n", "but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n", "flask is more focused on simplicity instead of functionality while django has more functionality\n", "but if the use of mongodb is a must then i suggest that you reconsider using django in the first place because mongodb has a better integration with flask through mongoengine\n", "flask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directory\n", "either will do the trick but bottle or in my preference flask will be faster as it is much more lightweight than django\n", "django is very batteries included meaning that it comes with much more out-of-the-box than say flask and to me a large part of that the user auth system\n", "both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need\n", "our team use django as our frame before but now we use flask as our frame because it is more light than django but we still use django template.\n", "jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n", "performing this asynchronous testing is actually possible in qunit but is handled better in another javascript testing framework jasmine js\n", "jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n", "jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n", "performing this asynchronous testing is actually possible in qunit but is handled better in another javascript testing framework jasmine js\n", "jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n", "junit is older and have more extensions dbunit cactus etc\n", "first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n", "first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n", "first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n", "first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n", "mockito s a much older library than jmockit so you could expect that it would have many more features\n", "comparison between mockito vs jmockit - why is mockito voted better than jmockit\n", "mockito s a much older library than jmockit so you could expect that it would have many more features\n", "comparison between mockito vs jmockit - why is mockito voted better than jmockit\n", "1 split those tests to unit and acceptance and use a tool like codeception to help you do acceptance which is way more elegant than phpunit for this kind of test\n", "1 split those tests to unit and acceptance and use a tool like codeception to help you do acceptance which is way more elegant than phpunit for this kind of test\n", "prism is more of a modularity framework and caliburn is more of a mvvm framework i know both have overlapping features but it would be great to take best features from two frameworks when they are combined\n", "bottle is rather faster than flask\n", "i d totally go with flask unless one dependency bottle is better than three flask jinja2 and werkzeug\n", "bottle is rather faster than flask\n", "bottle is rather faster than flask\n", "i d totally go with flask unless one dependency bottle is better than three flask jinja2 and werkzeug\n", "bottle is rather faster than flask\n", "subjective phpunit provides much nicer code coverage reports than simpletest\n", "phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that\n", "subjective phpunit provides much nicer code coverage reports than simpletest\n", "subjective phpunit provides much nicer code coverage reports than simpletest\n", "simpletest is slightly easier to grasp but phpunit is the best in my opinion at least so if you want to start learning and using a framework start with the one you re going to use when you ll be a master in tdd\n", "phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that\n", "i found simpletest was even easier than phpunit to set up\n", "subjective phpunit provides much nicer code coverage reports than simpletest\n", "in my opinion this is a more elegant solution than jsf and i think tapestry s ioc container makes it more powerful than wicket\n", "in my opinion this is a more elegant solution than jsf and i think tapestry s ioc container makes it more powerful than wicket\n", "i should also say that i have the token at ctx.request.get authorization koa based i think it s something like req.header authorization with express in all routes\n", "koa middleware is much simpler and less hacky than express middleware due to the way middleware flows in a stack-like manner\n", "koa doesn t provide this kind of thing out of the box - it s designed to be a little more low level than express\n", "koa middleware is much simpler and less hacky than express middleware due to the way middleware flows in a stack-like manner\n", "see this blog when you have 10000 request koa performs better than express\n", "it shows that koa is faster then other framework but as this question is about express and restify express is faster than restify\n", "it shows that koa is faster then other framework but as this question is about express and restify express is faster than restify\n", "i should also say that i have the token at ctx.request.get authorization koa based i think it s something like req.header authorization with express in all routes\n", "koa middleware is much simpler and less hacky than express middleware due to the way middleware flows in a stack-like manner\n", "koa doesn t provide this kind of thing out of the box - it s designed to be a little more low level than express\n", "koa middleware is much simpler and less hacky than express middleware due to the way middleware flows in a stack-like manner\n", "see this blog when you have 10000 request koa performs better than express\n", "it shows that koa is faster then other framework but as this question is about express and restify express is faster than restify\n", "it shows that koa is faster then other framework but as this question is about express and restify express is faster than restify\n", "phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp\n", "phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp\n", "phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp\n", "phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp\n", "i am using asp.net-mvc 2 and i see more than one html.actionlink method that takes an idictionary as a parameter for the html attributes\n", "i am using asp.net-mvc 2 and i see more than one html.actionlink method that takes an idictionary as a parameter for the html attributes\n", "i like caffe but the amount of gpu memory caffe use is larger than mxnet i test in resnet-50 with mxnet-memonger\n", "i like caffe but the amount of gpu memory caffe use is larger than mxnet i test in resnet-50 with mxnet-memonger\n", "i like caffe but the amount of gpu memory caffe use is larger than mxnet i test in resnet-50 with mxnet-memonger\n", "i like caffe but the amount of gpu memory caffe use is larger than mxnet i test in resnet-50 with mxnet-memonger\n", "thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n", "thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n", "thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n", "thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n", "kif makes ui testing really easy and useful with lots of great apis that are less complex than xctest\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "the good news is that dexterity content types are more lightweight than archetypes content types and doing raw listing by iterating over folder.contentitems in your template should not be that expensive\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "the good news is that dexterity content types are more lightweight than archetypes content types and doing raw listing by iterating over folder.contentitems in your template should not be that expensive\n", "dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n", "variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n", "lift s ajax support is far less verbose than wicket s\n", "lift s ajax support is far less verbose than wicket s\n", "even though aurora has better capabilities i prefer marathon due to auroras complexity overhead and lack of ui for control api\n", "even though aurora has better capabilities i prefer marathon due to auroras complexity overhead and lack of ui for control api\n", "stripes the actionbean approach doesn t look much better than struts\n", "i ve found stripes to be really effective and surprisingly lightweight....it aims to be more lightweight than struts\n", "stripes the actionbean approach doesn t look much better than struts\n", "i ve found stripes to be really effective and surprisingly lightweight....it aims to be more lightweight than struts\n", "moles is more often compared contrasted to typemock in that it offers a set of facilities outside of moq and or rhinomocks sweet spot\n", "i have no concrete figures on that but from my own experience i d estimate that instrumented tests are around 100-400 slower typemock seeming to be faster than ms moles\n", "moles is more often compared contrasted to typemock in that it offers a set of facilities outside of moq and or rhinomocks sweet spot\n", "overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n", "but if codeigniter has a bit too much bloat for you maybe you can try kohana which is a bit less bloated than codeigniter started as a fork\n", "overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n", "i ve came to kohana from codeigniter which was a little bit bigger documentation and easier to understood but as far as i found out many programmers say that kohana are alot better than codeigniter\n", "overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n", "but if codeigniter has a bit too much bloat for you maybe you can try kohana which is a bit less bloated than codeigniter started as a fork\n", "overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n", "i ve came to kohana from codeigniter which was a little bit bigger documentation and easier to understood but as far as i found out many programmers say that kohana are alot better than codeigniter\n", "but avro offers far more than just doing away with the need for your own writables although that is in my view a considerable plus it offers fairly efficient serialization the choice between serializing against generated entity classes like thrift requires or using a so-called genericrecord structure instead and not having to have tagged data\n", "but avro offers far more than just doing away with the need for your own writables although that is in my view a considerable plus it offers fairly efficient serialization the choice between serializing against generated entity classes like thrift requires or using a so-called genericrecord structure instead and not having to have tagged data\n", "performance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playable\n", "performance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playable\n", "performance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playable\n", "performance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playable\n", "i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n", "i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n", "i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n", "i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n", "as i understand it web2py supports gae better out of the box than django\n", "having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n", "i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n", "to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n", "and web2py is more lightweight than django rails whatever on pretty much all counts\n", "having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n", "i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n", "web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n", "to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n", "web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n", "and web2py is more lightweight than django rails whatever on pretty much all counts\n", "django s is better web2py s appadmin is for administrators only\n", "i think you ll find that web2py is even easier to learn and use than rails and django\n", "django s admin is better and more customizable than web2py s appadmin\n", "anyway the most important issue is that web2py is easier than django pylons php and rails\n", "as i understand it web2py supports gae better out of the box than django\n", "having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n", "i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n", "to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n", "and web2py is more lightweight than django rails whatever on pretty much all counts\n", "having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n", "i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n", "web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n", "to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n", "web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n", "and web2py is more lightweight than django rails whatever on pretty much all counts\n", "django s is better web2py s appadmin is for administrators only\n", "i think you ll find that web2py is even easier to learn and use than rails and django\n", "django s admin is better and more customizable than web2py s appadmin\n", "anyway the most important issue is that web2py is easier than django pylons php and rails\n", "the silverstripe cms is a great php framework better than laravel the most popular at the moment but its documenation lacking\n", "the silverstripe cms is a great php framework better than laravel the most popular at the moment but its documenation lacking\n", "if you have a full version of visual studio 2008 rather than the express edition it integrates the inbuilt mstest much better than nunit does and cruise control also supports mstest\n", "from my experience mstest is much slower than nunit\n", "sriwantha mstest is a simpler framework than nunit\n", "sriwantha mstest is a simpler framework than nunit\n", "nunit has better support for parameterized tests than mstest\n", "from my experience mstest is much slower than nunit\n", "for example nunit offers more assert methods than mstest\n", "thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n", "the best testdriven.net disables all instrumentation that mstest does so it makes mstest blazing fast - much faster than nunit for example\n", "thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n", "nonetheless i tried to compare the sum of all test speeds and in some cases nunit is faster and in other cases mstest is faster\n", "nunit has better support for parameterized tests than mstest\n", "various people told me to go with nunit since it s better than mstest apparently i have no idea and it also has very good support in resharper which i m using\n", "nunit is faster as compared to mstest\n", "if you have a full version of visual studio 2008 rather than the express edition it integrates the inbuilt mstest much better than nunit does and cruise control also supports mstest\n", "from my experience mstest is much slower than nunit\n", "sriwantha mstest is a simpler framework than nunit\n", "sriwantha mstest is a simpler framework than nunit\n", "nunit has better support for parameterized tests than mstest\n", "from my experience mstest is much slower than nunit\n", "for example nunit offers more assert methods than mstest\n", "thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n", "the best testdriven.net disables all instrumentation that mstest does so it makes mstest blazing fast - much faster than nunit for example\n", "thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n", "nonetheless i tried to compare the sum of all test speeds and in some cases nunit is faster and in other cases mstest is faster\n", "nunit has better support for parameterized tests than mstest\n", "various people told me to go with nunit since it s better than mstest apparently i have no idea and it also has very good support in resharper which i m using\n", "nunit is faster as compared to mstest\n", "flex uses an older less capable version of the osmf platform for its videoplayer\n", "flex uses an older less capable version of the osmf platform for its videoplayer\n", "also vert.x has little bit better benchmarks than netty\n", "also vert.x has little bit better benchmarks than netty\n", "fakeiteasy seems to have an overall nicer syntax than moq like the strongly-typed way the former deals with passing parameters to a constructor of a faked class\n", "btw why do you want to use fakeiteasy it looks to me less powerful than moq\n", "fakeiteasy seems to have an overall nicer syntax than moq like the strongly-typed way the former deals with passing parameters to a constructor of a faked class\n", "btw why do you want to use fakeiteasy it looks to me less powerful than moq\n", "personally i really like reactiveui which is fairly unusual but does make getting things right an awful lot easier than caliburn\n", "for the record jmock as of today supports more complex scenarios than mockito that s why the initial learning curve is steeper\n", "i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n", "i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n", "for the record jmock as of today supports more complex scenarios than mockito that s why the initial learning curve is steeper\n", "i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n", "i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n", "in xna when is it appropriate to render your game content using more than one spritebatch\n", "i m in the hate it part so anything i said is biased plus in our test prototypes developing in wicket was faster than jsf\n", "i would advise you to try wicket it is very easy to learn much easier than jsf and it let s you re-use many existing components as well\n", "i m in the hate it part so anything i said is biased plus in our test prototypes developing in wicket was faster than jsf\n", "i would advise you to try wicket it is very easy to learn much easier than jsf and it let s you re-use many existing components as well\n", "unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n", "i understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any more\n", "unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n", "in my personal benchmarks laravel is undeniably faster than codeigniter due to lazy loading\n", "before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features\n", "if you ve been using laravel then you already know it is better than codeigniter\n", "i understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any more\n", "in my personal benchmarks laravel is undeniably faster than codeigniter due to lazy loading\n", "before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features\n", "i am new to laravel it s good for coding but it is not much faster than codeigniter\n", "unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n", "i understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any more\n", "unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n", "in my personal benchmarks laravel is undeniably faster than codeigniter due to lazy loading\n", "before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features\n", "if you ve been using laravel then you already know it is better than codeigniter\n", "i understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any more\n", "in my personal benchmarks laravel is undeniably faster than codeigniter due to lazy loading\n", "before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features\n", "i am new to laravel it s good for coding but it is not much faster than codeigniter\n", "i d suggest having a look at openrasta which is much closer to http semantics than asp.net asp.net-mvc is\n", "the later version of jmock makes things easier by integrating with the junit lifecycle as a runner\n", "the later version of jmock makes things easier by integrating with the junit lifecycle as a runner\n", "xna is more popular and has more tutorials then libgdx\n", "xna is more popular and has more tutorials then libgdx\n", "xna + monogame --- monogame s performance seems only slightly lower than libgdx can build to most platforms\n", "xna is more popular and has more tutorials then libgdx\n", "xna is more popular and has more tutorials then libgdx\n", "xna + monogame --- monogame s performance seems only slightly lower than libgdx can build to most platforms\n", "also take a look at silex as this has lower overhead than symfony and works with symfony forms\n", "also take a look at silex as this has lower overhead than symfony and works with symfony forms\n", "while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n", "while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n", "while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n", "while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n", "the consensus seems to be that corona is easier to use but that cocos2d-x has the advantages that come from being open source easy to customize merge with other code community etc\n", "i would recommend cocos2d-x as it is in my opinion equally or even better than corona and it is free\n", "the consensus seems to be that corona is easier to use but that cocos2d-x has the advantages that come from being open source easy to customize merge with other code community etc\n", "i would recommend cocos2d-x as it is in my opinion equally or even better than corona and it is free\n", "i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n", "but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n", "both give you the ability to implement things in a variety of ways which can be confusing but ember.js provides more of the code that you would have to write yourself in backbone.js as standard which for me personally is more important for rapid prototyping than the wealth of backbone.js examples available\n", "i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n", "but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n", "ember.js is larger than backbone.js but thanks to expires cache-control this only matters on the the first load\n", "ember.js would make things even simpler than backbone.js\n", "but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n", "i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n", "but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n", "both give you the ability to implement things in a variety of ways which can be confusing but ember.js provides more of the code that you would have to write yourself in backbone.js as standard which for me personally is more important for rapid prototyping than the wealth of backbone.js examples available\n", "i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n", "but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n", "ember.js is larger than backbone.js but thanks to expires cache-control this only matters on the the first load\n", "ember.js would make things even simpler than backbone.js\n", "but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n", "sinatra and padrino are not automatically faster than ruby-on-rails\n", "as wuliwong said sinatra and padrino are way less complex than ruby-on-rails\n", "but i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-rails\n", "sinatra and padrino are not automatically faster than ruby-on-rails\n", "as wuliwong said sinatra and padrino are way less complex than ruby-on-rails\n", "but i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-rails\n"], "editor": ["i had previously used aptana 3 for a couple days and may have come to the conclusion that it is better than dreamweaver at actual html css coding\n", "but i ve found that sublimetext 2 has some features i like more than textmate and also tm v2 which is in beta\n", "macvim sublimetext is much thicker whereas textmate is slicker and sophisticated\n", "but i ve found that sublimetext 2 has some features i like more than textmate and also tm v2 which is in beta\n", "macvim sublimetext is much thicker whereas textmate is slicker and sophisticated\n", "you can customize kate and i think you will like it better than gedit\n", "if vim seems too much by the moment i think that kate is better than gedit\n", "textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n", "personally i m using sublimetext right now which i find easier than vim for searching and navigating the code but everyone has their taste\n", "sublimetext or webstorm are far more accessible than vim so it usually happens with their editor rather than mine\n", "textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n", "textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n", "personally i m using sublimetext right now which i find easier than vim for searching and navigating the code but everyone has their taste\n", "sublimetext or webstorm are far more accessible than vim so it usually happens with their editor rather than mine\n", "textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n", "lately i have used notepad++ a bit more than vim\n", "lately i have used notepad++ a bit more than vim\n", "this is the one thing i think sublimetext does better than emacs\n", "this is the one thing i think sublimetext does better than emacs\n", "on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs\n", "on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs\n", "i feel like emacs is so much better than textmate\n", "textmate is a better emacs for macs though that won t help you with solaris\n", "i feel like emacs is so much better than textmate\n", "textmate is a better emacs for macs though that won t help you with solaris\n", "on windows machine i would probably go with textpad personally i now use programmers notepad 2 however it does not support a spell checker and i don t really thinks it s better than textpad by any measure\n", "as it happens my choice is textpad but just about anything which is more advanced than notepad ought to be able to do this\n", "on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n", "maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n", "i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n", "emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n", "you might want to try emacs - it has an inbuilt tutorial and some people like me find it easier over vim no flames pls\n", "and i tend to think that after a moderate amount of customisation of either one vim will still start up faster than emacs\n", "that said modifier keys are important in vim even if less than in emacs\n", "on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n", "i ve used vim for 10+ years but never really into vim scripting always subjectively beliving that this was one area where vim was weaker than emacs\n", "i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n", "cut and paste in vim takes more steps than in emacs iirc\n", "there are definitely some advantages using external editors however emacs is ten million times better than vim\n", "personally i m using emacs right now which i find easier than vim for searching and navigating the code but everyone has their taste\n", "in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl\n", "maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n", "for example emacs s macro shortcut f3 and f4 is easier than vim s qq and q\n", "since emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imagine\n", "i realized that emacs would load slower than vim but this seems ridiculous for a fresh install\n", "emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n", "cut and paste in vim takes more steps than in emacs iirc\n", "in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl\n", "it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa\n", "on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n", "maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n", "i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n", "emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n", "you might want to try emacs - it has an inbuilt tutorial and some people like me find it easier over vim no flames pls\n", "and i tend to think that after a moderate amount of customisation of either one vim will still start up faster than emacs\n", "that said modifier keys are important in vim even if less than in emacs\n", "on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n", "i ve used vim for 10+ years but never really into vim scripting always subjectively beliving that this was one area where vim was weaker than emacs\n", "i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n", "cut and paste in vim takes more steps than in emacs iirc\n", "there are definitely some advantages using external editors however emacs is ten million times better than vim\n", "personally i m using emacs right now which i find easier than vim for searching and navigating the code but everyone has their taste\n", "in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl\n", "maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n", "for example emacs s macro shortcut f3 and f4 is easier than vim s qq and q\n", "since emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imagine\n", "i realized that emacs would load slower than vim but this seems ridiculous for a fresh install\n", "emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n", "cut and paste in vim takes more steps than in emacs iirc\n", "in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl\n", "it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa\n", "i have found that jedit has better plugins for providing some of the more ide-oriented capabilities but like boltclock said notepad++ is really just a powerful text editor and does not try to be a one-stop-shop ide\n", "i think jedit is equal to or better than notepad++\n", "i have found that jedit has better plugins for providing some of the more ide-oriented capabilities but like boltclock said notepad++ is really just a powerful text editor and does not try to be a one-stop-shop ide\n", "i have tried with sublimetext 2 and it work very very good better than gedit p\n", "i have tried with sublimetext 2 and it work very very good better than gedit p\n", "sublimetext 3 needs much more time several seconds more then scite before the opened file shows up and i suppose it is because sublimetext does some pre-evaluation of the file content like detecting areas suitable for folding there are fold triangles available depending on indentation of non-white characters in the file\n", "sublimetext 3 needs much more time several seconds more then scite before the opened file shows up and i suppose it is because sublimetext does some pre-evaluation of the file content like detecting areas suitable for folding there are fold triangles available depending on indentation of non-white characters in the file\n", "in studio 3 much of this sort of functionality is still coming as aptana is going more of a textmate bundle route for a great deal of their features which i think is really cool\n", "i prefer sublimetext because it s a little more customizable than notepad++ but they re both great options and lighter than dreamweaver\n", "notepad++ which is often recommended are even more broken than sublimetext 2 which i find to be pretty good actually\n", "i prefer sublimetext because it s a little more customizable than notepad++ but they re both great options and lighter than dreamweaver\n", "notepad++ which is often recommended are even more broken than sublimetext 2 which i find to be pretty good actually\n", "i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n", "i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n", "vim is more powerful and textmate is worth the price tag\n", "vim is more powerful and textmate is worth the price tag\n", "i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n", "i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n", "vim is more powerful and textmate is worth the price tag\n", "vim is more powerful and textmate is worth the price tag\n", "why atom-editor uses more memory and takes more time to start as compare to sublimetext editor\n", "plus copy as rtf for atom-editor has more recent updates than sublimehightlight for sublimetext\n", "plus copy as rtf for atom-editor has more recent updates than sublimehightlight for sublimetext\n", "why atom-editor uses more memory and takes more time to start as compare to sublimetext editor\n", "though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n", "sublimetext has better performance than atom-editor\n", "though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n", "atom-editor has better github support out of the box but sublimetext has a several git packages\n", "sublimetext has better performance than atom-editor\n", "atom-editor has better github support out of the box but sublimetext has a several git packages\n", "why atom-editor uses more memory and takes more time to start as compare to sublimetext editor\n", "plus copy as rtf for atom-editor has more recent updates than sublimehightlight for sublimetext\n", "plus copy as rtf for atom-editor has more recent updates than sublimehightlight for sublimetext\n", "why atom-editor uses more memory and takes more time to start as compare to sublimetext editor\n", "though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n", "sublimetext has better performance than atom-editor\n", "though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n", "atom-editor has better github support out of the box but sublimetext has a several git packages\n", "sublimetext has better performance than atom-editor\n", "atom-editor has better github support out of the box but sublimetext has a several git packages\n", "i tried a few ides on ubuntu and it just didn t seem right - gedit is lightweight and i actually enjoy using it more than textmate on os x\n", "i tried a few ides on ubuntu and it just didn t seem right - gedit is lightweight and i actually enjoy using it more than textmate on os x\n", "it looks like vim is slower than geany\n", "when i m in a hurry i use gedit purely because it is quicker than komodo edit\n", "when i m in a hurry i use gedit purely because it is quicker than komodo edit\n", "by the way if you like minimalistic approach there is also scite editor which is my personal preference for doing small bits of code it s even more lightweight than notepad++\n", "i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n", "i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n", "i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n", "i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n", "i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n", "i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n", "if you are on linux eg ubuntu you may try gedit for ease of use with some plug-ins but to handle very large files you re better off with vim\n", "if you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being gedit\n", "if you are on linux eg ubuntu you may try gedit for ease of use with some plug-ins but to handle very large files you re better off with vim\n", "if you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being gedit\n", "i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill\n", "i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill\n", "i have fireworks 8 as well as photoshop cs3 on my windows pc but i m more familiar with fireworks\n", "i find using emacs easier than vim\n", "if you want an environment instead of just a text editor emacs is going to be better than vim\n", "superficially emacs is much more bloated than vim is and so it really isn t quite so convenient to fire up as vim but i also find that the philosophies of user interface from one to the other support this paradigm\n", "emacs users are going to be almost as fast as 99 of vim users and as i said in the emacs section beginning emacs users will probably be faster than beginning vim users\n", "vim has a smaller footprint than emacs but this is not much of a big deal these days\n", "one domain where emacs is plain better than vim is interaction with asynchronous subprocesses\n", "superficially emacs is much more bloated than vim is and so it really isn t quite so convenient to fire up as vim but i also find that the philosophies of user interface from one to the other support this paradigm\n", "superficially emacs is much more bloated than vim is and so it really isn t quite so convenient to fire up as vim but i also find that the philosophies of user interface from one to the other support this paradigm\n", "emacs is much more built to keep you inside making things nice and comfortable so you don t have to leave whereas vim is much more unixy and sees itself as part of a greater tool-belt\n", "vim has a smaller footprint than emacs but this is not much of a big deal these days\n", "starting a remote emacs is usually slower than starting a remote vim\n", "one domain where emacs is plain better than vim is interaction with asynchronous subprocesses\n", "i find using emacs easier than vim\n", "if you want an environment instead of just a text editor emacs is going to be better than vim\n", "superficially emacs is much more bloated than vim is and so it really isn t quite so convenient to fire up as vim but i also find that the philosophies of user interface from one to the other support this paradigm\n", "emacs users are going to be almost as fast as 99 of vim users and as i said in the emacs section beginning emacs users will probably be faster than beginning vim users\n", "vim has a smaller footprint than emacs but this is not much of a big deal these days\n", "one domain where emacs is plain better than vim is interaction with asynchronous subprocesses\n", "superficially emacs is much more bloated than vim is and so it really isn t quite so convenient to fire up as vim but i also find that the philosophies of user interface from one to the other support this paradigm\n", "superficially emacs is much more bloated than vim is and so it really isn t quite so convenient to fire up as vim but i also find that the philosophies of user interface from one to the other support this paradigm\n", "emacs is much more built to keep you inside making things nice and comfortable so you don t have to leave whereas vim is much more unixy and sees itself as part of a greater tool-belt\n", "vim has a smaller footprint than emacs but this is not much of a big deal these days\n", "starting a remote emacs is usually slower than starting a remote vim\n", "one domain where emacs is plain better than vim is interaction with asynchronous subprocesses\n", "to answer you question instead of saying to stay with gedit or recommending a wholly different editor an alternative to gedit that has fewer dependencies and the features you ask is geany\n", "to answer you question instead of saying to stay with gedit or recommending a wholly different editor an alternative to gedit that has fewer dependencies and the features you ask is geany\n", "fireworks compression is far better than photoshop s compression with no comparable loss of quality between the two\n", "for people creating mainly online content fireworks probably has most all the features they need and probably suits their workflow better than photoshop\n", "fireworks compression is far better than photoshop s compression with no comparable loss of quality between the two\n", "geany is much faster than gedit and is my editor of choice whenever i don t want to use vim\n", "geany is much faster than gedit and is my editor of choice whenever i don t want to use vim\n", "so ideally what i d like is to look at apart from basics are the gaps that emacs can fill or things that it can just do better than vim\n", "so ideally what i d like is to look at apart from basics are the gaps that emacs can fill or things that it can just do better than vim\n", "i m a vim user trying to move to sublimetext 2 as it s faster than macvim with a bunch of stuff open\n", "i m a vim user trying to move to sublimetext 2 as it s faster than macvim with a bunch of stuff open\n", "because we can t install programs and i like sublimetext more than notepad++ i downloaded the portable version and i m using that as my text editor however once i open sublimetext the firewall starts acting weird\n", "because we can t install programs and i like sublimetext more than notepad++ i downloaded the portable version and i m using that as my text editor however once i open sublimetext the firewall starts acting weird\n", "aquamacs is more mac-like whereas carbon emacs is more well emacs-ish\n", "aquamacs is more mac-like whereas carbon emacs is more well emacs-ish\n", "ps i like kate more than gedit\n", "sublimetext is more coding friendly than notepad++ i use notepad++ heavily for almost all my text editing needs other than coding\n", "sublimetext is more coding friendly than notepad++ i use notepad++ heavily for almost all my text editing needs other than coding\n"], "ide": ["i had previously used aptana 3 for a couple days and may have come to the conclusion that it is better than dreamweaver at actual html css coding\n", "however i do not know if webstorm has a comparable option like that as it has less functionality than phpstorm or even intellij\n", "however i do not know if webstorm has a comparable option like that as it has less functionality than phpstorm or even intellij\n", "if you re focussing on pure client code then i find webstorm to be an excellent javascript html ide - even better than aptana\n", "if you re focussing on pure client code then i find webstorm to be an excellent javascript html ide - even better than aptana\n", "consider using force.com canvas now ga which is an added-value iframe with more security and easier integration with salesforce apis than raw iframes - see\n", "consider using force.com canvas now ga which is an added-value iframe with more security and easier integration with salesforce apis than raw iframes - see\n", "i think greenfoot is better than bluej for 8-years old\n", "i like the auto-complete feature of pycharm but from my experience it is slower than spyder\n", "i like the auto-complete feature of pycharm but from my experience it is slower than spyder\n", "in studio 3 much of this sort of functionality is still coming as aptana is going more of a textmate bundle route for a great deal of their features which i think is really cool\n", "my c s-function is faster than my embedded matlab function block in matlab environment but when i use it in rt-lab the embedded is faster\n", "we sort of settled on it but later found codelite and liked it better than codeblocks\n", "i like the monodevelop ide even better than sharpdevelop but i m not sold on installing and using mono s compiler just yet nor do i know if it can even handle the latest vb.net c# language features\n", "monodevelop is more of a replacement of an ide for mac and linux in windows the recommended thing is to use visual studio or sharpdevelop\n", "i like the monodevelop ide even better than sharpdevelop but i m not sold on installing and using mono s compiler just yet nor do i know if it can even handle the latest vb.net c# language features\n", "monodevelop is more of a replacement of an ide for mac and linux in windows the recommended thing is to use visual studio or sharpdevelop\n", "webstorm + pycharm + rubymine + phpstorm though to be fair rubymine has more features than radrails atm\n", "webstorm + pycharm + rubymine + phpstorm though to be fair rubymine has more features than radrails atm\n", "another alternative that people might mention is clion which is from jetbrains but its closed-source not well supported and whilst it might look nicer than qt-creator it has more or less the same features but is much more resource-heavy and laggy so i d pass on that\n", "another alternative that people might mention is clion which is from jetbrains but its closed-source not well supported and whilst it might look nicer than qt-creator it has more or less the same features but is much more resource-heavy and laggy so i d pass on that\n", "it looks like vim is slower than geany\n", "for that purpose i want to transform the simulink model into a c version and launch it from a matlab script so that the process would be much faster than opening simulink environment\n", "to answer you question instead of saying to stay with gedit or recommending a wholly different editor an alternative to gedit that has fewer dependencies and the features you ask is geany\n", "to answer you question instead of saying to stay with gedit or recommending a wholly different editor an alternative to gedit that has fewer dependencies and the features you ask is geany\n", "geany is much faster than gedit and is my editor of choice whenever i don t want to use vim\n", "geany is much faster than gedit and is my editor of choice whenever i don t want to use vim\n"], "application": ["odd that elasticsearch is more tolerant than kibana\n", "if you would like a unified front-end for elasticsearch and opentsdb you could consider grafana which has support for both elasticsearch and opentsdb but less functionality than kibana in regard to elasticsearch\n", "odd that elasticsearch is more tolerant than kibana\n", "grafana is more of visualization only while kibana is for searching the logs is that right\n", "kibana focuses more on logs and adhoc search while grafana focuses more on creating dashboards for visualizing time series data\n", "grafana is more of visualization only while kibana is for searching the logs is that right\n", "kibana focuses more on logs and adhoc search while grafana focuses more on creating dashboards for visualizing time series data\n", "xhtml has a stronger syntax than html and is easier to convert to apache-fop this way\n", "xhtml has a stronger syntax than html and is easier to convert to apache-fop this way\n", "if you are targeting android you can use firefox for android by developing a webapp that has native mathml support and because of it will be much faster than mathjax or other javascript solution\n", "in addition the need for polyfills for mathml complicates matters further as they may handle the interaction differently as can be seen in the sample below when using the button to load mathjax\n", "for load testing jmeter is better option but you have quite enough funding then go for loadrunner neoload rational performance tester and for cloud try blazemeter\n", "for load testing jmeter is better option but you have quite enough funding then go for loadrunner neoload rational performance tester and for cloud try blazemeter\n", "since mantis is a bit more complete than bugzilla when it comes to features you could define separate issues with custom field for your tasks\n", "research showed me that mantis is simpler to use over bugzilla so i decided to use mantis but have no idea how to install it.can anyone please tell me what are the steps you need to take in order to install mantis bug tracking system in a small company to track website mobile portal bugs\n", "i have been trying out redmine to see if i like it better than mantis\n", "i ve read that mantis contains less project management tools than redmine\n", "i ve read that mantis contains less project management tools than redmine\n", "i have found jmeter to be more reliable than soapui or loadui\n", "i have found jmeter to be more reliable than soapui or loadui\n", "i think you ll find that your team will like either trac or redmine more than bugzilla or mantis\n", "i think you ll find that your team will like either trac or redmine more than bugzilla or mantis\n", "why blazemeter is better than jmeter\n", "imo startapp is better than admob especially when using their interstitial ads\n", "i understand redmine is more of a trac clone but retrospectiva seem to support agile methodologies via a nice plugin\n", "we ve recently switched from trac to redmine where i work and i think i like it a little more than trac and use the wiki functionality almost everyday\n", "the authors of redmine are trying to create a better trac than trac\n", "redmine was written to be a better trac than trac\n", "redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac\n", "redmine handles multiple projects and sub projects far nicer than trac\n", "for next projects i m going to try redmine seems more clean and hipe than trac\n", "we found redmine to be a better than trac simply because it is easier to use\n", "redmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administer\n", "i wound up going with redmine and it s way better than trac\n", "i d recommend redmine like the other posters as it is more complete than trac\n", "for next projects i m going to try redmine seems more clean and hipe than trac\n", "nobody has ever accused git of being easy-to-use no tortoisegit for example although i hear it s coming so you might be better off with svn beanstalk\n", "the compare dialog of tortoisegit is more about file and with git you have to compare two master branches not just two commits of the same branches both pointing to the same svn central repo\n", "so basically when box2d is more about how objects will behave themselves during application running the scene2d is more about how you write your code before application running\n", "trac s issue tracking is little better than bugzilla s...i know a lot of folks love trac but i find it very inflexible\n"], "browser": ["as you can see in the image google-chrome is running a lot longer than opera\n", "now this works fine in google-chrome and safari and i have had to use assitional css settings for firefox but ie and opera both display my ribbon div about 25px higher than in google-chrome or safari\n", "for comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10\n", "also nice to know is the fact that the latest version of google-chrome and also opera don t know since when but longer than google-chrome supports userscripts out of the box no need to install any add-ons\n", "opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n", "since you noted thoughts on other browsers would be helpful opera s kiosk mode seems more powerful than google-chrome s\n", "opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n", "for comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10\n", "note i recommend using opera - it is much faster than google-chrome as it doesn t have memory leaks and comes with a built-in ad blocker\n", "especially in opera there is much more green in the painting than in google-chrome\n", "especially in opera there is much more green in the painting than in google-chrome\n", "as you can see in the image google-chrome is running a lot longer than opera\n", "now this works fine in google-chrome and safari and i have had to use assitional css settings for firefox but ie and opera both display my ribbon div about 25px higher than in google-chrome or safari\n", "for comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10\n", "also nice to know is the fact that the latest version of google-chrome and also opera don t know since when but longer than google-chrome supports userscripts out of the box no need to install any add-ons\n", "opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n", "since you noted thoughts on other browsers would be helpful opera s kiosk mode seems more powerful than google-chrome s\n", "opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n", "for comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10\n", "note i recommend using opera - it is much faster than google-chrome as it doesn t have memory leaks and comes with a built-in ad blocker\n", "especially in opera there is much more green in the painting than in google-chrome\n", "especially in opera there is much more green in the painting than in google-chrome\n", "my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n", "i had a hiccup in firefox but found a fix after figuring out firefox is a bit more picky than google-chrome when defining svg attributes\n", "so why is google-chrome less efficient than firefox and ie\n", "the google-chrome apis are currently experimental hence these tools are likely to be better developed under firefox\n", "google-chrome handles these better than compared to firefox\n", "firefox has like 40px less width than google-chrome in columns which is causing problems\n", "here the working header request with firefox bigger than google-chrome request\n", "another alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your application\n", "thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n", "the most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chrome\n", "google-chrome extensions are considerably more limited than firefox extensions \u00e2 \u00e2 they can only hook the behavior of the browser in certain predefined ways\n", "in google-chrome it is appearing higher than the original in firefox\n", "currently with the 10px top padding the cells in google-chrome look taller than in firefox\n", "the issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ie\n", "firefox is easier and better than google-chrome in finding the element from the webpage\n", "also google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensions\n", "try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n", "also firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chrome\n", "why is firefox so much slower than google-chrome on my laptop\n", "it seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or something\n", "in firefox it s less noticeable but in google-chrome it s very noticeable\n", "ie firefox higher than baseline google-chrome on baseline\n", "in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n", "as you said google-chrome is faster than firefox so the webdriver is trying to interact with the dom before when elements are not yet visible exist\n", "firefox produces more space compared to google-chrome\n", "i have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30\n", "it looks like it shows for firefox more-so than google-chrome but it might help\n", "i m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar framerates\n", "given these last two complications i am leaning towards a browser plugin as the solution probably firefox since low-level http stuff seems to be better supported than in google-chrome but i am wondering if anyone has an idea for a more cross-browser-y solution and or if there is something out there that might provide a good api for this kind of thing\n", "also ie and firefox seems to work better than google-chrome\n", "obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n", "ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n", "in google-chrome the button should be a tad smaller than in firefox\n", "the results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when using\n", "google-chrome is more flexible in this sense than firefox which is why it works there\n", "and also does anyone know why is firefox so much slower than google-chrome in 3d rendering\n", "the reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundaries\n", "the performance in google-chrome is best less so in firefox and ie\n", "maybe google-chrome is working faster than firefox try adding a wait with expected conditions\n", "google-chrome is reporting the missing key with a higher severity than firefox is so i want to eliminate that as a possible cause\n", "in firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you need\n", "firefox which is more standards-compliant than google-chrome doesn t allow this\n", "based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n", "safari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut off\n", "in ie8 and google-chrome it runs even faster than firefox in general and this slow down never happens\n", "i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n", "but firefox keeps being less responsive than google-chrome or ie\n", "i just found out that if you re using google-chrome you trigger antialiasing at 49px or higher however with firefox it s set at 257px or higher\n", "it s clearly visible in firefox and is far more subtle yet also distinguishable in google-chrome\n", "ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n", "firefox has a more advanced plugin than the google-chrome extension but both work\n", "that means firefox is more than 7x faster than google-chrome here\n", "my question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome ok\n", "while the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903\n", "font-face bold in firefox is bolder than in google-chrome\n", "i ve learned partly by trawling this site that the google-chrome security is fussier and the app loads correctly without errors in firefox and ie but i can t find any resources that are loaded from a non https source\n", "notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n", "google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n", "most noticeably if you look or google-chrome firefox and then internet explorer 9 you ll notice that the terms and conditions are slightly higher than in google-chrome or firefox and thus slightly touching the main content area\n", "that means firefox is more than 7x faster than google-chrome here\n", "on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n", "google-chrome dev tools are by far better than firefox ie whatever imho\n", "support exists in firefox and my test just confirmed this\u00e2 but the handle is a little less noticeable than in google-chrome\n", "most likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome is\n", "the performance in google-chrome is best less so in firefox and ie\n", "it seems google-chrome applies some formatting to render better than firefox\n", "firefox takes almost 3 times longer than google-chrome\n", "when i run my http web server on google google-chrome it gives more 324 error than in firefox\n", "graph beeing cut in google-chrome is a known issue google-chrome does not respect some print css and works much better with firefox not all versions still\n", "i have been trying to do this in firefox webextensions but if it s easier with google-chrome i will try it that way instead.\n", "i know different engines render fonts differently and but the issue i m having is that firefox renders the font higher than google-chrome - at the size i am displaying the font this is very noticeable 3 or 4 px - which on a button means they re totally misaligned\n", "google-chrome is just more forgiving for some mistakes then firefox\n", "firefox can get away with more than google-chrome before aborting\n", "firefox is more picky about characters that are set in uris than google-chrome\n", "i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n", "it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n", "firefox encodes more characters than google-chrome\n", "update just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main thread\n", "but in firefox the left-collumn gets a much bigger height than in google-chrome\n", "and additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of text\n", "i guess google-chrome is a bit more forgiving than firefox\n", "maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n", "in firefox and other browsers the background is much whiter and brighter than in google-chrome\n", "firefox is more tolerant when it comes to image headers then ie and google-chrome\n", "firefox extensions have much more power than google-chrome and have wider access to browser s internal api\n", "in google-chrome the button is wider than in firefox\n", "firefox handles this better than google-chrome does but neither exactly the way i want\n", "phantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefox\n", "i ve been trying to sum up values over a swipe and see how different browsers report values and they vary a lot with safari reporting order of magnitude bigger numbers on almost all platforms google-chrome reporting quite more like 3 times more than firefox firefox being balanced on the long run but quite different among platforms on small movements on ubuntu gnome nearly only +3 or -3 seems like it sums up smaller events and then send a big +3\n", "firefox text is 1px lower than in google-chrome and ie\n", "in google-chrome there is more files download 47 than in firefox ie 42\n", "google-chrome renders passwords smaller than firefox\n", "no and there won t be any time soon because google-chrome s add-on api is more restrictive than firefox\n", "firefox is slower than google-chrome in javascript\n", "ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n", "i ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000\n", "google-chrome is a bit more strict than firefox here\n", "for example using renatoargh s test google-chrome is faster with option 2 firefox with option 1\n", "but i guess google-chrome i have version 10 should be much faster than firefox 3.6\n", "firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n", "in google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays different\n", "i am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossible\n", "i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n", "firefox s default textbox includes more padding than ie google-chrome\n", "in firefox it s less noticeable but in google-chrome it s very noticeable\n", "also why does firefox perform way better than google-chrome on this benchmark\n", "i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n", "for my website i noticed that tooltip delay in firefox was much higher than in google-chrome\n", "firefox is clearly less secured it deliberately allows something that google-chrome locks down\n", "notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n", "this is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not work\n", "i need to do the same condition but for less than google-chrome version 46 and for less than firefox version 44\n", "on linux google-chrome displays text about one pixel higher than firefox and opera\n", "it looks like google-chrome is smaller in your screenshot there so firefox could just not be at the defined break-point yet\n", "any ideas why google-chrome is apply more spacing than firefox ie\n", "ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n", "it s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dots\n", "often google-chrome is understanding more thing then it should and firefox is bringing you the reality back in your face eheh\n", "ie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possible\n", "firefox encodes more characters than google-chrome\n", "however a sdp object local description by firefox does not contain datachannel at all and moreover the sdp is much shorter than google-chrome and less information bundled\n", "i usually use google-chrome s developer mode which imho already gives even more details than firefox\n", "firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n", "in general i have found google-chrome to be more finnicky than firefox\n", "spidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistent\n", "first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n", "when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n", "the google-chrome console gives more information than the firefox console\n", "firefox seems to animate the element quicker than google-chrome does and so while a duration of 1s is enough for the animation in google-chrome firefox needs it to be 2s to be slower and show the effect\n", "i am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefox\n", "my firefox adds more chopping to video playing itself google-chrome plays the video much better\n", "of late firefox has had much better performance than google-chrome\n", "in firefox it s much better than google-chrome but still not as black as ie\n", "if i remove this code the width of green image in firefox becomes smaller but it s still bigger than necessary about 100px the google-chrome images keeps unchanged\n", "i m trying to add a ribbon to a page using css3 linear-gradients but the rendering in google-chrome looks a lot less pleasant than its firefox or ie alternative\n", "with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not\n", "on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n", "btw google-chrome is less close to w3c specs than firefox de 42+ i d opt to start using firefox for your initial testing and then test it in ch to detect quirks\n", "google-chrome is more flexible in this sense than firefox which is why it works there\n", "firefox is even slower that google-chrome\n", "even then google-chrome s fonts look thinner than in firefox or ie\n", "better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n", "try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n", "firefox - good a bit slower than google-chrome\n", "apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n", "firefox text is 1px lower than in google-chrome and ie\n", "when i ran the test individually with a timer google-chrome actually performed better than firefox hope this helps\n", "the position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the list\n", "first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n", "i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n", "google-chrome is more forgiving or you could call it less compliant firefox less so\n", "why height in google-chrome is bigger than firefox of input\n", "2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n", "after looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chrome\n", "also it does appear that firefox consistently handles this better than ie or google-chrome\n", "firefox is probably easier than google-chrome these days\n", "better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n", "right now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correct\n", "firefox is more tolerant when it comes to image headers then ie and google-chrome\n", "i have encounter a problem with google-chrome that is similar to an older issue with firefox at this url scrolling blocks javascript execution in firefox\n", "in firefox it s much better than google-chrome but still not as black as ie\n", "we use google-chrome though which i believe uses more ram than firefox\n", "and of course the results - if they are reproducible - might suggest that google-chrome is faster than firefox or that firefox just prioritises timeouts over dom events\n", "apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n", "suffice to say ie and google-chrome start having problems at larger heights than does firefox\n", "the google-chrome console gives more information than the firefox console\n", "i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n", "what s up with google-chrome that the debugger behaves less conveniently than firefox\n", "or does this mean firefox is less secured on that point than google-chrome\n", "thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n", "i use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons are\n", "is it because google-chrome has much better javascript support than firefox\n", "when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n", "in google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see why\n", "this makes firefox 50x faster than google-chrome and 70x faster than safari is there any known reason for that\n", "i believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer version\n", "google-chrome renders passwords smaller than firefox\n", "the idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correct\n", "is it because google-chrome has much better javascript support than firefox\n", "this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n", "on google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using bool\n", "i m sticking with firefox debugging of my angular 2 app outside of vs code as its user experience is better than google-chrome especially when working with typescript files so i ll stick with that for now unless i can figure this out\n", "that happens because pixels size in google-chrome is bigger than in firefox\n", "i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n", "open up the fiddle in both firefox google-chrome to see what i m talking about - in firefox the positioning of the background image is much lower than in google-chrome safari\n", "here is a simple performance test showing that in google-chrome filling is faster than clearing i am not sure what goes on with google-chrome and canvas nowadays but in firefox clearing is many times faster than filling both significantly faster than google-chrome\n", "they use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tags\n", "the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the others\n", "transparency is also an issue however google-chrome seems to handle all three better than firefox\n", "if you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefox\n", "btw google-chrome is less close to w3c specs than firefox de 42+ i d opt to start using firefox for your initial testing and then test it in ch to detect quirks\n", "evidently firefox debugger firebug is better than google-chrome debugger\n", "google-chrome renders longer input fields than firefox and ie\n", "my menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chrome\n", "because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n", "it depends on the browser its definitely true for ie and firefox but seems slower on google-chrome\n", "arabic default font in google-chrome is larger than it is in firefox\n", "firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit\n", "tldr in firefox filter is slightly faster in google-chrome that s the opposite\n", "i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n", "i would like this function to work in firefox ie google-chrome etc but at the moment it only works in google-chrome and older than firefox version 49\n", "i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n", "firefox thumbnail 4 times smaller than on google-chrome\n", "the same word in firefox look wider than in google-chrome\n", "first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n", "if google-chrome seems to finish earlier than firefox then that is the freezing glitch in action\n", "use firefox rather than google-chrome - google-chrome with dev mode is much slower than firefox\n", "firefox produces more space compared to google-chrome\n", "although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n", "also google-chrome s map function is up to 2x slower than firefox on my machine\n", "using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish\n", "i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n", "the trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than ie\n", "in google-chrome it seems .prototype is faster firefox shows no difference between the two although generally performs slower than google-chrome\n", "install firebug firefox version is better then a google-chrome one\n", "firefox may be sniffing the document s encoding with more flexibility than google-chrome is\n", "google-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making it 900 slower than the firefox run\n", "update3 now it works here which means that i couldn t fully reproduce my bug to show it to you but in general the problem is that the height of 5x5 table in google-chrome is less from firefox on 22px which is 22px gap between table container and a table itself\n", "using firefox even it s slower than google-chrome it s still more respectful of privacy\n", "in google-chrome typeof is slower than the other two but in firefox it is the fastest\n", "obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n", "i built a site and the problem is google-chrome display font-size 1px bigger than firefox\n", "even if you give the inputs a attribute firefox renders them wider than google-chrome\n", "the funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expected\n", "for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n", "google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n", "firefox gsap performance is still much worse than in google-chrome but google-chrome gsap does still lag every few repeats or so while in google-chrome the css animations do not\n", "i ve tested the sample on firefox and it s a bit slower than google-chrome but usable\n", "svg performance in firefox is slower than in webkit google-chrome and ie10\n", "in my experience google-chrome has better javascript performance than firefox\n", "i ve found that firefox is greatly faster with imacros than google-chrome\n", "in firefox it seems that this is 1px lower than in google-chrome and safari\n", "also about firefox i know still less than google-chrome and i m not sure about how it innerly manage resources among threads and if it is even possible to achieve what i want but if possible i d need to do the same work with firefox threads\n", "firefox is more picky about characters that are set in uris than google-chrome\n", "by highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome right\n", "pd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purpose\n", "though from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox ie\n", "firefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as ie\n", "firefox which is more standards-compliant than google-chrome doesn t allow this\n", "the google-chrome console gives more information than the firefox console\n", "google-chrome is more forgiving or you could call it less compliant firefox less so\n", "any ideas why google-chrome is apply more spacing than firefox ie\n", "what we can see is that regardless of raw hardware power google-chrome seems to run up to three times faster than edge and also significantly faster than firefox all updated to the latest verion\n", "in firefox the input button has more padding than in google-chrome\n", "actually your code doesn t work on firefox because he is less forgiving than google-chrome about errors\n", "in my experience google-chrome will be a lot faster than firefox to debug huge js files\n", "i ve found that the font-size in firefox is a bit larger than in google-chrome\n", "google-chrome shows it better than firefox firebug\n", "i m on a mac os x 10.8.2 running firefox 18.0.2 - it actually runs the game faster and smoother than my google-chrome 25.0.1364.99\n", "based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n", "i suspect that this may be the case because ie and google-chrome need to know about the content of the div earlier than firefox\n", "on my computer firefox performs much better than google-chrome on these tests using jsperf\n", "in firefox it takes some more time compared to google-chrome safari\n", "if we remove the font-size it appears properly in google-chrome but shows up smaller in firefox\n", "so i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performance\n", "this doesn t happen in google-chrome and is less frequent in firefox than in ie\n", "as you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider tests\n", "i have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issue\n", "use firefox network in development tools and check your requests sometimes it just sends options request in cross origin i insist on firefox because it s network tool is much more detailed than google-chrome and safari\n", "why in firefox text smaller left than in google-chrome and opera right\n", "2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n", "because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n", "in firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefox\n", "google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n", "maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n", "often google-chrome is understanding more thing then it should and firefox is bringing you the reality back in your face eheh\n", "you can see if you look at the bottom and right hand edges of both google-chrome lines up perfectly but firefox seems further in both directions and i cannot work out why either in firebug or google-chrome dev tools\n", "google-chrome is stricter than firefox when it comes to loading data from your local filesystem\n", "this is due to the simple fact that firefox has been in the extension business longer than google-chrome or ie\n", "what firefox displays is about 5 inches higher than what google-chrome displays\n", "this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions textures\n", "it works fine even for italics but i m aware that the user s browser is being asked to make a best-guess here and have noticed that google-chrome will make individual chars appear slightly fatter than firefox when i do things this way\n", "google-chrome sends back and html collection that is longer really better imo than firefox ie or chromium\n", "so firefox is better than google-chrome - but both suck in that regard\n", "this is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chrome\n", "in my experience google-chrome has better javascript performance than firefox\n", "google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n", "do you have any idea why google-chrome loads javascript function much slower than firefox\n", "firefox and ie9 require a proper domain to run from presumably because they are more strict than google-chrome in the way they associate the localstorate object to a domain in google-chrome it doesn t need to be a domain as such\n", "firefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chrome\n", "the logs only seem to work with a google-chrome browser which is a laugh as usually firefox is better at running google apps than google-chrome\n", "it is also proper browser behavior firefox is just stricter about it than google-chrome is\n", "i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n", "rendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimage\n", "firefox is easier and better than google-chrome in finding the element from the webpage\n", "firefox works a bit better than google-chrome but the settimeout just seems to delay the final result being shown rather than delaying each step\n", "my knowledge of firefox is better than google-chrome so my apologies if i missed something\n", "as google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower engine\n", "this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n", "however if thats the case does this mean firefox is faster in execution than google-chrome\n", "install firebug firefox version is better then a google-chrome one\n", "google-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chrome\n", "found that the issue stemmed from using the firefox webdriver which apparently has much higher security than its google-chrome counterpart\n", "i found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chrome\n", "this doesn t happen in google-chrome and is less frequent in firefox than in ie\n", "although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n", "apparently google-chrome is pickier than firefox\n", "now when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefox\n", "it s not the first time that the plugin for firefox works better for me than the one for google-chrome\n", "in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n", "also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefox\n", "i d say that firefox is correct in being stricter than google-chrome here even though i m not entirely sure the base uri has changed and this new uri should be used for the relative uri #symboltype1 too\n", "google-chrome renders longer input fields than firefox and ie\n", "google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n", "in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n", "in google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my console\n", "i guess google-chrome is smarter about me being careless than firefox is\n", "google-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answer\n", "firefox is probably easier than google-chrome these days\n", "performance is browser and device dependent for example firefox handles objects better than arrays while google-chrome prefers arrays\n", "firefox has a more advanced plugin than the google-chrome extension but both work\n", "in my testing google-chrome is nicer it pops-up the unresponsive alert whereas firefox apparently doesn t care\n", "google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n", "i inspected the range object in both google-chrome and firefox and then noticed that firefox s range object is far richer than google-chrome s\n", "it s clearly visible in firefox and is far more subtle yet also distinguishable in google-chrome\n", "is this due to firefox being more strict than google-chrome\n", "bad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computers\n", "in firefox it takes some more time compared to google-chrome safari\n", "google-chrome is just more forgiving for some mistakes then firefox\n", "it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n", "for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n", "in google-chrome there is more files download 47 than in firefox ie 42\n", "but firefox keeps being less responsive than google-chrome or ie\n", "on my computer firefox performs much better than google-chrome on these tests using jsperf\n", "my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n", "my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n", "i had a hiccup in firefox but found a fix after figuring out firefox is a bit more picky than google-chrome when defining svg attributes\n", "so why is google-chrome less efficient than firefox and ie\n", "the google-chrome apis are currently experimental hence these tools are likely to be better developed under firefox\n", "google-chrome handles these better than compared to firefox\n", "firefox has like 40px less width than google-chrome in columns which is causing problems\n", "here the working header request with firefox bigger than google-chrome request\n", "another alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your application\n", "thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n", "the most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chrome\n", "google-chrome extensions are considerably more limited than firefox extensions \u00e2 \u00e2 they can only hook the behavior of the browser in certain predefined ways\n", "in google-chrome it is appearing higher than the original in firefox\n", "currently with the 10px top padding the cells in google-chrome look taller than in firefox\n", "the issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ie\n", "firefox is easier and better than google-chrome in finding the element from the webpage\n", "also google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensions\n", "try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n", "also firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chrome\n", "why is firefox so much slower than google-chrome on my laptop\n", "it seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or something\n", "in firefox it s less noticeable but in google-chrome it s very noticeable\n", "ie firefox higher than baseline google-chrome on baseline\n", "in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n", "as you said google-chrome is faster than firefox so the webdriver is trying to interact with the dom before when elements are not yet visible exist\n", "firefox produces more space compared to google-chrome\n", "i have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30\n", "it looks like it shows for firefox more-so than google-chrome but it might help\n", "i m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar framerates\n", "given these last two complications i am leaning towards a browser plugin as the solution probably firefox since low-level http stuff seems to be better supported than in google-chrome but i am wondering if anyone has an idea for a more cross-browser-y solution and or if there is something out there that might provide a good api for this kind of thing\n", "also ie and firefox seems to work better than google-chrome\n", "obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n", "ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n", "in google-chrome the button should be a tad smaller than in firefox\n", "the results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when using\n", "google-chrome is more flexible in this sense than firefox which is why it works there\n", "and also does anyone know why is firefox so much slower than google-chrome in 3d rendering\n", "the reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundaries\n", "the performance in google-chrome is best less so in firefox and ie\n", "maybe google-chrome is working faster than firefox try adding a wait with expected conditions\n", "google-chrome is reporting the missing key with a higher severity than firefox is so i want to eliminate that as a possible cause\n", "in firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you need\n", "firefox which is more standards-compliant than google-chrome doesn t allow this\n", "based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n", "safari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut off\n", "in ie8 and google-chrome it runs even faster than firefox in general and this slow down never happens\n", "i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n", "but firefox keeps being less responsive than google-chrome or ie\n", "i just found out that if you re using google-chrome you trigger antialiasing at 49px or higher however with firefox it s set at 257px or higher\n", "it s clearly visible in firefox and is far more subtle yet also distinguishable in google-chrome\n", "ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n", "firefox has a more advanced plugin than the google-chrome extension but both work\n", "that means firefox is more than 7x faster than google-chrome here\n", "my question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome ok\n", "while the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903\n", "font-face bold in firefox is bolder than in google-chrome\n", "i ve learned partly by trawling this site that the google-chrome security is fussier and the app loads correctly without errors in firefox and ie but i can t find any resources that are loaded from a non https source\n", "notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n", "google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n", "most noticeably if you look or google-chrome firefox and then internet explorer 9 you ll notice that the terms and conditions are slightly higher than in google-chrome or firefox and thus slightly touching the main content area\n", "that means firefox is more than 7x faster than google-chrome here\n", "on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n", "google-chrome dev tools are by far better than firefox ie whatever imho\n", "support exists in firefox and my test just confirmed this\u00e2 but the handle is a little less noticeable than in google-chrome\n", "most likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome is\n", "the performance in google-chrome is best less so in firefox and ie\n", "it seems google-chrome applies some formatting to render better than firefox\n", "firefox takes almost 3 times longer than google-chrome\n", "when i run my http web server on google google-chrome it gives more 324 error than in firefox\n", "graph beeing cut in google-chrome is a known issue google-chrome does not respect some print css and works much better with firefox not all versions still\n", "i have been trying to do this in firefox webextensions but if it s easier with google-chrome i will try it that way instead.\n", "i know different engines render fonts differently and but the issue i m having is that firefox renders the font higher than google-chrome - at the size i am displaying the font this is very noticeable 3 or 4 px - which on a button means they re totally misaligned\n", "google-chrome is just more forgiving for some mistakes then firefox\n", "firefox can get away with more than google-chrome before aborting\n", "firefox is more picky about characters that are set in uris than google-chrome\n", "i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n", "it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n", "firefox encodes more characters than google-chrome\n", "update just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main thread\n", "but in firefox the left-collumn gets a much bigger height than in google-chrome\n", "and additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of text\n", "i guess google-chrome is a bit more forgiving than firefox\n", "maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n", "in firefox and other browsers the background is much whiter and brighter than in google-chrome\n", "firefox is more tolerant when it comes to image headers then ie and google-chrome\n", "firefox extensions have much more power than google-chrome and have wider access to browser s internal api\n", "in google-chrome the button is wider than in firefox\n", "firefox handles this better than google-chrome does but neither exactly the way i want\n", "phantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefox\n", "i ve been trying to sum up values over a swipe and see how different browsers report values and they vary a lot with safari reporting order of magnitude bigger numbers on almost all platforms google-chrome reporting quite more like 3 times more than firefox firefox being balanced on the long run but quite different among platforms on small movements on ubuntu gnome nearly only +3 or -3 seems like it sums up smaller events and then send a big +3\n", "firefox text is 1px lower than in google-chrome and ie\n", "in google-chrome there is more files download 47 than in firefox ie 42\n", "google-chrome renders passwords smaller than firefox\n", "no and there won t be any time soon because google-chrome s add-on api is more restrictive than firefox\n", "firefox is slower than google-chrome in javascript\n", "ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n", "i ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000\n", "google-chrome is a bit more strict than firefox here\n", "for example using renatoargh s test google-chrome is faster with option 2 firefox with option 1\n", "but i guess google-chrome i have version 10 should be much faster than firefox 3.6\n", "firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n", "in google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays different\n", "i am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossible\n", "i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n", "firefox s default textbox includes more padding than ie google-chrome\n", "in firefox it s less noticeable but in google-chrome it s very noticeable\n", "also why does firefox perform way better than google-chrome on this benchmark\n", "i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n", "for my website i noticed that tooltip delay in firefox was much higher than in google-chrome\n", "firefox is clearly less secured it deliberately allows something that google-chrome locks down\n", "notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n", "this is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not work\n", "i need to do the same condition but for less than google-chrome version 46 and for less than firefox version 44\n", "on linux google-chrome displays text about one pixel higher than firefox and opera\n", "it looks like google-chrome is smaller in your screenshot there so firefox could just not be at the defined break-point yet\n", "any ideas why google-chrome is apply more spacing than firefox ie\n", "ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n", "it s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dots\n", "often google-chrome is understanding more thing then it should and firefox is bringing you the reality back in your face eheh\n", "ie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possible\n", "firefox encodes more characters than google-chrome\n", "however a sdp object local description by firefox does not contain datachannel at all and moreover the sdp is much shorter than google-chrome and less information bundled\n", "i usually use google-chrome s developer mode which imho already gives even more details than firefox\n", "firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n", "in general i have found google-chrome to be more finnicky than firefox\n", "spidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistent\n", "first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n", "when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n", "the google-chrome console gives more information than the firefox console\n", "firefox seems to animate the element quicker than google-chrome does and so while a duration of 1s is enough for the animation in google-chrome firefox needs it to be 2s to be slower and show the effect\n", "i am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefox\n", "my firefox adds more chopping to video playing itself google-chrome plays the video much better\n", "of late firefox has had much better performance than google-chrome\n", "in firefox it s much better than google-chrome but still not as black as ie\n", "if i remove this code the width of green image in firefox becomes smaller but it s still bigger than necessary about 100px the google-chrome images keeps unchanged\n", "i m trying to add a ribbon to a page using css3 linear-gradients but the rendering in google-chrome looks a lot less pleasant than its firefox or ie alternative\n", "with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not\n", "on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n", "btw google-chrome is less close to w3c specs than firefox de 42+ i d opt to start using firefox for your initial testing and then test it in ch to detect quirks\n", "google-chrome is more flexible in this sense than firefox which is why it works there\n", "firefox is even slower that google-chrome\n", "even then google-chrome s fonts look thinner than in firefox or ie\n", "better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n", "try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n", "firefox - good a bit slower than google-chrome\n", "apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n", "firefox text is 1px lower than in google-chrome and ie\n", "when i ran the test individually with a timer google-chrome actually performed better than firefox hope this helps\n", "the position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the list\n", "first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n", "i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n", "google-chrome is more forgiving or you could call it less compliant firefox less so\n", "why height in google-chrome is bigger than firefox of input\n", "2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n", "after looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chrome\n", "also it does appear that firefox consistently handles this better than ie or google-chrome\n", "firefox is probably easier than google-chrome these days\n", "better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n", "right now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correct\n", "firefox is more tolerant when it comes to image headers then ie and google-chrome\n", "i have encounter a problem with google-chrome that is similar to an older issue with firefox at this url scrolling blocks javascript execution in firefox\n", "in firefox it s much better than google-chrome but still not as black as ie\n", "we use google-chrome though which i believe uses more ram than firefox\n", "and of course the results - if they are reproducible - might suggest that google-chrome is faster than firefox or that firefox just prioritises timeouts over dom events\n", "apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n", "suffice to say ie and google-chrome start having problems at larger heights than does firefox\n", "the google-chrome console gives more information than the firefox console\n", "i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n", "what s up with google-chrome that the debugger behaves less conveniently than firefox\n", "or does this mean firefox is less secured on that point than google-chrome\n", "thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n", "i use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons are\n", "is it because google-chrome has much better javascript support than firefox\n", "when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n", "in google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see why\n", "this makes firefox 50x faster than google-chrome and 70x faster than safari is there any known reason for that\n", "i believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer version\n", "google-chrome renders passwords smaller than firefox\n", "the idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correct\n", "is it because google-chrome has much better javascript support than firefox\n", "this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n", "on google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using bool\n", "i m sticking with firefox debugging of my angular 2 app outside of vs code as its user experience is better than google-chrome especially when working with typescript files so i ll stick with that for now unless i can figure this out\n", "that happens because pixels size in google-chrome is bigger than in firefox\n", "i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n", "open up the fiddle in both firefox google-chrome to see what i m talking about - in firefox the positioning of the background image is much lower than in google-chrome safari\n", "here is a simple performance test showing that in google-chrome filling is faster than clearing i am not sure what goes on with google-chrome and canvas nowadays but in firefox clearing is many times faster than filling both significantly faster than google-chrome\n", "they use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tags\n", "the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the others\n", "transparency is also an issue however google-chrome seems to handle all three better than firefox\n", "if you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefox\n", "btw google-chrome is less close to w3c specs than firefox de 42+ i d opt to start using firefox for your initial testing and then test it in ch to detect quirks\n", "evidently firefox debugger firebug is better than google-chrome debugger\n", "google-chrome renders longer input fields than firefox and ie\n", "my menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chrome\n", "because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n", "it depends on the browser its definitely true for ie and firefox but seems slower on google-chrome\n", "arabic default font in google-chrome is larger than it is in firefox\n", "firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit\n", "tldr in firefox filter is slightly faster in google-chrome that s the opposite\n", "i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n", "i would like this function to work in firefox ie google-chrome etc but at the moment it only works in google-chrome and older than firefox version 49\n", "i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n", "firefox thumbnail 4 times smaller than on google-chrome\n", "the same word in firefox look wider than in google-chrome\n", "first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n", "if google-chrome seems to finish earlier than firefox then that is the freezing glitch in action\n", "use firefox rather than google-chrome - google-chrome with dev mode is much slower than firefox\n", "firefox produces more space compared to google-chrome\n", "although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n", "also google-chrome s map function is up to 2x slower than firefox on my machine\n", "using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish\n", "i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n", "the trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than ie\n", "in google-chrome it seems .prototype is faster firefox shows no difference between the two although generally performs slower than google-chrome\n", "install firebug firefox version is better then a google-chrome one\n", "firefox may be sniffing the document s encoding with more flexibility than google-chrome is\n", "google-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making it 900 slower than the firefox run\n", "update3 now it works here which means that i couldn t fully reproduce my bug to show it to you but in general the problem is that the height of 5x5 table in google-chrome is less from firefox on 22px which is 22px gap between table container and a table itself\n", "using firefox even it s slower than google-chrome it s still more respectful of privacy\n", "in google-chrome typeof is slower than the other two but in firefox it is the fastest\n", "obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n", "i built a site and the problem is google-chrome display font-size 1px bigger than firefox\n", "even if you give the inputs a attribute firefox renders them wider than google-chrome\n", "the funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expected\n", "for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n", "google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n", "firefox gsap performance is still much worse than in google-chrome but google-chrome gsap does still lag every few repeats or so while in google-chrome the css animations do not\n", "i ve tested the sample on firefox and it s a bit slower than google-chrome but usable\n", "svg performance in firefox is slower than in webkit google-chrome and ie10\n", "in my experience google-chrome has better javascript performance than firefox\n", "i ve found that firefox is greatly faster with imacros than google-chrome\n", "in firefox it seems that this is 1px lower than in google-chrome and safari\n", "also about firefox i know still less than google-chrome and i m not sure about how it innerly manage resources among threads and if it is even possible to achieve what i want but if possible i d need to do the same work with firefox threads\n", "firefox is more picky about characters that are set in uris than google-chrome\n", "by highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome right\n", "pd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purpose\n", "though from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox ie\n", "firefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as ie\n", "firefox which is more standards-compliant than google-chrome doesn t allow this\n", "the google-chrome console gives more information than the firefox console\n", "google-chrome is more forgiving or you could call it less compliant firefox less so\n", "any ideas why google-chrome is apply more spacing than firefox ie\n", "what we can see is that regardless of raw hardware power google-chrome seems to run up to three times faster than edge and also significantly faster than firefox all updated to the latest verion\n", "in firefox the input button has more padding than in google-chrome\n", "actually your code doesn t work on firefox because he is less forgiving than google-chrome about errors\n", "in my experience google-chrome will be a lot faster than firefox to debug huge js files\n", "i ve found that the font-size in firefox is a bit larger than in google-chrome\n", "google-chrome shows it better than firefox firebug\n", "i m on a mac os x 10.8.2 running firefox 18.0.2 - it actually runs the game faster and smoother than my google-chrome 25.0.1364.99\n", "based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n", "i suspect that this may be the case because ie and google-chrome need to know about the content of the div earlier than firefox\n", "on my computer firefox performs much better than google-chrome on these tests using jsperf\n", "in firefox it takes some more time compared to google-chrome safari\n", "if we remove the font-size it appears properly in google-chrome but shows up smaller in firefox\n", "so i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performance\n", "this doesn t happen in google-chrome and is less frequent in firefox than in ie\n", "as you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider tests\n", "i have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issue\n", "use firefox network in development tools and check your requests sometimes it just sends options request in cross origin i insist on firefox because it s network tool is much more detailed than google-chrome and safari\n", "why in firefox text smaller left than in google-chrome and opera right\n", "2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n", "because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n", "in firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefox\n", "google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n", "maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n", "often google-chrome is understanding more thing then it should and firefox is bringing you the reality back in your face eheh\n", "you can see if you look at the bottom and right hand edges of both google-chrome lines up perfectly but firefox seems further in both directions and i cannot work out why either in firebug or google-chrome dev tools\n", "google-chrome is stricter than firefox when it comes to loading data from your local filesystem\n", "this is due to the simple fact that firefox has been in the extension business longer than google-chrome or ie\n", "what firefox displays is about 5 inches higher than what google-chrome displays\n", "this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions textures\n", "it works fine even for italics but i m aware that the user s browser is being asked to make a best-guess here and have noticed that google-chrome will make individual chars appear slightly fatter than firefox when i do things this way\n", "google-chrome sends back and html collection that is longer really better imo than firefox ie or chromium\n", "so firefox is better than google-chrome - but both suck in that regard\n", "this is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chrome\n", "in my experience google-chrome has better javascript performance than firefox\n", "google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n", "do you have any idea why google-chrome loads javascript function much slower than firefox\n", "firefox and ie9 require a proper domain to run from presumably because they are more strict than google-chrome in the way they associate the localstorate object to a domain in google-chrome it doesn t need to be a domain as such\n", "firefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chrome\n", "the logs only seem to work with a google-chrome browser which is a laugh as usually firefox is better at running google apps than google-chrome\n", "it is also proper browser behavior firefox is just stricter about it than google-chrome is\n", "i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n", "rendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimage\n", "firefox is easier and better than google-chrome in finding the element from the webpage\n", "firefox works a bit better than google-chrome but the settimeout just seems to delay the final result being shown rather than delaying each step\n", "my knowledge of firefox is better than google-chrome so my apologies if i missed something\n", "as google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower engine\n", "this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n", "however if thats the case does this mean firefox is faster in execution than google-chrome\n", "install firebug firefox version is better then a google-chrome one\n", "google-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chrome\n", "found that the issue stemmed from using the firefox webdriver which apparently has much higher security than its google-chrome counterpart\n", "i found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chrome\n", "this doesn t happen in google-chrome and is less frequent in firefox than in ie\n", "although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n", "apparently google-chrome is pickier than firefox\n", "now when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefox\n", "it s not the first time that the plugin for firefox works better for me than the one for google-chrome\n", "in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n", "also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefox\n", "i d say that firefox is correct in being stricter than google-chrome here even though i m not entirely sure the base uri has changed and this new uri should be used for the relative uri #symboltype1 too\n", "google-chrome renders longer input fields than firefox and ie\n", "google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n", "in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n", "in google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my console\n", "i guess google-chrome is smarter about me being careless than firefox is\n", "google-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answer\n", "firefox is probably easier than google-chrome these days\n", "performance is browser and device dependent for example firefox handles objects better than arrays while google-chrome prefers arrays\n", "firefox has a more advanced plugin than the google-chrome extension but both work\n", "in my testing google-chrome is nicer it pops-up the unresponsive alert whereas firefox apparently doesn t care\n", "google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n", "i inspected the range object in both google-chrome and firefox and then noticed that firefox s range object is far richer than google-chrome s\n", "it s clearly visible in firefox and is far more subtle yet also distinguishable in google-chrome\n", "is this due to firefox being more strict than google-chrome\n", "bad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computers\n", "in firefox it takes some more time compared to google-chrome safari\n", "google-chrome is just more forgiving for some mistakes then firefox\n", "it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n", "for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n", "in google-chrome there is more files download 47 than in firefox ie 42\n", "but firefox keeps being less responsive than google-chrome or ie\n", "on my computer firefox performs much better than google-chrome on these tests using jsperf\n", "my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n", "firefox has even fewer as far as i know and opera has none\n", "update under linux gentoo amd64 it s the same - opera reneders slightly larger fonts than firefox but nothing that looks odd\n", "for example i ve read that opera and ie will fix framerates slower than firefox\n", "on your screenshot div width in opera is bigger than in firefox and google-chrome\n", "but if firebug don\u00e2 t enabled after launch firefox \u00e2 time equal 2ms that faster than opera and google-chrome and difference between empty filled array disappears\n", "for example in the classic browser share example if the firefox is at 45 i want to be rendered inside the pie distance -40 may be and where the slice is less such as opera at 6 - i want it to be shown outside with a connector\n", "the problem with this code is that it doesn t quite work on firefox and works even worse on opera\n", "firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n", "only firefox and opera seem to have this issue opera even worse than firefox but i don t care that much about opera\n", "in opera it goes little bit lower than in firefox\n", "it seems to be slower in google-chrome and firefox but is significantly faster in opera\n", "firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n", "firefox has even fewer as far as i know and opera has none\n", "firefox has even fewer as far as i know and opera has none\n", "update under linux gentoo amd64 it s the same - opera reneders slightly larger fonts than firefox but nothing that looks odd\n", "for example i ve read that opera and ie will fix framerates slower than firefox\n", "on your screenshot div width in opera is bigger than in firefox and google-chrome\n", "but if firebug don\u00e2 t enabled after launch firefox \u00e2 time equal 2ms that faster than opera and google-chrome and difference between empty filled array disappears\n", "for example in the classic browser share example if the firefox is at 45 i want to be rendered inside the pie distance -40 may be and where the slice is less such as opera at 6 - i want it to be shown outside with a connector\n", "the problem with this code is that it doesn t quite work on firefox and works even worse on opera\n", "firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n", "only firefox and opera seem to have this issue opera even worse than firefox but i don t care that much about opera\n", "in opera it goes little bit lower than in firefox\n", "it seems to be slower in google-chrome and firefox but is significantly faster in opera\n", "firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n", "firefox has even fewer as far as i know and opera has none\n", "okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n", "a lot of people use iphones ipads and safari is literally the only option even google-chrome is more like safari in disguise... so it s quite a portion of users who are suffering from this issue\n", "i think safari renders the moves better than google-chrome\n", "i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n", "safari still uses the older version while google-chrome uses a more current one\n", "the browser does not matter though safari gets way more consistently working results than google-chrome\n", "safari comes in at just under 41ms performing better than google-chrome but still not great\n", "dus anyone knows if there is something wrong with my json or if google-chrome is harder to get than safari\n", "okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n", "safari 5.1 still renders smoother than google-chrome but it is now clear that google has done much improvement\n", "google-chrome is worse than safari\n", "safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n", "my ipad 1 safari js benchmarked 38 times slower than google-chrome on my pc\n", "it s not even a webkit issue unless google-chrome s got a newer version than safari\n", "google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n", "safari is more secure than ie or google-chrome\n", "total width of button in safari web inspector 6px larger than in google-chrome web inspector\n", "i also have .js files being redirected to javascript engines as well for main.js in google-chrome it tries main.v8.js in safari main.nitro.js in firefox main.gecko.js\n", "i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n", "from testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does not\n", "the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n", "it also gets broken even more in ios google-chrome which is an older version of safari\n", "safari renders open sans bolder than in google-chrome so you would need to apply a lighter font weight for safari open sans google web fonts rendering in google-chrome\n", "ios google-chrome is more ios safari than google-chrome itself\n", "safari will display fonts without a specified size significantly smaller than in google-chrome\n", "in any case vorbis clearly has the most coverage google-chrome has more of the market than safari now opera is about half of safari and obviously firefox is huge and it doesn t really have the strong opposition that theora has\n", "the safari controller bar is the quicktime bar which is smaller and dark so the movement is less noticeable than google-chrome which has a big blue progress bar\n", "safari 5.1.10 6534.59.10 middle handles a smaller viewport but in sort order with a smaller viewport computes new image sizes even smaller than google-chrome\n", "google-chrome has more of the market than safari not and invitation for flame wars just a personal opinion without any weight -\n", "it also gets broken even more in ios google-chrome which is an older version of safari\n", "in safari the background of my menu navigation drop-down menu s is much wider than in google-chrome firefox\n", "conclusion diff1 is faster in firefox opera and safari diff2 is faster in ie and google-chrome\n", "google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n", "this seems to me like a bandwidth error or something like that originally i ve got the error when i played with the html 5 audio api and if i loaded the audio file 10-15 times sequentially then i ve got the error but now i ve discovered that i get the error without the audio api too just by reloading the site a lots of times also safari gives me the error much faster than google-chrome wtf\n", "google-chrome also is susceptible to this same issue although it does a significantly better job than safari at getting the realtime api re-connected\n", "safari is more secure than ie or google-chrome\n", "if i try to do a google search for website loading slower in google-chrome than in safari i get a lot of results about how safari is slower than google-chrome\n", "safari makes child block s height larger than google-chrome\n", "so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n", "from testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does not\n", "okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n", "safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n", "so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n", "i guess firefox and safari handle huge numbers of elements better than google-chrome\n", "ios google-chrome is more ios safari than google-chrome itself\n", "safari still uses the older version while google-chrome uses a more current one\n", "the browser does not matter though safari gets way more consistently working results than google-chrome\n", "the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n", "okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n", "a lot of people use iphones ipads and safari is literally the only option even google-chrome is more like safari in disguise... so it s quite a portion of users who are suffering from this issue\n", "i think safari renders the moves better than google-chrome\n", "i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n", "safari still uses the older version while google-chrome uses a more current one\n", "the browser does not matter though safari gets way more consistently working results than google-chrome\n", "safari comes in at just under 41ms performing better than google-chrome but still not great\n", "dus anyone knows if there is something wrong with my json or if google-chrome is harder to get than safari\n", "okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n", "safari 5.1 still renders smoother than google-chrome but it is now clear that google has done much improvement\n", "google-chrome is worse than safari\n", "safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n", "my ipad 1 safari js benchmarked 38 times slower than google-chrome on my pc\n", "it s not even a webkit issue unless google-chrome s got a newer version than safari\n", "google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n", "safari is more secure than ie or google-chrome\n", "total width of button in safari web inspector 6px larger than in google-chrome web inspector\n", "i also have .js files being redirected to javascript engines as well for main.js in google-chrome it tries main.v8.js in safari main.nitro.js in firefox main.gecko.js\n", "i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n", "from testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does not\n", "the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n", "it also gets broken even more in ios google-chrome which is an older version of safari\n", "safari renders open sans bolder than in google-chrome so you would need to apply a lighter font weight for safari open sans google web fonts rendering in google-chrome\n", "ios google-chrome is more ios safari than google-chrome itself\n", "safari will display fonts without a specified size significantly smaller than in google-chrome\n", "in any case vorbis clearly has the most coverage google-chrome has more of the market than safari now opera is about half of safari and obviously firefox is huge and it doesn t really have the strong opposition that theora has\n", "the safari controller bar is the quicktime bar which is smaller and dark so the movement is less noticeable than google-chrome which has a big blue progress bar\n", "safari 5.1.10 6534.59.10 middle handles a smaller viewport but in sort order with a smaller viewport computes new image sizes even smaller than google-chrome\n", "google-chrome has more of the market than safari not and invitation for flame wars just a personal opinion without any weight -\n", "it also gets broken even more in ios google-chrome which is an older version of safari\n", "in safari the background of my menu navigation drop-down menu s is much wider than in google-chrome firefox\n", "conclusion diff1 is faster in firefox opera and safari diff2 is faster in ie and google-chrome\n", "google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n", "this seems to me like a bandwidth error or something like that originally i ve got the error when i played with the html 5 audio api and if i loaded the audio file 10-15 times sequentially then i ve got the error but now i ve discovered that i get the error without the audio api too just by reloading the site a lots of times also safari gives me the error much faster than google-chrome wtf\n", "google-chrome also is susceptible to this same issue although it does a significantly better job than safari at getting the realtime api re-connected\n", "safari is more secure than ie or google-chrome\n", "if i try to do a google search for website loading slower in google-chrome than in safari i get a lot of results about how safari is slower than google-chrome\n", "safari makes child block s height larger than google-chrome\n", "so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n", "from testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does not\n", "okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n", "safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n", "so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n", "i guess firefox and safari handle huge numbers of elements better than google-chrome\n", "ios google-chrome is more ios safari than google-chrome itself\n", "safari still uses the older version while google-chrome uses a more current one\n", "the browser does not matter though safari gets way more consistently working results than google-chrome\n", "the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n", "works in google-chrome firefox a bit weirdish blur effect on hover opera ends look smaller safari ends look smaller\n", "incidentally the scrolling on the windows version of safari is fine albeit a little slower than ie opera and firefox\n", "works in google-chrome firefox a bit weirdish blur effect on hover opera ends look smaller safari ends look smaller\n", "incidentally the scrolling on the windows version of safari is fine albeit a little slower than ie opera and firefox\n", "it seems that ie and firefox are less strict than safari\n", "google-chrome or safari on a mac could be much faster than firefox on a pc especially with newer apis\n", "on safari everything is slower than on firefox still the object property access is more than two times faster\n", "to me it looks like safari gets it more right than firefox text is generally more around a middle line\n", "but i haven t yet figured out whether it s me writing sloppy code with firefox perhaps being more forgiving than safari or if it s safari or if it s jquery\n", "it works great in google-chrome and safari haven t tested ie but i m sure it s somehow worse than firefox\n", "small in firefox is smaller then small in safari so never ever use them\n", "so to specify firefox greater than 20 safari greater than 9.1 and ie greater than 9\n", "i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n", "in ie and firefox fullscreen_block appears closer to the bottom than in safari and google-chrome\n", "on safari everything is slower than on firefox still the object property access is more than two times faster\n", "firefox is just better for web development and i prefer safari overall\n", "i saw that the discrepancy was because in safari the text element is taller than in firefox and includes a slight amount of whitespace on top that doesn t show up in firefox in firefox the top of the text element is exactly when the text starts\n", "the service is still in beta trial and firefox conversion is working better than safari one\n", "safari behaves better than firefox but an error message \u00e2 \u0153one error in opening the page\u00e2 \u00e2 shows up in the status bar if you remove the iframe during the load event\n", "that i gave to every link in the set of links home about us products contact and it seems that firefox is making that 1px margin much bigger than safari or google-chrome and distorting it\n", "i planned on using svgs for the entire site but with only 20-30 svg images of medium to high complexity used in the page and google-chrome already seems to be showing som jank and high paint times for scroll and firefox is even worse though safari seems to do a lot better\n", "font looks sharp in google-chrome safari ie8 not as good as other 2 but less fuzzy than firefox\n", "in safari it renders significantly brighter than in firefox or google-chrome\n", "small in firefox is smaller then small in safari so never ever use them\n", "it seems that google-chrome internet explorer or safari are more strict than firefox on terms of security\n", "in safari we found that the dom level 0 took twice the time off the dom level 2 but was still four times faster than either firefox case\n", "in safari it is several pixels higher up than in firefox and google-chrome and significantly lower in opera\n", "i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n", "in particular a font may be rendered quite differently between the various browsers and operating systems in current use - safari and macos use more anti-alisaing than firefox or ie but ie9 has a new feature called cleartype which also affects font rendering\n", "to me it looks like safari gets it more right than firefox text is generally more around a middle line\n", "the service is still in beta trial and firefox conversion is working better than safari one\n", "please especially test on safari because it has some more problems than firefox and google-chrome\n", "it seems that ie and firefox are less strict than safari\n", "google-chrome or safari on a mac could be much faster than firefox on a pc especially with newer apis\n", "on safari everything is slower than on firefox still the object property access is more than two times faster\n", "to me it looks like safari gets it more right than firefox text is generally more around a middle line\n", "but i haven t yet figured out whether it s me writing sloppy code with firefox perhaps being more forgiving than safari or if it s safari or if it s jquery\n", "it works great in google-chrome and safari haven t tested ie but i m sure it s somehow worse than firefox\n", "small in firefox is smaller then small in safari so never ever use them\n", "so to specify firefox greater than 20 safari greater than 9.1 and ie greater than 9\n", "i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n", "in ie and firefox fullscreen_block appears closer to the bottom than in safari and google-chrome\n", "on safari everything is slower than on firefox still the object property access is more than two times faster\n", "firefox is just better for web development and i prefer safari overall\n", "i saw that the discrepancy was because in safari the text element is taller than in firefox and includes a slight amount of whitespace on top that doesn t show up in firefox in firefox the top of the text element is exactly when the text starts\n", "the service is still in beta trial and firefox conversion is working better than safari one\n", "safari behaves better than firefox but an error message \u00e2 \u0153one error in opening the page\u00e2 \u00e2 shows up in the status bar if you remove the iframe during the load event\n", "that i gave to every link in the set of links home about us products contact and it seems that firefox is making that 1px margin much bigger than safari or google-chrome and distorting it\n", "i planned on using svgs for the entire site but with only 20-30 svg images of medium to high complexity used in the page and google-chrome already seems to be showing som jank and high paint times for scroll and firefox is even worse though safari seems to do a lot better\n", "font looks sharp in google-chrome safari ie8 not as good as other 2 but less fuzzy than firefox\n", "in safari it renders significantly brighter than in firefox or google-chrome\n", "small in firefox is smaller then small in safari so never ever use them\n", "it seems that google-chrome internet explorer or safari are more strict than firefox on terms of security\n", "in safari we found that the dom level 0 took twice the time off the dom level 2 but was still four times faster than either firefox case\n", "in safari it is several pixels higher up than in firefox and google-chrome and significantly lower in opera\n", "i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n", "in particular a font may be rendered quite differently between the various browsers and operating systems in current use - safari and macos use more anti-alisaing than firefox or ie but ie9 has a new feature called cleartype which also affects font rendering\n", "to me it looks like safari gets it more right than firefox text is generally more around a middle line\n", "the service is still in beta trial and firefox conversion is working better than safari one\n", "please especially test on safari because it has some more problems than firefox and google-chrome\n", "besides other than the text-search feature of google-chrome which i think is better than opera s i found all the usual enhancements\n", "google-chrome is still a lot slower than opera in tab switching and creation on my machine but it no longer induces delays of several seconds\n", "i ve recently used the opera browser because it s now faster than google-chrome\n", "besides other than the text-search feature of google-chrome which i think is better than opera s i found all the usual enhancements\n", "google-chrome is still a lot slower than opera in tab switching and creation on my machine but it no longer induces delays of several seconds\n", "i ve recently used the opera browser because it s now faster than google-chrome\n", "i use both of them but firefox still my default browser because when want develope a site firefox extension realy help me but i like 1 thing in google-chrome that have task manager and get realy less memory than firefox\n", "google-chrome is far faster than firefox on my system which is why i want this for google-chrome any help would be much appreciated\n", "on my system google-chrome chokes quite more often than ie 8 or firefox -- it searched for the website for 20 seconds and then said website not found\n", "this along with lack of tab switching in mru order are the main reasons i use ie opera and firefox more than google-chrome\n", "thus apparently the explanation is that firefox for whatever reason possibly hardware acceleration features was driving the card harder than google-chrome so it was failing sooner\n", "i have a freshly installed firefox v 21.0 on my windows7 32 bit machine with the hope that it uses less memory than google-chrome\n", "i ve noticed that for some reason website elements display in google-chrome as much larger than in firefox\n", "so far i have tried firefox latest and greatest and google-chrome also latest and greatest and while google-chrome runs faster than firefox over x11 from my centos server to my windows 7 workstation it s still pretty sluggish\n", "alternatively you could try developer tools from google-chrome which is way lighter and faster than firefox and has very similar features to firebug you can open them pressing control+shift+i\n", "google-chrome is far faster than firefox on my system which is why i want this for google-chrome any help would be much appreciated\n", "recently i had switched to google-chrome to find that its much faster than firefox but addons like greasemonkey adblock plus tweeterfox etc\n", "i think that google-chrome s ui design of ctrl+f bar is better than firefox s so i was trying to find an addon that would amend the look position of the bar but no luck\n", "as google-chrome is smaller and faster then ie firefox that s why it sometimes shows error while loading gmail\n", "but the reason google-chrome has more than one item in that list is it uses separate processes instead of just separate threads like firefox\n", "is it possible to make google-chrome works more like firefox and spell check the entire text field automatically\n", "i know firefox on windows works better and i know that google-chrome on linux works better than firefox on linux\n", "on my system google-chrome chokes quite more often than ie 8 or firefox -- it searched for the website for 20 seconds and then said website not found\n", "so why is google-chrome worse than firefox\n", "i use both of them but firefox still my default browser because when want develope a site firefox extension realy help me but i like 1 thing in google-chrome that have task manager and get realy less memory than firefox\n", "google-chrome is far faster than firefox on my system which is why i want this for google-chrome any help would be much appreciated\n", "on my system google-chrome chokes quite more often than ie 8 or firefox -- it searched for the website for 20 seconds and then said website not found\n", "this along with lack of tab switching in mru order are the main reasons i use ie opera and firefox more than google-chrome\n", "thus apparently the explanation is that firefox for whatever reason possibly hardware acceleration features was driving the card harder than google-chrome so it was failing sooner\n", "i have a freshly installed firefox v 21.0 on my windows7 32 bit machine with the hope that it uses less memory than google-chrome\n", "i ve noticed that for some reason website elements display in google-chrome as much larger than in firefox\n", "so far i have tried firefox latest and greatest and google-chrome also latest and greatest and while google-chrome runs faster than firefox over x11 from my centos server to my windows 7 workstation it s still pretty sluggish\n", "alternatively you could try developer tools from google-chrome which is way lighter and faster than firefox and has very similar features to firebug you can open them pressing control+shift+i\n", "google-chrome is far faster than firefox on my system which is why i want this for google-chrome any help would be much appreciated\n", "recently i had switched to google-chrome to find that its much faster than firefox but addons like greasemonkey adblock plus tweeterfox etc\n", "i think that google-chrome s ui design of ctrl+f bar is better than firefox s so i was trying to find an addon that would amend the look position of the bar but no luck\n", "as google-chrome is smaller and faster then ie firefox that s why it sometimes shows error while loading gmail\n", "but the reason google-chrome has more than one item in that list is it uses separate processes instead of just separate threads like firefox\n", "is it possible to make google-chrome works more like firefox and spell check the entire text field automatically\n", "i know firefox on windows works better and i know that google-chrome on linux works better than firefox on linux\n", "on my system google-chrome chokes quite more often than ie 8 or firefox -- it searched for the website for 20 seconds and then said website not found\n", "so why is google-chrome worse than firefox\n", "it appears based on tests run by jan ozer that safari is more efficient than firefox for playing flash videos and upgrading to flash 10.1 is better for all browsers\n", "it appears based on tests run by jan ozer that safari is more efficient than firefox for playing flash videos and upgrading to flash 10.1 is better for all browsers\n", "it appears based on tests run by jan ozer that safari is more efficient than firefox for playing flash videos and upgrading to flash 10.1 is better for all browsers\n", "it appears based on tests run by jan ozer that safari is more efficient than firefox for playing flash videos and upgrading to flash 10.1 is better for all browsers\n", "opera is easier on the scarce system resources than firefox and the theme is nicer the wood theme in foxy has some readability issues\n", "opera is a solid choice though its default skin is worse than firefox\n", "i m trying opera for the first time it seems much faster than firefox but i m unable to change the user interface language to my language\n", "opera is easier on the scarce system resources than firefox and the theme is nicer the wood theme in foxy has some readability issues\n", "opera is a solid choice though its default skin is worse than firefox\n", "i m trying opera for the first time it seems much faster than firefox but i m unable to change the user interface language to my language\n", "she said i probably didn t need google-chrome but that opera might work better for me and she thought it might be a bit more secure than safari\n", "she said i probably didn t need google-chrome but that opera might work better for me and she thought it might be a bit more secure than safari\n", "for me the safari javascript console seems to be a bit better than google-chrome on a mac for debugging angularjs module loading errors -\n", "i used to use google-chrome but found better performance with safari\n", "for me the safari javascript console seems to be a bit better than google-chrome on a mac for debugging angularjs module loading errors -\n", "i used to use google-chrome but found better performance with safari\n", "i d go with google-chrome over chromium here. google-chrome tends to be faster than firefox but to consume more memory per tab\n", "imacros for firefox best version of imacros much better than the google-chrome version\n", "default ctrl-h search is really bad in firefox even worse than in google-chrome i took description from the page of norwell history tools addon\n", "i d go with google-chrome over chromium here. google-chrome tends to be faster than firefox but to consume more memory per tab\n", "imacros for firefox best version of imacros much better than the google-chrome version\n", "default ctrl-h search is really bad in firefox even worse than in google-chrome i took description from the page of norwell history tools addon\n"], "operation": ["if multiplying is slower than addition then case 2 is slightly slower than case 1\n", "we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n", "so we must show that a gradeschool multiplying circuit is o log n times deeper than an addition circuit\n", "you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n", "however multiplying is a more complex operation than addition or shifting\n", "however multiplying is a more complex operation than addition or shifting\n", "we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n", "the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms\n", "you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n", "so the compiler can t make the optimization because it can t tell if you wanted the exact behavior where multiplying is better or the implemented behavior where the scale of sum affects the result of the addition\n", "however multiplying is a more complex operation than addition or shifting\n", "if multiplying is slower than addition then case 2 is slightly slower than case 1\n", "we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n", "so we must show that a gradeschool multiplying circuit is o log n times deeper than an addition circuit\n", "you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n", "however multiplying is a more complex operation than addition or shifting\n", "however multiplying is a more complex operation than addition or shifting\n", "we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n", "the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms\n", "you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n", "so the compiler can t make the optimization because it can t tell if you wanted the exact behavior where multiplying is better or the implemented behavior where the scale of sum affects the result of the addition\n", "however multiplying is a more complex operation than addition or shifting\n", "addition subtraction assignment has lower procedure than simply add operation\n", "addition and subtraction is worse as these have to be done in sequence of two operations and the second operation requires the first to have completed - this is not the case if the compiler is just producing two add operations on independent data\n", "addition subtraction assignment has lower procedure than simply add operation\n", "addition subtraction assignment has lower procedure than simply add operation\n", "addition subtraction assignment has lower procedure than simply add operation\n", "addition and subtraction is worse as these have to be done in sequence of two operations and the second operation requires the first to have completed - this is not the case if the compiler is just producing two add operations on independent data\n", "addition subtraction assignment has lower procedure than simply add operation\n", "addition subtraction assignment has lower procedure than simply add operation\n", "subtract first field from the other and if the value is not greater than 0 multiplying by -1\n", "p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n", "subtract is faster than multiplying\n", "adding and subtract logarithms of factorials then taking the exponential at the end is more reliable than multiplying and dividing factorials directly\n", "p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n", "similarly if you skip the five first elements your loop takes o n-5 time but that too is the same as o n because adding or subtract a constant is even weaker than multiplying by a constant\n", "the logic is multiplying by 2 whole number 0.1 2 0.2 and if it s bigger than 1 subtract and continue\n", "subtract first field from the other and if the value is not greater than 0 multiplying by -1\n", "p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n", "subtract is faster than multiplying\n", "adding and subtract logarithms of factorials then taking the exponential at the end is more reliable than multiplying and dividing factorials directly\n", "p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n", "similarly if you skip the five first elements your loop takes o n-5 time but that too is the same as o n because adding or subtract a constant is even weaker than multiplying by a constant\n", "the logic is multiplying by 2 whole number 0.1 2 0.2 and if it s bigger than 1 subtract and continue\n", "using an extra variable to avoid the costly division and the resulting time was 18.9s so significantly better than the modulo with a statically known constant\n", "modulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortran\n", "since bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a division\n", "modulo gives you a remainder which is why it s better than straight division in situations where you re number of elements can change\n", "programmers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a division\n", "so in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade school\n", "is the same as because division has higher priority than modulo\n", "a side effect of many division routines is the modulo - so in few cases should division actually be faster than modulo\n", "python respects this definition whereas in most other programming language the modulo is really more like a reaminder after division operator\n", "inverse modulo for 300 time take 1.422 seconde more than executing division sub and multiplication 10k time even the core of inverse modulo is build with same division and sub and multiplication functions and for this number it just do 150 time inside while help plz why\n", "if you compute modulo a power of two using bitwise and is simpler and generally faster than performing division\n", "is the same as because division has higher priority than modulo\n", "so in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade school\n", "modulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortran\n", "using an extra variable to avoid the costly division and the resulting time was 18.9s so significantly better than the modulo with a statically known constant\n", "modulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortran\n", "since bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a division\n", "modulo gives you a remainder which is why it s better than straight division in situations where you re number of elements can change\n", "programmers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a division\n", "so in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade school\n", "is the same as because division has higher priority than modulo\n", "a side effect of many division routines is the modulo - so in few cases should division actually be faster than modulo\n", "python respects this definition whereas in most other programming language the modulo is really more like a reaminder after division operator\n", "inverse modulo for 300 time take 1.422 seconde more than executing division sub and multiplication 10k time even the core of inverse modulo is build with same division and sub and multiplication functions and for this number it just do 150 time inside while help plz why\n", "if you compute modulo a power of two using bitwise and is simpler and generally faster than performing division\n", "is the same as because division has higher priority than modulo\n", "so in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade school\n", "modulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortran\n", "the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n", "the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n", "the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n", "the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n", "this is easy to implement with buttons select items click up or down buttons to move - just loop through and apply the move to each selected item but much more difficult with drag reordering\n", "it ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you want\n", "i got a draggable object done with jquery ui and when i drag it it s way slower than i move my mouse\n", "i reimplemented the mouse move press and release events for the inner widget in order to be able to move it inside its bigger parent with drag drop\n", "this is easy to implement with buttons select items click up or down buttons to move - just loop through and apply the move to each selected item but much more difficult with drag reordering\n", "it ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you want\n", "i got a draggable object done with jquery ui and when i drag it it s way slower than i move my mouse\n", "i reimplemented the mouse move press and release events for the inner widget in order to be able to move it inside its bigger parent with drag drop\n", "if division result is larger than 1 push the current transformer to the results array and subtract the current wattage from the total wattage\n", "if division result is larger than 1 push the current transformer to the results array and subtract the current wattage from the total wattage\n", "implementing multiplication is easier if you remember an shl operation performs the same operation as multiplying the specified operand by two\n", "multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n", "if i make a mistake and multiplying a number by 1.0 instead of 1 and i do not use any compiler optimization then my multiplication will last much longer than multiplying a number by 1\n", "multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n", "multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n", "multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros\n", "multiplying first is probably simpler than using floating point if you only want an integer result and if you know that the multiplication will never overflow\n", "mathematically left shifting is the same as multiplying a number by a power of 2 but as the operation is done only by shifting it is much faster than doing multiplication\n", "matrix multiplication is the easier one there are several matrix implementations with a multiplying method in packages org.apache.spark.mllib.linalg and org.apache.spark.mllib.linalg.distributed\n", "multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n", "implementing multiplication is easier if you remember an shl operation performs the same operation as multiplying the specified operand by two\n", "multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n", "if i make a mistake and multiplying a number by 1.0 instead of 1 and i do not use any compiler optimization then my multiplication will last much longer than multiplying a number by 1\n", "multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n", "multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n", "multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros\n", "multiplying first is probably simpler than using floating point if you only want an integer result and if you know that the multiplication will never overflow\n", "mathematically left shifting is the same as multiplying a number by a power of 2 but as the operation is done only by shifting it is much faster than doing multiplication\n", "matrix multiplication is the easier one there are several matrix implementations with a multiplying method in packages org.apache.spark.mllib.linalg and org.apache.spark.mllib.linalg.distributed\n", "multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n", "look at it this way based on your logic while x is greater than 100 add 5 while it s greater than 500 subtract 5 .\n", "to find all the pairs of integers x and y that sum to n when cubed set x to the largest integer less than the cube root of n set y to 0 then repeatedly add 1 to y if the sum of the cubes is less than n subtract 1 from x if the sum of the cubes is greater than n and output the pair otherwise stopping when x and y cross\n", "we observe that for 7 nodes 1 2 3 5 6 8 9 we are getting further by 1 add 7 9-2 to the score for other 2 4 7 we are getting closer by 1 subtract 2\n", "provided a string i want to convert the chars from the string to an int add a value from another method getkey to this number and if the result is greater than 26 subtract 26\n", "just take the difference and if it s negative add 2pi and then if it s greater than 2pi subtract 2pi\n", "i need some help though i need each number in that list to be subtract from 27 then if the result is less than 33 add 94 then print the numbers as they were just with that sum completed how do i do this\n", "look at it this way based on your logic while x is greater than 100 add 5 while it s greater than 500 subtract 5 .\n", "to find all the pairs of integers x and y that sum to n when cubed set x to the largest integer less than the cube root of n set y to 0 then repeatedly add 1 to y if the sum of the cubes is less than n subtract 1 from x if the sum of the cubes is greater than n and output the pair otherwise stopping when x and y cross\n", "we observe that for 7 nodes 1 2 3 5 6 8 9 we are getting further by 1 add 7 9-2 to the score for other 2 4 7 we are getting closer by 1 subtract 2\n", "provided a string i want to convert the chars from the string to an int add a value from another method getkey to this number and if the result is greater than 26 subtract 26\n", "just take the difference and if it s negative add 2pi and then if it s greater than 2pi subtract 2pi\n", "i need some help though i need each number in that list to be subtract from 27 then if the result is less than 33 add 94 then print the numbers as they were just with that sum completed how do i do this\n", "perhaps it s the case that division is much more accurate than reciprocal plus multiplying\n", "i presume that you know that using a division is a lot slower than multiplying by decimal number 5 is always slower than 0.2\n", "but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n", "sure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying\n", "note that i ve incorporated dshin s comment that multiplying is faster than division however the performance improvement is about 90 removing the binary search 10 multiplication vs\n", "according to agner s instruction tables a single fp division is slower than a single reciprocal op and a single multiplying op\n", "division of quaternion a by quaternion b is nothing more than multiplying a by the multiplicative inverse of b\n", "but in normal case it takes n 2 comparison so you half the height of tree but you multiplying each merge with two so total running time is not better than division to 2 part\n", "while working with integer division it s better to multiplying first and divide later to minimize the rounding error\n", "but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n", "these can be compared to multiplying by 2 x left-shift or divinding by 2 x right-shift but it should be noted that a binary shift is much faster than a division operation\n", "perhaps it s the case that division is much more accurate than reciprocal plus multiplying\n", "i read about python following pemdas that is precedence of multiplying is more than division\n", "perhaps it s the case that division is much more accurate than reciprocal plus multiplying\n", "i presume that you know that using a division is a lot slower than multiplying by decimal number 5 is always slower than 0.2\n", "but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n", "sure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying\n", "note that i ve incorporated dshin s comment that multiplying is faster than division however the performance improvement is about 90 removing the binary search 10 multiplication vs\n", "according to agner s instruction tables a single fp division is slower than a single reciprocal op and a single multiplying op\n", "division of quaternion a by quaternion b is nothing more than multiplying a by the multiplicative inverse of b\n", "but in normal case it takes n 2 comparison so you half the height of tree but you multiplying each merge with two so total running time is not better than division to 2 part\n", "while working with integer division it s better to multiplying first and divide later to minimize the rounding error\n", "but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n", "these can be compared to multiplying by 2 x left-shift or divinding by 2 x right-shift but it should be noted that a binary shift is much faster than a division operation\n", "perhaps it s the case that division is much more accurate than reciprocal plus multiplying\n", "i read about python following pemdas that is precedence of multiplying is more than division\n", "also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n", "also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n", "more generally you can always just try multiplying the base by itself a number of times no greater than the modulo and you are bound to find a cycle\n", "also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n", "also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n", "more generally you can always just try multiplying the base by itself a number of times no greater than the modulo and you are bound to find a cycle\n", "since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n", "this subtraction operator occurs within the second brackets and so has a higher precedence than the multiplication\n", "addition subtraction for the rectangular bound calculation is cheaper than multiplication\n", "multiplication is slower than subtraction\n", "the addition and subtraction are much more than multiplication and division\n", "as in title why is multiplication much faster than subtraction in this example\n", "in general multiplication is more costlier than subtraction right\n", "subtraction operations and usually significantly faster than multiplication and division\n", "in general multiplication is more costlier than subtraction right\n", "for floating point operations addition and subtraction are harder than multiplication and division so they may be slower or not again it depends on how much transistor real estate there is dedicated to the fpu\n", "in general multiplication is more costlier than subtraction right\n", "since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n", "in t-sql unary minus is made to be the same priority as subtraction which is lower than multiplication\n", "since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n", "this subtraction operator occurs within the second brackets and so has a higher precedence than the multiplication\n", "addition subtraction for the rectangular bound calculation is cheaper than multiplication\n", "multiplication is slower than subtraction\n", "the addition and subtraction are much more than multiplication and division\n", "as in title why is multiplication much faster than subtraction in this example\n", "in general multiplication is more costlier than subtraction right\n", "subtraction operations and usually significantly faster than multiplication and division\n", "in general multiplication is more costlier than subtraction right\n", "for floating point operations addition and subtraction are harder than multiplication and division so they may be slower or not again it depends on how much transistor real estate there is dedicated to the fpu\n", "in general multiplication is more costlier than subtraction right\n", "since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n", "in t-sql unary minus is made to be the same priority as subtraction which is lower than multiplication\n", "since fp addition shifts the smaller operand s mantissa until both operands have the same exponent you can add a certain magic number to force it\n", "in addition for doing powers of two bitshifting is usually a little clearer than doing exponent though choose whatever works for you\n", "since fp addition shifts the smaller operand s mantissa until both operands have the same exponent you can add a certain magic number to force it\n", "since fp addition shifts the smaller operand s mantissa until both operands have the same exponent you can add a certain magic number to force it\n", "in addition for doing powers of two bitshifting is usually a little clearer than doing exponent though choose whatever works for you\n", "since fp addition shifts the smaller operand s mantissa until both operands have the same exponent you can add a certain magic number to force it\n", "i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n", "i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n", "when i generate rsa key pairs by openssl it seems like private key private exponent is always less than public key modulo\n", "little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n", "edit as gregs points out in the comments you cannot be sure that the private exponent of the key you want to encrypt is smaller than the modulo of the key you want to use to encrypt with\n", "the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n", "using the pow function and passing a modulo value is faster than computing the full exponent and then taking the modulo because the modulo can be applied to the partial products at each stage of the calculation which stops the value from getting too large 10 6 to the power of 10 6 has 6 million decimal digits with a modulo applied at each step the values never have to grow larger than the size of the modulo - about 13 digits in this example\n", "the rsa private exponent may actually be shorter than the modulo\n", "in rsa signing a message m means exponentiation with the private exponent d the result r is the smallest integer 0 and smaller than the modulo n so that\n", "the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n", "so no choice of the public exponent for this modulo is better than 19 using the public exponent to decrypt will work for at least half of the messages when e\u00e2\u00b2 9 16 and in many cases for almost all the messages when e\u00e2\u00b2 1 16\n", "little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n", "1024 bit private exponent large number lower than the modulo\n", "the private exponent must not be longer than the modulo\n", "i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n", "i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n", "i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n", "when i generate rsa key pairs by openssl it seems like private key private exponent is always less than public key modulo\n", "little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n", "edit as gregs points out in the comments you cannot be sure that the private exponent of the key you want to encrypt is smaller than the modulo of the key you want to use to encrypt with\n", "the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n", "using the pow function and passing a modulo value is faster than computing the full exponent and then taking the modulo because the modulo can be applied to the partial products at each stage of the calculation which stops the value from getting too large 10 6 to the power of 10 6 has 6 million decimal digits with a modulo applied at each step the values never have to grow larger than the size of the modulo - about 13 digits in this example\n", "the rsa private exponent may actually be shorter than the modulo\n", "in rsa signing a message m means exponentiation with the private exponent d the result r is the smallest integer 0 and smaller than the modulo n so that\n", "the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n", "so no choice of the public exponent for this modulo is better than 19 using the public exponent to decrypt will work for at least half of the messages when e\u00e2\u00b2 9 16 and in many cases for almost all the messages when e\u00e2\u00b2 1 16\n", "little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n", "1024 bit private exponent large number lower than the modulo\n", "the private exponent must not be longer than the modulo\n", "i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n", "so in your case an expression like 3+2 5 would yield 25 instead of 13 because addition is of higher precedence than multiplication\n", "it is well-known that the processor instruction for multiplication takes several times more time than addition division is even worse upd which is not true any more see below\n", "so in your case an expression like 3+2 5 would yield 25 instead of 13 because addition is of higher precedence than multiplication\n", "of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n", "that s akin to multiplication has higher precedence than addition so 3 sticks to 4 instead of 5 so the output is 17\n", "just because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any addition\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition\n", "multiplication has higher operator priority than addition in java\n", "in the remote case those operations are not simplified assuming that there is a jit that maps the multiplication and add opcodes in a 1 1 relationship to their cpu instruction counterparts in most modern architectures all integer arithmetic operations usually take the same number of cycles so it will be faster multiplying once than add four times just checked it addition is still slightly faster than multiplication 1 clock vs 3 clocks so it still pays using a multiplication here\n", "isinstance g str and g.lower or g multiplication is of higher precedence than addition\n", "and has higher precedence than or so the brackets are optional - in the same way as multiplication has higher precedence than addition so\n", "instead of computing the slower it instead computed x + x because addition is faster than multiplication\n", "multiplication is generally slower than addition\n", "mathematics clearly defines the order of operations as giving multiplication higher precedence than addition\n", "multiplication has higher operator priority than addition in java\n", "since multiplication has a higher precedence than addition the same convention is used\n", "multiplication has higher precedence than addition + which is why 2+3 4 is interpreted as 2+ 3 4 both in c and normal math\n", "usually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problem\n", "since parentheses were used around the addition but not the multiplication we can infer that probably in this language addition has lower precedence than multiplication\n", "each operation takes a specific length and typically multiplication will take more than addition\n", "in technical terms the x multiplication operator has higher precedence than the + addition operator\n", "associativity and precedence specify that the last two statements must be performed in that order since multiplication has higher precedence than addition\n", "since multiplication has a higher precedence than addition the same convention is used\n", "though i was thinking the addition is more simple than multiplication\n", "associativity and precedence specify that the last two statements must be performed in that order since multiplication has higher precedence than addition\n", "i know the basics division and multiplication higher than addition and subtraction but i would have to look up something more esoteric\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "clearly ruby considers the multiplication operator to be of a higher precedence than the addition + operator\n", "remember that multiplication even with strings binds tighter than addition so we must use brackets\n", "and has higher precedence than or just like multiplication has higher precedence than addition\n", "but in many cases addition is faster than multiplication\n", "the precedence relationship is the same multiplication is higher then addition\n", "this is similar to operator precedence in mathematics where for example multiplication has a higher priority than addition\n", "even if addition is faster than multiplication i think that you will lose more because of the branching\n", "that is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication\n", "it s because multiplication has higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "multiplication has higher precedence than addition subtraction\n", "you probably already remember that multiplication is higher precedence than addition\n", "proposition when implemented in logic gates using the usual algorithms an integer multiplication circuit is o log n times slower than an addition circuit where n is the number of bits in a word\n", "for instance in arithmetic multiplication has higher precedence than addition\n", "i know that addition operation is more trivial than multiplication operation\n", "i assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parser\n", "in arithmetic multiplication has higher precedence than addition\n", "the multiplication has higher precedence and therefore binds more tightly than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "multiplication has a higher precedence than addition so it is evaluated first\n", "i know that addition operation is more trivial than multiplication operation\n", "because addition is faster than multiplication and can be faster than shift\n", "you expression is then 7 + 5 7 + 5 which is 7 + 35 + 5 as multiplication has a higher precedence than addition\n", "for example if you had a class in which it would make sense to do addition before multiplication how could you make the addition operator have higher precedence than the multiplication one\n", "that s because the multiplication oprator has higher precedence than addition\n", "and has higher precedence than or just like multiplication has higher precedence than addition\n", "since multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loop\n", "that s because the multiplication oprator has higher precedence than addition\n", "it s because multiplication has higher precedence than addition\n", "note that the type cast has a higher precedence than multiplication which is in turn higher than addition 3 vs\n", "why with this grammar multiplication have higher precedence than addition\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "since multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loop\n", "in arithmetic books and computer software and more-expensive calculators this means 12+ 34 56 not 12+34 56 because multiplication has higher precedence than addition\n", "or has a lower precedence than just as addition in mathematics has a lower precedence than multiplication\n", "in technical terms the x multiplication operator has higher precedence than the + addition operator\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "also addition is faster than multiplication and multiplication is faster than division\n", "multiplication is nearly always a lot slower than addition\n", "for integers multiplication is harder than addition may be slower than addition etc but may still be very fast as long as there is sufficient cpu-power dedicated to it\n", "this line works because of operator precedence multiplication has a higher precedence than addition + so it will be done first\n", "since parentheses were used around the addition but not the multiplication we can infer that probably in this language addition has lower precedence than multiplication\n", "the multiplication has higher precedence and therefore binds more tightly than addition\n", "isinstance g str and g.lower or g multiplication is of higher precedence than addition\n", "so every multiplicative-expression is an additive-expression but not vice-versa and this is what makes multiplication bind tighter than addition\n", "the multiplication has higher precedence and therefore binds more tightly than addition\n", "if memory serves this is the same technique slide rules used although they also took advantage of with the idea being that addition is easier than multiplication but my exposure to slide rules is limited to an eccentric high school physics teacher and a cryptographic teacher using it to explain certain tricks with big number math\n", "based on the order of operations e.g where multiplication is evaluated with higher priority than addition push the operators and operands onto a stack\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition +\n", "usually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problem\n", "multiplication has higher precedence than addition + which is why 2+3 4 is interpreted as 2+ 3 4 both in c and normal math\n", "this is valid under normal arithmetic operator precedence rules because multiplication has higher precedence than addition +\n", "if multiplication is slower than addition instead of doing\n", "the and operator has higher precedence than or just like multiplication has higher precedence than addition\n", "multiplication is more expensive than addition subtraction and division is more expensive still\n", "multiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second addition\n", "on modern processors floating point multiplication is generally slightly more expensive than addition which is one reason why compilers will typically replace by x+x\n", "division multiplication has higher precedence than addition subtraction and parentheses is required to do addition subtraction before multiplication division\n", "my question is why do both integer and floating-point multiplication execute faster than their addition counterparts\n", "though i was thinking the addition is more simple than multiplication\n", "m_expr can expand to a u_expr because unaries bind tighter than multiplication operations and a_expr can expand to a m_expr because multiplication operations bind tighter than addition operations\n", "that s akin to multiplication has higher precedence than addition so 3 sticks to 4 instead of 5 so the output is 17\n", "multiplication is much harder than addition\n", "other cpus take three or four cycles to do a multiplication which is a bit slower than addition\n", "the and operator has higher precedence than or just like multiplication has higher precedence than addition\n", "and has higher precedence than or so the brackets are optional - in the same way as multiplication has higher precedence than addition so\n", "this is valid under normal arithmetic operator precedence rules because multiplication has higher precedence than addition +\n", "so ideally i want to have approximate relative times of elementary operations execution like multiplication typically takes 5 times more time than addition exponent is about 100 multiplication\n", "the difference is that in the second pattern the concatenation x followed by y in xy has higher precedence than the choice either x or y in x|y like multiplication has higher precedence than addition so the pattern is equivalent to\n", "just like it would be possible to come up with arithmetic expressions that could be written with less parentheses if addition had a higher precedence than multiplication\n", "which doesn t do what you want because multiplication has higher precedence than addition\n", "it used to be that multiplication was slower than addition and programers used several tricks to avoid multiplication but with haswell it seems that it s the other way around\n", "but i guess multiplication is more computationally expensive than addition\n", "you probably already remember that multiplication is higher precedence than addition\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "because multiplication has a higher precedence than addition\n", "i would also be moderately surprised if the multiplication actually was faster than the addition\n", "of course multiplication has higher precedence binds more tightly than addition\n", "i assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parser\n", "the reason for this is that and is strong than or it s like in math where multiplication is stronger than addition 3 5+3 15+3 18\n", "since multiplication has more priority than addition when you give a+1 to the macro it becomes 10 + 10 + 1 21\n", "i don t understand why the division multiplication in c++ is so much slower than addition subtraction where the managed c# version is more reasonable to my expectations\n", "this line works because of operator precedence multiplication has a higher precedence than addition + so it will be done first\n", "multiplication has a higher operator precedence than addition so it s done before the two additions when calculating the value for a\n", "multiplication is much harder than addition\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "if the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12\n", "this is similar to operator precedence in mathematics where for example multiplication has a higher priority than addition\n", "in arithmetic multiplication has higher precedence than addition\n", "because multiplication has a higher precedence than addition\n", "it is because multiplication operator has higher precedence over the addition + operator\n", "not sure about this but multiplication should take more time than addition so it s slowing it down ex\n", "it is because multiplication operator has higher precedence over the addition + operator\n", "since multiplication has more priority than addition when you give a+1 to the macro it becomes 10 + 10 + 1 21\n", "they state that the binary multiplication operator has higher priority than the binary addition operator +\n", "the difference is that in the second pattern the concatenation x followed by y in xy has higher precedence than the choice either x or y in x|y like multiplication has higher precedence than addition so the pattern is equivalent to\n", "as multiplication of ints has more overhead than simple addition\n", "and the value of this expression evaluated according to the precedence rules is 62 because multiplication has higher precedence than addition\n", "for instance in arithmetic multiplication has higher precedence than addition\n", "they state that the binary multiplication operator has higher priority than the binary addition operator +\n", "you expression is then 7 + 5 7 + 5 which is 7 + 35 + 5 as multiplication has a higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "and the value of this expression evaluated according to the precedence rules is 62 because multiplication has higher precedence than addition\n", "but i guess multiplication is more computationally expensive than addition\n", "if we look at the speed of operations multiplication is not drastically slower than addition\n", "also remember multiplication is much more expensive than addition\n", "for example since multiplication has a higher precedence than addition is read as not\n", "multiplication has higher precedence than addition subtraction\n", "if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n", "an expression like binds as not because of associativity but because 2 multiplication has higher precedence that + 2 addition\n", "either way your example with the numeric expression would multiplying by 3 first because multiplication has higher precedence than addition or subtraction\n", "for example since multiplication has a higher precedence than addition is read as not\n", "in arithmetic books and computer software and more-expensive calculators this means 12+ 34 56 not 12+34 56 because multiplication has higher precedence than addition\n", "but that s not the case here since division and multiplication have higher precedence than addition and there are no parentheses involved\n", "of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n", "multiplication has a higher operator precedence than addition so it s done before the two additions when calculating the value for a\n", "which doesn t do what you want because multiplication has higher precedence than addition\n", "well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first\n", "precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas\n", "well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first\n", "division and multiplication have higher precedence than addition so what this is actually doing is\n", "of course multiplication has higher precedence binds more tightly than addition\n", "for multiplication the technique described at is a reasonably easy thing to implement and is better than serial addition\n", "i used instead of to convert the string to a number since addition is usually a little faster than multiplication and it s the more common way of performing that action see to force a string to be converted to a number add zero to that string\n", "it is because multiplication operator has higher precedence over the addition + operator\n", "precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas\n", "trig functions should have precedence lower than multiplication and higher than addition\n", "the multiplication are the bottleneck of the calculation even though they may be one instruction a multiplication takes longer than an addition\n", "that s because the multiplication oprator has higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "division multiplication has higher precedence than addition subtraction and parentheses is required to do addition subtraction before multiplication division\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "at the time this was faster because addition was a lot faster than multiplication but that s no longer the case\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "start with the number you want to reach and if it s divisible by 5 then divide by 5 because multiplication by 5 results in a shorter solution than addition by 3\n", "multiplication is more complex and you can reference the solution in the question efficient 128-bit addition using carry flag\n", "multiplication is a relatively complex operation and is likely to be slower than say addition or comparison\n", "yes pow is slower than multiplication multiplication is slower than addition\n", "either way your example with the numeric expression would multiplying by 3 first because multiplication has higher precedence than addition or subtraction\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "also remember multiplication is much more expensive than addition\n", "multiplication is generally slower than addition\n", "multiplication has a higher precedence than addition so it is evaluated first\n", "and as you hopefully knows multiplication have higher precedence than addition so the expression is equivalent to probably not what was intended by the macro writer\n", "multiplication is more complex and you can reference the solution in the question efficient 128-bit addition using carry flag\n", "in any case if addition is faster than multiplication a better solution might be to use a table and index by it\n", "of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n", "if the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "i know that addition operation is more trivial than multiplication operation\n", "an expression like binds as not because of associativity but because 2 multiplication has higher precedence that + 2 addition\n", "addition is cheaper than multiplication\n", "the precedence relationship is the same multiplication is higher then addition\n", "multiplication is not more difficult than repeated addition\n", "the same speed as addition though still faster than multiplication\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition +\n", "also remember multiplication is much more expensive than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "multiplication is more expensive than addition subtraction and division is more expensive still\n", "that is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication\n", "multiplication is not more difficult than repeated addition\n", "multiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second addition\n", "just because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any addition\n", "so in your case an expression like 3+2 5 would yield 25 instead of 13 because addition is of higher precedence than multiplication\n", "it is well-known that the processor instruction for multiplication takes several times more time than addition division is even worse upd which is not true any more see below\n", "so in your case an expression like 3+2 5 would yield 25 instead of 13 because addition is of higher precedence than multiplication\n", "of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n", "that s akin to multiplication has higher precedence than addition so 3 sticks to 4 instead of 5 so the output is 17\n", "just because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any addition\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition\n", "multiplication has higher operator priority than addition in java\n", "in the remote case those operations are not simplified assuming that there is a jit that maps the multiplication and add opcodes in a 1 1 relationship to their cpu instruction counterparts in most modern architectures all integer arithmetic operations usually take the same number of cycles so it will be faster multiplying once than add four times just checked it addition is still slightly faster than multiplication 1 clock vs 3 clocks so it still pays using a multiplication here\n", "isinstance g str and g.lower or g multiplication is of higher precedence than addition\n", "and has higher precedence than or so the brackets are optional - in the same way as multiplication has higher precedence than addition so\n", "instead of computing the slower it instead computed x + x because addition is faster than multiplication\n", "multiplication is generally slower than addition\n", "mathematics clearly defines the order of operations as giving multiplication higher precedence than addition\n", "multiplication has higher operator priority than addition in java\n", "since multiplication has a higher precedence than addition the same convention is used\n", "multiplication has higher precedence than addition + which is why 2+3 4 is interpreted as 2+ 3 4 both in c and normal math\n", "usually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problem\n", "since parentheses were used around the addition but not the multiplication we can infer that probably in this language addition has lower precedence than multiplication\n", "each operation takes a specific length and typically multiplication will take more than addition\n", "in technical terms the x multiplication operator has higher precedence than the + addition operator\n", "associativity and precedence specify that the last two statements must be performed in that order since multiplication has higher precedence than addition\n", "since multiplication has a higher precedence than addition the same convention is used\n", "though i was thinking the addition is more simple than multiplication\n", "associativity and precedence specify that the last two statements must be performed in that order since multiplication has higher precedence than addition\n", "i know the basics division and multiplication higher than addition and subtraction but i would have to look up something more esoteric\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "clearly ruby considers the multiplication operator to be of a higher precedence than the addition + operator\n", "remember that multiplication even with strings binds tighter than addition so we must use brackets\n", "and has higher precedence than or just like multiplication has higher precedence than addition\n", "but in many cases addition is faster than multiplication\n", "the precedence relationship is the same multiplication is higher then addition\n", "this is similar to operator precedence in mathematics where for example multiplication has a higher priority than addition\n", "even if addition is faster than multiplication i think that you will lose more because of the branching\n", "that is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication\n", "it s because multiplication has higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "multiplication has higher precedence than addition subtraction\n", "you probably already remember that multiplication is higher precedence than addition\n", "proposition when implemented in logic gates using the usual algorithms an integer multiplication circuit is o log n times slower than an addition circuit where n is the number of bits in a word\n", "for instance in arithmetic multiplication has higher precedence than addition\n", "i know that addition operation is more trivial than multiplication operation\n", "i assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parser\n", "in arithmetic multiplication has higher precedence than addition\n", "the multiplication has higher precedence and therefore binds more tightly than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "multiplication has a higher precedence than addition so it is evaluated first\n", "i know that addition operation is more trivial than multiplication operation\n", "because addition is faster than multiplication and can be faster than shift\n", "you expression is then 7 + 5 7 + 5 which is 7 + 35 + 5 as multiplication has a higher precedence than addition\n", "for example if you had a class in which it would make sense to do addition before multiplication how could you make the addition operator have higher precedence than the multiplication one\n", "that s because the multiplication oprator has higher precedence than addition\n", "and has higher precedence than or just like multiplication has higher precedence than addition\n", "since multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loop\n", "that s because the multiplication oprator has higher precedence than addition\n", "it s because multiplication has higher precedence than addition\n", "note that the type cast has a higher precedence than multiplication which is in turn higher than addition 3 vs\n", "why with this grammar multiplication have higher precedence than addition\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "since multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loop\n", "in arithmetic books and computer software and more-expensive calculators this means 12+ 34 56 not 12+34 56 because multiplication has higher precedence than addition\n", "or has a lower precedence than just as addition in mathematics has a lower precedence than multiplication\n", "in technical terms the x multiplication operator has higher precedence than the + addition operator\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "also addition is faster than multiplication and multiplication is faster than division\n", "multiplication is nearly always a lot slower than addition\n", "for integers multiplication is harder than addition may be slower than addition etc but may still be very fast as long as there is sufficient cpu-power dedicated to it\n", "this line works because of operator precedence multiplication has a higher precedence than addition + so it will be done first\n", "since parentheses were used around the addition but not the multiplication we can infer that probably in this language addition has lower precedence than multiplication\n", "the multiplication has higher precedence and therefore binds more tightly than addition\n", "isinstance g str and g.lower or g multiplication is of higher precedence than addition\n", "so every multiplicative-expression is an additive-expression but not vice-versa and this is what makes multiplication bind tighter than addition\n", "the multiplication has higher precedence and therefore binds more tightly than addition\n", "if memory serves this is the same technique slide rules used although they also took advantage of with the idea being that addition is easier than multiplication but my exposure to slide rules is limited to an eccentric high school physics teacher and a cryptographic teacher using it to explain certain tricks with big number math\n", "based on the order of operations e.g where multiplication is evaluated with higher priority than addition push the operators and operands onto a stack\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition +\n", "usually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problem\n", "multiplication has higher precedence than addition + which is why 2+3 4 is interpreted as 2+ 3 4 both in c and normal math\n", "this is valid under normal arithmetic operator precedence rules because multiplication has higher precedence than addition +\n", "if multiplication is slower than addition instead of doing\n", "the and operator has higher precedence than or just like multiplication has higher precedence than addition\n", "multiplication is more expensive than addition subtraction and division is more expensive still\n", "multiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second addition\n", "on modern processors floating point multiplication is generally slightly more expensive than addition which is one reason why compilers will typically replace by x+x\n", "division multiplication has higher precedence than addition subtraction and parentheses is required to do addition subtraction before multiplication division\n", "my question is why do both integer and floating-point multiplication execute faster than their addition counterparts\n", "though i was thinking the addition is more simple than multiplication\n", "m_expr can expand to a u_expr because unaries bind tighter than multiplication operations and a_expr can expand to a m_expr because multiplication operations bind tighter than addition operations\n", "that s akin to multiplication has higher precedence than addition so 3 sticks to 4 instead of 5 so the output is 17\n", "multiplication is much harder than addition\n", "other cpus take three or four cycles to do a multiplication which is a bit slower than addition\n", "the and operator has higher precedence than or just like multiplication has higher precedence than addition\n", "and has higher precedence than or so the brackets are optional - in the same way as multiplication has higher precedence than addition so\n", "this is valid under normal arithmetic operator precedence rules because multiplication has higher precedence than addition +\n", "so ideally i want to have approximate relative times of elementary operations execution like multiplication typically takes 5 times more time than addition exponent is about 100 multiplication\n", "the difference is that in the second pattern the concatenation x followed by y in xy has higher precedence than the choice either x or y in x|y like multiplication has higher precedence than addition so the pattern is equivalent to\n", "just like it would be possible to come up with arithmetic expressions that could be written with less parentheses if addition had a higher precedence than multiplication\n", "which doesn t do what you want because multiplication has higher precedence than addition\n", "it used to be that multiplication was slower than addition and programers used several tricks to avoid multiplication but with haswell it seems that it s the other way around\n", "but i guess multiplication is more computationally expensive than addition\n", "you probably already remember that multiplication is higher precedence than addition\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "because multiplication has a higher precedence than addition\n", "i would also be moderately surprised if the multiplication actually was faster than the addition\n", "of course multiplication has higher precedence binds more tightly than addition\n", "i assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parser\n", "the reason for this is that and is strong than or it s like in math where multiplication is stronger than addition 3 5+3 15+3 18\n", "since multiplication has more priority than addition when you give a+1 to the macro it becomes 10 + 10 + 1 21\n", "i don t understand why the division multiplication in c++ is so much slower than addition subtraction where the managed c# version is more reasonable to my expectations\n", "this line works because of operator precedence multiplication has a higher precedence than addition + so it will be done first\n", "multiplication has a higher operator precedence than addition so it s done before the two additions when calculating the value for a\n", "multiplication is much harder than addition\n", "for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n", "if the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12\n", "this is similar to operator precedence in mathematics where for example multiplication has a higher priority than addition\n", "in arithmetic multiplication has higher precedence than addition\n", "because multiplication has a higher precedence than addition\n", "it is because multiplication operator has higher precedence over the addition + operator\n", "not sure about this but multiplication should take more time than addition so it s slowing it down ex\n", "it is because multiplication operator has higher precedence over the addition + operator\n", "since multiplication has more priority than addition when you give a+1 to the macro it becomes 10 + 10 + 1 21\n", "they state that the binary multiplication operator has higher priority than the binary addition operator +\n", "the difference is that in the second pattern the concatenation x followed by y in xy has higher precedence than the choice either x or y in x|y like multiplication has higher precedence than addition so the pattern is equivalent to\n", "as multiplication of ints has more overhead than simple addition\n", "and the value of this expression evaluated according to the precedence rules is 62 because multiplication has higher precedence than addition\n", "for instance in arithmetic multiplication has higher precedence than addition\n", "they state that the binary multiplication operator has higher priority than the binary addition operator +\n", "you expression is then 7 + 5 7 + 5 which is 7 + 35 + 5 as multiplication has a higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "and the value of this expression evaluated according to the precedence rules is 62 because multiplication has higher precedence than addition\n", "but i guess multiplication is more computationally expensive than addition\n", "if we look at the speed of operations multiplication is not drastically slower than addition\n", "also remember multiplication is much more expensive than addition\n", "for example since multiplication has a higher precedence than addition is read as not\n", "multiplication has higher precedence than addition subtraction\n", "if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n", "an expression like binds as not because of associativity but because 2 multiplication has higher precedence that + 2 addition\n", "either way your example with the numeric expression would multiplying by 3 first because multiplication has higher precedence than addition or subtraction\n", "for example since multiplication has a higher precedence than addition is read as not\n", "in arithmetic books and computer software and more-expensive calculators this means 12+ 34 56 not 12+34 56 because multiplication has higher precedence than addition\n", "but that s not the case here since division and multiplication have higher precedence than addition and there are no parentheses involved\n", "of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n", "multiplication has a higher operator precedence than addition so it s done before the two additions when calculating the value for a\n", "which doesn t do what you want because multiplication has higher precedence than addition\n", "well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first\n", "precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas\n", "well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first\n", "division and multiplication have higher precedence than addition so what this is actually doing is\n", "of course multiplication has higher precedence binds more tightly than addition\n", "for multiplication the technique described at is a reasonably easy thing to implement and is better than serial addition\n", "i used instead of to convert the string to a number since addition is usually a little faster than multiplication and it s the more common way of performing that action see to force a string to be converted to a number add zero to that string\n", "it is because multiplication operator has higher precedence over the addition + operator\n", "precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas\n", "trig functions should have precedence lower than multiplication and higher than addition\n", "the multiplication are the bottleneck of the calculation even though they may be one instruction a multiplication takes longer than an addition\n", "that s because the multiplication oprator has higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "division multiplication has higher precedence than addition subtraction and parentheses is required to do addition subtraction before multiplication division\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "at the time this was faster because addition was a lot faster than multiplication but that s no longer the case\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "start with the number you want to reach and if it s divisible by 5 then divide by 5 because multiplication by 5 results in a shorter solution than addition by 3\n", "multiplication is more complex and you can reference the solution in the question efficient 128-bit addition using carry flag\n", "multiplication is a relatively complex operation and is likely to be slower than say addition or comparison\n", "yes pow is slower than multiplication multiplication is slower than addition\n", "either way your example with the numeric expression would multiplying by 3 first because multiplication has higher precedence than addition or subtraction\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "also remember multiplication is much more expensive than addition\n", "multiplication is generally slower than addition\n", "multiplication has a higher precedence than addition so it is evaluated first\n", "and as you hopefully knows multiplication have higher precedence than addition so the expression is equivalent to probably not what was intended by the macro writer\n", "multiplication is more complex and you can reference the solution in the question efficient 128-bit addition using carry flag\n", "in any case if addition is faster than multiplication a better solution might be to use a table and index by it\n", "of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n", "if the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12\n", "on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n", "i know that addition operation is more trivial than multiplication operation\n", "an expression like binds as not because of associativity but because 2 multiplication has higher precedence that + 2 addition\n", "addition is cheaper than multiplication\n", "the precedence relationship is the same multiplication is higher then addition\n", "multiplication is not more difficult than repeated addition\n", "the same speed as addition though still faster than multiplication\n", "for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition +\n", "also remember multiplication is much more expensive than addition\n", "for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n", "multiplication is more expensive than addition subtraction and division is more expensive still\n", "that is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication\n", "multiplication is not more difficult than repeated addition\n", "multiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second addition\n", "just because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any addition\n", "the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n", "and keep in mind that the modulo has a higher precedence than addition and subtraction\n", "integer multiplication division and modulo are much slower than integer addition and subtraction\n", "because the string formatting operator shares precedence with the remainder or modulo which binds more tightly than the + addition operator\n", "then you can process any length number using very few division remainder modulo operations which is important because they are much slower than addition\n", "multiplication division and modulo have the same precedence and they all have higher precedence than addition and subtraction\n", "the result of the addition was better than the modulo the by 0.0070000 milliseconds over the course of 2 million or 200 000 iterations\n", "the modulo has a higher precedence than addition\n", "because the string formatting operator shares precedence with the remainder or modulo which binds more tightly than the + addition operator\n", "the modulo has a higher precedence than addition\n", "and keep in mind that the modulo has a higher precedence than addition and subtraction\n", "division and modulo are indeed costly hardware operations whatever you do this is more related to hardware architecture than to languages or compilers perhaps ten times slower than addition\n", "the addition is much cheaper than other operations like modulo and division and array access\n", "the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n", "note parentheses are redundant as division and multiplication have the same priority and modulo has higher precedence over addition\n", "modulo can also cause a divide-by-zero and it has a higher precedence than addition\n", "note parentheses are redundant as division and multiplication have the same priority and modulo has higher precedence over addition\n", "is the modulo really weaker than the addition\n", "the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n", "and keep in mind that the modulo has a higher precedence than addition and subtraction\n", "integer multiplication division and modulo are much slower than integer addition and subtraction\n", "because the string formatting operator shares precedence with the remainder or modulo which binds more tightly than the + addition operator\n", "then you can process any length number using very few division remainder modulo operations which is important because they are much slower than addition\n", "multiplication division and modulo have the same precedence and they all have higher precedence than addition and subtraction\n", "the result of the addition was better than the modulo the by 0.0070000 milliseconds over the course of 2 million or 200 000 iterations\n", "the modulo has a higher precedence than addition\n", "because the string formatting operator shares precedence with the remainder or modulo which binds more tightly than the + addition operator\n", "the modulo has a higher precedence than addition\n", "and keep in mind that the modulo has a higher precedence than addition and subtraction\n", "division and modulo are indeed costly hardware operations whatever you do this is more related to hardware architecture than to languages or compilers perhaps ten times slower than addition\n", "the addition is much cheaper than other operations like modulo and division and array access\n", "the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n", "note parentheses are redundant as division and multiplication have the same priority and modulo has higher precedence over addition\n", "modulo can also cause a divide-by-zero and it has a higher precedence than addition\n", "note parentheses are redundant as division and multiplication have the same priority and modulo has higher precedence over addition\n", "is the modulo really weaker than the addition\n", "can someone explain this behaviour multiplying operator has higher precedence than add operator\n", "for example fp add throughput is lower than fma or multiplying on intel before skylake 1 vector per clock instead of 2\n", "can someone explain this behaviour multiplying operator has higher precedence than add operator\n", "where multiplying binds more tightly than add\n", "i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n", "to give multiplying and divide higher precedence than add and subtract you can do something like this example adapted from john levine lex yacc 2 e 1992\n", "add sub are cheaper than multiplying better throughput and lower latency\n", "moreover i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n", "on a cpu with a fast multiplier multiplying may only be on the order of 4 times slower than add but on normal hardware it s 16-32 times slower for a 32 bit operation\n", "add is faster than mul but if you want to multiplying two general values mul is far faster than any loop iterating add operations\n", "multiplying and divide have higher precedence than add and subtract\n", "functionally a multiplying will always take more time than an add because it combines a true multiplying along with a true addition step\n", "then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n", "its the multiplying that historically was slower than the add\n", "with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n", "where multiplying binds more tightly than add\n", "the multiplying operation uses more clock cycles than the add on many processors\n", "as of a few years ago multiplying was 3x slower than add\n", "you can add higher and lower resolutions by multiplying or dividing them by 2\n", "however multiplying is faster than adding even though less clock cycles are used to add verses multiplying according to what my particular cpu s datasheet says about the instructions being used\n", "can someone explain this behaviour multiplying operator has higher precedence than add operator\n", "multiplying is still somewhat more expensive than add on modern computers and compilers go to some effort to replace them with one or two shifts+add instructions\n", "the multiplying operation uses more clock cycles than the add on many processors\n", "then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n", "with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n", "in the above example the instance of exprbinopadd is a child of the instance of exprbinopmul although precedence of multiplying is higher than precedence of add which results from the proper consideration of the parentheses\n", "can someone explain this behaviour multiplying operator has higher precedence than add operator\n", "for example fp add throughput is lower than fma or multiplying on intel before skylake 1 vector per clock instead of 2\n", "can someone explain this behaviour multiplying operator has higher precedence than add operator\n", "where multiplying binds more tightly than add\n", "i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n", "to give multiplying and divide higher precedence than add and subtract you can do something like this example adapted from john levine lex yacc 2 e 1992\n", "add sub are cheaper than multiplying better throughput and lower latency\n", "moreover i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n", "on a cpu with a fast multiplier multiplying may only be on the order of 4 times slower than add but on normal hardware it s 16-32 times slower for a 32 bit operation\n", "add is faster than mul but if you want to multiplying two general values mul is far faster than any loop iterating add operations\n", "multiplying and divide have higher precedence than add and subtract\n", "functionally a multiplying will always take more time than an add because it combines a true multiplying along with a true addition step\n", "then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n", "its the multiplying that historically was slower than the add\n", "with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n", "where multiplying binds more tightly than add\n", "the multiplying operation uses more clock cycles than the add on many processors\n", "as of a few years ago multiplying was 3x slower than add\n", "you can add higher and lower resolutions by multiplying or dividing them by 2\n", "however multiplying is faster than adding even though less clock cycles are used to add verses multiplying according to what my particular cpu s datasheet says about the instructions being used\n", "can someone explain this behaviour multiplying operator has higher precedence than add operator\n", "multiplying is still somewhat more expensive than add on modern computers and compilers go to some effort to replace them with one or two shifts+add instructions\n", "the multiplying operation uses more clock cycles than the add on many processors\n", "then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n", "with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n", "in the above example the instance of exprbinopadd is a child of the instance of exprbinopmul although precedence of multiplying is higher than precedence of add which results from the proper consideration of the parentheses\n", "note that is equivalent to i 10 but much faster since modulo is around 10 times slower than multiplication\n", "it appears that you consider modulo to have lower precedence than multiplication and division when in fact it does not\n", "note that is equivalent to i 10 but much faster since modulo is around 10 times slower than multiplication\n", "it appears that you consider modulo to have lower precedence than multiplication and division when in fact it does not\n", "as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n", "with regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent to\n", "the conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed mod\n", "the reason is that the modulo is slower than subtraction\n", "with regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent to\n", "the conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed mod\n", "that is essentially the one case in which repeated subtraction 0 or 1 times a special case of repeated subtraction can be and commonly is but not necessarily faster than division-based modulo\n", "as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n", "as you can see modulo is about an order of magnitude slower than subtraction\n", "as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n", "with regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent to\n", "the conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed mod\n", "the reason is that the modulo is slower than subtraction\n", "with regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent to\n", "the conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed mod\n", "that is essentially the one case in which repeated subtraction 0 or 1 times a special case of repeated subtraction can be and commonly is but not necessarily faster than division-based modulo\n", "as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n", "as you can see modulo is about an order of magnitude slower than subtraction\n", "i read in couple of blogs that in java modulo reminder operator is slower than bitwise-and\n", "remember multiplication division and remainder operators are all higher precedence than subtraction\n", "that s because the division operator has a higher precedence than the subtraction operator -\n", "that s because the division operator has a higher precedence than the subtraction operator -\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n", "division has higher precedence than subtraction\n", "in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double\n", "that s because the division operator has a higher precedence than the subtraction operator -\n", "in this case division has higher precedence than subtraction parenthesis around the division or not\n", "division has higher precedence than subtraction\n", "without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n", "the division operation binds tighter than i.e is evaluated ahead of the subtraction so you are taking a square root of a negative number\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division\n", "this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n", "i don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and addition\n", "without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n", "subtraction is similar using subtraction of the base type and borrow instead of carry multiplication can be done with repeated additions very slow or cross-products faster and division is trickier but can be done by shifting and subtraction of the numbers involved the long division you would have learned as a kid\n", "i am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operations\n", "doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n", "this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division\n", "this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n", "this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n", "because the division operator has higher precedence than subtraction\n", "because the division operator has higher precedence than subtraction\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "because the division operator has higher precedence than subtraction\n", "doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n", "division has higher precedence than subtraction so in the first two examples only the second number is being divided\n", "it may not be the most elegant method but when you just need to convert something ad-hoc thinking of it as comparison and subtraction may be easier than division\n", "this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n", "division has higher precedence than subtraction so in the first two examples only the second number is being divided\n", "doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n", "in this case division has higher precedence than subtraction parenthesis around the division or not\n", "remember multiplication division and remainder operators are all higher precedence than subtraction\n", "that s because the division operator has a higher precedence than the subtraction operator -\n", "that s because the division operator has a higher precedence than the subtraction operator -\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n", "division has higher precedence than subtraction\n", "in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double\n", "that s because the division operator has a higher precedence than the subtraction operator -\n", "in this case division has higher precedence than subtraction parenthesis around the division or not\n", "division has higher precedence than subtraction\n", "without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n", "the division operation binds tighter than i.e is evaluated ahead of the subtraction so you are taking a square root of a negative number\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division\n", "this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n", "i don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and addition\n", "without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n", "subtraction is similar using subtraction of the base type and borrow instead of carry multiplication can be done with repeated additions very slow or cross-products faster and division is trickier but can be done by shifting and subtraction of the numbers involved the long division you would have learned as a kid\n", "i am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operations\n", "doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n", "this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division\n", "this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n", "this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n", "because the division operator has higher precedence than subtraction\n", "because the division operator has higher precedence than subtraction\n", "this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n", "because the division operator has higher precedence than subtraction\n", "doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n", "division has higher precedence than subtraction so in the first two examples only the second number is being divided\n", "it may not be the most elegant method but when you just need to convert something ad-hoc thinking of it as comparison and subtraction may be easier than division\n", "this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n", "division has higher precedence than subtraction so in the first two examples only the second number is being divided\n", "doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n", "in this case division has higher precedence than subtraction parenthesis around the division or not\n", "but since division is pretty expensive i think that this is even worse than 2 multiplication\n", "easiest way is to simply recognize that division is nothing more than the multiplication of the dividend y and the inverse of the divisor x\n", "the cpu operation for float division is much more complicated than multiplication\n", "yes division is usually much slower than multiplication\n", "i found out that integer division is much slower than multiplication unfortunately\n", "first of all multiplication is faster than division\n", "division is inherently a much slower operation than multiplication\n", "division is about 10 times slower than multiplication\n", "multiplication is much faster than division\n", "recently someone suggested to me that division is always more expensive than multiplication\n", "multiplication has higher precedence than division\n", "i picked c 1 1 8 for this example simply because it is exact in ieee-754 floating-point representation and typically multiplication is much faster than division\n", "i found out that integer division is much slower than multiplication unfortunately\n", "this can be a major clock-cycle saver since multiplication is often much faster than a division operation\n", "division is more expensive than multiplication\n", "if the latter yes floating point multiplication is generally faster than division\n", "multiplication is faster than division see fog s tables\n", "on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n", "the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n", "on many processors integer multiplication is faster than integer division\n", "change the half to 0.5 and you should be golden for the math part also multiplication is faster so use it instead of division when possible\n", "i would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then division\n", "in a 64 bit application this code will be a lot faster than in a 32 bit application in a 32 bit application multiplying two 64 bit numbers take 3 multiplication and 3 additions on 32 bit values - however it might be still faster than a division on a 32 bit machine\n", "division algorithms are slower than multiplication algorithms in most cases\n", "or is there something about multiplication that is more convenient than division in programming\n", "i picked c 1 1 8 for this example simply because it is exact in ieee-754 floating-point representation and typically multiplication is much faster than division\n", "multiplication is far easier and faster for a cpu to do than division\n", "removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n", "the double_unit stuff is how random actually does it internally because multiplication is faster than division see floating point division vs floating point multiplication\n", "division is much more expensive than multiplication\n", "the cpu operation for float division is much more complicated than multiplication\n", "so division is always a bit worse than multiplication\n", "if the numbers are huge dividing x by b might be better\u00e2 division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n", "formally it means division cannot have a complexity worse than multiplication\n", "it will be much slower i don t have benchmarks but i would guess at least an order of magnitude maybe more decimal will not benefit from any hardware acceleration and arithmetic on it will require relatively expensive multiplication division by powers of 10 which is far more expensive than multiplication and dividion by powers of 2 to match the exponent before addition subtraction and to bring the exponent back into range after multiplication division\n", "this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n", "the reason to do this is because even though there is an integer division instruction div idiv in the instruction set it s typically very slow several times slower than multiplication\n", "is division more expensive than multiplication in c++\n", "if a remains the same and b is changing say if your code is in a loop and it s clear that a does not change between two iterations for instance because it s a const variable then the original version can execute faster because multiplication is cheaper than division assuming the compiler moves the computation of 1 .\n", "it has to do with the fact that multiplication is itself done by means of binary shifts and additions - far fewer than with division\n", "multiplication takes less time then division so you can try this\n", "i wonder why everybody missed that multiplication is much faster than division\n", "i always thought a multiplication is computationally cheaper than a division\n", "according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n", "division is much more expensive than multiplication\n", "multiplication is much faster than division\n", "since multiplication is of higher precedence than division\n", "i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n", "both works but division is generally slower than multiplication\n", "if you are sure that a floating point multiplication is better than a floating point division then\n", "multiplication is faster than division\n", "the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n", "why does division take so much longer than multiplication\n", "it is common knowledge that division takes many more clock cycles to compute than multiplication\n", "which one is faster is indeed a cpu-specific issue or at least how much faster is cpu specific yes division is typically seen as slower than multiplication\n", "division is slower than multiplication is generally - and definitely using regular expression matching is going to be slower than multiplication is..\n", "multiplication is less expensive than division so\n", "division is per se slower than multiplication however i don t know the details\n", "the cpu operation for float division is much more complicated than multiplication\n", "this because 1 x is simpler than y x and multiplication is faster than division\n", "on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n", "division is more expensive than multiplication\n", "as to why multiplication is faster than division and when the divisor is fixed this is a faster route\n", "it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n", "the intuition is that division is a more costly affair than multiplication\n", "easiest way is to simply recognize that division is nothing more than the multiplication of the dividend y and the inverse of the divisor x\n", "i read that multiplication has has higher presedence than division\n", "in fact if the intent is to divide by 22 10 or some other real value that isn t necessarily exactly representable in binary floating-point then half the times the multiplication is more accurate than the division because it happens by coincidence that the relative error for 1 x is less than the relative error for x\n", "because division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocals\n", "t is not very important as long as alpha is small otherwise you will run into some rather weird nyquist issues aliasing etc. and if you are working on a processor where multiplication is cheaper than division or fixed-point issues are important precalculate omega\n", "however in general one could expect that a division is a more expensive operation than a multiplication\n", "division is faster for unint8 than multiplication in your case\n", "in all other cases division appears to be several times slower than multiplication\n", "division is about 20 faster than multiplication\n", "but the research i ve done so far all points to multiplication being faster than division\n", "division takes a lot longer than multiplication - just do it with pen and paper to see\n", "floating point multiplication usually takes fewer cycles than floating point division\n", "on most processors division is slower than multiplication for the same data types\n", "multiplication has higher precedence than division\n", "division is a lot more expensive than multiplication\n", "the tostring should be slower than parse since division is generally slower than multiplication\n", "as hroptatyr mentioned the multiplication is quite fast and it s much faster than division\n", "the intuition is that division is a more costly affair than multiplication\n", "multiplication is less expensive than division so\n", "multiplication is usually faster than division\n", "multiplication is usually significantly faster than division\n", "integer multiplication is much faster than division\n", "floating point multiplication is faster than division so if speed is relevant\n", "division may be heavier than multiplication but a commenter pointed out that reciprocals are just as fast as multiplication on modern cpus in which case this isn t correct for your case so if you do have 1 x appearing somewhere inside a loop and more than once you can assist by caching the result inside the loop and then using y\n", "i wonder why everybody missed that multiplication is much faster than division\n", "multiplication is usually faster than division\n", "division is one of a number of operations which as far as computational complexity theory is concerned are no more expensive than multiplication\n", "hardware integer division is always slower than multiplication and the gap in the relative latencies of these instructions continues to widen\n", "removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n", "as a rule of thumb multiplication is faster than division on all cpus\n", "both works but division is generally slower than multiplication\n", "hardware integer division is always slower than multiplication and the gap in the relative latencies of these instructions continues to widen\n", "this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n", "the intuition is that division is a more costly affair than multiplication\n", "also addition is faster than multiplication and multiplication is faster than division\n", "on modern processors float division is a good order of magnitude slower than float multiplication when measured by reciprocal throughput\n", "the tostring should be slower than parse since division is generally slower than multiplication\n", "in many processors integer multiplication is vastly faster than integer division\n", "since you re resizing the window make sure to assign the w and h values not as numbers but as products or dynamic numbers multiplication is faster than division but you can also use division\n", "or is there something about multiplication that is more convenient than division in programming\n", "knowing that a division is much more costly than a multiplication\n", "i do not want to know when or if to use shift operators in my code i am interested in why multiplication is faster than shifting bits to the left whereas division is not\n", "both operations are done down at the floating point unit fpu level and even in the world of integral alus the division circuit is a far busier place than a multiplication circuit\n", "most optimizing c compilers optimize it out to a multiplication operation which is much faster than division it can be done only if the divisor is constant though\n", "according to this author integer multiplication can be 40 times faster than integer division\n", "iirc floating-point multiplication is much less expensive than division so this might be faster than both\n", "this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n", "usually division is a lot more expensive than multiplication but a smart compiler will often convert division by a compile-time constant to a multiplication anyway\n", "multiplication is usually faster than division\n", "i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n", "i would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then division\n", "from what i read on the net multiplication is usually easier to compute than division\n", "division is much more expensive than multiplication\n", "can be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpus\n", "if multiplication are o n 2 this is slower than long division for large numbers o n 2 vs o n 2 log n\n", "in some of the academic literature implied multiplication is interpreted as having higher precedence than division\n", "here s one idea which uses one multiplication and one shift so it ll be faster than a division on most systems\n", "the multiplication should perform somewhat better than division\n", "division is always much more expensive than multiplication\n", "however in general one could expect that a division is a more expensive operation than a multiplication\n", "integer multiplication is much faster than division\n", "it is common knowledge that division takes many more clock cycles to compute than multiplication\n", "for the division-to-multiplication case you are assuming that multiplication is faster than division\n", "thus python should interpret this like 12 2 i.e 6 since precedence of multiplication is more than division\n", "knowing that a division is much more costly than a multiplication\n", "if the latter yes floating point multiplication is generally faster than division\n", "division is much more expensive than multiplication\n", "division by 5.0 is more accurate than multiplication by an approximate 0.2\n", "does multiplication has higher precedence over division or it is other way round\n", "the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n", "it is well known that integer division is slow operation typically several times slower than integer multiplication\n", "on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n", "if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n", "why does division take so much longer than multiplication\n", "multiplication is faster division is more accurate\n", "and division may be slower than multiplication or may still be fast\n", "division though is an iterative process in logic the implementations you see on educational sites verilog vhdl are simply doing the same thing we did with log division in grade school but like multiplication it is much simpler than grade school you pull down bits from the numerator in the long division until the number being checked against the denominator is equal to or larger basically the number can either go in only zero times or one times into the next number under test unlike decimal where it can be between 0 to 9 times\n", "recently someone suggested to me that division is always more expensive than multiplication\n", "you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware division\n", "division is generally on the order of 10x slower than multiplication on most processor families\n", "since multiplication is of higher precedence than division\n", "change the half to 0.5 and you should be golden for the math part also multiplication is faster so use it instead of division when possible\n", "if the numbers are huge dividing x by b might be better\u00e2 division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n", "for division things are a little more complicated than multiplication see\n", "does multiplication has higher precedence over division or it is other way round\n", "iirc floating-point multiplication is much less expensive than division so this might be faster than both\n", "division has worse latency than multiplication or addition by a factor of 2 to 4 on modern x86 cpus and worse throughput by a factor of 6 to 40\n", "division is much more expensive than multiplication\n", "in the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with that\n", "i haven t benchmarked any of this code but just by examining the code you can see that using integers division by 2 is shorter than multiplication by 2\n", "i was always taught that division is slower than multiplication but i have no real proof of this\u00e2 has anyone got an opinion on this before i start benchmarking and running test\n", "is it possible that the division is six times slower than multiplication and\n", "i used multiplication for both operations because multiplication is typically faster than division\n", "integer division is about an order of magnitude slower than multiplication on current cpus.\n", "well if it is a single calculation you wil hardly notice any difference but if you talk about millions of transaction then definitely division is costlier than multiplication\n", "in the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with that\n", "even simpler and probably even faster because multiplication is faster than division is dav s answer which is the most natural algorithm.\n", "iirc floating-point multiplication is much less expensive than division so this might be faster than both\n", "division and square roots for huge number of bits are not much more complex than multiplication\n", "in many processors integer multiplication is vastly faster than integer division\n", "in usual programming practice one wouldn t bother and simply multiplying by the floating-point representation of 180 \u00ef because multiplication is so much faster than division\n", "the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n", "similar to pmg s solution but still faster because multiplication is faster than division -\n", "multiplication is usually faster than division\n", "i used multiplication for both operations because multiplication is typically faster than division\n", "multiplication is faster than division so the second method is faster\n", "in fact if the intent is to divide by 22 10 or some other real value that isn t necessarily exactly representable in binary floating-point then half the times the multiplication is more accurate than the division because it happens by coincidence that the relative error for 1 x is less than the relative error for x\n", "if the numbers are huge dividing x by b might be better\u00e2 division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n", "floating point multiplication usually takes fewer cycles than floating point division\n", "i am pretty sure it is not possible to compute polynomial division more efficient than multiplication and as you can see in the following table this algorithm is only 3 times slower than a single multiplication\n", "it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n", "on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n", "but i wonder why is division actually slower than multiplication\n", "multiplication takes less time then division so you can try this\n", "therefore i conclude that division is faster than multiplication\n", "division has worse latency than multiplication or addition by a factor of 2 to 4 on modern x86 cpus and worse throughput by a factor of 6 to 40\n", "following advise i received multiplication is cheaper than division i revised one code line and interestingly enough 71.2 dropped to 1.7 but the if statement just below shot up to 64.8 \u00e2 i just don t get it\n", "division is slower than multiplication due to some reasons\n", "i always thought a multiplication is computationally cheaper than a division\n", "recently someone suggested to me that division is always more expensive than multiplication\n", "division is much more expensive than multiplication\n", "from the performance side float multiplication is faster than division but i don t think that in the gui code it can create significant difference\n", "i read that multiplication has has higher presedence than division\n", "your friend has a point a division actual division not just writing in c is slower than a multiplication\n", "according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n", "but since division is pretty expensive i think that this is even worse than 2 multiplication\n", "easiest way is to simply recognize that division is nothing more than the multiplication of the dividend y and the inverse of the divisor x\n", "the cpu operation for float division is much more complicated than multiplication\n", "yes division is usually much slower than multiplication\n", "i found out that integer division is much slower than multiplication unfortunately\n", "first of all multiplication is faster than division\n", "division is inherently a much slower operation than multiplication\n", "division is about 10 times slower than multiplication\n", "multiplication is much faster than division\n", "recently someone suggested to me that division is always more expensive than multiplication\n", "multiplication has higher precedence than division\n", "i picked c 1 1 8 for this example simply because it is exact in ieee-754 floating-point representation and typically multiplication is much faster than division\n", "i found out that integer division is much slower than multiplication unfortunately\n", "this can be a major clock-cycle saver since multiplication is often much faster than a division operation\n", "division is more expensive than multiplication\n", "if the latter yes floating point multiplication is generally faster than division\n", "multiplication is faster than division see fog s tables\n", "on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n", "the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n", "on many processors integer multiplication is faster than integer division\n", "change the half to 0.5 and you should be golden for the math part also multiplication is faster so use it instead of division when possible\n", "i would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then division\n", "in a 64 bit application this code will be a lot faster than in a 32 bit application in a 32 bit application multiplying two 64 bit numbers take 3 multiplication and 3 additions on 32 bit values - however it might be still faster than a division on a 32 bit machine\n", "division algorithms are slower than multiplication algorithms in most cases\n", "or is there something about multiplication that is more convenient than division in programming\n", "i picked c 1 1 8 for this example simply because it is exact in ieee-754 floating-point representation and typically multiplication is much faster than division\n", "multiplication is far easier and faster for a cpu to do than division\n", "removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n", "the double_unit stuff is how random actually does it internally because multiplication is faster than division see floating point division vs floating point multiplication\n", "division is much more expensive than multiplication\n", "the cpu operation for float division is much more complicated than multiplication\n", "so division is always a bit worse than multiplication\n", "if the numbers are huge dividing x by b might be better\u00e2 division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n", "formally it means division cannot have a complexity worse than multiplication\n", "it will be much slower i don t have benchmarks but i would guess at least an order of magnitude maybe more decimal will not benefit from any hardware acceleration and arithmetic on it will require relatively expensive multiplication division by powers of 10 which is far more expensive than multiplication and dividion by powers of 2 to match the exponent before addition subtraction and to bring the exponent back into range after multiplication division\n", "this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n", "the reason to do this is because even though there is an integer division instruction div idiv in the instruction set it s typically very slow several times slower than multiplication\n", "is division more expensive than multiplication in c++\n", "if a remains the same and b is changing say if your code is in a loop and it s clear that a does not change between two iterations for instance because it s a const variable then the original version can execute faster because multiplication is cheaper than division assuming the compiler moves the computation of 1 .\n", "it has to do with the fact that multiplication is itself done by means of binary shifts and additions - far fewer than with division\n", "multiplication takes less time then division so you can try this\n", "i wonder why everybody missed that multiplication is much faster than division\n", "i always thought a multiplication is computationally cheaper than a division\n", "according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n", "division is much more expensive than multiplication\n", "multiplication is much faster than division\n", "since multiplication is of higher precedence than division\n", "i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n", "both works but division is generally slower than multiplication\n", "if you are sure that a floating point multiplication is better than a floating point division then\n", "multiplication is faster than division\n", "the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n", "why does division take so much longer than multiplication\n", "it is common knowledge that division takes many more clock cycles to compute than multiplication\n", "which one is faster is indeed a cpu-specific issue or at least how much faster is cpu specific yes division is typically seen as slower than multiplication\n", "division is slower than multiplication is generally - and definitely using regular expression matching is going to be slower than multiplication is..\n", "multiplication is less expensive than division so\n", "division is per se slower than multiplication however i don t know the details\n", "the cpu operation for float division is much more complicated than multiplication\n", "this because 1 x is simpler than y x and multiplication is faster than division\n", "on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n", "division is more expensive than multiplication\n", "as to why multiplication is faster than division and when the divisor is fixed this is a faster route\n", "it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n", "the intuition is that division is a more costly affair than multiplication\n", "easiest way is to simply recognize that division is nothing more than the multiplication of the dividend y and the inverse of the divisor x\n", "i read that multiplication has has higher presedence than division\n", "in fact if the intent is to divide by 22 10 or some other real value that isn t necessarily exactly representable in binary floating-point then half the times the multiplication is more accurate than the division because it happens by coincidence that the relative error for 1 x is less than the relative error for x\n", "because division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocals\n", "t is not very important as long as alpha is small otherwise you will run into some rather weird nyquist issues aliasing etc. and if you are working on a processor where multiplication is cheaper than division or fixed-point issues are important precalculate omega\n", "however in general one could expect that a division is a more expensive operation than a multiplication\n", "division is faster for unint8 than multiplication in your case\n", "in all other cases division appears to be several times slower than multiplication\n", "division is about 20 faster than multiplication\n", "but the research i ve done so far all points to multiplication being faster than division\n", "division takes a lot longer than multiplication - just do it with pen and paper to see\n", "floating point multiplication usually takes fewer cycles than floating point division\n", "on most processors division is slower than multiplication for the same data types\n", "multiplication has higher precedence than division\n", "division is a lot more expensive than multiplication\n", "the tostring should be slower than parse since division is generally slower than multiplication\n", "as hroptatyr mentioned the multiplication is quite fast and it s much faster than division\n", "the intuition is that division is a more costly affair than multiplication\n", "multiplication is less expensive than division so\n", "multiplication is usually faster than division\n", "multiplication is usually significantly faster than division\n", "integer multiplication is much faster than division\n", "floating point multiplication is faster than division so if speed is relevant\n", "division may be heavier than multiplication but a commenter pointed out that reciprocals are just as fast as multiplication on modern cpus in which case this isn t correct for your case so if you do have 1 x appearing somewhere inside a loop and more than once you can assist by caching the result inside the loop and then using y\n", "i wonder why everybody missed that multiplication is much faster than division\n", "multiplication is usually faster than division\n", "division is one of a number of operations which as far as computational complexity theory is concerned are no more expensive than multiplication\n", "hardware integer division is always slower than multiplication and the gap in the relative latencies of these instructions continues to widen\n", "removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n", "as a rule of thumb multiplication is faster than division on all cpus\n", "both works but division is generally slower than multiplication\n", "hardware integer division is always slower than multiplication and the gap in the relative latencies of these instructions continues to widen\n", "this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n", "the intuition is that division is a more costly affair than multiplication\n", "also addition is faster than multiplication and multiplication is faster than division\n", "on modern processors float division is a good order of magnitude slower than float multiplication when measured by reciprocal throughput\n", "the tostring should be slower than parse since division is generally slower than multiplication\n", "in many processors integer multiplication is vastly faster than integer division\n", "since you re resizing the window make sure to assign the w and h values not as numbers but as products or dynamic numbers multiplication is faster than division but you can also use division\n", "or is there something about multiplication that is more convenient than division in programming\n", "knowing that a division is much more costly than a multiplication\n", "i do not want to know when or if to use shift operators in my code i am interested in why multiplication is faster than shifting bits to the left whereas division is not\n", "both operations are done down at the floating point unit fpu level and even in the world of integral alus the division circuit is a far busier place than a multiplication circuit\n", "most optimizing c compilers optimize it out to a multiplication operation which is much faster than division it can be done only if the divisor is constant though\n", "according to this author integer multiplication can be 40 times faster than integer division\n", "iirc floating-point multiplication is much less expensive than division so this might be faster than both\n", "this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n", "usually division is a lot more expensive than multiplication but a smart compiler will often convert division by a compile-time constant to a multiplication anyway\n", "multiplication is usually faster than division\n", "i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n", "i would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then division\n", "from what i read on the net multiplication is usually easier to compute than division\n", "division is much more expensive than multiplication\n", "can be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpus\n", "if multiplication are o n 2 this is slower than long division for large numbers o n 2 vs o n 2 log n\n", "in some of the academic literature implied multiplication is interpreted as having higher precedence than division\n", "here s one idea which uses one multiplication and one shift so it ll be faster than a division on most systems\n", "the multiplication should perform somewhat better than division\n", "division is always much more expensive than multiplication\n", "however in general one could expect that a division is a more expensive operation than a multiplication\n", "integer multiplication is much faster than division\n", "it is common knowledge that division takes many more clock cycles to compute than multiplication\n", "for the division-to-multiplication case you are assuming that multiplication is faster than division\n", "thus python should interpret this like 12 2 i.e 6 since precedence of multiplication is more than division\n", "knowing that a division is much more costly than a multiplication\n", "if the latter yes floating point multiplication is generally faster than division\n", "division is much more expensive than multiplication\n", "division by 5.0 is more accurate than multiplication by an approximate 0.2\n", "does multiplication has higher precedence over division or it is other way round\n", "the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n", "it is well known that integer division is slow operation typically several times slower than integer multiplication\n", "on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n", "if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n", "why does division take so much longer than multiplication\n", "multiplication is faster division is more accurate\n", "and division may be slower than multiplication or may still be fast\n", "division though is an iterative process in logic the implementations you see on educational sites verilog vhdl are simply doing the same thing we did with log division in grade school but like multiplication it is much simpler than grade school you pull down bits from the numerator in the long division until the number being checked against the denominator is equal to or larger basically the number can either go in only zero times or one times into the next number under test unlike decimal where it can be between 0 to 9 times\n", "recently someone suggested to me that division is always more expensive than multiplication\n", "you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware division\n", "division is generally on the order of 10x slower than multiplication on most processor families\n", "since multiplication is of higher precedence than division\n", "change the half to 0.5 and you should be golden for the math part also multiplication is faster so use it instead of division when possible\n", "if the numbers are huge dividing x by b might be better\u00e2 division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n", "for division things are a little more complicated than multiplication see\n", "does multiplication has higher precedence over division or it is other way round\n", "iirc floating-point multiplication is much less expensive than division so this might be faster than both\n", "division has worse latency than multiplication or addition by a factor of 2 to 4 on modern x86 cpus and worse throughput by a factor of 6 to 40\n", "division is much more expensive than multiplication\n", "in the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with that\n", "i haven t benchmarked any of this code but just by examining the code you can see that using integers division by 2 is shorter than multiplication by 2\n", "i was always taught that division is slower than multiplication but i have no real proof of this\u00e2 has anyone got an opinion on this before i start benchmarking and running test\n", "is it possible that the division is six times slower than multiplication and\n", "i used multiplication for both operations because multiplication is typically faster than division\n", "integer division is about an order of magnitude slower than multiplication on current cpus.\n", "well if it is a single calculation you wil hardly notice any difference but if you talk about millions of transaction then definitely division is costlier than multiplication\n", "in the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with that\n", "even simpler and probably even faster because multiplication is faster than division is dav s answer which is the most natural algorithm.\n", "iirc floating-point multiplication is much less expensive than division so this might be faster than both\n", "division and square roots for huge number of bits are not much more complex than multiplication\n", "in many processors integer multiplication is vastly faster than integer division\n", "in usual programming practice one wouldn t bother and simply multiplying by the floating-point representation of 180 \u00ef because multiplication is so much faster than division\n", "the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n", "similar to pmg s solution but still faster because multiplication is faster than division -\n", "multiplication is usually faster than division\n", "i used multiplication for both operations because multiplication is typically faster than division\n", "multiplication is faster than division so the second method is faster\n", "in fact if the intent is to divide by 22 10 or some other real value that isn t necessarily exactly representable in binary floating-point then half the times the multiplication is more accurate than the division because it happens by coincidence that the relative error for 1 x is less than the relative error for x\n", "if the numbers are huge dividing x by b might be better\u00e2 division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n", "floating point multiplication usually takes fewer cycles than floating point division\n", "i am pretty sure it is not possible to compute polynomial division more efficient than multiplication and as you can see in the following table this algorithm is only 3 times slower than a single multiplication\n", "it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n", "on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n", "but i wonder why is division actually slower than multiplication\n", "multiplication takes less time then division so you can try this\n", "therefore i conclude that division is faster than multiplication\n", "division has worse latency than multiplication or addition by a factor of 2 to 4 on modern x86 cpus and worse throughput by a factor of 6 to 40\n", "following advise i received multiplication is cheaper than division i revised one code line and interestingly enough 71.2 dropped to 1.7 but the if statement just below shot up to 64.8 \u00e2 i just don t get it\n", "division is slower than multiplication due to some reasons\n", "i always thought a multiplication is computationally cheaper than a division\n", "recently someone suggested to me that division is always more expensive than multiplication\n", "division is much more expensive than multiplication\n", "from the performance side float multiplication is faster than division but i don t think that in the gui code it can create significant difference\n", "i read that multiplication has has higher presedence than division\n", "your friend has a point a division actual division not just writing in c is slower than a multiplication\n", "according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n", "if you continue to use your method of performing this task then you need to manually check if the addition of the two lower order decimal digits has caused a carry by checking if the result of the addition is greater than 10 and if it is subtract 10 from the number and then add 1 to the higher order digit calculation\n", "if you continue to use your method of performing this task then you need to manually check if the addition of the two lower order decimal digits has caused a carry by checking if the result of the addition is greater than 10 and if it is subtract 10 from the number and then add 1 to the higher order digit calculation\n", "this is a hold over from older compilers and interpreters on old chip architecture that would do addition slightly slower than subtraction\n", "the subtraction case is going to require a little more work than addition in this code\n", "a111 addition is equal or better than subtraction\n", "it s possible though that software could mess things up by making subtraction slower than addition - but that s unlikely\n", "i was thinking that there could be an issue if the result from the addition is bigger than what 15 bits can represent 32767 or if i get a negative number in the subtraction\n", "here it is conceivable that subtraction is slower than addition\n", "but i d think bignum subtraction is a little slower than bignum addition\n", "the only way it would be broken up differently would be if addition had a higher precedence than subtraction like multiplication does\n", "this is a hold over from older compilers and interpreters on old chip architecture that would do addition slightly slower than subtraction\n", "the subtraction case is going to require a little more work than addition in this code\n", "a111 addition is equal or better than subtraction\n", "it s possible though that software could mess things up by making subtraction slower than addition - but that s unlikely\n", "i was thinking that there could be an issue if the result from the addition is bigger than what 15 bits can represent 32767 or if i get a negative number in the subtraction\n", "here it is conceivable that subtraction is slower than addition\n", "but i d think bignum subtraction is a little slower than bignum addition\n", "the only way it would be broken up differently would be if addition had a higher precedence than subtraction like multiplication does\n", "it is true that division and modulo a division operation is slower than addition\n", "the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n", "generally the division is more costly than addition i think but not much difference in this case\n", "to start with i need multiplication and division to take higher precedence than addition and subtraction\n", "division has a higher precedence than addition or subtraction so it s really this\n", "multiplication and division have a higher precedence than addition and subtraction\n", "as far as i know the division is more complex and slower than other operations like addition so is my code incorrect then\n", "note that division has a higher precedence than addition\n", "best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n", "it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n", "and division has larger complexity than addition\n", "the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n", "division has a higher precedence than addition ergo\n", "and division has larger complexity than addition\n", "division has a higher precedence than addition ergo\n", "generally the division is more costly than addition i think but not much difference in this case\n", "i need to find out that how much division operation is faster than addition operation in a gpu\n", "so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n", "knuth writes that fibonacci search is preferable on some computers because it involves only addition and subtraction not division by 2. but almost all computers use binary arithmetic in which division by 2 is simpler than addition and subtraction\n", "since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n", "division is performed by repeated subtraction therefore needs more level of subtract logic making division slower than addition\n", "the first difference is that division is much more expensive than addition\n", "division has higher precedence than addition\n", "so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n", "in addition to that the crossing off may be less work than a division don t know about python it is for c arrays\n", "division has higher precedence than addition\n", "the division operator has a higher order precedence as the addition operator\n", "the term is apparently not an exact measurement as it is clear that a double-precision floating-point operation is going to take longer than a single-precision one and multiplication and division are going to take longer than addition and subtraction\n", "division has a higher precedence than addition or subtraction so it s really this\n", "the division has higher precedence than the addition so what you re calculating is sumaverage1+ sumaverage2 5 which is integer division which is probably not what you want\n", "this happens because the division operator has higher precedence than the + addition operator\n", "multiplication and division operators have higher precedence than addition and subtraction in c++ same as in scientific notation\n", "the division has higher precedence than the addition so what you re calculating is sumaverage1+ sumaverage2 5 which is integer division which is probably not what you want\n", "the first difference is that division is much more expensive than addition\n", "the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n", "finally we all know that multiplication and division have higher precedence than addition and subtraction so we can remove the extraneous parentheses so this turns into\n", "as far as i know the division is more complex and slower than other operations like addition so is my code incorrect then\n", "with careful optimization however you can make addition 61 times faster than division\n", "multiplication and division have higher priority than addition and subtraction\n", "multiplication and division are higher precedence than addition so they get done first - before the implicit conversion to string for concatenation\n", "note that division has a higher precedence than addition\n", "the division operator has a higher order precedence as the addition operator\n", "since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n", "so if your code has tough data dependency problems addition is about 12 times faster than division\n", "it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n", "i remember it says something like division takes much much more time than addition\n", "this happens because the division operator has higher precedence than the + addition operator\n", "if you are doing physical simulations things like division or square roots are going to be way more expensive than addition\n", "performing addition on this slightly larger type will pretty much always be faster than doing division or modulo on the type itself\n", "the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n", "for example an addition is typically much faster than a division\n", "the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n", "2.the division by 2 can be done by bit - shift operation is it really slower than addition\n", "best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n", "an addition is faster than a division and a multiplication\n", "the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n", "for example on most 32 bit systems 64-bit addition is faster than 32-bit division modulo\n", "the first difference is that division is much more expensive than addition\n", "the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n", "the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n", "it is true that division and modulo a division operation is slower than addition\n", "it is true that division and modulo a division operation is slower than addition\n", "the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n", "generally the division is more costly than addition i think but not much difference in this case\n", "to start with i need multiplication and division to take higher precedence than addition and subtraction\n", "division has a higher precedence than addition or subtraction so it s really this\n", "multiplication and division have a higher precedence than addition and subtraction\n", "as far as i know the division is more complex and slower than other operations like addition so is my code incorrect then\n", "note that division has a higher precedence than addition\n", "best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n", "it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n", "and division has larger complexity than addition\n", "the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n", "division has a higher precedence than addition ergo\n", "and division has larger complexity than addition\n", "division has a higher precedence than addition ergo\n", "generally the division is more costly than addition i think but not much difference in this case\n", "i need to find out that how much division operation is faster than addition operation in a gpu\n", "so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n", "knuth writes that fibonacci search is preferable on some computers because it involves only addition and subtraction not division by 2. but almost all computers use binary arithmetic in which division by 2 is simpler than addition and subtraction\n", "since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n", "division is performed by repeated subtraction therefore needs more level of subtract logic making division slower than addition\n", "the first difference is that division is much more expensive than addition\n", "division has higher precedence than addition\n", "so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n", "in addition to that the crossing off may be less work than a division don t know about python it is for c arrays\n", "division has higher precedence than addition\n", "the division operator has a higher order precedence as the addition operator\n", "the term is apparently not an exact measurement as it is clear that a double-precision floating-point operation is going to take longer than a single-precision one and multiplication and division are going to take longer than addition and subtraction\n", "division has a higher precedence than addition or subtraction so it s really this\n", "the division has higher precedence than the addition so what you re calculating is sumaverage1+ sumaverage2 5 which is integer division which is probably not what you want\n", "this happens because the division operator has higher precedence than the + addition operator\n", "multiplication and division operators have higher precedence than addition and subtraction in c++ same as in scientific notation\n", "the division has higher precedence than the addition so what you re calculating is sumaverage1+ sumaverage2 5 which is integer division which is probably not what you want\n", "the first difference is that division is much more expensive than addition\n", "the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n", "finally we all know that multiplication and division have higher precedence than addition and subtraction so we can remove the extraneous parentheses so this turns into\n", "as far as i know the division is more complex and slower than other operations like addition so is my code incorrect then\n", "with careful optimization however you can make addition 61 times faster than division\n", "multiplication and division have higher priority than addition and subtraction\n", "multiplication and division are higher precedence than addition so they get done first - before the implicit conversion to string for concatenation\n", "note that division has a higher precedence than addition\n", "the division operator has a higher order precedence as the addition operator\n", "since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n", "so if your code has tough data dependency problems addition is about 12 times faster than division\n", "it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n", "i remember it says something like division takes much much more time than addition\n", "this happens because the division operator has higher precedence than the + addition operator\n", "if you are doing physical simulations things like division or square roots are going to be way more expensive than addition\n", "performing addition on this slightly larger type will pretty much always be faster than doing division or modulo on the type itself\n", "the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n", "for example an addition is typically much faster than a division\n", "the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n", "2.the division by 2 can be done by bit - shift operation is it really slower than addition\n", "best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n", "an addition is faster than a division and a multiplication\n", "the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n", "for example on most 32 bit systems 64-bit addition is faster than 32-bit division modulo\n", "the first difference is that division is much more expensive than addition\n", "the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n", "the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n", "it is true that division and modulo a division operation is slower than addition\n", "note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n", "as int exponent gets larger taking powers might be faster than multiplication\n", "however naive multiplication will get slower and slower as the exponent increases\n", "this is analogous to the way you can compute exponent using successive squaring much faster than by repeated multiplication\n", "multiplication is even easier as you dont have to line up the decimal points you just do the math on the significant digits and simply add the exponent\n", "the misunderstanding is that incrementing the exponent is not faster than doing a multiplication\n", "note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n", "however with really very small parameter 2 in your case exponent is faster than multiplication\n", "note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n", "note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n", "as int exponent gets larger taking powers might be faster than multiplication\n", "however naive multiplication will get slower and slower as the exponent increases\n", "this is analogous to the way you can compute exponent using successive squaring much faster than by repeated multiplication\n", "multiplication is even easier as you dont have to line up the decimal points you just do the math on the significant digits and simply add the exponent\n", "the misunderstanding is that incrementing the exponent is not faster than doing a multiplication\n", "note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n", "however with really very small parameter 2 in your case exponent is faster than multiplication\n", "note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n", "btw a case-sensitive search done with removing i is much faster than a case-insensitive search\n", "this tiny overhead on add is vastly outweighed by the savings on lookups since all programmers should know and understand that case-insensitive compares are vastly slower than case-sensitive especially with unicode - the cpu can t just do a block compare of data but must check each pair of characters specially even using a table look-up this is vastly slower\n", "btw a case-sensitive search done with removing i is much faster than a case-insensitive search\n", "this tiny overhead on add is vastly outweighed by the savings on lookups since all programmers should know and understand that case-insensitive compares are vastly slower than case-sensitive especially with unicode - the cpu can t just do a block compare of data but must check each pair of characters specially even using a table look-up this is vastly slower\n", "this is parsed as 1 + 2 \u00e3 4 since multiplication has a higher precedence than addition\n", "this is parsed as 1 + 2 \u00e3 4 since multiplication has a higher precedence than addition\n", "this is parsed as 1 + 2 \u00e3 4 since multiplication has a higher precedence than addition\n", "this is parsed as 1 + 2 \u00e3 4 since multiplication has a higher precedence than addition\n", "division for example is considerably slower than addition\n", "division for example is considerably slower than addition\n"], "protocol": ["you can also use scgi it is a lot simpler than fastcgi\n", "rtsp is more of a handshake done with the server while rtp is the actual stream coming in once the handshake is done and you start streaming\n", "rtsp is more of a handshake done with the server while rtp is the actual stream coming in once the handshake is done and you start streaming\n", "what happen when icmp is disabled in an router and when packet size greater than mtu how the router fragments that packet\n", "any device in the path of communication between the sender and receiver whose mtu is smaller than the packet will drop such packets and reply the sender with icmp destination unreachable datagram too big message containing the device s mtu\n", "in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will\n", "in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will\n", "one might want to define kerberos access to more than one ldap server\n", "in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will\n", "in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will\n", "one might want to define kerberos access to more than one ldap server\n", "json-rpc is more pythonic than xml-rpc or shudder soap\n", "json-rpc is more pythonic than xml-rpc or shudder soap\n", "json-rpc is more pythonic than xml-rpc or shudder soap\n", "json-rpc is more pythonic than xml-rpc or shudder soap\n", "spdy is a more efficient protocol than http\n", "in fact with optimizations like spdy you might find that a tls-secured connection actually performs better than plain http\n", "anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n", "spdy is a more efficient protocol than http\n", "anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n", "http 2 is even better than spdy and check this article for a use case regarding spdy\n", "http 2 is even better than spdy and check this article for a use case regarding spdy\n", "spdy is a more efficient protocol than http\n", "spdy is a more efficient protocol than http\n", "in fact with optimizations like spdy you might find that a tls-secured connection actually performs better than plain http\n", "anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n", "spdy is a more efficient protocol than http\n", "anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n", "http 2 is even better than spdy and check this article for a use case regarding spdy\n", "http 2 is even better than spdy and check this article for a use case regarding spdy\n", "spdy is a more efficient protocol than http\n", "but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n", "in fact in some ways ntlm is better than kerberos\n", "but since ntlm is less secure than kerberos why isn t it the other way around\n", "but since ntlm is less secure than kerberos why isn t it the other way around\n", "i understand that kerberos has better performance than ntlm\n", "for a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlm\n", "i understand that kerberos has better performance than ntlm\n", "kerberos is complex to set up and even though it generally is considered faster than ntlm this is only true when you reach a certain limit of simultanious users on your site\n", "but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n", "kerberos could be considered as a better option than ntlm\n", "but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n", "in fact in some ways ntlm is better than kerberos\n", "but since ntlm is less secure than kerberos why isn t it the other way around\n", "but since ntlm is less secure than kerberos why isn t it the other way around\n", "i understand that kerberos has better performance than ntlm\n", "for a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlm\n", "i understand that kerberos has better performance than ntlm\n", "kerberos is complex to set up and even though it generally is considered faster than ntlm this is only true when you reach a certain limit of simultanious users on your site\n", "but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n", "kerberos could be considered as a better option than ntlm\n", "as i understand websockets are on top of tcp and have higher latency than sctp that underlies webrtc when for example sending binary data between server and browser that also could be 2 peers in webrtc\n", "how sctp is better then tcp\n", "sctp is not better than tcp in any way but it does something different\n", "how sctp is better then tcp\n", "sctp is not better than tcp in any way but it does something different\n", "plus once spdy becomes more common ssl slow down won t really account for anything much\n", "i m using keep-alive so i think the ssl handshake is more or less totally out but i hope to move to spdy soon so i don t really know how that helps after the initial handshake\n", "if we assume that you live in a poor coverage area and your phone and your tower are constantly dropping the signal then re-establishing a spdy connection is no worse off than re-establishing a tcp connection modulo ssl handshake\n", "plus once spdy becomes more common ssl slow down won t really account for anything much\n", "plus once spdy becomes more common ssl slow down won t really account for anything much\n", "i m using keep-alive so i think the ssl handshake is more or less totally out but i hope to move to spdy soon so i don t really know how that helps after the initial handshake\n", "if we assume that you live in a poor coverage area and your phone and your tower are constantly dropping the signal then re-establishing a spdy connection is no worse off than re-establishing a tcp connection modulo ssl handshake\n", "plus once spdy becomes more common ssl slow down won t really account for anything much\n", "push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile\n", "push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile\n", "udp protocol is unreliable but much much faster than tcp which is most commonly used for communication\n", "in my experience udp based code is generally less complex than tcp based code\n", "tcp is slower than udp and you ll have to mitigate that in realtime multiplayer\n", "tcp socket is even more likely than udp socket but both work\n", "tcp is reliable but slower than udp while udp is not safe and i have to implement my own fault-handling codes\n", "hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n", "udp communication requires much less overhead than tcp due to the number of messages exchanged\n", "i know tcp is better to send file but i have a homework about sending file via udp protocol\n", "for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum\n", "udp is way lighter and faster but somewhat less reliable than tcp\n", "since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n", "first of udp s datagram is simpler than tcp s one\n", "short answer if you can tolerance with any packet loss udp is better otherwise tcp\n", "in a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion control\n", "-- in which scenario configuration would i get udp to perform better than tcp\n", "udp has a much lower overhead than tcp\n", "instead of implementing all these over udp it is much better just to switch to tcp\n", "if the data is critical you should go for tcp which is slower as compared to udp which in fact doesn t guarantee the packets will arrive in order or even if they d arrive or not\n", "generally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this context\n", "most importantly you can easily supplement udp with some reliable delivery hand-shaking that s less overhead than tcp\n", "tcp is much better than udp in terms of reliability\n", "udp is faster than tcp because packets are sent without guarantee of delivery nor order\n", "udp just has a smaller overhead than tcp but that comes at the cost of reliability\n", "does udp always perform better than tcp\n", "at my company we have found memory mapped files to be much faster than loopback tcp ip for communication on the same box so i m assuming it would be faster than udp too\n", "in that sense reliable udp cannot be faster than tcp\n", "udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n", "you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n", "it was introduced since the nat traversal for tcp is much more complicated than udp\n", "if i d directly say that udp is faster comparatively than tcp that it is used for such applications\n", "tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp\n", "i was going through internet and so and understood that web sockets are encapsulations to tcp which by itself is slower than udp ofcourse at the cost of reliability but i couldnt find much info if websockets or udp would be ideal to implement such a server\n", "i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n", "udp is connection less but at the same level as tcp\n", "actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n", "i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 better\n", "note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered\n", "udp communication requires much less overhead than tcp due to the number of messages exchanged\n", "one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n", "because of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streaming\n", "certainly tcp has more overhead than udp\n", "i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n", "if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n", "try to increase timeout value tcp is slower than udp\n", "it was introduced since the nat traversal for tcp is much more complicated than udp\n", "please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n", "or is there any specific scenario where udp is better than tcp\n", "tcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receive\n", "for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n", "for this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udp\n", "udp is extremely faster than tcp which is suitable to stream a user s voice input\n", "in some applications tcp is faster better throughput than udp\n", "tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n", "tcp is much better than udp in terms of reliability\n", "the key question was related to what kind of situations would udp be the better choice over tcp\n", "btw i concur that udp is far more appropriate than tcp in this case\n", "the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n", "it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n", "so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n", "only when packets can be discarded unordered can udp be faster than tcp\n", "tcp mounts are more reliable and you know you have a network problem much faster than with udp\n", "udp is much faster then tcp but tcp has flow control and guaranteed delivery\n", "alternatively it can be used over udp which is less hungry than tcp\n", "udp should be much faster than tcp because there are no acknowledge and congestion detection\n", "udp is more of a fire and forget whereas tcp maintains a connection state\n", "in some applications tcp is faster better throughput than udp\n", "the reason i asking this is because i read tcp is slower than udp because tcp ensures order of packets\n", "+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n", "but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data\n", "i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp\n", "what i have thought of so far is that tcp is going to be more reliable than udp and in rmi corba we want network reliability\n", "as such traversing a nat through udp is much easier than tcp\n", "udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n", "tcp socket is even more likely than udp socket but both work\n", "the decision on yours the tcp protocol used for connection oriented network that is more secure than udp\n", "i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do\n", "tcp is a bit slower than udp but more failsafe\n", "tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n", "while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.\n", "udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n", "but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n", "tcp is far better at transferring large quantities of data but when the network fails it s more likely that udp will get through\n", "short answer if you can tolerance with any packet loss udp is better otherwise tcp\n", "tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n", "generally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this context\n", "tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations\n", "udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n", "theoretically udp should be be 30-50 faster than tcp because it s missing the extra trip for the ack and has a smaller header overhead however in reality there are many cases where tcp would outperform udp just because of congestion control\n", "if you care a lot about efficiency or really need tens of thousands of connections then implementing your specific protocol in udp will always be better than tcp\n", "in general the tcp protocol manages the available network bandwidth better than the udp protocol\n", "note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least\n", "there is a perception that udp is faster than tcp but i think it depends on the situation - take a look at this discussion for some further discussion on speed reliability etc between udp and tcp go down through all the high scored answers\n", "don t think of it as udp is faster and tcp is slower because that s just wrong\n", "udp will almost always provide better performance than tcp at the cost of reliability\n", "udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n", "i read in a case where a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n", "but with the udp protocol in particular this is easier than for tcp\n", "udp lends itself to real-time less latency than tcp\n", "like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n", "or is there any specific scenario where udp is better than tcp\n", "you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n", "does udp always perform better than tcp\n", "udp is extremely faster than tcp which is suitable to stream a user s voice input\n", "from experience i can tell you udp is about 10-15 faster than tcp on dedicated and udp-tuned networks\n", "what s currently baffling me is in my results tcp finishes almost 2x faster than udp\n", "in doing so the tradefoff is that tcp becomes slower compared to udp\n", "udp is way lighter and faster but somewhat less reliable than tcp\n", "tcp streaming for audio can be less helpful than udp rtp as you d have to turn off nagling\n", "tcp is way better then udp for that\n", "udp gives smaller latency with many many issues to discuss here of course tcp gives bigger latency\n", "http is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcp\n", "keep in mind that implementing udp traversal is easier than tcp\n", "maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n", "udp is not always faster than tcp\n", "if you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the box\n", "in some applications tcp is faster better throughput than udp\n", "but there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheads\n", "one often finds the argument that udp is faster then tcp\n", "udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n", "does udp always perform better than tcp\n", "this was surprising for me as i expected udp to perform better than tcp\n", "tcp is slower assures data arrival udp is faster data corruption may be possible\n", "you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n", "c++ is not my first language and this is small part of code i can t figure out i ve chosen udp because it is always much simpler than tcp\n", "for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum\n", "that among other things is why tcp is considered more reliable but slower than udp\n", "i m trying to avoid tcpclient because udp is faster but would this work in tcp since it s streamed\n", "if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n", "while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.\n", "note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered\n", "also note that it is easy to implement your own stack on top of udp that performs worse than tcp\n", "is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp\n", "udp scales better than tcp because of reduced states that need to be maintained in the operating system\n", "alternatively it can be used over udp which is less hungry than tcp\n", "you can use udp as well but if you are dealing with firewalls it is probably going to be simpler with tcp\n", "in practice this means that tcp is better suited for continuous transmission of data whereas the more lightweight udp can be used when reliability isn t important\n", "2 tcp needs more processing at network interface level where as in udp it\u00e2 s not\n", "a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n", "4 tcp is a slower than udp\n", "the package is bigger than udp s package but smaller than tcp s package\n", "udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt\n", "use socket for tcp and datagram for udp its a lot faster than tcp but less connection oriented\n", "but there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheads\n", "if you can do everything with udp it is lighter than tcp\n", "in some applications tcp is faster better throughput than udp\n", "for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n", "also remember that dns requests can use tcp if the request or response would need more than 1 udp packet\n", "i did some research and found that udp may be more suitable in this case because udp hole punching works much better than tcp hole punching\n", "if you were attempting to beat the performance of tcp by shifting to udp keep in mind that part of the reason you get lower performance with tcp is because tcp tracks and redelivers the lost packets for you\n", "maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n", "+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n", "tcp socket is even more likely than udp socket but both work\n", "as an additional note my suspicion is that you d need to indulge yourself in some pretty sophisticated benchmarks before you could conclude that udp is actually going to have higher performance than tcp for web services\n", "udp is more popular in nat punching because provides much better results than tcp\n", "udp has less overhead than tcp and is therefore faster\n", "when writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and accept\n", "tcp mounts are more reliable and you know you have a network problem much faster than with udp\n", "i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n", "i know udp is faster than tcp for various reason\n", "udp should be much faster than tcp because there are no acknowledge and congestion detection\n", "some protocols are more complex because what s needed are some but not all of the features of tcp but more than what udp provides\n", "tcp ip is supposed to be more reliable than udp ip see this comparison\n", "udp packets are easier structured than tcp packets but sacrifice security for their size\n", "also see this other so answer about the misconception that udp is always faster than tcp\n", "note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least\n", "tcp is a slower more reliable protocol than udp is\n", "but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n", "if i d directly say that udp is faster comparatively than tcp that it is used for such applications\n", "udp is actually expected to work better than tcp in lossy networks or congested networks\n", "udp is also more work than tcp if you need reliability which is built in to tcp\n", "also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n", "keep in mind that implementing udp traversal is easier than tcp\n", "udp is quicker than tcp but if you re using quickfix you ll be using tcp\n", "actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n", "udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n", "udp has less overhead than tcp and is therefore faster\n", "udp communication requires much less overhead than tcp due to the number of messages exchanged\n", "you ve struck lucky with the requirements - because you re going from udp - tcp it s actually a lot simpler than doing udp - udp\n", "instead you can use udp and implement your own scheme for verification of data that is less stringent than tcp\n", "scenario where udp is better than tcp\n", "with tcp its slightly slower than udp and has more features\n", "this is the reason why udp is much faster than tcp\n", "in some applications tcp is faster better throughput than udp\n", "the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n", "as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency\n", "tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n", "udp is more popular in nat punching because provides much better results than tcp\n", "udp communication is connection less as compared to tcp which need a connection\n", "also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n", "tcp is a slower more reliable protocol than udp is\n", "in some applications tcp is faster better throughput than udp\n", "tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n", "udp is faster and requires less bandwidth than tcp\n", "the downsides are that it is unreliable messages can be dropped or corrupted therefore you may want to add some safety and that some isp may restrict udp more than tcp test yourself to be sure but usually there is no problems\n", "and there are no handshakings required udp are pretty much faster but less reliable than tcp\n", "udp is much faster then tcp but tcp has flow control and guaranteed delivery\n", "it was introduced since the nat traversal for tcp is much more complicated than udp\n", "getting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcp\n", "tcp mounts are more reliable and you know you have a network problem much faster than with udp\n", "a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n", "i am confused why tcp throughput is bigger than udp\n", "the fact that udp s header size is less than tcp s is because is a simpler protocol that needs less header space that s all there is to it\n", "this is the reason why udp is much faster than tcp\n", "a udp stack is considerably simpler than a tcp stack\n", "udp port scanning is possible but it is harder than tcp scanning\n", "normally a server wouldn t need to know the client s address beforehand but udp s knottier than tcp the more usual stream-oriented approach to socket communication in many ways\n", "tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n", "tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n", "a udp stack is considerably simpler than a tcp stack\n", "moreover tcp has more processing overhead than udp\n", "for some requirements tcp is better for some udp\n", "in some applications tcp is faster better throughput than udp\n", "i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n", "-- does udp always perform better than tcp\n", "udp is more popular in nat punching because provides much better results than tcp\n", "i though that udp was faster than tcp but do you think that tcp will be faster due to the congestion\n", "in some applications tcp is faster better throughput than udp\n", "in a native application i would use udp for the most data player position ... because it s way faster than tcp and it s uncritical when it is lost\n", "tcp is way better then udp for that\n", "one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n", "udp just has a smaller overhead than tcp but that comes at the cost of reliability\n", "please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n", "i know that in practice this would only happen with a great amount of connection given that processing time of an udp connection is faster than tcp but it could potentially happen\n", "we propose to use udp over tcp since udp is faster than tcp\n", "a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n", "udp gives smaller latency with many many issues to discuss here of course tcp gives bigger latency\n", "that among other things is why tcp is considered more reliable but slower than udp\n", "in some applications tcp is faster better throughput than udp\n", "moreover tcp has more processing overhead than udp\n", "this was surprising for me as it is well known fact that udp performs better than tcp\n", "btw i concur that udp is far more appropriate than tcp in this case\n", "apart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worse\n", "like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n", "if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n", "tcp as you know udp is faster than tcp even if udp may miss some\n", "the problem with using tcp is obviously that it is a lot slower than udp\n", "you could get them to do a udp multicast within a lan environment to identify the programs using protocol messages then have a stored cache of each other s identity and then use tcp to connect and do main exchanging of messages which is more reliable than udp\n", "i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do\n", "i am confused why tcp throughput is bigger than udp\n", "in some applications tcp is faster better throughput than udp\n", "only when packets can be discarded unordered can udp be faster than tcp\n", "as such traversing a nat through udp is much easier than tcp\n", "in some applications tcp is faster better throughput than udp\n", "we know tcp is better suited for this but the hardware development decided it s got to be udp\n", "like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n", "tcp is a slower more reliable protocol than udp is\n", "i think udp will perform better than tcp gcdasyncsocket in your case video transfer\n", "since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n", "instead of implementing all these over udp it is much better just to switch to tcp\n", "why the header size of udp is less than tcp\n", "tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n", "the reason udp is faster than tcp is because there is no form of flow control or error correction\n", "if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n", "i suppose this is one of the reasons for the misconception that udp is slower than tcp\n", "because there is no confirmation on udp packets it s slightly faster than tcp\n", "hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n", "in gaming especially fpss udp tends to be the chosen protocol because it s much less chatty than tcp\n", "that among other things is why tcp is considered more reliable but slower than udp\n", "also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n", "udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n", "certainly tcp has more overhead than udp\n", "as a general rule udp is faster than tcp due to less protocol overhead\n", "udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient\n", "in some applications tcp is faster better throughput than udp\n", "udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n", "tcp sockets- guaranteed delivery bigger payload than udp cumbersome to setup for web based solutions\n", "i am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packets\n", "udp is significantly easier do you really need tcp btw\n", "if your client connections are more or less permanent and not too many clients are connected at the same time tcp is only slightly worse than udp\n", "i don t think you should make the assumption that udp is faster than tcp\n", "it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n", "as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency\n", "scenario where udp is better than tcp\n", "i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp\n", "one often finds the argument that udp is faster then tcp\n", "also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n", "udp just has a smaller overhead than tcp but that comes at the cost of reliability\n", "tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n", "if you re more interested in latency and small amounts of data then something udp based could be better than tcp but you d need to build extra logic for ordering the messages and retrying the lost ones\n", "yes udp is much much lighter than tcp\n", "btw i concur that udp is far more appropriate than tcp in this case\n", "also see this other so answer about the misconception that udp is always faster than tcp\n", "i was expecting that udp would be faster but tcp is on average two times faster than udp\n", "so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n", "2 tcp needs more processing at network interface level where as in udp it\u00e2 s not\n", "tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp\n", "it is worth nothing that in a link where udp and tcp are sharing the bandwidth tcp is better behaved than udp in that it will try to limit itself to avoid congestion\n", "+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n", "udp is also more work than tcp if you need reliability which is built in to tcp\n", "it seems like udp will more efficient than tcp\n", "what is that key feature in tcp that makes it have much much higher throughput than udp\n", "tcp - more reliable than udp but this comes with some overhead there is a distinct connection a better match for games which require less frequent data transmission such as turn based games as is your game\n", "udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n", "for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api\n", "udp protocol is unreliable but much much faster than tcp which is most commonly used for communication\n", "in my experience udp based code is generally less complex than tcp based code\n", "tcp is slower than udp and you ll have to mitigate that in realtime multiplayer\n", "tcp socket is even more likely than udp socket but both work\n", "tcp is reliable but slower than udp while udp is not safe and i have to implement my own fault-handling codes\n", "hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n", "udp communication requires much less overhead than tcp due to the number of messages exchanged\n", "i know tcp is better to send file but i have a homework about sending file via udp protocol\n", "for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum\n", "udp is way lighter and faster but somewhat less reliable than tcp\n", "since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n", "first of udp s datagram is simpler than tcp s one\n", "short answer if you can tolerance with any packet loss udp is better otherwise tcp\n", "in a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion control\n", "-- in which scenario configuration would i get udp to perform better than tcp\n", "udp has a much lower overhead than tcp\n", "instead of implementing all these over udp it is much better just to switch to tcp\n", "if the data is critical you should go for tcp which is slower as compared to udp which in fact doesn t guarantee the packets will arrive in order or even if they d arrive or not\n", "generally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this context\n", "most importantly you can easily supplement udp with some reliable delivery hand-shaking that s less overhead than tcp\n", "tcp is much better than udp in terms of reliability\n", "udp is faster than tcp because packets are sent without guarantee of delivery nor order\n", "udp just has a smaller overhead than tcp but that comes at the cost of reliability\n", "does udp always perform better than tcp\n", "at my company we have found memory mapped files to be much faster than loopback tcp ip for communication on the same box so i m assuming it would be faster than udp too\n", "in that sense reliable udp cannot be faster than tcp\n", "udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n", "you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n", "it was introduced since the nat traversal for tcp is much more complicated than udp\n", "if i d directly say that udp is faster comparatively than tcp that it is used for such applications\n", "tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp\n", "i was going through internet and so and understood that web sockets are encapsulations to tcp which by itself is slower than udp ofcourse at the cost of reliability but i couldnt find much info if websockets or udp would be ideal to implement such a server\n", "i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n", "udp is connection less but at the same level as tcp\n", "actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n", "i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 better\n", "note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered\n", "udp communication requires much less overhead than tcp due to the number of messages exchanged\n", "one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n", "because of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streaming\n", "certainly tcp has more overhead than udp\n", "i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n", "if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n", "try to increase timeout value tcp is slower than udp\n", "it was introduced since the nat traversal for tcp is much more complicated than udp\n", "please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n", "or is there any specific scenario where udp is better than tcp\n", "tcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receive\n", "for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n", "for this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udp\n", "udp is extremely faster than tcp which is suitable to stream a user s voice input\n", "in some applications tcp is faster better throughput than udp\n", "tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n", "tcp is much better than udp in terms of reliability\n", "the key question was related to what kind of situations would udp be the better choice over tcp\n", "btw i concur that udp is far more appropriate than tcp in this case\n", "the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n", "it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n", "so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n", "only when packets can be discarded unordered can udp be faster than tcp\n", "tcp mounts are more reliable and you know you have a network problem much faster than with udp\n", "udp is much faster then tcp but tcp has flow control and guaranteed delivery\n", "alternatively it can be used over udp which is less hungry than tcp\n", "udp should be much faster than tcp because there are no acknowledge and congestion detection\n", "udp is more of a fire and forget whereas tcp maintains a connection state\n", "in some applications tcp is faster better throughput than udp\n", "the reason i asking this is because i read tcp is slower than udp because tcp ensures order of packets\n", "+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n", "but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data\n", "i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp\n", "what i have thought of so far is that tcp is going to be more reliable than udp and in rmi corba we want network reliability\n", "as such traversing a nat through udp is much easier than tcp\n", "udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n", "tcp socket is even more likely than udp socket but both work\n", "the decision on yours the tcp protocol used for connection oriented network that is more secure than udp\n", "i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do\n", "tcp is a bit slower than udp but more failsafe\n", "tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n", "while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.\n", "udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n", "but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n", "tcp is far better at transferring large quantities of data but when the network fails it s more likely that udp will get through\n", "short answer if you can tolerance with any packet loss udp is better otherwise tcp\n", "tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n", "generally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this context\n", "tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations\n", "udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n", "theoretically udp should be be 30-50 faster than tcp because it s missing the extra trip for the ack and has a smaller header overhead however in reality there are many cases where tcp would outperform udp just because of congestion control\n", "if you care a lot about efficiency or really need tens of thousands of connections then implementing your specific protocol in udp will always be better than tcp\n", "in general the tcp protocol manages the available network bandwidth better than the udp protocol\n", "note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least\n", "there is a perception that udp is faster than tcp but i think it depends on the situation - take a look at this discussion for some further discussion on speed reliability etc between udp and tcp go down through all the high scored answers\n", "don t think of it as udp is faster and tcp is slower because that s just wrong\n", "udp will almost always provide better performance than tcp at the cost of reliability\n", "udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n", "i read in a case where a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n", "but with the udp protocol in particular this is easier than for tcp\n", "udp lends itself to real-time less latency than tcp\n", "like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n", "or is there any specific scenario where udp is better than tcp\n", "you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n", "does udp always perform better than tcp\n", "udp is extremely faster than tcp which is suitable to stream a user s voice input\n", "from experience i can tell you udp is about 10-15 faster than tcp on dedicated and udp-tuned networks\n", "what s currently baffling me is in my results tcp finishes almost 2x faster than udp\n", "in doing so the tradefoff is that tcp becomes slower compared to udp\n", "udp is way lighter and faster but somewhat less reliable than tcp\n", "tcp streaming for audio can be less helpful than udp rtp as you d have to turn off nagling\n", "tcp is way better then udp for that\n", "udp gives smaller latency with many many issues to discuss here of course tcp gives bigger latency\n", "http is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcp\n", "keep in mind that implementing udp traversal is easier than tcp\n", "maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n", "udp is not always faster than tcp\n", "if you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the box\n", "in some applications tcp is faster better throughput than udp\n", "but there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheads\n", "one often finds the argument that udp is faster then tcp\n", "udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n", "does udp always perform better than tcp\n", "this was surprising for me as i expected udp to perform better than tcp\n", "tcp is slower assures data arrival udp is faster data corruption may be possible\n", "you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n", "c++ is not my first language and this is small part of code i can t figure out i ve chosen udp because it is always much simpler than tcp\n", "for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum\n", "that among other things is why tcp is considered more reliable but slower than udp\n", "i m trying to avoid tcpclient because udp is faster but would this work in tcp since it s streamed\n", "if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n", "while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.\n", "note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered\n", "also note that it is easy to implement your own stack on top of udp that performs worse than tcp\n", "is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp\n", "udp scales better than tcp because of reduced states that need to be maintained in the operating system\n", "alternatively it can be used over udp which is less hungry than tcp\n", "you can use udp as well but if you are dealing with firewalls it is probably going to be simpler with tcp\n", "in practice this means that tcp is better suited for continuous transmission of data whereas the more lightweight udp can be used when reliability isn t important\n", "2 tcp needs more processing at network interface level where as in udp it\u00e2 s not\n", "a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n", "4 tcp is a slower than udp\n", "the package is bigger than udp s package but smaller than tcp s package\n", "udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt\n", "use socket for tcp and datagram for udp its a lot faster than tcp but less connection oriented\n", "but there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheads\n", "if you can do everything with udp it is lighter than tcp\n", "in some applications tcp is faster better throughput than udp\n", "for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n", "also remember that dns requests can use tcp if the request or response would need more than 1 udp packet\n", "i did some research and found that udp may be more suitable in this case because udp hole punching works much better than tcp hole punching\n", "if you were attempting to beat the performance of tcp by shifting to udp keep in mind that part of the reason you get lower performance with tcp is because tcp tracks and redelivers the lost packets for you\n", "maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n", "+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n", "tcp socket is even more likely than udp socket but both work\n", "as an additional note my suspicion is that you d need to indulge yourself in some pretty sophisticated benchmarks before you could conclude that udp is actually going to have higher performance than tcp for web services\n", "udp is more popular in nat punching because provides much better results than tcp\n", "udp has less overhead than tcp and is therefore faster\n", "when writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and accept\n", "tcp mounts are more reliable and you know you have a network problem much faster than with udp\n", "i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n", "i know udp is faster than tcp for various reason\n", "udp should be much faster than tcp because there are no acknowledge and congestion detection\n", "some protocols are more complex because what s needed are some but not all of the features of tcp but more than what udp provides\n", "tcp ip is supposed to be more reliable than udp ip see this comparison\n", "udp packets are easier structured than tcp packets but sacrifice security for their size\n", "also see this other so answer about the misconception that udp is always faster than tcp\n", "note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least\n", "tcp is a slower more reliable protocol than udp is\n", "but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n", "if i d directly say that udp is faster comparatively than tcp that it is used for such applications\n", "udp is actually expected to work better than tcp in lossy networks or congested networks\n", "udp is also more work than tcp if you need reliability which is built in to tcp\n", "also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n", "keep in mind that implementing udp traversal is easier than tcp\n", "udp is quicker than tcp but if you re using quickfix you ll be using tcp\n", "actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n", "udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n", "udp has less overhead than tcp and is therefore faster\n", "udp communication requires much less overhead than tcp due to the number of messages exchanged\n", "you ve struck lucky with the requirements - because you re going from udp - tcp it s actually a lot simpler than doing udp - udp\n", "instead you can use udp and implement your own scheme for verification of data that is less stringent than tcp\n", "scenario where udp is better than tcp\n", "with tcp its slightly slower than udp and has more features\n", "this is the reason why udp is much faster than tcp\n", "in some applications tcp is faster better throughput than udp\n", "the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n", "as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency\n", "tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n", "udp is more popular in nat punching because provides much better results than tcp\n", "udp communication is connection less as compared to tcp which need a connection\n", "also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n", "tcp is a slower more reliable protocol than udp is\n", "in some applications tcp is faster better throughput than udp\n", "tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n", "udp is faster and requires less bandwidth than tcp\n", "the downsides are that it is unreliable messages can be dropped or corrupted therefore you may want to add some safety and that some isp may restrict udp more than tcp test yourself to be sure but usually there is no problems\n", "and there are no handshakings required udp are pretty much faster but less reliable than tcp\n", "udp is much faster then tcp but tcp has flow control and guaranteed delivery\n", "it was introduced since the nat traversal for tcp is much more complicated than udp\n", "getting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcp\n", "tcp mounts are more reliable and you know you have a network problem much faster than with udp\n", "a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n", "i am confused why tcp throughput is bigger than udp\n", "the fact that udp s header size is less than tcp s is because is a simpler protocol that needs less header space that s all there is to it\n", "this is the reason why udp is much faster than tcp\n", "a udp stack is considerably simpler than a tcp stack\n", "udp port scanning is possible but it is harder than tcp scanning\n", "normally a server wouldn t need to know the client s address beforehand but udp s knottier than tcp the more usual stream-oriented approach to socket communication in many ways\n", "tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n", "tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n", "a udp stack is considerably simpler than a tcp stack\n", "moreover tcp has more processing overhead than udp\n", "for some requirements tcp is better for some udp\n", "in some applications tcp is faster better throughput than udp\n", "i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n", "-- does udp always perform better than tcp\n", "udp is more popular in nat punching because provides much better results than tcp\n", "i though that udp was faster than tcp but do you think that tcp will be faster due to the congestion\n", "in some applications tcp is faster better throughput than udp\n", "in a native application i would use udp for the most data player position ... because it s way faster than tcp and it s uncritical when it is lost\n", "tcp is way better then udp for that\n", "one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n", "udp just has a smaller overhead than tcp but that comes at the cost of reliability\n", "please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n", "i know that in practice this would only happen with a great amount of connection given that processing time of an udp connection is faster than tcp but it could potentially happen\n", "we propose to use udp over tcp since udp is faster than tcp\n", "a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n", "udp gives smaller latency with many many issues to discuss here of course tcp gives bigger latency\n", "that among other things is why tcp is considered more reliable but slower than udp\n", "in some applications tcp is faster better throughput than udp\n", "moreover tcp has more processing overhead than udp\n", "this was surprising for me as it is well known fact that udp performs better than tcp\n", "btw i concur that udp is far more appropriate than tcp in this case\n", "apart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worse\n", "like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n", "if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n", "tcp as you know udp is faster than tcp even if udp may miss some\n", "the problem with using tcp is obviously that it is a lot slower than udp\n", "you could get them to do a udp multicast within a lan environment to identify the programs using protocol messages then have a stored cache of each other s identity and then use tcp to connect and do main exchanging of messages which is more reliable than udp\n", "i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do\n", "i am confused why tcp throughput is bigger than udp\n", "in some applications tcp is faster better throughput than udp\n", "only when packets can be discarded unordered can udp be faster than tcp\n", "as such traversing a nat through udp is much easier than tcp\n", "in some applications tcp is faster better throughput than udp\n", "we know tcp is better suited for this but the hardware development decided it s got to be udp\n", "like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n", "tcp is a slower more reliable protocol than udp is\n", "i think udp will perform better than tcp gcdasyncsocket in your case video transfer\n", "since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n", "instead of implementing all these over udp it is much better just to switch to tcp\n", "why the header size of udp is less than tcp\n", "tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n", "the reason udp is faster than tcp is because there is no form of flow control or error correction\n", "if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n", "i suppose this is one of the reasons for the misconception that udp is slower than tcp\n", "because there is no confirmation on udp packets it s slightly faster than tcp\n", "hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n", "in gaming especially fpss udp tends to be the chosen protocol because it s much less chatty than tcp\n", "that among other things is why tcp is considered more reliable but slower than udp\n", "also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n", "udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n", "certainly tcp has more overhead than udp\n", "as a general rule udp is faster than tcp due to less protocol overhead\n", "udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient\n", "in some applications tcp is faster better throughput than udp\n", "udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n", "tcp sockets- guaranteed delivery bigger payload than udp cumbersome to setup for web based solutions\n", "i am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packets\n", "udp is significantly easier do you really need tcp btw\n", "if your client connections are more or less permanent and not too many clients are connected at the same time tcp is only slightly worse than udp\n", "i don t think you should make the assumption that udp is faster than tcp\n", "it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n", "as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency\n", "scenario where udp is better than tcp\n", "i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp\n", "one often finds the argument that udp is faster then tcp\n", "also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n", "udp just has a smaller overhead than tcp but that comes at the cost of reliability\n", "tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n", "if you re more interested in latency and small amounts of data then something udp based could be better than tcp but you d need to build extra logic for ordering the messages and retrying the lost ones\n", "yes udp is much much lighter than tcp\n", "btw i concur that udp is far more appropriate than tcp in this case\n", "also see this other so answer about the misconception that udp is always faster than tcp\n", "i was expecting that udp would be faster but tcp is on average two times faster than udp\n", "so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n", "2 tcp needs more processing at network interface level where as in udp it\u00e2 s not\n", "tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp\n", "it is worth nothing that in a link where udp and tcp are sharing the bandwidth tcp is better behaved than udp in that it will try to limit itself to avoid congestion\n", "+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n", "udp is also more work than tcp if you need reliability which is built in to tcp\n", "it seems like udp will more efficient than tcp\n", "what is that key feature in tcp that makes it have much much higher throughput than udp\n", "tcp - more reliable than udp but this comes with some overhead there is a distinct connection a better match for games which require less frequent data transmission such as turn based games as is your game\n", "udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n", "for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api\n", "the strange thing is that when streaming is done via rtsp unicast rtcp generates both sender reports and receiver reports but when streaming is done via rtp multicast only sender reports are generated\n", "the strange thing is that when streaming is done via rtsp unicast rtcp generates both sender reports and receiver reports but when streaming is done via rtp multicast only sender reports are generated\n", "ftp protocol is more complex than http or telnet form example\n", "telnet is more general than ftp and is generally used for command and control\n", "ftp protocol is more complex than http or telnet form example\n", "telnet is more general than ftp and is generally used for command and control\n", "it is optimized for downloading larger files where the setup overhead is amortized over the size and number of downloads http is very light-weight you can communicate to an http server using telnet much easier than ftp especially before passive ftp and is designed around html -- the concept that in the course of your navigation you will be visiting many different servers and grabbing only a couple of files at a time from each\n", "yes i know ftp is better than telnet but right now i m stuck with telnet\n", "ftp protocol is more complex than http or telnet form example\n", "telnet is more general than ftp and is generally used for command and control\n", "ftp protocol is more complex than http or telnet form example\n", "telnet is more general than ftp and is generally used for command and control\n", "it is optimized for downloading larger files where the setup overhead is amortized over the size and number of downloads http is very light-weight you can communicate to an http server using telnet much easier than ftp especially before passive ftp and is designed around html -- the concept that in the course of your navigation you will be visiting many different servers and grabbing only a couple of files at a time from each\n", "yes i know ftp is better than telnet but right now i m stuck with telnet\n", "note that udp packets bigger than the mtu s at every hope between your hosts will be split by ip\n", "to send large blocks of data via udp you need to chop them up into pieces smaller than the mtu for the network segment across which you re transmitting them\n", "ever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allows\n", "what would happen if my udp package is larger than mtu\n", "ever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allows\n", "if udp payload size is bigger than mtu size udp will silently segment the packet\n", "in real life udp packets size usually is equal or less than mtu size\n", "udp packets greater than the mtu size of the network that carries them will be automatically split up into multiple packets and then reassembled by the recipient\n", "my lwip can send udp packets to pc but my pc would fail to reassemble when the udp packets are larger than mtu\n", "if there is network congestion rate limiting or traffic profiling or if the udp message size is larger than the mtu\n", "when send a udp datagram larger than the mtu size only the last fragment of the udp datagram is putted out to the destination\n", "basically while sending udp packets larger than mtu ip fragmentation can occur if it s supported on your platform but not all platforms support it\n", "udp uses datagrams chunks of data which are received whole on the other side unless the size is bigger than the mtu but that s a different story\n", "what would happen if my udp package is larger than mtu\n", "ideally your udp frames are smaller than the mtu for your architecture say 1500 bytes so the messages won t get chopped up in transit\n", "they are easily generated for udp simply by making the datagram bigger than the mtu\n", "if you send a udp datagram larger than the mtu it will be fragmented\n", "i am working on udp socket programming and i have to stop the transmission in application if requested data is more than mtu value\n", "now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba\n", "now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba\n", "now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba\n", "now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba\n", "in fact icmp especially the ttl excceeding message has even less limitations than udp on nats for the error message can be sent from every corner of the internet and routers with nat cannot be aware that these messages are not the true ones\n", "an icmp packet has a header that is 20 bytes and is probably going to be slightly slower than udp\n", "in fact icmp especially the ttl excceeding message has even less limitations than udp on nats for the error message can be sent from every corner of the internet and routers with nat cannot be aware that these messages are not the true ones\n", "an icmp packet has a header that is 20 bytes and is probably going to be slightly slower than udp\n", "in addition seeing arp being slower than icmp doesn t necessarily mean icmp isn t deprioritized---it might mean bandwidth is insufficient to hit the limiting threshold\n", "in addition seeing arp being slower than icmp doesn t necessarily mean icmp isn t deprioritized---it might mean bandwidth is insufficient to hit the limiting threshold\n", "regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n", "regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n", "regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n", "regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n", "and also don t forget - http.sys much more customizable than httplistener\n", "you are right that using tcp is probably better to use for something like this or even an existing protocol like tftp\n", "if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above\n", "it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n", "if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above\n", "it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n", "if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above\n", "it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n", "if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above\n", "it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n", "almost all sip voip providers allow you to forward calls from an attached did telephone number to more than one sip device so your request could be satisfied by a basic account on your friendly neighbourhood voip provider\n", "almost all sip voip providers allow you to forward calls from an attached did telephone number to more than one sip device so your request could be satisfied by a basic account on your friendly neighbourhood voip provider\n", "it could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ip\n", "as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n", "you could always use https that will work both on http and https websites but loading a https resource is slower than loading a http resource because of the encryption and ssl handshakes\n", "https is more flexible than ssl an application can configure the level of security it needs\n", "https is more flexible than ssl an application can configure the level of security it needs\n", "there is a limitation on creating virtual hosts for name based virtual host while using ssl 443 port so if you want to have more than one https port enabled you will need ip based virtual hosting\n", "as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n", "it could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ip\n", "as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n", "you could always use https that will work both on http and https websites but loading a https resource is slower than loading a http resource because of the encryption and ssl handshakes\n", "https is more flexible than ssl an application can configure the level of security it needs\n", "https is more flexible than ssl an application can configure the level of security it needs\n", "there is a limitation on creating virtual hosts for name based virtual host while using ssl 443 port so if you want to have more than one https port enabled you will need ip based virtual hosting\n", "as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n", "since socks proxy is in theory nothing more than a ssl tunnel i thought i could give that property another try\n", "since socks proxy is in theory nothing more than a ssl tunnel i thought i could give that property another try\n", "in operation nfs nis is much simpler to implement and maintain than ad cifs\n", "samba is an implementation of smb server message block which if wikipedia is to be trusted got its name changed to cifs common internet file system back in 1996 so directly answering your question samba is an implementation cifs is a protocol but i guess you were asking about smb and cifs which seem to be the same protocol although i guess you can say cifs is a newer version of smb\n", "samba is an implementation of smb server message block which if wikipedia is to be trusted got its name changed to cifs common internet file system back in 1996 so directly answering your question samba is an implementation cifs is a protocol but i guess you were asking about smb and cifs which seem to be the same protocol although i guess you can say cifs is a newer version of smb\n", "samba is an implementation of smb server message block which if wikipedia is to be trusted got its name changed to cifs common internet file system back in 1996 so directly answering your question samba is an implementation cifs is a protocol but i guess you were asking about smb and cifs which seem to be the same protocol although i guess you can say cifs is a newer version of smb\n", "samba is an implementation of smb server message block which if wikipedia is to be trusted got its name changed to cifs common internet file system back in 1996 so directly answering your question samba is an implementation cifs is a protocol but i guess you were asking about smb and cifs which seem to be the same protocol although i guess you can say cifs is a newer version of smb\n", "to my experience iscsi is more efficient than nfs and much more than smb cifs the main issue is not how to share storage capacity but how to manage hardware failure computer reboot hard-disk failure network failure\n", "to my experience iscsi is more efficient than nfs and much more than smb cifs the main issue is not how to share storage capacity but how to manage hardware failure computer reboot hard-disk failure network failure\n", "second when i port scan with nmap the udp scan takes much longer then the tcp scan\n", "i am getting very different bandwidth reading for tcp and udp where the udp bandwidth is terribly lower than tcp\n", "second when i port scan with nmap the udp scan takes much longer then the tcp scan\n", "a dns server can and does listen to both udp 53 and tcp 53 at the same time as udp is faster and has less overhead for everyday requests while tcp may be necessary for especially large dns requests on account of udp packet size limits from way back when\n", "i am getting very different bandwidth reading for tcp and udp where the udp bandwidth is terribly lower than tcp\n", "second when i port scan with nmap the udp scan takes much longer then the tcp scan\n", "i am getting very different bandwidth reading for tcp and udp where the udp bandwidth is terribly lower than tcp\n", "second when i port scan with nmap the udp scan takes much longer then the tcp scan\n", "a dns server can and does listen to both udp 53 and tcp 53 at the same time as udp is faster and has less overhead for everyday requests while tcp may be necessary for especially large dns requests on account of udp packet size limits from way back when\n", "i am getting very different bandwidth reading for tcp and udp where the udp bandwidth is terribly lower than tcp\n", "in this case protocols like tcp behave better than icmp or udp because they re-transmit packets which have not been received by the target giving you the wrong impression of a properly working connection\n", "icmp packets such as ping s echo request and echo reply have a lower priority than tcp and udp\n", "in this case protocols like tcp behave better than icmp or udp because they re-transmit packets which have not been received by the target giving you the wrong impression of a properly working connection\n", "icmp packets such as ping s echo request and echo reply have a lower priority than tcp and udp\n", "it seems ftp has less windows explorer integration features e.f edit open with etc compared to smb\n", "smb windows file sharing is much slower than ftp for example\n", "it seems ftp has less windows explorer integration features e.f edit open with etc compared to smb\n", "it seems ftp has less windows explorer integration features e.f edit open with etc compared to smb\n", "smb windows file sharing is much slower than ftp for example\n", "it seems ftp has less windows explorer integration features e.f edit open with etc compared to smb\n", "my experience highly subjective is that afp seems faster than smb especially since mountain lion mavericks\n", "udp is faster it wraps tcp in udp tcp is more compatible but more overhead\n", "edit as an interesting addendum i found recently that the tcp stack has more strict requirements than udp or datagrams\n", "i do know that in general udp port scans take longer than tcp because it s connectionless and there are much more resources used\n", "it seems that rtsp is a stateful protocol and it uses udp more than tcp when streaming and it s used more as a server device like an ip camera that is connected to a tcp ip network and feeds out streams via udp etc\n", "qos in particular is not about destination but about traffic type and susceptibility to latency so tcp http traffic may be given a lower priority than udp video streaming\n", "in all cases udp unicasts can get a few percent higher efficiency than tcp because whereas tcp is designed to go as fast as possible without compounding congestion udp-based protocols can try to go as fast as possible even if they make congestion worse\n", "therefore the timeout for udp connections is much shorter than that for tcp connections\n", "for lowest latency but less error correction udp is a better option than tcp for example with linux the jackd sound server has a backend that can stream audio over udp for this very reason - jackd is more oriented to perfect sound quality pro audio production though\n", "in the end what i understood is that udp is faster than tcp but it is unreliable\n", "for lowest latency but less error correction udp is a better option than tcp for example with linux the jackd sound server has a backend that can stream audio over udp for this very reason - jackd is more oriented to perfect sound quality pro audio production though\n", "edit as an interesting addendum i found recently that the tcp stack has more strict requirements than udp or datagrams\n", "also depending on how serious you want to get you could try to force a udp stream for the copying which has less overhead than tcp\n", "udp has a much lower overhead than tcp\n", "because nat traversal for tcp is more complicated than for udp\n", "because nat traversal for tcp is more complicated than for udp\n", "udp is faster it wraps tcp in udp tcp is more compatible but more overhead\n", "edit as an interesting addendum i found recently that the tcp stack has more strict requirements than udp or datagrams\n", "i do know that in general udp port scans take longer than tcp because it s connectionless and there are much more resources used\n", "it seems that rtsp is a stateful protocol and it uses udp more than tcp when streaming and it s used more as a server device like an ip camera that is connected to a tcp ip network and feeds out streams via udp etc\n", "qos in particular is not about destination but about traffic type and susceptibility to latency so tcp http traffic may be given a lower priority than udp video streaming\n", "in all cases udp unicasts can get a few percent higher efficiency than tcp because whereas tcp is designed to go as fast as possible without compounding congestion udp-based protocols can try to go as fast as possible even if they make congestion worse\n", "therefore the timeout for udp connections is much shorter than that for tcp connections\n", "for lowest latency but less error correction udp is a better option than tcp for example with linux the jackd sound server has a backend that can stream audio over udp for this very reason - jackd is more oriented to perfect sound quality pro audio production though\n", "in the end what i understood is that udp is faster than tcp but it is unreliable\n", "for lowest latency but less error correction udp is a better option than tcp for example with linux the jackd sound server has a backend that can stream audio over udp for this very reason - jackd is more oriented to perfect sound quality pro audio production though\n", "edit as an interesting addendum i found recently that the tcp stack has more strict requirements than udp or datagrams\n", "also depending on how serious you want to get you could try to force a udp stream for the copying which has less overhead than tcp\n", "udp has a much lower overhead than tcp\n", "because nat traversal for tcp is more complicated than for udp\n", "because nat traversal for tcp is more complicated than for udp\n"], "os": ["centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n", "is there anything obvious in ubuntu that would otherwise be making sfphpview- render run slower than centos\n", "this is because your ubuntu system has newer system libraries than your centos one\n", "in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n", "i believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supported\n", "in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n", "centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n", "this is because your ubuntu system has newer system libraries than your centos one\n", "centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n", "is there anything obvious in ubuntu that would otherwise be making sfphpview- render run slower than centos\n", "this is because your ubuntu system has newer system libraries than your centos one\n", "in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n", "i believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supported\n", "in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n", "centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n", "this is because your ubuntu system has newer system libraries than your centos one\n", "personally i develop on the windows but deploy on debian where couldn t find the scrapyd package at all at the time i was working on it and noticed that performance of scrapy is considerably worse than on linux box so you might reconsider your target\n", "it is widely used to have a separated tag with the postfix -alpine in it to indicate that alpine linux is used which is a much smaller base-image than the debian image\n", "if your system linux is older like debian wheezy for example your glibc version will be older than the required one\n", "personally i develop on the windows but deploy on debian where couldn t find the scrapyd package at all at the time i was working on it and noticed that performance of scrapy is considerably worse than on linux box so you might reconsider your target\n", "it is widely used to have a separated tag with the postfix -alpine in it to indicate that alpine linux is used which is a much smaller base-image than the debian image\n", "if your system linux is older like debian wheezy for example your glibc version will be older than the required one\n", "it s true that the yosemite compatibility exists but i ve found that earlier mac machines does not have the propper hardware and you experience some lacks in memory and graphics when upgrading more than one osx\n", "it s true that the yosemite compatibility exists but i ve found that earlier mac machines does not have the propper hardware and you experience some lacks in memory and graphics when upgrading more than one osx\n", "yum makes it easier to maintain groups of machines without having to manually update each one using rpm\n", "both commands works in the same way only difference is yum list installed output maybe bigger than rpm -qa because yum will show package dependencies also in its output\n", "i strongly suggest either of the first two options over the latter option as the latter option does not always play nicely with the way rpm and yum handle transactions when more than one rpm are involved\n", "note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n", "note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n", "although if you aren t interested in using adobe cs you can use ubuntu distro which is easier than other linux distro and quiet popular so you won t have any problem finding solution\n", "i m testing some simple benchmarking calculations on win7 and linux ubuntu 16 to compare the timings and being wonder win appears to be much faster than linux\n", "one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n", "one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n", "linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux\n", "see but if you are using a linux distro there may be shortcut instructions that make it simpler under ubuntu for example there are shortcuts in\n", "linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux\n", "you can use alpine linux docker image it is very light and is better than both ubuntu and centos image to be used as the docker\n", "i don t know why arch linux is slower than ubuntu on your machine\n", "also i would recommend doing a dual boot to ubuntu it s much easier to work with opencl in a linux cli fashion\n", "even if you re on linux it s much easier to get a precompiled version sudo apt install r-cran-rgl on ubuntu if you have the appropriate cran repositories set up\n", "i am new at a firm and i was given a project that was on amazon linux ami now we need to transfer project on another server and because i am more familiar with ubuntu than with amazon linux ami i was wondering if there much difference and will project work perfectly\n", "sometimes a linux distribution contains far more than an operating system but is informally referred to by a single name such as ubuntu and so the line between what the operating system is the linux kernel and standard libraries perhaps and the applications that merely ship with that operating system the gnome and kde environments on linux is pretty gray\n", "also very particular that this should be done on centos or amazon linux which makes things worse for me as i have been on ubuntu for long\n", "ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it\n", "although if you aren t interested in using adobe cs you can use ubuntu distro which is easier than other linux distro and quiet popular so you won t have any problem finding solution\n", "i m testing some simple benchmarking calculations on win7 and linux ubuntu 16 to compare the timings and being wonder win appears to be much faster than linux\n", "one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n", "one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n", "linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux\n", "see but if you are using a linux distro there may be shortcut instructions that make it simpler under ubuntu for example there are shortcuts in\n", "linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux\n", "you can use alpine linux docker image it is very light and is better than both ubuntu and centos image to be used as the docker\n", "i don t know why arch linux is slower than ubuntu on your machine\n", "also i would recommend doing a dual boot to ubuntu it s much easier to work with opencl in a linux cli fashion\n", "even if you re on linux it s much easier to get a precompiled version sudo apt install r-cran-rgl on ubuntu if you have the appropriate cran repositories set up\n", "i am new at a firm and i was given a project that was on amazon linux ami now we need to transfer project on another server and because i am more familiar with ubuntu than with amazon linux ami i was wondering if there much difference and will project work perfectly\n", "sometimes a linux distribution contains far more than an operating system but is informally referred to by a single name such as ubuntu and so the line between what the operating system is the linux kernel and standard libraries perhaps and the applications that merely ship with that operating system the gnome and kde environments on linux is pretty gray\n", "also very particular that this should be done on centos or amazon linux which makes things worse for me as i have been on ubuntu for long\n", "ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it\n", "i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache\n", "i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache\n", "i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache\n", "i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache\n", "i want test unix-like operating systems on historicial computers like commodore amiga atari st and i386 cpu and run posix compatible apps like pkgsrc x window system and blackbox wm for 40mhz higher versions minix 1.5 is best os for those systems better than netbsd but it is not posix-compatible\n", "tvos is more similar to ios than it is to watchos although they all have some similarities\n", "tvos is more similar to ios than it is to watchos although they all have some similarities\n", "tvos is more similar to ios than it is to watchos although they all have some similarities\n", "tvos is more similar to ios than it is to watchos although they all have some similarities\n", "ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n", "i m in debian wheezy which is much more recent than ubuntu 10.04\n", "this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8\n", "ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n", "ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n", "since ubuntu 10.10 is newer than debian squeeze if you can do it on squeeze you can certainly do it on ubuntu\n", "the main advantage of the debian image is the smaller size \u00e2 it clocks in at around 85.1 mb compared to around 200 mb for ubuntu\n", "ubuntu heavily relies on python scripting and generally consumes more resources than debian\n", "ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n", "ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n", "as for debian being more stable than ubuntu for using as server it can be true in very rare occasions where the package is very obscure\n", "i believe ubuntu is smaller debian wheezy smaller still or even alpine for tiny start point\n", "this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8\n", "the main advantage of the debian image is the smaller size \u00e2 it clocks in at around 85.1 mb compared to around 200 mb for ubuntu\n", "recompiling ubuntu kernels is harder -- it will require working with debian build tools\n", "ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n", "i m in debian wheezy which is much more recent than ubuntu 10.04\n", "this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8\n", "ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n", "ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n", "since ubuntu 10.10 is newer than debian squeeze if you can do it on squeeze you can certainly do it on ubuntu\n", "the main advantage of the debian image is the smaller size \u00e2 it clocks in at around 85.1 mb compared to around 200 mb for ubuntu\n", "ubuntu heavily relies on python scripting and generally consumes more resources than debian\n", "ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n", "ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n", "as for debian being more stable than ubuntu for using as server it can be true in very rare occasions where the package is very obscure\n", "i believe ubuntu is smaller debian wheezy smaller still or even alpine for tiny start point\n", "this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8\n", "the main advantage of the debian image is the smaller size \u00e2 it clocks in at around 85.1 mb compared to around 200 mb for ubuntu\n", "recompiling ubuntu kernels is harder -- it will require working with debian build tools\n", "note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n", "he says he uses debian and is less familiar with centos and so i am posting here\n", "we recently have migrated redmine from a server which was running under centos 5.5 with the same ror environment the same load the performance was a way better than on debian 7\n", "he says he uses debian and is less familiar with centos and so i am posting here\n", "note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n", "he says he uses debian and is less familiar with centos and so i am posting here\n", "we recently have migrated redmine from a server which was running under centos 5.5 with the same ror environment the same load the performance was a way better than on debian 7\n", "he says he uses debian and is less familiar with centos and so i am posting here\n", "be aware that the bourne shell in freebsd is more capable than on linux\n", "just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does\n", "be aware that the bourne shell in freebsd is more capable than on linux\n", "be aware that the bourne shell in freebsd is more capable than on linux\n", "just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does\n", "be aware that the bourne shell in freebsd is more capable than on linux\n", "in general linux mint is friendlier and more appealing to the newcomer but since it is a debian-based distro the underlying system is more or less the same with debian\n", "generally i m a linux noob but i m more familiar with ubuntu and since this server is more for learning ubuntu is basically a variation of debian and debian is now the most popular os for web servers i figured i d use it\n", "since this is more of a question about mozilla firefox i thought unix linux was more suitable than ubuntu mod s feel free to move if necessary\n", "if you feel like comparing with the size of windows keep in mind that a linux distribution contains much more than the equivalent of windows distributions like ubuntu and fedora ship a lot of applications that you would need to install separately on windows\n", "i have done extensive security testing as part of my work as a linux educator and have found puppy to be more secure than ubuntu even in root due to the above service reasons\n", "is there any linux distribution that will give me noticeable superior results in the above categories and be more lightweight than ubuntu\n", "if i can t get this to work with mint linux would this be simpler with ubuntu\n", "puppy linux is lighter weight than ubuntu\n", "puppy linux is lighter weight than ubuntu\n", "generally i m a linux noob but i m more familiar with ubuntu and since this server is more for learning ubuntu is basically a variation of debian and debian is now the most popular os for web servers i figured i d use it\n", "since this is more of a question about mozilla firefox i thought unix linux was more suitable than ubuntu mod s feel free to move if necessary\n", "if you feel like comparing with the size of windows keep in mind that a linux distribution contains much more than the equivalent of windows distributions like ubuntu and fedora ship a lot of applications that you would need to install separately on windows\n", "i have done extensive security testing as part of my work as a linux educator and have found puppy to be more secure than ubuntu even in root due to the above service reasons\n", "is there any linux distribution that will give me noticeable superior results in the above categories and be more lightweight than ubuntu\n", "if i can t get this to work with mint linux would this be simpler with ubuntu\n", "puppy linux is lighter weight than ubuntu\n", "puppy linux is lighter weight than ubuntu\n", "linux has many more drivers than either freebsd or os x yet it s roughly as stable as long as you stay away from the really low-end hardware\n", "showing linux s dev null was much slower than freebsd and solaris the popular unix-like systems back then\n", "in that case freebsd is less likely to change its core infrastructure while in linux there may be required changes to your code workflow updating whatever on occasion\n", "i am wondering whether my personal assumptions that freebsd is indeed more stable and more tightly controlled less chaotic more organized than linux is actually true\n", "from a system administrator s point of view freebsd is closer to a specific linux distribution than to linux in general\n", "overall freebsd is less likely to have things move around on you than linux\n", "linux has many more drivers than either freebsd or os x yet it s roughly as stable as long as you stay away from the really low-end hardware\n", "asynchronous io in freebsd isn t totally better than in linux\n", "overall freebsd is less likely to have things move around on you than linux\n", "linux has many more drivers than either freebsd or os x yet it s roughly as stable as long as you stay away from the really low-end hardware\n", "in that case freebsd is less likely to change its core infrastructure while in linux there may be required changes to your code workflow updating whatever on occasion\n", "i am wondering whether my personal assumptions that freebsd is indeed more stable and more tightly controlled less chaotic more organized than linux is actually true\n", "linux has many more drivers than either freebsd or os x yet it s roughly as stable as long as you stay away from the really low-end hardware\n", "showing linux s dev null was much slower than freebsd and solaris the popular unix-like systems back then\n", "in that case freebsd is less likely to change its core infrastructure while in linux there may be required changes to your code workflow updating whatever on occasion\n", "i am wondering whether my personal assumptions that freebsd is indeed more stable and more tightly controlled less chaotic more organized than linux is actually true\n", "from a system administrator s point of view freebsd is closer to a specific linux distribution than to linux in general\n", "overall freebsd is less likely to have things move around on you than linux\n", "linux has many more drivers than either freebsd or os x yet it s roughly as stable as long as you stay away from the really low-end hardware\n", "asynchronous io in freebsd isn t totally better than in linux\n", "overall freebsd is less likely to have things move around on you than linux\n", "linux has many more drivers than either freebsd or os x yet it s roughly as stable as long as you stay away from the really low-end hardware\n", "in that case freebsd is less likely to change its core infrastructure while in linux there may be required changes to your code workflow updating whatever on occasion\n", "i am wondering whether my personal assumptions that freebsd is indeed more stable and more tightly controlled less chaotic more organized than linux is actually true\n", "the opensuse live cd should have a gui partitioning tool as well but i m not sure i m more familiar with ubuntu\n", "the opensuse live cd should have a gui partitioning tool as well but i m not sure i m more familiar with ubuntu\n", "historically my understanding is that bsd userland descends more directly from v6 and v7 bell labs unix via the 32v port to vax hardware\n", "historically my understanding is that bsd userland descends more directly from v6 and v7 bell labs unix via the 32v port to vax hardware\n", "historically my understanding is that bsd userland descends more directly from v6 and v7 bell labs unix via the 32v port to vax hardware\n", "historically my understanding is that bsd userland descends more directly from v6 and v7 bell labs unix via the 32v port to vax hardware\n", "the arch linux user community less strict than debian based package management\n", "i heard about lvm but can i use it after i installed debian or is it better to copy everything and reinstall my linux\n", "the arch linux user community less strict than debian based package management\n", "i heard about lvm but can i use it after i installed debian or is it better to copy everything and reinstall my linux\n", "centos 7 has even older software than debian stretch especially gcc 4.8 which is too old for our work\n", "centos 7 has even older software than debian stretch especially gcc 4.8 which is too old for our work\n", "also debian is waaaaay more stable than rhel or centos\n", "also debian is waaaaay more stable than rhel or centos\n", "centos 7 has even older software than debian stretch especially gcc 4.8 which is too old for our work\n", "centos 7 has even older software than debian stretch especially gcc 4.8 which is too old for our work\n", "centos 7 has even older software than debian stretch especially gcc 4.8 which is too old for our work\n", "also debian is waaaaay more stable than rhel or centos\n", "also debian is waaaaay more stable than rhel or centos\n", "centos 7 has even older software than debian stretch especially gcc 4.8 which is too old for our work\n", "i just switched my development environment to opensuse so i can get more experience with linux systems\n", "suse linux enterprise server receives much more intense testing than opensuse with the intention that only mature stable versions of the included components will make it through to the released enterprise product\n", "i just switched my development environment to opensuse so i can get more experience with linux systems\n", "suse linux enterprise server receives much more intense testing than opensuse with the intention that only mature stable versions of the included components will make it through to the released enterprise product\n", "openbsd is focused on security and far more conservative than freebsd when it comes to adopting new features\n", "if ubuntu builds on debian then ubuntu will always have older packages than debian right\n", "in my point of view debian testing is even more stable than an biannual ubuntu not lts\n", "whereas debian is more conservative in it s approach than ubuntu hence less frequent updating fedora is more radical than redhat hence more frequent updating\n", "but i accept recommendations and probably if you suggest me to change to ubuntu if it s better than debian for web servers\n", "debian is much older than ubuntu and is hesitant to break things that work particularly when the replacements require user intervention\n", "in the past i have been able to restore iptables fron ubuntu systems onto debian systems but debian is more closely related to ubuntu than is centos\n", "in general while i would say that debian assumes more initiative on the part of the user than ubuntu or linux mint the goal of the debian project is to offer a complete general purpose so unless you explicitly chose a minimal install a default debian installation would include most or all of the tools you d expect\n", "debian is much older than ubuntu and is hesitant to break things that work particularly when the replacements require user intervention\n", "in general while i would say that debian assumes more initiative on the part of the user than ubuntu or linux mint the goal of the debian project is to offer a complete general purpose so unless you explicitly chose a minimal install a default debian installation would include most or all of the tools you d expect\n", "to be more precise under this ubuntu i want to install one application nupic if anyone interested seems that installing this on ubuntu is less painless process than installing it on debian\n", "a friend who unfortunately knows less about linux than me told me of his problem to install even basic packages on another debian distro though this seems odd since i heard that the repository of debian is far more bigger than that from ubuntu\n", "to be more precise under this ubuntu i want to install one application nupic if anyone interested seems that installing this on ubuntu is less painless process than installing it on debian\n", "ubuntu generally stays more or less as up to date as fedora perhaps complicated by its relationship to the more conservative debian\n", "i like the way the ubuntu wiki is laid out and it seems more thought-out than debian s wiki\n", "in the past i have been able to restore iptables fron ubuntu systems onto debian systems but debian is more closely related to ubuntu than is centos\n", "debian is more stable than ubuntu but that doesn t make ubuntu unstable\n", "coming from ubuntu you might want to consider that debian is more similar to ubuntu to be precise ubuntu is built upon debian\n", "whereas debian is more conservative in it s approach than ubuntu hence less frequent updating fedora is more radical than redhat hence more frequent updating\n", "you could start using debian which isn t much more complicated than ubuntu or arch linux which is more difficult but will be a good experience\n", "in my point of view debian testing is even more stable than an biannual ubuntu not lts\n", "debian is more stable than ubuntu but that doesn t make ubuntu unstable\n", "the most visible one to me is that ubuntu treats sudo with greater regard than debian\n", "a friend who unfortunately knows less about linux than me told me of his problem to install even basic packages on another debian distro though this seems odd since i heard that the repository of debian is far more bigger than that from ubuntu\n", "coming from ubuntu you might want to consider that debian is more similar to ubuntu to be precise ubuntu is built upon debian\n", "if ubuntu builds on debian then ubuntu will always have older packages than debian right\n", "in my point of view debian testing is even more stable than an biannual ubuntu not lts\n", "whereas debian is more conservative in it s approach than ubuntu hence less frequent updating fedora is more radical than redhat hence more frequent updating\n", "but i accept recommendations and probably if you suggest me to change to ubuntu if it s better than debian for web servers\n", "debian is much older than ubuntu and is hesitant to break things that work particularly when the replacements require user intervention\n", "in the past i have been able to restore iptables fron ubuntu systems onto debian systems but debian is more closely related to ubuntu than is centos\n", "in general while i would say that debian assumes more initiative on the part of the user than ubuntu or linux mint the goal of the debian project is to offer a complete general purpose so unless you explicitly chose a minimal install a default debian installation would include most or all of the tools you d expect\n", "debian is much older than ubuntu and is hesitant to break things that work particularly when the replacements require user intervention\n", "in general while i would say that debian assumes more initiative on the part of the user than ubuntu or linux mint the goal of the debian project is to offer a complete general purpose so unless you explicitly chose a minimal install a default debian installation would include most or all of the tools you d expect\n", "to be more precise under this ubuntu i want to install one application nupic if anyone interested seems that installing this on ubuntu is less painless process than installing it on debian\n", "a friend who unfortunately knows less about linux than me told me of his problem to install even basic packages on another debian distro though this seems odd since i heard that the repository of debian is far more bigger than that from ubuntu\n", "to be more precise under this ubuntu i want to install one application nupic if anyone interested seems that installing this on ubuntu is less painless process than installing it on debian\n", "ubuntu generally stays more or less as up to date as fedora perhaps complicated by its relationship to the more conservative debian\n", "i like the way the ubuntu wiki is laid out and it seems more thought-out than debian s wiki\n", "in the past i have been able to restore iptables fron ubuntu systems onto debian systems but debian is more closely related to ubuntu than is centos\n", "debian is more stable than ubuntu but that doesn t make ubuntu unstable\n", "coming from ubuntu you might want to consider that debian is more similar to ubuntu to be precise ubuntu is built upon debian\n", "whereas debian is more conservative in it s approach than ubuntu hence less frequent updating fedora is more radical than redhat hence more frequent updating\n", "you could start using debian which isn t much more complicated than ubuntu or arch linux which is more difficult but will be a good experience\n", "in my point of view debian testing is even more stable than an biannual ubuntu not lts\n", "debian is more stable than ubuntu but that doesn t make ubuntu unstable\n", "the most visible one to me is that ubuntu treats sudo with greater regard than debian\n", "a friend who unfortunately knows less about linux than me told me of his problem to install even basic packages on another debian distro though this seems odd since i heard that the repository of debian is far more bigger than that from ubuntu\n", "coming from ubuntu you might want to consider that debian is more similar to ubuntu to be precise ubuntu is built upon debian\n", "is there any particular case when using rpm command would be more appropriate than yum\n", "note so the bottom line is yum is just smarter about package management then rpm\n", "that still doesn t account for the 10x slow-down you mentioned in your answer as a comment in which you mentioned 10x slower for ubuntu 16.04 and 20x slower than centos 7.3 both on a gen2 xeon server and which i guess the moderators have unfortunately removed\n", "that still doesn t account for the 10x slow-down you mentioned in your answer as a comment in which you mentioned 10x slower for ubuntu 16.04 and 20x slower than centos 7.3 both on a gen2 xeon server and which i guess the moderators have unfortunately removed\n", "i ve found that ubuntu has been more friendly over debian the default for various things as well\n", "ubuntu is more bleeding-edge than debian - it was created to be more friendly and useful from a non-technical or non-unix-expert standpoint\n", "in terms of system resources from experience debian is lighter weight than ubuntu but that s subjective and i m sure could be argued against - ambiguous enough\n", "in my experience ubuntu is better than debian at recognizing wireless cards and linux mint is better than ubuntu\n", "ubuntu is more bleeding-edge than debian - it was created to be more friendly and useful from a non-technical or non-unix-expert standpoint\n", "recently i installed debian 8 and program works fine now much more better than on ubuntu however i ve got another problem - my second monitor doesn t work it works sometimes in 5-10 of cases when i turn comp\n", "but it s true that debian is way faster than ubuntu and will be more simple for you .\n", "in terms of system resources from experience debian is lighter weight than ubuntu but that s subjective and i m sure could be argued against - ambiguous enough\n", "i ve found that ubuntu has been more friendly over debian the default for various things as well\n", "but it s true that debian is way faster than ubuntu and will be more simple for you .\n", "i ve found that ubuntu has been more friendly over debian the default for various things as well\n", "ubuntu is more bleeding-edge than debian - it was created to be more friendly and useful from a non-technical or non-unix-expert standpoint\n", "in terms of system resources from experience debian is lighter weight than ubuntu but that s subjective and i m sure could be argued against - ambiguous enough\n", "in my experience ubuntu is better than debian at recognizing wireless cards and linux mint is better than ubuntu\n", "ubuntu is more bleeding-edge than debian - it was created to be more friendly and useful from a non-technical or non-unix-expert standpoint\n", "recently i installed debian 8 and program works fine now much more better than on ubuntu however i ve got another problem - my second monitor doesn t work it works sometimes in 5-10 of cases when i turn comp\n", "but it s true that debian is way faster than ubuntu and will be more simple for you .\n", "in terms of system resources from experience debian is lighter weight than ubuntu but that s subjective and i m sure could be argued against - ambiguous enough\n", "i ve found that ubuntu has been more friendly over debian the default for various things as well\n", "but it s true that debian is way faster than ubuntu and will be more simple for you .\n", "in my experience ubuntu is better than debian at recognizing wireless cards and linux mint is better than ubuntu\n", "in my experience ubuntu is better than debian at recognizing wireless cards and linux mint is better than ubuntu\n", "freebsd probably has better hardware support than solaris as well\n", "freebsd probably has better hardware support than solaris as well\n", "freebsd probably has better hardware support than solaris as well\n", "freebsd probably has better hardware support than solaris as well\n", "while archlinux and gentoo are much easier to begin with and much more practical than linux from scratch you still have to keep in mind that they aren t necessarily intended for people that are new to gnu linux it really helps to have some basic understanding how a gnu linux system works but you ll definitely know more about that once you managed to install one of those distros\n", "while archlinux and gentoo are much easier to begin with and much more practical than linux from scratch you still have to keep in mind that they aren t necessarily intended for people that are new to gnu linux it really helps to have some basic understanding how a gnu linux system works but you ll definitely know more about that once you managed to install one of those distros\n", "ubuntu is more popular among students and ordinary users who use linux as their only os\n", "it is based on ubuntu but comes with more things to make the windows to linux transition easier\n", "basically if you want bleeding-edge linux is a better platform to go for and it s pretty stable as well even ubuntu unity s gotten really nice in 13.04 from the perspective of a guy who uses the unity spin of that distro with his hardware currently and really digs it\n", "ubuntu is more popular among students and ordinary users who use linux as their only os\n", "i was thinking maybe there s a linux distro that s less demanding than ubuntu that i can use or some way to run a decent linux within windows without virtualizing\n", "it is based on ubuntu but comes with more things to make the windows to linux transition easier\n", "basically if you want bleeding-edge linux is a better platform to go for and it s pretty stable as well even ubuntu unity s gotten really nice in 13.04 from the perspective of a guy who uses the unity spin of that distro with his hardware currently and really digs it\n", "well fedora in an old gnu linux distribution with very long tradition and is much older than ubuntu\n", "ubuntu is more popular among students and ordinary users who use linux as their only os\n", "it is based on ubuntu but comes with more things to make the windows to linux transition easier\n", "basically if you want bleeding-edge linux is a better platform to go for and it s pretty stable as well even ubuntu unity s gotten really nice in 13.04 from the perspective of a guy who uses the unity spin of that distro with his hardware currently and really digs it\n", "ubuntu is more popular among students and ordinary users who use linux as their only os\n", "i was thinking maybe there s a linux distro that s less demanding than ubuntu that i can use or some way to run a decent linux within windows without virtualizing\n", "it is based on ubuntu but comes with more things to make the windows to linux transition easier\n", "basically if you want bleeding-edge linux is a better platform to go for and it s pretty stable as well even ubuntu unity s gotten really nice in 13.04 from the perspective of a guy who uses the unity spin of that distro with his hardware currently and really digs it\n", "well fedora in an old gnu linux distribution with very long tradition and is much older than ubuntu\n", "freebsd is the main bsd distro bsd is more secure than linux but more limited it s also more structured than linux between projects but some softwares won t compile on it .\n", "since linux is more common than freebsd there really isn t a need for a lot of people to emulate freebsd on linux\n", "since linux is more common than freebsd there really isn t a need for a lot of people to emulate freebsd on linux\n", "freebsd is the main bsd distro bsd is more secure than linux but more limited it s also more structured than linux between projects but some softwares won t compile on it .\n", "since linux is more common than freebsd there really isn t a need for a lot of people to emulate freebsd on linux\n", "since linux is more common than freebsd there really isn t a need for a lot of people to emulate freebsd on linux\n", "debian makes it easier but it s still a learning curve for people new to linux\n", "debian makes it easier but it s still a learning curve for people new to linux\n", "this puts mint in the driver s seat when it comes to managing your boot partition and mint is far more reliable and easier in general than gentoo\n", "this puts mint in the driver s seat when it comes to managing your boot partition and mint is far more reliable and easier in general than gentoo\n", "this puts mint in the driver s seat when it comes to managing your boot partition and mint is far more reliable and easier in general than gentoo\n", "this puts mint in the driver s seat when it comes to managing your boot partition and mint is far more reliable and easier in general than gentoo\n", "for a general workstation i ve found ubuntu easier to set up manage and use than it s up-stream distro debian though i use debian for servers and installation of packages easier than centos based on redhat and fedora\n", "for a general workstation i ve found ubuntu easier to set up manage and use than it s up-stream distro debian though i use debian for servers and installation of packages easier than centos based on redhat and fedora\n"], "format": ["for example if your screen is 600 pixels wide and if the rss feed string takes more than 600 pixels to display you will not be able to see the end of your rss feed\n", "the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n", "you d gain compatibility and durability because rss is more defined things will change less but if the feed doesn t include what you need it won t help you\n", "the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n", "the atom feed option seems to load faster than the rss one fwiw\n", "if your service already has an rss feed things are even easier with the rss reader integrated in the buzzbox api\n", "google does this because their feed api can parse more than rss\n", "as you noticed yoou cannot create an rss campaign feeded by more than oone feed\n", "for example if your screen is 600 pixels wide and if the rss feed string takes more than 600 pixels to display you will not be able to see the end of your rss feed\n", "the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n", "you d gain compatibility and durability because rss is more defined things will change less but if the feed doesn t include what you need it won t help you\n", "the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n", "the atom feed option seems to load faster than the rss one fwiw\n", "if your service already has an rss feed things are even easier with the rss reader integrated in the buzzbox api\n", "google does this because their feed api can parse more than rss\n", "as you noticed yoou cannot create an rss campaign feeded by more than oone feed\n", "you could use the tga format which is more common than ppm and allows true grayscale images\n", "note that the png format is much more complex than bmp since it allows compression etc\n", "is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png\n", "rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server\n", "jpg png is slower to draw than a bmp\n", "i have a sample wpf app here and wondering why bmp is loading faster than png\n", "not only do png files have natural support for transparency they are also smaller than bmp files\n", "note that the png format is much more complex than bmp since it allows compression etc\n", "note that the png format is much more complex than bmp since it allows compression etc\n", "note that the png format is much more complex than bmp since it allows compression etc\n", "is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png\n", "rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server\n", "jpg png is slower to draw than a bmp\n", "i have a sample wpf app here and wondering why bmp is loading faster than png\n", "not only do png files have natural support for transparency they are also smaller than bmp files\n", "note that the png format is much more complex than bmp since it allows compression etc\n", "note that the png format is much more complex than bmp since it allows compression etc\n", "if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across\n", "if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across\n", "it s possible for icalendar software to make this a lot shorter with rrule but these calculations are hard and not everybody implements it\n", "however ico files if stored properly are not significantly larger than png files because since windows vista ico files can store png\n", "if the latter is what you want you could use rtf which is somewhat easier than the doc format\n", "if the latter is what you want you could use rtf which is somewhat easier than the doc format\n", "there s a post on the subject on the birt world blog here specifically relating to xls emitters although the tribix emitters mentioned should also enable output to rtf a microsoft format readable by word that is much more concise than doc\n", "if the latter is what you want you could use rtf which is somewhat easier than the doc format\n", "if the latter is what you want you could use rtf which is somewhat easier than the doc format\n", "there s a post on the subject on the birt world blog here specifically relating to xls emitters although the tribix emitters mentioned should also enable output to rtf a microsoft format readable by word that is much more concise than doc\n", "2 caf seems a little better than wav but not much\n", "jpg or png should get you smaller than tiff\n", "today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n", "the resulting file from this png approach is smaller in size than a tiff file and i guess may rescale better\n", "today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n", "the resulting png compression may produce a file size larger than your tiff compression\n", "tiff \u00e2 any bit depth any compression lossy or lossless everything including the kitchen sink \u00e2 and no better than png\n", "today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n", "jpg or png should get you smaller than tiff\n", "today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n", "the resulting file from this png approach is smaller in size than a tiff file and i guess may rescale better\n", "today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n", "the resulting png compression may produce a file size larger than your tiff compression\n", "tiff \u00e2 any bit depth any compression lossy or lossless everything including the kitchen sink \u00e2 and no better than png\n", "today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n", "i suspect the computational demands of flac decoding are probably considerably less than ogg and if dsp gets you excited taking the time to figure all this stuff out is 100 worth it even if the flash route possibly leads to disappointment\n", "also your csv looks more like a tsv tab separated instead of comma separated\n", "also your csv looks more like a tsv tab separated instead of comma separated\n", "regearding your comment i also know that it can deal with flac better than wav and ogg that is not really the case\n", "flac is smaller than wav\n", "i also know that it can deal with flac better than wav and ogg\n", "an m3u file is nothing more than a text file listing mp3 and or other format digital audio files to be interpreted by player software as a series of audio files to be played in succession\n", "an m3u file is nothing more than a text file listing mp3 and or other format digital audio files to be interpreted by player software as a series of audio files to be played in succession\n", "it is even slower since i could only upload wav which is way bigger in size compared with ogg and opus\n", "it is even slower since i could only upload wav which is way bigger in size compared with ogg and opus\n", "either way applying gain and or attenuation to time-domain sample data as in a wav file is much easier than trying to apply these effects to frequency-domain data as in an mp3 file\n", "for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n", "wav files are about 3 times larger than mp3 files so it would need 1.8gb additional space to do the conversion\n", "ok i am new to audio with unity but despite reading all the unity posts regarding audio adding 2 short .wav clips i heard wav was smaller than mp3 to my app has added over 200mb\n", "i understand that mp3 is much smaller but it has worst audio quality when is compared to wav files\n", "now i assume you are worried your techno might not read a compressed mp3 which should be smaller than a wav from my memories\n", "for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n", "question i\u00e2 m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 file\n", "if you are still having problems jdk 8 has the ability to play mp3 files which are significantly smaller than wav you may want to try this\n", "you should definitely pick mp3 because they are about 10x smaller than wav files of the same duration\n", "for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n", "if you ask if a uncompressed wav which contains pcm data is better than mp3 then yes but the question sometimes is how much this better really matters to the human ear and how much postprocessing you have to perform on that data\n", "question i\u00e2 m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 file\n", "either way applying gain and or attenuation to time-domain sample data as in a wav file is much easier than trying to apply these effects to frequency-domain data as in an mp3 file\n", "for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n", "wav files are about 3 times larger than mp3 files so it would need 1.8gb additional space to do the conversion\n", "ok i am new to audio with unity but despite reading all the unity posts regarding audio adding 2 short .wav clips i heard wav was smaller than mp3 to my app has added over 200mb\n", "i understand that mp3 is much smaller but it has worst audio quality when is compared to wav files\n", "now i assume you are worried your techno might not read a compressed mp3 which should be smaller than a wav from my memories\n", "for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n", "question i\u00e2 m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 file\n", "if you are still having problems jdk 8 has the ability to play mp3 files which are significantly smaller than wav you may want to try this\n", "you should definitely pick mp3 because they are about 10x smaller than wav files of the same duration\n", "for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n", "if you ask if a uncompressed wav which contains pcm data is better than mp3 then yes but the question sometimes is how much this better really matters to the human ear and how much postprocessing you have to perform on that data\n", "question i\u00e2 m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 file\n", "kmz loads much quicker than gpx and can be integrated with the google maps api as a kml layer\n", "i ve heard that rar decompression requires much more memory than zip decompression\n", "by the way i would suggest creating rar self-extracting archives instead of zip self-extracting archives as with rar compression the exe file with the right switches for best compression using additionally also solid archive options could be much smaller than with zip compression\n", "one reason to use rar it is sooooo much better than zip\n", "i ve heard that rar decompression requires much more memory than zip decompression\n", "i ve heard that rar decompression requires much more memory than zip decompression\n", "i ve heard that rar decompression requires much more memory than zip decompression\n", "by the way i would suggest creating rar self-extracting archives instead of zip self-extracting archives as with rar compression the exe file with the right switches for best compression using additionally also solid archive options could be much smaller than with zip compression\n", "one reason to use rar it is sooooo much better than zip\n", "i ve heard that rar decompression requires much more memory than zip decompression\n", "i ve heard that rar decompression requires much more memory than zip decompression\n", "i found the production of wmv much better and easier than flv because all windows flv encoders i tried are not really good and stable whereas pretty much every tool can natively output wmv\n", "just press save and give it a name and that photoshop image will be saved into a transparent background png file which presents more colors and it s smaller than a gif file and is as good as a jpg\n", "jpg and png work well for most applications but the files will be larger than gif for very simple graphics\n", "indexed png less than 256 colors is actually always smaller than gif so i use that most of the time\n", "png achieves better compression than gif because it applies a pre-filtering step before the lossless compression deflate roughly equivalent to lzw. see wikipedia s explanation of png filtering\n", "as a general rule png is never worse and often better than gif because of superior compression\n", "as a general rule png is never worse and often better than gif because of superior compression\n", "png is a newer format and often better than either jpeg of gif - especially for screenshots\n", "png is a newer format and often better than either jpeg of gif - especially for screenshots\n", "one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n", "animated png is better than gif if we re focused on file size \u00e2 achieving a smaller file size was one of the reasons the apng format was designed\n", "i used gif because its file size 2.1kb was considerably less than png or jpeg in this case\n", "it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n", "png compresses much better than gif and allows more colors at the same time\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "it will always be a web format which basically comes down to jpg png and gif with gif being very unlikely because of its limitations gif can contain 256 colors at most and is generally larger than png\n", "a 8-bit png shim is smaller than the same dimension 1 pixel gif and everything will still work as planned\n", "png compresses much better than gif and allows more colors at the same time\n", "wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n", "according to wikipedia the png format provides better compression than gif\n", "i m not sure if this matters but the gif is significantly larger than the png files\n", "if png isn t smaller than gif then your software may be saving it poorly - look for png optimisation progams like pngout and pngnq\n", "for example png has better support for transparency than gif or jpeg\n", "one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n", "wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n", "gif is smaller because it s based on an colour palette of 256 colours rather than the separate rgb values for each pixel or group of pixels in jpg and png\n", "also if i change all to png is not bigger and alos i am using prawn pdf outputting these images so cant use gif\n", "since that appears to generate index-color gif files which are smaller than the png files that doxygen generates\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "many people don t know about 8-bit png which is usually better than gif in size.\n", "but keep in mind that the gif color palette is way smaller than png\n", "png images are always compressed lossless but their compression algorithm works better than competition gif\n", "according to wikipedia the png format provides better compression than gif\n", "many people don t know about 8-bit png which is usually better than gif in size.\n", "i m not sure if this matters but the gif is significantly larger than the png files\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "png gives you better alpha result than gif\n", "png gives you better alpha result than gif\n", "the gif format is substantially less capable than png\n", "it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n", "for example png has better support for transparency than gif or jpeg\n", "convert it to png 10-30 smaller than gif on average\n", "the gif format is substantially less capable than png\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "if your png files are coming out larger than equivalent gif files it is almost certainly because your source image has more than 256 colors\n", "wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n", "you can then use imagecopy to insert each gif image including the background and imagepng to generate png output which is better for line art than jpeg offers better compression than gif and can support more than 256 colors\n", "according to wikipedia the png format provides better compression than gif\n", "while png is definitely better that gif occasionally there is a use case for needing to stay in gif format\n", "there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry\n", "icon size indexed png is often smaller than the same gif\n", "the gif format is substantially less capable than png\n", "paul points out that png compresses static line art better than gif for nearly every situation\n", "but in that regard it is replaced by png which is generally smaller supports alpha transparency where gif pixels are either fully transparent or fully opaque and most importantly gif images are limited to 256 colors\n", "just press save and give it a name and that photoshop image will be saved into a transparent background png file which presents more colors and it s smaller than a gif file and is as good as a jpg\n", "jpg and png work well for most applications but the files will be larger than gif for very simple graphics\n", "indexed png less than 256 colors is actually always smaller than gif so i use that most of the time\n", "png achieves better compression than gif because it applies a pre-filtering step before the lossless compression deflate roughly equivalent to lzw. see wikipedia s explanation of png filtering\n", "as a general rule png is never worse and often better than gif because of superior compression\n", "as a general rule png is never worse and often better than gif because of superior compression\n", "png is a newer format and often better than either jpeg of gif - especially for screenshots\n", "png is a newer format and often better than either jpeg of gif - especially for screenshots\n", "one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n", "animated png is better than gif if we re focused on file size \u00e2 achieving a smaller file size was one of the reasons the apng format was designed\n", "i used gif because its file size 2.1kb was considerably less than png or jpeg in this case\n", "it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n", "png compresses much better than gif and allows more colors at the same time\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "it will always be a web format which basically comes down to jpg png and gif with gif being very unlikely because of its limitations gif can contain 256 colors at most and is generally larger than png\n", "a 8-bit png shim is smaller than the same dimension 1 pixel gif and everything will still work as planned\n", "png compresses much better than gif and allows more colors at the same time\n", "wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n", "according to wikipedia the png format provides better compression than gif\n", "i m not sure if this matters but the gif is significantly larger than the png files\n", "if png isn t smaller than gif then your software may be saving it poorly - look for png optimisation progams like pngout and pngnq\n", "for example png has better support for transparency than gif or jpeg\n", "one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n", "wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n", "gif is smaller because it s based on an colour palette of 256 colours rather than the separate rgb values for each pixel or group of pixels in jpg and png\n", "also if i change all to png is not bigger and alos i am using prawn pdf outputting these images so cant use gif\n", "since that appears to generate index-color gif files which are smaller than the png files that doxygen generates\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "many people don t know about 8-bit png which is usually better than gif in size.\n", "but keep in mind that the gif color palette is way smaller than png\n", "png images are always compressed lossless but their compression algorithm works better than competition gif\n", "according to wikipedia the png format provides better compression than gif\n", "many people don t know about 8-bit png which is usually better than gif in size.\n", "i m not sure if this matters but the gif is significantly larger than the png files\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "png gives you better alpha result than gif\n", "png gives you better alpha result than gif\n", "the gif format is substantially less capable than png\n", "it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n", "for example png has better support for transparency than gif or jpeg\n", "convert it to png 10-30 smaller than gif on average\n", "the gif format is substantially less capable than png\n", "png has a wider color pallete than gif and gif is properitary while png is not\n", "if your png files are coming out larger than equivalent gif files it is almost certainly because your source image has more than 256 colors\n", "wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n", "you can then use imagecopy to insert each gif image including the background and imagepng to generate png output which is better for line art than jpeg offers better compression than gif and can support more than 256 colors\n", "according to wikipedia the png format provides better compression than gif\n", "while png is definitely better that gif occasionally there is a use case for needing to stay in gif format\n", "there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry\n", "icon size indexed png is often smaller than the same gif\n", "the gif format is substantially less capable than png\n", "paul points out that png compresses static line art better than gif for nearly every situation\n", "but in that regard it is replaced by png which is generally smaller supports alpha transparency where gif pixels are either fully transparent or fully opaque and most importantly gif images are limited to 256 colors\n", "of those three ogg would usually be smaller than mp3\n", "of those three ogg would usually be smaller than mp3\n", "ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n", "moreover ogg vorbis is better then mp3 at all bitrates\n", "moreover ogg vorbis is better then mp3 at all bitrates\n", "in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n", "in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n", "ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n", "of those three ogg would usually be smaller than mp3\n", "of those three ogg would usually be smaller than mp3\n", "ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n", "moreover ogg vorbis is better then mp3 at all bitrates\n", "moreover ogg vorbis is better then mp3 at all bitrates\n", "in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n", "in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n", "ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n", "ie s vml is slower than other browser s svg\n", "ie s vml is slower than other browser s svg\n", "i used ppm pgm files as they are simpler to write and more portable than bmp\n", "the only thing i can suggest is that you use ppm format which is even easier than bmp for you to read from\n", "the only thing i can suggest is that you use ppm format which is even easier than bmp for you to read from\n", "as to why the flac is bigger than the mp3 you re taking one of the more-compressed formats decompressing it then recompressing it in a less-efficient compression tool though with a higher-quality of playback\n", "the reason the flac is larger than the mp3 of the same data is because they encode differently\n", "png is better than bmp in my work and i too often forgot to change the file type before clicking save\n", "png is better than bmp in my work and i too often forgot to change the file type before clicking save\n", "the pcm stream which is why the wav is bigger than the mp3\n", "it really depends on the source and the codec - most voice recorders tend to use a very low bitrate and this is often smaller than a mp3 -the rule of thumb to me is - if your current wav file is less than 1 mb per minute of length of the audio track transcoding it to mp3 may not be an advantage\n", "the pcm stream which is why the wav is bigger than the mp3\n", "it really depends on the source and the codec - most voice recorders tend to use a very low bitrate and this is often smaller than a mp3 -the rule of thumb to me is - if your current wav file is less than 1 mb per minute of length of the audio track transcoding it to mp3 may not be an advantage\n", "png is a compressed format so is smaller than tiff is theoretically lossless so you shouldn t lose any of the image quality\n", "png is a compressed format so is smaller than tiff is theoretically lossless so you shouldn t lose any of the image quality\n", "that s virtually the only case in which gif gives smaller file size than png\n", "some versions of photoshop coreldraw and ms paint provide poor png compression effort further fueling the idea that png is larger than gif\n", "that s virtually the only case in which gif gives smaller file size than png\n", "that s virtually the only case in which gif gives smaller file size than png\n", "some versions of photoshop coreldraw and ms paint provide poor png compression effort further fueling the idea that png is larger than gif\n", "that s virtually the only case in which gif gives smaller file size than png\n", "rar usually compresses much better than zip\n", "lastly the compression on rar is slightly better than zip i think as well and early on i think it had better ways of protecting the data within the archive\n", "as many will know the rar format produces consistently better results than zip\n", "as many will know the rar format produces consistently better results than zip\n", "as many will know the rar format produces consistently better results than zip\n", "as current versions of winrar can decompress 7z and 7z can decompress rar and 7z usually compresses better than zip and often better than rar i tend to send those who send me rar files 7z files back\n", "rar usually compresses much better than zip\n", "as current versions of winrar can decompress 7z and 7z can decompress rar and 7z usually compresses better than zip and often better than rar i tend to send those who send me rar files 7z files back\n", "lastly the compression on rar is slightly better than zip i think as well and early on i think it had better ways of protecting the data within the archive\n", "rar usually compresses much better than zip\n", "lastly the compression on rar is slightly better than zip i think as well and early on i think it had better ways of protecting the data within the archive\n", "as many will know the rar format produces consistently better results than zip\n", "as many will know the rar format produces consistently better results than zip\n", "as many will know the rar format produces consistently better results than zip\n", "as current versions of winrar can decompress 7z and 7z can decompress rar and 7z usually compresses better than zip and often better than rar i tend to send those who send me rar files 7z files back\n", "rar usually compresses much better than zip\n", "as current versions of winrar can decompress 7z and 7z can decompress rar and 7z usually compresses better than zip and often better than rar i tend to send those who send me rar files 7z files back\n", "lastly the compression on rar is slightly better than zip i think as well and early on i think it had better ways of protecting the data within the archive\n"], "database": ["using orientdb that is supposed ti be faster than neo4j for depth i m seeing a slow performance\n", "orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n", "as you can see the neo4j result is way longer then the one from orientdb\n", "the number of requests orientdb could serve is consistently 3 to 5 times lower than neo4j\n", "i read in some blog that orientdb performs at least as good if not better than neo4j while also offering more complex types like mongodb would\n", "as you can see the neo4j result is way longer then the one from orientdb\n", "orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n", "i found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indices\n", "using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n", "however the isolation part of acid sounds more like consistency model in particular the sequential consistency model\n", "using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n", "using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n", "however the isolation part of acid sounds more like consistency model in particular the sequential consistency model\n", "using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n", "janusgraph is a more up-to-date version of titan despite the low version number\n", "janusgraph is a more up-to-date version of titan despite the low version number\n", "so if your document bson is larger than 16 mb mongodb throws exception\n", "mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n", "a document in mongodb is more or less like a json structure bson to be specific\n", "basically mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson document.\n", "the bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representation\n", "the bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representation\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "the distinction between int64 and int32 in mongodb is more about bson storage size\n", "so if your document bson is larger than 16 mb mongodb throws exception\n", "mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n", "a document in mongodb is more or less like a json structure bson to be specific\n", "basically mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson document.\n", "the bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representation\n", "the bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representation\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb supports no more than 100 levels of nesting for bson\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n", "mongodb supports no more than 100 levels of nesting for bson documents\n", "the distinction between int64 and int32 in mongodb is more about bson storage size\n", "rjdbc may also be a more stable option in the linux environment especially now that the fetch code has been re-written in java as of development release 0.2-0 on r-forge its performance is on par with if not better than rodbc\n", "now the speed of sql server interaction with r has affected because rjdbc is slower than rodbc but its not too bad\n", "rodbc takes longer than rjdbc\n", "regarding cloudant it s more or less just couchdb so to connect you can use these libraries from the couchdb wiki\n", "due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n", "due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n", "due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n", "regarding cloudant it s more or less just couchdb so to connect you can use these libraries from the couchdb wiki\n", "due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n", "due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n", "due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n", "when the data is on disk titan is faster than neo4j cause it has a better disk representation\n", "because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clustering\n", "because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clustering\n", "when the data is on disk titan is faster than neo4j cause it has a better disk representation\n", "because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clustering\n", "because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clustering\n", "i think that eloquera www.eloquera.com is better than db4o and additionally has better licensing\n", "i think that eloquera www.eloquera.com is better than db4o and additionally has better licensing\n", "rethinkdb is more similar to pouchdb couchdb\n", "rethinkdb is more similar to pouchdb couchdb\n", "rethinkdb is more similar to pouchdb couchdb\n", "rethinkdb is more similar to pouchdb couchdb\n", "ravendb more than couchdb but that s neither here nor there\n", "ravendb more than couchdb but that s neither here nor there\n", "greenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use cases\n", "according to the postgresql which i gather greenplum is based on documentation for sequence manipulation functions it should return the value most recently returned by nextval in the current session.\n", "couchbase btw also uses binary replication mechanism which will be more efficient than couchdb as long as the couchdb protocol is not utilized for bidirectional data exchange and conflict resolution\n", "i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n", "couchbase looks more like a memcache server with a persistence layer powered by couchdb and maybe it does not fit your needs\n", "i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n", "couchbase btw also uses binary replication mechanism which will be more efficient than couchdb as long as the couchdb protocol is not utilized for bidirectional data exchange and conflict resolution\n", "i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n", "couchbase looks more like a memcache server with a persistence layer powered by couchdb and maybe it does not fit your needs\n", "i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n"], "dbms": ["using orientdb that is supposed ti be faster than neo4j for depth i m seeing a slow performance\n", "orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n", "as you can see the neo4j result is way longer then the one from orientdb\n", "the number of requests orientdb could serve is consistently 3 to 5 times lower than neo4j\n", "i read in some blog that orientdb performs at least as good if not better than neo4j while also offering more complex types like mongodb would\n", "as you can see the neo4j result is way longer then the one from orientdb\n", "orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n", "i found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indices\n", "drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n", "postgresql is more sql compliant than mysql\n", "in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n", "postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n", "honestly though postgresql scales much better than mysql\n", "postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance\n", "i really like postgresql s indexes which are far better than mysql s\n", "since postgresql is a lot more sane than mysql there are not that many tricks to report on\n", "also you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysql\n", "some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.\n", "drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n", "i hear postgresql is more robust and doesn t crash like mysql does in these situations\n", "postgresql is way better than mysql in nearly every respect\n", "there are workloads where postgresql is better and there are workloads where mysql is better\n", "postgresql is a bit more restrictive than mysql\n", "does that mean perhaps rails team favor postgresql slightly more than mysql\n", "mysql is more than capable of serving your needs as well as alex s suggestion of postgresql\n", "postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n", "from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n", "traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n", "i am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject\n", "mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem\n", "while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n", "explain in postgresql is way more useful than in mysql\n", "the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case\n", "according to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my case\n", "i would recommend postgresql for a beginner as it has far fewer surprises than mysql\n", "postgresql gets much better performance and this is coming from a former mysql partisan\n", "as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query\n", "i feel postgresql is much more mature and robust than mysql\n", "postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n", "triggers in postgresql have a syntax a bit more complex than mysql because they execute procedures as the action\n", "not only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics are\n", "now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n", "this is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way down\n", "but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this\n", "postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n", "i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n", "postgresql has better support but the support by mysql depends on the used storage engine\n", "and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n", "while postgresql is less popular than mysql most of the serious web hosting supports it\n", "for these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slower\n", "postgresql is much more similar to oracle than mysql is\n", "some say mysql is much better for bigger projects while others think just go with postgresql\n", "then postgresql is much better than mysql\n", "postgresql is stricter to the sql standard than mysql is\n", "then postgresql is much better than mysql\n", "i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n", "mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n", "however people often argue that postgresql is cleaner and easier to use that mysql\n", "the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n", "i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n", "i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql\n", "as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n", "do you find rails with postgresql is slower than mysql knowing that it produce more query on the background\n", "i had mentioned that in our rails application all select queries dropped below 100ms after switching to postgresql whereas some of the complex joins generated by activerecord would occasionally take as much as 15s or more with mysql 5.1 because of nested loops with inner table scans even when indices were available\n", "if you need spatial data capabilities postgis with postgresql is better than mysql\n", "i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated\n", "postgresql is a little more strict than mysql about type conversion and does not let you implicitly cast convert between numbers and strings\n", "does this affect postgresql harder than mysql\n", "i ve found that postgresql is in my expirience is slower as mysql\n", "postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n", "i wonder why postgresql s single insert statement is completely faster than mysql s when autocommit is turned on\n", "following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n", "postgresql is worth learning and much more advanced than mysql\n", "mysql run 4x faster than postgresql\n", "why postgresql is more capable than others mysql etc. on django\n", "i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n", "in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end\n", "mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n", "unfortunately in postgresql select count is often slower than mysql to which it often get s compared to\n", "i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n", "the other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n", "postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n", "with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql\n", "i am using postgresql btw which can do more than mysql incase that changes things\n", "b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n", "ps you can also migrate to postgresql it s smarter than mysql when choosing right indexes\n", "in fact this presentation which still refers to an older incomplete version of mysql s opengis support suggests that with proper indexing some mysql geospatial actions may actually perform better than postgresql postgis though i m sure that s up for debate\n", "postgresql seem to better than mysql in terms of speed\n", "postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one\n", "postgresql specifically has gotten easier to manage while mysql has lost some of the simplicity that gave it an advantage without picking up enough features that really matter\n", "though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n", "i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n", "in my cases postgresql was better than mysql mysql do not completely support unicode\n", "while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n", "i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n", "for example pyqt is already available for python 3 as well as 2 and you can use postgresql a splendid open-source sql database engine much more standard than mysql via py-postgresql\n", "traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n", "now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n", "the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n", "all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n", "with django it is easy to use postgresql instead of mysql so i tried it with the same query and same data in db postgresql is much faster that mysql x10 more faster while using inner join analyse shows it uses indexes unlike mysql\n", "what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n", "i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n", "and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n", "i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n", "i just checked the timings using mysql 5 and they are slightly worse than postgresql\n", "mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n", "mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n", "fyi postgresql scales better than mysql on multi-processor overlapping requests from a review i was reading a few months back sorry no link\n", "if you want open source postgresql is much smarter than mysql as well\n", "i did a simple performance test and i noticed postgresql is slower than mysql\n", "looks like postgresql is a little more compliant than mysql so try this instead\n", "poor performance from mysql has more to do with it not being smart and automatically creating an optimized plan like sql server postgresql or oracle would\n", "i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n", "it seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape it\n", "mysql mariadb is slightly worse than postgresql\n", "postgresql requires more tuning than mysql to achieve optimal performance\n", "postgresql will always be a little bit more mature than mysql\n", "may be postgresql takes less time than mysql\n", "and a wiki for why postgresql is better than mysql\n", "mysql is not less complicated that postgresql -- they re the same thing\n", "postgresql is faster than mysql s innodb\n", "postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n", "there is also postgresql its a bit more robust than mysql and is free just the same\n", "while postgresql is less popular than mysql most of the serious web hosting supports it\n", "is postgresql better than mysql for such purpose\n", "the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n", "the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n", "i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n", "if i were able to upgrade the server s versioning of mysql to 5.5 would innodb be a safer bet than postgresql\n", "mysql mariadb is slightly worse than postgresql\n", "it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.\n", "postgresql gets much better performance and this is coming from a former mysql partisan\n", "postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django\n", "b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n", "all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n", "i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n", "mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates\n", "postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n", "however postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surprise\n", "i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n", "postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n", "postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n", "postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n", "i just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysql\n", "either postgresql more proven than mysql for such huge data\n", "some recent tests we did showed that postgresql does perform faster than mysql and we believe the table partitioning feature in postgresql will be very important with a table in our database we foresee to grow into 100 million rows and more in production\n", "postgresql has better support but the support by mysql depends on the used storage engine\n", "in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n", "why postgresql is more capable than others mysql etc. on django\n", "postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n", "generally speaking i find postgresql lends itself to 24 7 operations better than mysql\n", "in your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexes\n", "i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n", "explain in postgresql is way more useful than in mysql\n", "mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n", "in other words is mysql better or worse than postgresql to handle unicode etc\n", "if you are looking for location based queries in relational databases postgresql is more matured compared to mysql\n", "mysql is easier than postgresql but it doesn t really matter either way\n", "while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n", "given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used\n", "i would need a scalable database so probably postgresql would be better than mysql\n", "postgresql is way better than mysql in nearly every respect\n", "postgresql requires more tuning than mysql to achieve optimal performance\n", "postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n", "postgresql with the optional hstore module might be better than mysql at this.\n", "from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n", "postgresql is more sql compliant than mysql\n", "may be postgresql takes less time than mysql\n", "anyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i think\n", "postgresql is much more similar to oracle than mysql is\n", "this is a weak point that iirc postgresql can handle better but with mysql you have to work around that by reverting the changes yourself in case of rollbacks\n", "while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n", "in my personal openion mysql is slower than postgresql and mongo db\n", "if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql\n", "postgresql is better than mysql in many ways\n", "though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n", "an efficiently configured mysql is better than a badly configured postgresql and vice-versa\n", "i know postgresql could be considered more mature than mysql with regards to locking thanks to mvcc - can i use row-locking or some other feature in postgresql instead of the token field\n", "is postgresql a better option than mysql for partitioning tables by date\n", "mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n", "postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n", "as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n", "you might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysql\n", "following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n", "postgresql license bsd is undoubtedly more simple than mysql s\n", "it seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape it\n", "i feel postgresql is much more mature and robust than mysql\n", "postgresql is much better suited for data warehousing compared to mysql\n", "postgresql is older than mysql so it might have influenced them\n", "i hear postgresql is more robust and doesn t crash like mysql does in these situations\n", "drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n", "postgresql is more sql compliant than mysql\n", "in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n", "postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n", "honestly though postgresql scales much better than mysql\n", "postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance\n", "i really like postgresql s indexes which are far better than mysql s\n", "since postgresql is a lot more sane than mysql there are not that many tricks to report on\n", "also you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysql\n", "some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.\n", "drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n", "i hear postgresql is more robust and doesn t crash like mysql does in these situations\n", "postgresql is way better than mysql in nearly every respect\n", "there are workloads where postgresql is better and there are workloads where mysql is better\n", "postgresql is a bit more restrictive than mysql\n", "does that mean perhaps rails team favor postgresql slightly more than mysql\n", "mysql is more than capable of serving your needs as well as alex s suggestion of postgresql\n", "postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n", "from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n", "traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n", "i am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject\n", "mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem\n", "while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n", "explain in postgresql is way more useful than in mysql\n", "the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case\n", "according to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my case\n", "i would recommend postgresql for a beginner as it has far fewer surprises than mysql\n", "postgresql gets much better performance and this is coming from a former mysql partisan\n", "as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query\n", "i feel postgresql is much more mature and robust than mysql\n", "postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n", "triggers in postgresql have a syntax a bit more complex than mysql because they execute procedures as the action\n", "not only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics are\n", "now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n", "this is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way down\n", "but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this\n", "postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n", "i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n", "postgresql has better support but the support by mysql depends on the used storage engine\n", "and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n", "while postgresql is less popular than mysql most of the serious web hosting supports it\n", "for these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slower\n", "postgresql is much more similar to oracle than mysql is\n", "some say mysql is much better for bigger projects while others think just go with postgresql\n", "then postgresql is much better than mysql\n", "postgresql is stricter to the sql standard than mysql is\n", "then postgresql is much better than mysql\n", "i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n", "mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n", "however people often argue that postgresql is cleaner and easier to use that mysql\n", "the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n", "i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n", "i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql\n", "as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n", "do you find rails with postgresql is slower than mysql knowing that it produce more query on the background\n", "i had mentioned that in our rails application all select queries dropped below 100ms after switching to postgresql whereas some of the complex joins generated by activerecord would occasionally take as much as 15s or more with mysql 5.1 because of nested loops with inner table scans even when indices were available\n", "if you need spatial data capabilities postgis with postgresql is better than mysql\n", "i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated\n", "postgresql is a little more strict than mysql about type conversion and does not let you implicitly cast convert between numbers and strings\n", "does this affect postgresql harder than mysql\n", "i ve found that postgresql is in my expirience is slower as mysql\n", "postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n", "i wonder why postgresql s single insert statement is completely faster than mysql s when autocommit is turned on\n", "following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n", "postgresql is worth learning and much more advanced than mysql\n", "mysql run 4x faster than postgresql\n", "why postgresql is more capable than others mysql etc. on django\n", "i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n", "in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end\n", "mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n", "unfortunately in postgresql select count is often slower than mysql to which it often get s compared to\n", "i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n", "the other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n", "postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n", "with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql\n", "i am using postgresql btw which can do more than mysql incase that changes things\n", "b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n", "ps you can also migrate to postgresql it s smarter than mysql when choosing right indexes\n", "in fact this presentation which still refers to an older incomplete version of mysql s opengis support suggests that with proper indexing some mysql geospatial actions may actually perform better than postgresql postgis though i m sure that s up for debate\n", "postgresql seem to better than mysql in terms of speed\n", "postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one\n", "postgresql specifically has gotten easier to manage while mysql has lost some of the simplicity that gave it an advantage without picking up enough features that really matter\n", "though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n", "i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n", "in my cases postgresql was better than mysql mysql do not completely support unicode\n", "while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n", "i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n", "for example pyqt is already available for python 3 as well as 2 and you can use postgresql a splendid open-source sql database engine much more standard than mysql via py-postgresql\n", "traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n", "now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n", "the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n", "all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n", "with django it is easy to use postgresql instead of mysql so i tried it with the same query and same data in db postgresql is much faster that mysql x10 more faster while using inner join analyse shows it uses indexes unlike mysql\n", "what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n", "i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n", "and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n", "i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n", "i just checked the timings using mysql 5 and they are slightly worse than postgresql\n", "mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n", "mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n", "fyi postgresql scales better than mysql on multi-processor overlapping requests from a review i was reading a few months back sorry no link\n", "if you want open source postgresql is much smarter than mysql as well\n", "i did a simple performance test and i noticed postgresql is slower than mysql\n", "looks like postgresql is a little more compliant than mysql so try this instead\n", "poor performance from mysql has more to do with it not being smart and automatically creating an optimized plan like sql server postgresql or oracle would\n", "i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n", "it seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape it\n", "mysql mariadb is slightly worse than postgresql\n", "postgresql requires more tuning than mysql to achieve optimal performance\n", "postgresql will always be a little bit more mature than mysql\n", "may be postgresql takes less time than mysql\n", "and a wiki for why postgresql is better than mysql\n", "mysql is not less complicated that postgresql -- they re the same thing\n", "postgresql is faster than mysql s innodb\n", "postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n", "there is also postgresql its a bit more robust than mysql and is free just the same\n", "while postgresql is less popular than mysql most of the serious web hosting supports it\n", "is postgresql better than mysql for such purpose\n", "the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n", "the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n", "i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n", "if i were able to upgrade the server s versioning of mysql to 5.5 would innodb be a safer bet than postgresql\n", "mysql mariadb is slightly worse than postgresql\n", "it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.\n", "postgresql gets much better performance and this is coming from a former mysql partisan\n", "postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django\n", "b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n", "all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n", "i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n", "mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates\n", "postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n", "however postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surprise\n", "i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n", "postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n", "postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n", "postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n", "i just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysql\n", "either postgresql more proven than mysql for such huge data\n", "some recent tests we did showed that postgresql does perform faster than mysql and we believe the table partitioning feature in postgresql will be very important with a table in our database we foresee to grow into 100 million rows and more in production\n", "postgresql has better support but the support by mysql depends on the used storage engine\n", "in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n", "why postgresql is more capable than others mysql etc. on django\n", "postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n", "generally speaking i find postgresql lends itself to 24 7 operations better than mysql\n", "in your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexes\n", "i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n", "explain in postgresql is way more useful than in mysql\n", "mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n", "in other words is mysql better or worse than postgresql to handle unicode etc\n", "if you are looking for location based queries in relational databases postgresql is more matured compared to mysql\n", "mysql is easier than postgresql but it doesn t really matter either way\n", "while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n", "given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used\n", "i would need a scalable database so probably postgresql would be better than mysql\n", "postgresql is way better than mysql in nearly every respect\n", "postgresql requires more tuning than mysql to achieve optimal performance\n", "postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n", "postgresql with the optional hstore module might be better than mysql at this.\n", "from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n", "postgresql is more sql compliant than mysql\n", "may be postgresql takes less time than mysql\n", "anyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i think\n", "postgresql is much more similar to oracle than mysql is\n", "this is a weak point that iirc postgresql can handle better but with mysql you have to work around that by reverting the changes yourself in case of rollbacks\n", "while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n", "in my personal openion mysql is slower than postgresql and mongo db\n", "if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql\n", "postgresql is better than mysql in many ways\n", "though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n", "an efficiently configured mysql is better than a badly configured postgresql and vice-versa\n", "i know postgresql could be considered more mature than mysql with regards to locking thanks to mvcc - can i use row-locking or some other feature in postgresql instead of the token field\n", "is postgresql a better option than mysql for partitioning tables by date\n", "mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n", "postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n", "as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n", "you might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysql\n", "following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n", "postgresql license bsd is undoubtedly more simple than mysql s\n", "it seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape it\n", "i feel postgresql is much more mature and robust than mysql\n", "postgresql is much better suited for data warehousing compared to mysql\n", "postgresql is older than mysql so it might have influenced them\n", "i hear postgresql is more robust and doesn t crash like mysql does in these situations\n", "greenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use cases\n", "according to the postgresql which i gather greenplum is based on documentation for sequence manipulation functions it should return the value most recently returned by nextval in the current session.\n", "my experience is that postgresql is handling complex queries much better than mysql so if you will be doing some advanced sql i can recommend postgresql\n", "if open source i would suggest postgresql since i believe it to be more robust than mysql\n", "my experience is that postgresql is handling complex queries much better than mysql so if you will be doing some advanced sql i can recommend postgresql\n", "if open source i would suggest postgresql since i believe it to be more robust than mysql\n", "core open source mysql is faster than postgresql in most typical scenarios however you can never be sure which database will be faster in your particular environment and its queries\n", "core open source mysql is faster than postgresql in most typical scenarios however you can never be sure which database will be faster in your particular environment and its queries\n"]}