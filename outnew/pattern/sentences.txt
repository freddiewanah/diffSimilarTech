532
maven	pom.xml	maven	pom.xml
Pattern(s): 
we commit the pom.xml to the scs and the maven repository contains all our dependencies. for me that seems like a nice way to do it
maven helps quite a lot with this problem when i m coding java
we commit the pom.xml to the scs and the maven repository contains all our dependencies. for me that seems like a nice way to do it
568
int	chars
Pattern(s): 
meaning if you made a new integer you could call some method on i whereas with an int you cannot call any methods on it because it is simply a primitive
so would produce an error because int is not an object
int is one of the few primitives in java along with chars and some others
568
int	chars	int	chars
Pattern(s): 
int is one of the few primitives in java along with chars and some others
i m not 100 sure but i m thinking that the int object more or less just has an int property and a whole bunch of methods to interact with that property like the tostring method for example
so int is a fancy way to work with an int just as perhaps string is a fancy way to work with a group of chars
669
hash	md5
Pattern(s): 
with incremental crackers the time depends on how fast you can make the password hash function run
the better you can optimize your password hash function the faster your password hash function gets the weaker your scheme is
md5 and sha1 even conventional block ciphers like des are designed to be fast
1331
robocopy	xcopy
Pattern(s): 
so start getting used to robocopy
use robocopy robust file copy
you get note xcopy is now deprecated please use robocopy
1331
robocopy	xcopy
Pattern(s): 
you get note xcopy is now deprecated please use robocopy
so start getting used to robocopy

1517
macvim	textmate	macvim	atom-editor	textmate	atom-editor
Pattern(s): 
in addition to the latest stable release there are also pre-release test builds and nightly builds and atom-editor feeds are provided for tracking all three release types
macvim works well and certainly looks more mature than vim-cocoa moreover there is a cocoa plugin architecture in the pipeline for macvim and someone is already working on a textmate style file browser tray plugin which is a huge ++ imho
there was also a carbon version of vim but this didn t offer a great deal over the terminal version
1517
emacs	aquamacs
Pattern(s): 
aquamacs is very usable and looks pretty good
supports both traditional mac os style keyboard shortcuts command-o command-s and the control meta shortcuts for those raised on traditional emacs
it is definitely more mac-like than carbon emacs
1517
emacs	aquamacs	emacs	atom-editor
Pattern(s): 
aquamacs has a more irregular schedule but it s seen some pretty major updates over the last year
gnu emacs for osx can be found at emacsformacosx.com
in addition to the latest stable release there are also pre-release test builds and nightly builds and atom-editor feeds are provided for tracking all three release types
1718
phpunit	simpletest
Pattern(s): 
the framework will run all the tests against your code and then report back success or failure of each test
phpunit is run from the linux command line by default though there are http interfaces available for it
simpletest is web-based by nature and is much easier to get up and running imo
1718
phpunit	simpletest
Pattern(s): 
simpletest is web-based by nature and is much easier to get up and running imo
in combination with xdebug phpunit can give you automated statistics for code coverage which some people find very useful
some teams write hooks from their subversion repository so that unit tests are run automatically whenever you commit changes
1821
nunit	mstest
Pattern(s): 
crazy good i guess
for the conservative types me nunit is still available and still more than capable
for the microsoft-types mstest is adequate but slow and clunky compared to nunit
2068
mvp	presenter
Pattern(s): 
mvc pattern controller are based on behaviors and can be shared across views can be responsible for determining which view to display it is the best explanation on the web i could find
i blogged about this a while back quoting on todd snyder s excellent post on the difference between the two here are the key differences between the patterns mvp pattern view is more loosely coupled to the model
the presenter is responsible for binding the model to the view
2905
emacs	gedit
Pattern(s): 
emacs seems the logical choice to me but gedit is a great simple text editor with some nice features if that s all you are looking for
emacs is a wonderful text editor
it has huge power once you become a power user
2905
vim	gedit	vim	emacs	vim	emacs
Pattern(s): 
further update just fyi i am not trying to push emacs over vim it s just what i use and it s a great editor as i m sure vim is too
it is daunting at first as i m sure vim is too but the question was about text editors on linux besides vi.
emacs seems the logical choice to me but gedit is a great simple text editor with some nice features if that s all you are looking for
3806
robocopy	xcopy
Pattern(s): 
i ve been using it for years it s 2 thumbs up
besides the already mentioned robocopy xxcopy has a free version
its syntax is backwards compatible with xcopy but has tons of additional options xxcopy help x create a 42kb file with all the options available
3979
mbunit	nunit
Pattern(s): 
nunit does have a litter bit better tool support though
i am using resharper to run mbunit tests
i ve had problems with testdriven.net running my setup methods for mbunit
5108
ubuntu	debian
Pattern(s): 
or ubuntu has some nice gui things that make it easy to control apache mysql php
this article has some of the best ways to lock things down some highlights make sure no one can browse the directories make sure only root has write privileges to everything and only root has read privileges to certain config files run mod_security the article also takes some pointers from this book apache securiy o reilly press as far as distros i ve run debain and ubuntu but it just depends on how much you want to do
i ran debian with no x and just ssh d into it whenever i needed anything
6713
junit	testng
Pattern(s): 
we didn t want people to feel uncomfortable writing tests while getting to know testng because we wanted them to keep writing a lot of tests
also junit is pretty much the de-facto standard in the java world
there s no decent tool that doesn t support it from the box you can find a lot of help on the web and they added a lot of new features in the past year which shows it s alive
8381
debian	linux	ubuntu	linux	ubuntu	debian
Pattern(s): 
i use it daily and it s great although not without it s share of bugs
for the rails side of things though i d actually suggest a virtual machine running linux. ubuntu works well the only caveat is that you have to install rubygems manually as it does not adhere to the great debian filesystem naming ideology - i suggest this because if you want to do advanced things such as installing imagemagick rmagick or memcached or a number of other plugins which require native c libraries it becomes very painful very quickly if you re on windows
a second reason is that unless you are very atypical your production server will likely be running linux too
9788
subtraction	addition	atomic	interlocked	atomic	interlocked
Pattern(s): 
you can use the methods on the interlocked class to protect these
additionally while reads and writes are atomic there is a race condition with addition subtraction and incrementing and decrementing primitive types since they must be read operated on and rewritten
the interlocked class allows you to protect these using the compareexchange and increment methods
10062
erlang	ocaml
Pattern(s): 
so you might want to learn haskell ocaml or another functional language
the erlang provides an easy-to-use style of concurrent programming
you may never actually use erlang but the concepts are transportable to other languages
11663
post	get
Pattern(s): 
in general the things ms focuses on for each vary because the two languages are targeted at very different audiences
this blog post has a good summary of the target audiences
it is probably a good idea to determine which audience you are in because it will determine what kind of tools you ll get from microsoft
13618
gtk	fltk
Pattern(s): 
jari komppa has a good tutorial about them but you could use a more object-oriented approach with c++ than the c code he presents
i wouldn t use opengl for the gui unless you are planning for hardware accelerated and or 3d effects that you don t think you would get with a more traditional gui toolkit e.g qt wxwidgets gtk etc
if you just need a quick simple gui for hosting your opengl graphics then fltk is a nice choice
13942
imperative	declarative	imperative	declarative
Pattern(s): 
another debate implied in this argument though is declarative programming vs
imperative
declarative is usually better for anything where you really don t need the fine-grained control over how something is done
14179
emacs	jedit
Pattern(s): 
i replace notepad with notepad2 on every one of my windows machines
gnu emacs is my preferred text editor and it works well on windows copy paste actually works as expected it s also available on all major platforms so you can reuse your knowledge if you jump around oses like i tend to do
i really like jedit as well
17249
anjuta	gnome	anjuta	kde	anjuta	kdevelop
Pattern(s): 
kdevelop is a kde project but run on gnome
anjuta is an equivalent project on gnome but i find it unusable for real work
for the rest of the stack gcc make valgrind ddd a gdb ide and python for scripting my code
19056
subclass	inherited
Pattern(s): 
code settings bindings references settingsbindableattribute inotifypropertychanged
i finally came up with a form subclass that solves this once and for all
to use it inherited from restorableform instead of form
20503
implements	extends
Pattern(s): 
the only thing you can t extends is a final class
i can t remember if php is different in this respect but in java you can implements multiple interfaces but you can t inherit multiple abstract classes
i d assume php works the same way
20713
rss	feed
Pattern(s): 
rss is not an official internet standards track protocol
however rss has enough adoption that you can reasonably expect it to be consumable by a variety of clients
as there are quite a few deprecated versions of rss you might conceivably have to support rss feed that vary quite a bit in their formatting details
20713
rss	feed
Pattern(s): 
as there are quite a few deprecated versions of rss you might conceivably have to support rss feed that vary quite a bit in their formatting details
rss does not have a registered media content type
however enough publishers use the same unregistered content type that it is almost a defacto mime type
21277
int	double
Pattern(s): 
a similar technique can be used for double
the trick is to convert the floats so that they re ordered as if int and then just see how different they are
i have no idea why this damn thing is screwing up my underscores
21326
inline	inlining
Pattern(s): 
any function can be declared inline and putting the function body in the class definition is one way of doing that
you could also have done however it s up to the compiler if it actually does inline the function
vc++ pretty much ignores your requests for inlining
24174
anjuta	gnome	anjuta	kdevelop
Pattern(s): 
code blocks is also very promising and i like that one best
i hear anjuta is pretty slick for gnome users
i played a bit with kdevelop and it s nice but sort of lacking featurewise
24285
ftgl	freetype
Pattern(s): 
it allows for using any true type font via the freetype font library
you should also check out the ftgl library
ftgl is a free cross-platform open source c++ library that uses freetype2 to simplify rendering fonts in opengl applications
24308
inherited	properties
Pattern(s): 
you can t really argue against those properties - there is no trade-off made and it is always a cleaner way to modulize things
other aspects of oop including inherited and polymorphism are important too but as others have alluded to those are commonly over used
ie sometimes people use inherited and or polymorphism because they can not because they should have
26031
activator	dynamicmethod
Pattern(s): 
either way the difference is huge when you start getting into tight loops or multiple calls
if this is for something that will be called a lot in an application instance it s a lot faster to compile and cache dynamic code instead of using the activator or constructorinfo.invoke
two easy options for dynamic compilation are compiled linq expressions or some simple il opcodes and dynamicmethod
27256
jquery	scriptaculous
Pattern(s): 
to put some names out there prototype scriptaculous jquery dojo yui ...those all seem to have active users and contributers so they are probably worth reading up on to see if they meet your needs
jquery is good but with a little extra effort maybe you ll find that something else works better for you
good luck
27440
postgresql	mysql	postgresql	mysql
Pattern(s): 
mysql is much more commonly provided by web hosts
postgresql is a much more mature product
there s this discussion addressing your better question apparently according to this web page mysql is fast when concurrent access levels are low and when there are many more reads than writes
27993
centos	linux	redhat	fedora
Pattern(s): 
if you are running one of these linux flavours you might want to recompile perl from original source not rpm source
i realized that anyone running perl code with the distribution perl interpretter on redhat 5.2 centos 5.2 or fedora 9 is likely a victim
yes even if your code doesn t use the fancy bless overload idiom many cpan modules do
29923
bazaar	svn	bazaar	git
Pattern(s): 
in git you can do the same with playing around in the index staging area but bazaar has a better ui for it
most of the people were reluctant to move over as they have to type in two commands to commit and push bazaar ci + bazaar push
also it was difficult for them to understand the concept of branches and merging no one uses branches or merges them in svn
29972
teamcity	nant	nant	cruisecontrol
Pattern(s): 
here is an article i wrote about using ci with cruisecontrol.net it has a nant build script in the comments that can be re-used across projects continuous integration with cruisecontrol
i use teamcity with an nant build script
teamcity makes it easy to setup the ci server part and nant build script makes it easy to do a number of tasks as far as report generation is concerned
29972
cruisecontrol	teamcity	nant	cruisecontrol
Pattern(s): 
teamcity makes it easy to setup the ci server part and nant build script makes it easy to do a number of tasks as far as report generation is concerned
here is an article i wrote about using ci with cruisecontrol.net it has a nant build script in the comments that can be re-used across projects continuous integration with cruisecontrol

30197
firefox	safari
Pattern(s): 
here s the relevant documentation for gears workerpool api whatwg has a draft recommendation for worker threads web workers and there s also mozilla s dom worker threads update june 2009 current state of browser support for javascript threads firefox 3.5 has web workers
some demos of web workers if you want to see them in action simulated annealing try it link space invaders link at end of post moonbat javascript benchmark first link the gears plugin can also be installed in firefox
safari 4 and the webkit nightlies have worker threads javascript ray tracer chrome has gears baked in so it can do threads although it requires a confirmation prompt from the user and it uses a different api to web workers although it will work in any browser with the gears plugin installed google gears workerpool demo not a good example as it runs too fast to test in chrome and firefox although ie runs it slow enough to see it blocking interaction ie8 and ie9 can only do threads with the gears plugin installed
30598
subclass	abstract-class	implements	extends
Pattern(s): 
in this way i am saying that foouser subclass is not an account but does act like an editable object
likewise baraccount extends from account but is not a user subclass but implements editable listable and also versionable
adding all of these apis for editable listable and versionable into the abstract-class itself would not only be cluttered and ugly but would either duplicate the common interfaces in account and user or force my user object to implement versionable probably just to throw an exception
31574
spaces	delimiter
Pattern(s): 
also don t forget that the order of attributes can be reversed and that other attributes can appear in the tag
note single quotes even no quotes if the value doesn t contain a spaces is valid according to the w3c html spec
quote by default sgml requires that all attribute values be delimiter using either double quotation marks ascii decimal 34 or single quotation marks ascii decimal 39 .
32521
prng	random	prng	random
Pattern(s): 
personally i do think there are places where constant random data is useful in testing - after you think you ve done all your carefully-thought-out corners using stimuli from a prng can sometimes find other things
there is a half-way house here which has some use which is to seed your prng with a constant
that allows you to generate random data which is repeatable
34338
phpunit	simpletest
Pattern(s): 
simpletest also ships with a very simple html gui which is quite easy to extend if you want to
as far as i know phpunit does not include a html gui but there are gui s available to download such as cool

34681
hash	md5
Pattern(s): 
sha-1 and md5 also suffer from message extension attacks which can fatally weaken your application if you re not careful
a more modern hash such as whirpool is a better choice
it does not suffer from these message extension attacks and uses the same mathematics as aes uses to prove security against a variety of attacks
36867
wordpress	expressionengine
Pattern(s): 
for simple cms sites we use expressionengine which uses html-like tags for inserting logic into templates
if you decide to continue using functions you can get some inspiration from wordpress
you can probably reduce the program to a minimum by making templates more granular
37368
single-sign-on	siteminder
Pattern(s): 
crowd may be better but is again not free
you could consider some kind of single-sign-on software
i am unaware of any that are free and i ve only ever used siteminder which is neither free nor good
37408
daemons	systemd	daemons	launchd	daemons	launchd
Pattern(s): 
the use of a unix-domain socket means that the erlang daemons could be launchd on-demand by launchd and the cocoa front-end could find the path to the socket to use via an environment variable
that makes the rendezvous between the app and the daemons trivial and it also makes it straightforward to develop multiple front-ends or possibly a framework that wraps communication with the daemons
the mac os x launchd systemd is really cool this way
37660
postgresql	mysql
Pattern(s): 
i use postgresql and my answer works correctly there i tried it
see the postgresql update docs under parameters expression where it mentions that expressions on the right hand side of set clauses explicitly use the old values of columns
i see that the corresponding mysql update docs contain the statement single-table update assignments are generally evaluated from left to right which implies the behaviour you describe
37716
hash	md5
Pattern(s): 
random bit strings are obtained by taking a md5 hash of the contents of this pool
the one-way hash function distills the true random bits from pool data and hides the state of the pool from adversaries
the dev random routine maintains an estimate of true randomness in the pool and decreases it every time random strings are requested for use
37854
ingres	oracle	ingres	mysql	ingres	postgresql	postgresql	mysql
Pattern(s): 
if you trace microsoft sql server back to its roots i think you ll find ingres - one of the very first relational databases written in the 70s
and postgresql was originally written by some of the same people in the 80s as a successor to ingres
oracle goes way back and i m not sure where mysql came in
39105
direct3d	directx
Pattern(s): 
having said that opengl will be easier to start programming with
as direct3d is based heavily in com it has a steep learning curve
if it were me i would be choosing directx over opengl
40699
google-chrome	firefox
Pattern(s): 
you might find a more conclusive answer on the development site dev.chromium.org and some of the developers might be on irc on #chromium on freenode
google-chrome does support the netscape plugin api but that is for displaying certain kinds of content
you seem to be after a extention api really firefox is the only major browser to encourage and support third party extentions to browsing capability that aren t simply new toolbars nothing in the developer documentation points to a browser enhancing api - google seem to want to keep a tight reign on the look and feel of the application
41521
button	checkbox
Pattern(s): 
one is the usual click button and the other is a toggle button that acts similar to a checkbox
the default property of the commandbutton is actually the value property that indicates whether a button is toggled
by setting the property the click event is generated
44576
profiling	debugging	profiling	debugging
Pattern(s): 
they may be useful as a debugging aid however
i choose to log deliberately as i go as this means the log data is meaningful depending on logging framework you can add level severity category information so that the log data can be filtered you can make sure that the right level of information is present not too much not too little you know when writing the code which the most important things are and can therefore ensure they are logged using some form of code injection profiling or tracing tool to generate logs would most likely generate verbose less useful logs that would be harder to dive into
they may be useful as a debugging aid however
45421
ogre	irrlicht
Pattern(s): 
recently irrlicht has acquired official .net bindings allowing users to develop in .net languages such as vb.net c# and boo
there is also ogre 3d and also axiom engine

47909
udp	tcp	udp	tcp
Pattern(s): 
also the tcp header contains a lot of overhead intended for different signals and message delivery detection
for a message exchange udp will probably suffice if a small chance of failure is acceptable
if receipt must be verified tcp is your best option
48001
superclass	subclassing	superclass	subclassing
Pattern(s): 
another wrinkle in subclassing naming is multiple-level hierarchies
... rather than blindly prepend the modifiers to the immediate superclass think about the name from the reader s perspective
use that superclass as the basis for the subclassing name. interface two styles of naming interfaces depend on how you are thinking of the interfaces
49821
folder	directory
Pattern(s): 
always always store the uploaded files in a directory somewhere outside the document root and access them via some accessing-script which does additional sanitizing and at least explicitly sets a image whatever mime type
also i would recommend not to let the users upload into a folder that s accessible from the web
even the best mime type detection may fail and you absolutely don t want users to upload say an executable disguised as a jpeg in a case where your mime sniffing fails but the one in iis works correctly
51511
disk	ram
Pattern(s): 
this should only be a big problem if you have a very popular application
both database and filesystem session stores are usually backed by disk so you can have a lot of sessions cheaply because disk are cheap but requests will often have to wait for the data to be read because disk are slow
memcached sessions use ram so will cost more to support the same number of concurrent sessions because ram is expensive but may be faster because ram is fast
52633
width	margin
Pattern(s): 
your problem is that the 100 width does not include any padding or margin values
these values are added on top of the 100 width thus the overflow

52896
width	margin	width	margin
Pattern(s): 
the correct box model states that the width applies only to the content and padding and margin add on to it
so therefore your are getting 100 plus a 20px right and left padding equaling 100 +40px as the total width
the original ie box model also known as quirks mode includes padding and margin in the width
53056
equals	tostring	equals	gethashcode
Pattern(s): 
for some objects not this one a quick hashcode can be generated by tostring .gethashcode certainly not optimal but useful as people tend to return something close to the identity of the object from tostring and that is exactly what gethashcode is looking for trivia the worst performance i have ever seen was when someone by mistake returned a constant from gethashcode easy to spot with a debugger though especially if you do lots of lookups in your hashtable
whether you want a perfect hashfunction different value for each object that evaluates to equals or just a pretty good one is always a performance tradeoff it takes normally time to compute a good hashfunction and if your dataset is smallish you re better of with a fast function
the most important as your second post points out is correctness and to achieve that all you need is to return the length of the array
53056
equals	tostring	equals	gethashcode
Pattern(s): 
if it isn t say all your arrays are equally long you can go with something cheap like looking at the first and last value and xoring their values and then add more complexity as you see fit for your data
a quick way to see how your hashfunction performs on your data is to add all the data to a hashtable and count the number of times the equals function gets called if it is too often you have more work to do on the function
for some objects not this one a quick hashcode can be generated by tostring .gethashcode certainly not optimal but useful as people tend to return something close to the identity of the object from tostring and that is exactly what gethashcode is looking for trivia the worst performance i have ever seen was when someone by mistake returned a constant from gethashcode easy to spot with a debugger though especially if you do lots of lookups in your hashtable
54968
prepare	execute
Pattern(s): 
edit i think i found your bug here
from the documentation a prepare statement is a server-side object that can be used to optimize performance
when the prepare statement is execute the specifie statement is parsed rewritten and planned
55904
pbkdf2	salt
Pattern(s): 
ensuring that the attacker doesn t have a pre-computed dictionary corresponding to that particular salt is sufficient
key generation i would recommend using a recognized algorithm such as pbkdf2 defined in pkcs #5 version 2.0 to generate a key from your password
it s similar to the algorithm you outline but is capable of generating longer symmetric keys for use with aes
57668
goto	break
Pattern(s): 
thus continue not nearly as harmful
goto can be used as a continue but not the reverse
you can goto anywhere thus break flow control arbitrarily
57806
goto	break	goto	break
Pattern(s): 
but continue and break are enforced by the compiler and have their own associated rules
goto has no such limitations though the net effect might almost be the same in some circumstances
i do not consider continue or break to be harmful per se though i m sure either can be used poorly in a way that would make any sane programmer gag
58091
post	put
Pattern(s): 
i guess i wouldn t say this is a procedural approach necessarily -- it s just a misleading name you would assume in the modern oo world that a post object would be stateful and provide methods to manipulate and manage a set of post objects
if every method is just a static call straight to the data source then the post class is really a factory
you could certainly put the static methods in post into the post class this is how csla works but they are still factory methods
58363
memcached	apc
Pattern(s): 
both are in-memory caching solutions with dead-simple apis and lots of libraries
the trouble with those 2 is you need to install them on your web server or another server if it s memcached
apc pros simple fast speeds up php execution also cons doesn t work for distributed systems each machine stores its cache locally memcached pros fast ish can be installed on a separate server for all web servers to use highly tested developed at livejournal used by all the big guys facebook yahoo mozilla cons slower than apc possible network latency slightly more configuration i wouldn t recommend writing your own there are plenty out there
58587
nunit	mspec
Pattern(s): 
if however you just mean the style of bdd that relates to unit testing xspec though you can get away with adding a framework though things like specunit do add some synctactic sugar but you might want to look at mspec is also interesting
nunit and rhino suit well and the auto-mocking container might be of interest
if you re looking at bdd too then nbehave is probably a good choice
58785
robocopy	xcopy
Pattern(s): 
the command is robocopy .
robocopy robocopy or robust file copy is a command-line directory and or file replication command
robocopy functionally replaces xcopy with more options
59054
hash	salt
Pattern(s): 
it s often better not to keep the data at all but to keep the hashed version so bad guys can t easily use it
as your co-worker suggests this can be trivially defeated by running the same hash algorithm against a dictionary and using rainbow tables to pull the info out
the usual solution is to use a secret salt plus additional user information to make the hashed results unique- something like as long as your salt is secret or your attacker doesn t know the precise creation date of the user s record a dictionary attack will fail- even in the event that they are able to pull down the password field
60077
children	parent	children	parent
Pattern(s): 
for example the unix fork call returns the child pid in the parent process and 0 in the child process createprocess on windows returns iirc the pid of the new process created
as far as i know a process doesn t have an explicit list of its children s pids but it can easily be built since a process should know which child processes it spawns
for example the unix fork call returns the child pid in the parent process and 0 in the child process createprocess on windows returns iirc the pid of the new process created
60119
cassini	iis
Pattern(s): 
at this point you will be able to run your localhost over https
cassini does not support https
however you can use iis to do this if your using iis 5.1 download the ms iis toolpack for iis 6.0 it comes with a tool to create self signed ssl certificates
60315
internationalization	translation
Pattern(s): 
when i tried to find a reasonably priced replacement i did not find one
in my experience internationalization requires a little more than translating strings
many strings when translation require more space on a dialog
60531
folder	directory	folder	directory
Pattern(s): 
finally you can do as vadim suggests and put cd c dir_a in your .emacs file to make that directory the default no matter how you start emacs
the default folder is actually the same as the current working folder for the buffer it can be different for every file you work with
say that the file you are working with is located in c dir_a then the working directory for that buffer will by default be c dir_a
60759
hash	salt
Pattern(s): 
if your hash algorithm includes the username replacing the password hash with another one will not work
unix stores hash in a a text file etc shadow which is accessible only to privileged users
passwords are encrypted with a salt
60879
ready	each
Pattern(s): 
see how to convince a company to switch their source control then apply known-good practices check in often pick up others changes often to simplify merging use fast unit tests to make sure each change meets a minimum bar require that that the checked-in code always builds and always passes tests
now you won t be production ready at this point you will still need a couple weeks to test fix before you can deploy
getting that time down is awesome for you and awesome for your customer so invest in high quality automated acceptance tests
61138
lisp	scheme
Pattern(s): 
in terms of memory management unlike everything else i ve listed it s not garbage collected though that s now an option on mac os x 10.5 but it does have a reference counting scheme which makes life significantly simpler than managing memory by hand
lisp - i ve never learnt it myself beyond what i needed for minor emacs hacking
as i understand it the libraries were nice in their day but though the language remains supremely elegant they ve fallen a little behind the times
61232
int	chars
Pattern(s): 
when p is -1 which is then converted from a signed chars to a signed int it is still -1 which has a representation of 0xffffffff which is not equal to 0xff
int literals have signed int type
since 0xff is a signed int the compiler converts p to a signed int and then does the comparison
62848
g++	gcc
Pattern(s): 
but i m pretty sure g++ v4 is the standard development c++ compiler if you install the c++ development environment at all
g++ v3 is usually just available as a special install
for opensuse 11 gcc 4.3 is the current package installed when you pick the base development pattern
64422
cpu	processors	cpu	processors
Pattern(s): 
in my example you can see cpu0 through cpu3 for a total of 4 processors
from now on you can ignore cpu0..cpu3 and focus only on the cpu line
next you need to know that the fourth number in these lines is a measure of idle time and thus the fourth number on the cpu line is the total idle time for all processors since boot time
64604
boost	stl
Pattern(s): 
there is also boost while not a gui library boost is a really great complement to c++ s stl
in fact some of the boost libraires will be added in the next c++ standard

65415
implements	extends
Pattern(s): 
javascript uses prototype-based object orientation and provides the ability to extends types at runtime an object delegates all access to attributes that it doesn t contain itself to its prototype another object
this can be used to implements inheritance but is actually more powerful even if more cumbersome

65603
ndepend	fxcop
Pattern(s): 
however fxcop does not detect all methods without upstream callers as it is meant to check in the case that your code is part of a library so public members are left out
you can use ndepend to do a search for public members with no upstream callers which i detail here in this other stackoverflow answer
edit added information about gendarme which actually does what the questioner asked
66678
decimal	ieee
Pattern(s): 
floats were according to ieee 754 always binary only the new standard ieee 754r defined decimal formats
many of the fractional binary parts can never equal the exact decimal representation
any binary number can be written as m 2 n m n positive integers any decimal number as
66956
children	parent
Pattern(s): 
if you need to navigate up the tree then the node class needs a link to its parent node
build an addchild method that takes care of all the minutia of these two points and any other business logic that must be implemented child limits sorting the children etc.

67611
effort	xunit.net
Pattern(s): 
what would have traditionally taken days of qa and boat loads of stress was instead a short and enjoyable experience
prep up front a little bit of extra effort and it pays 10-fold later on when you have to start dicking around with core features functionality
i bought this book - it s a bible of xunit.net testing knowledge - tis probably one of the most referenced books on my shelf and i consult it daily link text
69040
actionscript	mxml
Pattern(s): 
mxmlc an actionscript and mxml compiler to output the final swf file for deployment to flash player. 2
compc a static library compiler for actionscript that outputs swc files. 3
asdoc a documentation generator built on the compiler technology
69641
plpgsql	plpython
Pattern(s): 
of course if speed is a serious concern c is the way to go
i write pretty much everything in plpgsql but i m also a database guy first and foremost so it generally suits me better than any other language
but there s plenty of things that it doesn t do very well in which case another language such as plperl or plpython is a good bet
70083
magento	oscommerce
Pattern(s): 
compared to something like oscommerce though it wins hands down
magento is pretty good and really powerful but getting to grips with how to go about extending replacing things is pretty tricky
the codebase is massively flexible and just about anything can be replaced or extended but there s very little documentation on how to go about doing it
70423
quicksort	heapsort	quicksort	heapsort
Pattern(s): 
but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average
quicksort is the fastest sorting algorithm in practice but has a number of pathological cases that can make it perform as badly as o n2
heapsort is guaranteed to run in o n ln n and requires only finite additional storage
70427
quicksort	mergesort
Pattern(s): 
i m a bigger fan of mergesort than i am of quicksort for these reasons
quicksort has a better average case complexity but in some applications it is the wrong choice
quicksort is vulnerable to denial of service attacks
70428
quicksort	heapsort	quicksort	mergesort	mergesort	heapsort	mergesort	in-place	heapsort	in-place
Pattern(s): 
note that when operating on linked lists mergesort only requires a small constant amount of auxiliary storage.
from the wikipedia entry on quicksort quicksort also competes with mergesort another recursive sort algorithm but with the benefit of worst-case θ nlogn running time. mergesort is a stable sort unlike quicksort and heapsort and can be easily adapted to operate on linked lists and very large lists stored on slow-to-access media such as disk storage or network attached storage. although quicksort can be written to operate on linked lists it will often suffer from poor pivot choices without random access
the main disadvantage of mergesort is that when operating on arrays it requires θ n auxiliary space in the best case whereas the variant of quicksort with in-place partitioning and tail recursion uses only θ logn space
70428
mergesort	in-place
Pattern(s): 
the main disadvantage of mergesort is that when operating on arrays it requires θ n auxiliary space in the best case whereas the variant of quicksort with in-place partitioning and tail recursion uses only θ logn space
note that when operating on linked lists mergesort only requires a small constant amount of auxiliary storage.

70430
quicksort	mergesort	quicksort	mergesort
Pattern(s): 
in the worst case they are the same amount of algorithmic time but mergesort requires more storage
wikipedia s explanation is typically quicksort is significantly faster in practice than other θ nlogn algorithms because its inner loop can be efficiently implemented on most architectures and in most real-world data it is possible to make design choices which minimize the probability of requiring quadratic time
quicksort mergesort i think there are also issues with the amount of storage needed for mergesort which is ω n that quicksort implementations don t have
70631
quicksort	heapsort
Pattern(s): 
it achieves this by limiting the recursion depth and switching to a different algorithm heapsort once it exceeds log n
quicksort has o n 2 worst-case runtime and o n log n average case runtime
however it s superior to merge sort in many scenarios because many factors influence an algorithm s runtime and when taking them all together quicksort wins out
70741
subtract	addition
Pattern(s): 
in the first loop you can use plain addition since you are only ever oring with single bits and you can narrow the scope of by iterating over indices
in the second loop you can subtract 1 from the index instead of producing an unnecessary 0th output list element that needs to be shift ed off and where you unnecessarily iterate m n times where m is the number of output lists and n is the number of unique elements iterating over the unique elements would reduce the iterations to just n which is a significant win in typical use cases where m is much larger than n and would simplify the code
note also that once thought of in this way the result gathering process can be written very concisely with the aid of the list part module but note that list_compare is a terrible name
70848
openbsd	linux	openbsd	netbsd	openbsd	freebsd
Pattern(s): 
edit whether popen produces unidirectional or bidirectional pipes depends on the implementation
in linux and openbsd popen produces unidirectional pipes which are read-only or write-only
on os x freebsd and netbsd popen produces bidirectional pipes
71105
rtl	verilog	rtl	hdl
Pattern(s): 
here is one that runs on windows supposedly
the verification of logical systems in the ic design arena is known as design verification which is the process of ensuring that the system you design in hardware rtl implements the desired functionality
ladder logic can be transformed to one of the modern hdl s like verilog
71642
textmate	jedit	textmate	notepad++
Pattern(s): 
other editors in the past i did take a look at notepad++ but that was a while ago and it didn t have a nice way to define your own syntax highlighting which is important for me
i also paid for textmate and ultraedit at different times both very good but in the end jedit comes out on top for me
i also used eclipse for a year or so
72219
hash	md5
Pattern(s): 
example md5 x y z is unique and you can store only the resulting string
the hash is not a performant idea but you get the concept
find any methematic unique transformation and you have it
73863
cvs	rcs	cvs	svn
Pattern(s): 
these commands will make a good guess and then possibly set a binary svn mime-type property on the file being added. if subversion guesses wrong the user can always remove or hand-edit the property. hand editing would be done by svn propset svn mime-type some type filename.extension
from page 367 of the subversion book in the most general sense subversion handles binary files more gracefully than cvs does. because cvs uses rcs it can only store successive full copies of a changing binary file. subversion however expresses differences between files using a binary differencing algorithm regardless of whether they contain textual or binary data
that means all files are stored differentially compressed in the repository
73946
post	get
Pattern(s): 
obtaining a range allows you to get set all of the data you want in one call which can have huge performance benefits but it requires you to use explicit details rather than iterating through each entry
this msdn forum post shows a vb.net developer asking a question about getting the results of a range as an array

75638
lua	scheme
Pattern(s): 
the guys behind lua have repeatedly listed scheme and lisp as major influences on lua and lua has even been described as scheme without the parentheses
lua
it s used as a scripting extension language for a number of games like world of worcraft and applications snort nmap wireshark etc
75638
lua	scheme
Pattern(s): 
it s used as a scripting extension language for a number of games like world of worcraft and applications snort nmap wireshark etc
in fact according to an adobe developer adobe s lightroom is over 40 lua
the guys behind lua have repeatedly listed scheme and lisp as major influences on lua and lua has even been described as scheme without the parentheses
75883
int	chars
Pattern(s): 
in almost all compiler for all platform an unsigned chars is simply a byte
an unsigned int of usually 8 bits
that can be treated as a small int or a pack of bits
76012
lisp	scheme
Pattern(s): 
i believe scheme has the same facility but i m not as familiar with it -- see the scheme sources for the arc programming language
as a simple example let s suppose you want lisp to use curly braces rather than parentheses
this requires something like the following reader definitions you re telling lisp that the is like a and that the is like a
76040
xna	slimdx
Pattern(s): 
i m personally using it for my hobby game projects and it has treated me very well
xna isn t the only alternative though
there is also slimdx which is under constant development as a means of providing a lean wrapper of directx in a similar fashion as managed directx which was i believe discontinued by microsoft in favor of xna
77328
textmate	bbedit	textmate	textwrangler
Pattern(s): 
some more obscure languages are not as well-supported in it but for most purposes it s fantastic
the only devs i know who like textmate are ruby fans
i really do not get the appeal it s marginally better than textwrangler bbedit s free little brother but if you re spending money you may as well buy the better tool for a few dollars more
77777
rss	feed
Pattern(s): 
at least with sqlite you get atomicity so you are assured that your application will start with the same state as when the last database write was made
i wouldn t use xml for storing rss items
a feed reader makes constant updates as it receives data
77794
bazaar	git	bazaar	git
Pattern(s): 
it is very easy to lose a commit or ruin a repository especially if you do not understand the inner workings of git
mercurial and bazaar resemble themselves very much on the surface
they both provide basic distributed version control as in offline commit and merging multiple branches are both written in python and are both slower than git
77794
bazaar	git
Pattern(s): 
git well is not for the uninitiated
it is much faster than both mercurial and bazaar and was written to manage the linux kernel
it is the fastest of the three and it is also the most powerful of the three by quite a margin
77943
bazaar	svn	bazaar	git
Pattern(s): 
git is fastest but all three are fast enough
bazaar is the most flexible it has transparent read-write support for svn repositories and cares a lot about the user experience
mercurial is somewhere in the middle
77945
quicksort	mergesort
Pattern(s): 
with o n 2 worst case that rarely happens quicksort is potentially far slower than the o nlogn of the merge sort
quicksort has less overhead so with small n and slow computers it is better
but computers are so fast today that the additional overhead of a mergesort is negligible and the risk of a very slow quicksort far outweighs the insignificant overhead of a mergesort in most cases
78383
atomic	compare-and-swap
Pattern(s): 
oh version 2.0 of that processor didn t do the cache-coherency snooping at the right time it s fixed in version 2.0.1 but on 2.0 you need to insert a nop . just slapping a volatile keyword on a variable in c is almost always insufficient
on mac os x that means you need to use the functions listed in atomic 3 to perform truly atomic-across-all-cpus operations on 32-bit 64-bit and pointer-sized quantities
use the latter for any atomic operations on pointers so you re 32 64-bit compatible automatically. that goes whether you want to do things like atomic compare-and-swap increment decrement spin locking or stack queue management
78446
matplotlib	chaco
Pattern(s): 
the main advantages of chaco are its speed relative to matplotlib and its integration with enthought s traits api for interactive applications
for interactive work matplotlib is the mature standard
it provides an oo-style api as well as a matlab-style interactive api
79118
asterisk	pbx
Pattern(s): 
and also classical telephony t1 e1 fxo fxs etc with the help of interface cards from digium and other suppliers sangoma rhino etc . you can find more info about asterisk at asterisk is an open source software pbx that runs primarily on linux
lumenvox speech engine is a commercial speech recognition solution digium sangoma and rhino are telephony card manufacturers that are compatiible with asterisk

79771
subtraction	multiplication	subtraction	addition	addition	multiplication
Pattern(s): 
for example 0.72 is represented as the integer 72
addition and subtraction are then a very simple integer operation such as 0.72 + 1 becomes 72 + 100 becomes 172 becomes 1.72
multiplication is slightly more complex as it needs an integer multiply followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44
80740
sbrk	setrlimit
Pattern(s): 
the stack grows automatically when accessed up to a size set by the kernel which can be adjusted with setrlimit rlimit_stack ...
the heap grows when the memory allocator invokes the brk or sbrk system call mapping more pages of physical memory into the process s virtual address space
in systems without virtual memory such as some embedded systems the same basic layout often applies except the stack and heap are fixed in size
80805
rtos	qnx
Pattern(s): 
most embedded operating systems will provide similar functionality
another way to define real-time is by evaluating the capabilities of the many rtos s real-time operating systems
e.g qnx s definition is here
83316
redmine	trac
Pattern(s): 
trac is also popular but it lacks suport for aggregation of data across projects
i like redmine for this
the only thing it s missing from your criteria is voting but there might even be a plugin for this
84763
activeperl	perldoc
Pattern(s): 
so if perldoc uses a different pager this might not work
activeperl comes with html documentation you can open perlvar in your browser hit ctrl+f and type env then hit enter

85803
postgresql	mysql
Pattern(s): 
we still have few problems with the postgresql one
we did a move from a mysql3 to postgresql 8.2 then 8.3
postgresql has the basic of sql and a lot more so if your mysql do not use fancy mysql stuff you will be ok
85846
ssl	https
Pattern(s): 
the mod_rewrite solution is also very nifty i ve used it to secure a lot of applications on my own website
use to tell if it is ssl and redirect to the right place if not
and remember the page that displays the form does not need to be fed via https it s the post back url that needs it most
86173
jython	pypy
Pattern(s): 
pypy is an experimental interpreter compiler that may one day supplant cpython but for now is more of a testbed for new ideas
jython and ironpython are useful if you have an overriding need to interface with existing libraries written in a different platform like if you have 100 000 lines of java and you just want to write a 20-line python script
not particularly useful for anything else in my opinion because they are perpetually a few versions behind cpython due to community inertia
86590
ferret	sphinx
Pattern(s): 
this was one of the big selling points for me
when you do have to mass index your data ferret is definitely slower than acts_as_sphinx by a factor of 3
i ended up writing my own method to re-index models which works as fast as sphinx -- it basically preloads all the data from the db instead of going record by record to create the new index
86590
ferret	sphinx	ferret	sphinx
Pattern(s): 
i ended up writing my own method to re-index models which works as fast as sphinx -- it basically preloads all the data from the db instead of going record by record to create the new index
the ferret documentation is good for the basics but it s a bit sparse once you get into more complex searches sorts and using a drb server to host a remote index
that being said it feels a much more mature product than acts_as_sphinx although i have limited experience with sphinx
87006
accurev	svn	accurev	cvs
Pattern(s): 
i ve used svn cvs clearcase base ucm ccc harvest but none of them can beat accurev s strengths
you can use accurev distributed solution accureplica for that - which mean you have one single master server and as many as you want replicas on remote sites so those with the slow link won t suffer much above all accurev brings a unique approach - a truly new concept design implementation of stream-based scm tool
not in the bad way clearcase-ucm did that because clearcase streams were eventually branches but in slick modern way
87861
x86	64bit
Pattern(s): 
you didn t specify the memory layout of the inputs and outputs so it s impossible to write sample code
since you re on x86 you need 4 mull instructions
split the 64bit quantities into two 32bit words and multiply the low words to the lowest and 2nd lowest word of the result then both pairs of low and high word from different numbers they go to the 2nd and 3rd lowest word of the result and finally both high words into the 2 highest words of the result
88049
hash	salt
Pattern(s): 
a http response is started such as as a webservice user fetches get ticket number for user account
username donkey key 99754106633f94d350db34d548d6091a server checks if his calculated hash is the same as the one submitted
advantages of this method -server never knows password only salt hash
88049
hash	salt
Pattern(s): 
advantages of this method -server never knows password only salt hash
-even the hash is never transmitted through the wire - no replay attacks

89299
folder	directory
Pattern(s): 
this means you can just check out the full thing or if you already have the full thing then cut paste the www directory out to somewhere else and it will remain linked to the correct cvs location
cvs is tied to the repository by files in the .cvs folder
each folder is tied individually
89530
apache	nginx	apache	lighttpd	nginx	lighttpd
Pattern(s): 
here s an example nginx configuration for running a wordpress blog through php fastcgi note i ve also put in the nginx equivalent of the wordpress .htaccess so you will also have fancy urls already working with this config here s the fastcgi.conf file i m including in the above config i put it in a separate file so all of my virtual host config files can include it in the right place but you don t have to do this i also happen to do what the nginx wiki suggests and use spawn-fcgi from lighttpd as my cgi-spawner lighttpd is a pretty fast compile w o weird dependencies so a quick and easy thing to install but you can also use a short shell perl script for that
actually since you re using nginx you re already in great shape and don t need apache
you can run php through fastcgi there are examples of how to do this in the nginx wiki and use a url-matching pattern in your nginx configuration to direct some urls to rails and others to php
89677
udp	tcp	udp	tcp
Pattern(s): 
example tcp 192.168.1.21 sql2k5 1443
if you re connecting to a named instance and udp is not available when connecting to it then you may need to specify the protocol as well
example tcp 192.168.1.21 sql2k5 1443
90040
put	get
Pattern(s): 
you could not get a 100 but still have tested all your 80 freq used code-paths
having tests that test every throw exceptiontypex or similar defensive programming guard you ve put in is a nice to have not a must have so trust yourself or your developers to be thorough and cover every path through their code
be pragmatic and don t chase the magical 100 coverage
91848
versioning	upgrade
Pattern(s): 
the 2005 versioning only installs into visual studio 2005
to download the 2008 versioning see the following link note that if you have previously applied sp1 of visual studio 2008 then you will need to run it again once installing team explorer
for what it is worth i would encourage you to upgrade to tfs 2008 on the server side as soon as you can
93822
move	drag
Pattern(s): 
drag or momentum can just be encoded as a basic resistance to motion and amount to throttling the movements
it can be applied differentially things can move slower based on how far they ve gone where they are in space how many other nodes are close etc.
hope this helps
94119
junit	easymock	junit	easymock
Pattern(s): 
also if you don t have an interface but you want to mock a concrete class easymock has a class extension
if you are using junit to test use mocks instead of stubs
read martin fowler s seminal article mocks aren t stubs i recommend the easymock framework it works like a charm automatically mocking your interface using reflection
94447
superclass	subclassing
Pattern(s): 
suppose this method is changed in the parent class to this change will not cause any compile time errors or warnings - but it completely changes the intended behavior of the subclassing
to answer your question you should use the override annotation if the lack of a method with the same signature in a superclass is indicative of a bug

95586
serializable	deserialization
Pattern(s): 
the url was aydsman s answer is correct more info here i can t think of any use-case for an exception with non-serializable members but if you avoid attempting to serialize deserialize them in getobjectdata and the deserialization constructor you should be ok
also mark them with the nonserialized attribute more as documentation than anything else since you are implementing the serializable yourself

97431
google-chrome	safari
Pattern(s): 
it is not real ie it s mainly only its rendering engine html+css+js plus web client http and some more protocols control itself has no menu bookmarks etc
google-chrome is full featured browser
so you should be asking for webkit rendering engine google-chrome use developed by safari s guys control
98367
copying	overwrite
Pattern(s): 
if you want to try it out use when in vim
i d actually suggest just copying the contents to your .vimrc as it s well commented and a good place to start learning how to use vim
you can do this by this will overwrite your current .vimrc but if all you have in there is the indent settings davr suggested i wouldn t sweat it as the example vimrc will take care of that for you as well
98589
int	chars
Pattern(s): 
so for genuine portability issues which mostly are implementation-dependent rather than unspecified or undefined but i think that falls into the spirit of the question chars is not necessarily un signed
int can be any size from 16 bits
floats are not necessarily ieee-formatted or conformant
99194
for-loop	loops	for-loop	loops
Pattern(s): 
the while loops is appropriate for polling or where the number of loops to meet exit condition will change based on activity inside loops
i would agree that the for-loop is clearer and more appropriate when iterating
the while loops is appropriate for polling or where the number of loops to meet exit condition will change based on activity inside loops
99221
x86	mips
Pattern(s): 
weather learning mips assembly is useful to you depends on what career you plan to follow
personally i think x86 x64 popular in pcs directly applicable if you write c++ or c# on pc ppc gaining popularity used in game consoles and also exposes you to risc or arm used in a lot of embedded devices such as mobile phones might be better choices to learn

99235
x86	mips	x86	mips
Pattern(s): 
most compilers will dump assembly code for you on request instead of going on to machine code and linking. that said mips asm is probably useless because almost nobody uses mips now
sgi used to but now their machines are all on x86 ia-64 chips. if you find assembly language appealing and want to work in assembly further learn the arm instruction set
arm is only a little more complex than mips and virtually all mobile phones smart phones and pdas now use arm chips made by dozens of manufacturers
100146
metaclass	subclassing
Pattern(s): 
to create your own metaclass in python you really just want to subclassing type
a metaclass is most commonly used as a class-factory
like you create an instance of the class by calling the class python creates a new class when it executes the class statement by calling the metaclass
102717
extjs	gxt
Pattern(s): 
there is a difference extjs gwt is the one that is actually produced by the company that wrote extjs the javascript library
gwt extjs is a gwt wrapper around the extjs library
gxt is native gwt
102717
extjs	gxt	extjs	gxt
Pattern(s): 
however the future is with gxt as it s native gwt and actually developed by the company that made extjs
gwt extjs is somewhat crippled as the license changed on the extjs library thus slowing the development of gwt extjs
overall i think gwt gxt is a good solution for developing a web application
103227
hash	salt
Pattern(s): 
you re now completely immune to rainbow table attack
comparing hash is a good solution
make sure that you don t just salt all the credit card numbers with the same constant salt though
104095
cassini	iis
Pattern(s): 
cassini is not ment to be a replacement
cassini is ment to be a light waight test webserver
the idea is that a developer does not need to have iis installed and configured to test his application
105570
maven	cargo	maven	m2e
Pattern(s): 
anyway if you re planning to read in your spare time here s a free book pdf format maven the definitive guide hope it helps
maven would be just fine for what you want to do
unlike most build tools maven uses conventions wisely well better than many others at least and it has plugins for every area you mentioned unit tests maven surefire plugin eclipse integration m2e deploying war file war plugin and deploy plugin maven can also help you in integration tests on tomcat if you have some since you can start stop or deploy a war using the cargo plugin
105570
maven	cargo	maven	m2e
Pattern(s): 
unlike most build tools maven uses conventions wisely well better than many others at least and it has plugins for every area you mentioned unit tests maven surefire plugin eclipse integration m2e deploying war file war plugin and deploy plugin maven can also help you in integration tests on tomcat if you have some since you can start stop or deploy a war using the cargo plugin
anyway if you re planning to read in your spare time here s a free book pdf format maven the definitive guide hope it helps

106334
postgresql	mysql
Pattern(s): 
in your example you would want something like this select o.id o.address o.otherdetails group_concat concat e.firstname e.lastname as employees from employees e inner join organization o on o.org_id e.org_id group by o.org_id postgresql - edit postgresql 9.0 is equally simple now that string_agg expression delimiter is built-in
here it is with comma-space between elements select o.id o.address o.otherdetails string_agg e.firstname || || e.lastname as employees from employees e inner join organization o on o.org_id e.org_id group by o.org_id postgresql before 9.0 allows you to define your own aggregate functions with create aggregate
slightly more work than mysql but much more flexible
107415
post	put
Pattern(s): 
an http put is supposed to accept the body of the request and then store that at the resource identified by the uri
an http post is more general
it is supposed to initiate an action on the server
107883
factors	mean
Pattern(s): 
if instead we want to say that a function grows exactly as quickly as some other function we use theta to make that point i ll write t f n to mean theta of f n in markdown
t g n is short hand for being bounded from above and below by g n again up to a scaling factors and asymptotically
that is f n t g n f n o g n and g n o f n
108030
udp	tcp	udp	tcp
Pattern(s): 
if you want to get reliability out of udp then you re basically going to be re-implementing some of tcp s features on top of udp which will probably make things slower than just using tcp in the first place
there are various standard reliable udp protocols out there what experiences do you have with them
i think you really need to prove to yourself that tcp is in fact too slow for your needs if you need reliability in your protocol
108451
udp	tcp
Pattern(s): 
tcp is generally as fast as it gets for reliable streaming of data from one host to another
however if your application does a lot of small bursts of traffic and waiting for responses udp may be more appropriate to minimize latency
there is an easy middle ground
109038
cairngorm	flex	cairngorm	puremvc
Pattern(s): 
puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t
cairngorm is full of anti-patterns like heavy use of global variables puremvc hides the worst parts of itself
puremvc is anti-flex cairngorm just doesn t use many of the good parts of flex
110037
jxtable	jtable
Pattern(s): 
it s freely available from jdnc swinglabs
look into jxtable
jxtable is an extension of jtable that supports multi-column sorting as well as other functions that jtable doesn t provide
110162
postgresql	mysql
Pattern(s): 
mysql is a pretty popular database lots of tools are available and lots of books
sqlite and postgresql are also quite popular and also free open-source

110296
inherited	properties
Pattern(s): 
if you want to apply the properties in the first set of brackets to .d as well it will need to be specified in the selector list
you also need to separate the selectors with commas so they become a list not an inherited
example
110621
accessor	properties	accessor	properties
Pattern(s): 
an easier way is to use anonymous methods this will work in .net 2.0 or later let s use a slightly modified version of your code example for a properties named foo of type int that is part of a class someclass
you can use reflection you can get a methodinfo object for the get set accessor and call it s invoke method
the code example assumes you have both a get and set accessor and you really have to add error handling if you want to use this in production code for example to get the value of properties foo of object obj you can write to set it so you can pass obj.gettype .getproperty foo .getaccessors 0 to your method and execute it s invoke method
112465
short	base	short	base
Pattern(s): 
i ve noticed my self included people tend to use interfaces to group classes together when really that should be handled by a base class
in short yes it is possible to over interface a project
take into account when the situation really calls for an abstract base class and an interface while they both are similar there are distinct advantages to using both see here
112505
qgraphicsview	qgraphicsitem
Pattern(s): 
there is no generally accepted canvas class for gtk+
you can use qgraphicsview in pyqt
each state is a new qgraphicsitem which is either a bitmap or a path object
113048
width	margin
Pattern(s): 
there s been plenty of other questions on here about when to use and when not to use tables which may help explain when and where to uses divs and tables
you ll need to make sure that all your cells float either left or right depending on their internal ordering and they also need a fix width
also make sure that their row has a fixed width which is equal to the sum of the cell widths + margin + padding
113420
try-catch	exception-handling	try-catch	exception-handling
Pattern(s): 
of course if there wasn t an exception-handling then the test case should be considered a fail
i think you can just do an explicit try-catch in your test code instead of relying on the expectedexception attribute to do it for you
then you can come up with some helper method that will read the resource file and compare the error message to the one that comes with the exception-handling that was caught
114544
postgresql	mysql
Pattern(s): 
these databases are very different - mysql is speed and simplicity postgresql is robustness and concurrency
it will be easier for you to learn postgresql it is not that hard

115063
wtl	atl
Pattern(s): 
it is light-weight but still supports all the modern features of the os
windows template library windows template library wtl is a c++ library for developing windows applications and ui components
it extends atl active template library and provides a set of classes for controls dialogs frame windows gdi objects and more
115944
getter	setter
Pattern(s): 
therefore if there is no business logic for example when a getter simply returns a value or a setter sets it then there is no point in writing a test
if however there is some logic getter changes the data in some way before returning it then yes you should have a unit test. as a general rule i believe one should not write tests for beans that do not contain any business logic

116106
folder	directory
Pattern(s): 
however instead of setting svn ignore to . on the cache directory you may want to include cache in the parent directory s svn ignore property in case the cache directory is not always present
i do this on a number of throwaway folder

116114
stdout	stderr
Pattern(s): 
backticks use minimal syntax for what can be a heavy command
one reason users might be temped to use backticks instead of system is to hide stdout from the user
this is more easily and flexibly accomplished by redirecting the stdout stream further getting rid of stderr is easily accomplished in situations where it makes sense to use backticks i prefer to use the qx in order to emphasize that there is a heavy-weight command occurring
116753
hash	salt	hash	md5	hash	md5	salt	md5	salt	md5
Pattern(s): 
when a unique salt is used the benefit of using a more secure algorithm than sha1 or md5 is not really necessary at that point it s an incremental improvement whereas using a salt is a monumental improvement
add a unique salt to the hash password value store the salt value in the db
when a unique salt is used the benefit of using a more secure algorithm than sha1 or md5 is not really necessary at that point it s an incremental improvement whereas using a salt is a monumental improvement
118049
post	get
Pattern(s): 
since you are calling this multiple times you may get better performance copying the list once and destructively deleting from it
alternatively looking back over your original post it is a little confusing.
you say you remove all elements bigger than x but your code looks like it is attempting to remove all elements x is bigger than
118689
rss	feed	rss	feed
Pattern(s): 
you should not be putting style attributes on your feed
the point of rss is to be display agnostic
you should not be putting style attributes on your feed
118965
width	margin
Pattern(s): 
say you have a main pane on which all your page s content lies
you want it to be centered in the window always and 80 of the width of the window
simply do this #centerpane margin auto
122063
gridbaglayout	boxlayout
Pattern(s): 
also by grouping like display functionality into a panel it creates more readable code
i ve found that for any non-trivial gui i use multiple layouts with nested sub-panels where the main panel may have a gridbaglayout and each sub-panel typically without a border or indication that it is a panel uses a simpler layout where possible
typically i ll use borderlayout flowlayout and boxlayout for smaller simpler sub-panels
122300
sudo	passwd
Pattern(s): 
i d also have to wonder why so many people have the root passwd
sudo is there specifically to avoid giving people the root password.

123156
temporary	tablespace	temporary	tablespace
Pattern(s): 
these can be materialised as a data segment in a temporary tablespace either automatically by oracle when they exceed a certain memory usage or manually by using the materialize optimizer hint
the global temporary table is simply the logical definition of a table structure name column names column data types etc
when a session references it by inserting data a data segment is created in a temporary tablespace to hold only that session s data
123307
lxml	elementtree	lxml	celementtree
Pattern(s): 
it s pythonic comes in the box with python 2.5 including the c version celementtree xml.etree.celementtree which is 20 times faster than the pure python version and is very easy to use
lxml has some perfomance advantages but they are uneven and you should check the benchmarks first for your use case
as i understand it elementtree code can easily be ported to lxml
123432
clientaccesspolicy.xml	crossdomain.xml
Pattern(s): 
i ll try to play with fiddler although there is a slight issue as the xaml control is not embedded into a web page its using the inbuilt testpage renderer
here is a few pointers that iv found that need to be checked adding a clientaccesspolicy.xml as a shown my question
adding a crossdomain.xml to the host route ensure binding is basichttp as this is the only one supported by silverlight currently the service needs this attribute useful reads
124042
internationalization	translation	internationalization	globalization
Pattern(s): 
but because you said open source i think the globalization support in open source projects is generally outstanding
linux sucks are pretty much everything but internationalization is something they get right
gettext is still one of the few translation systems that has a i know half baked but working pluralization system
124384
downcasting	upcasting
Pattern(s): 
but you can t have an object of base class referenced by a reference of a derived class type
downcasting makes sense if you have an object of derived class but it s referenced by a reference of base class type and for some reason you want it back to be referenced by a derived class type reference
in other words you can downcast to reverse the effect of previous upcasting
125553
matlab	simulink
Pattern(s): 
-adam
you might be surprised at the number of people that use matlab for this and as it could be considered a programming language and certainly manages its own memory with support for huge data sets etc then it should seriously be considered as a solution here
so once you arrive at an algorithm you want to package up you can have it generate the c code to perform the work you originally had in your m script or simulink model
126773
lisp	scheme
Pattern(s): 
i do not know much about autolisp or all the other lisp dialects beside scheme and common lisp but what i do know is that common lisp is definitely not a single-paradigm language that eschews imperative or even object-oriented programming
in fact common lisp features the most powerful class-based object system that i know of incorporating stuff like aspect-oriented programming out of the box
lisp seems to me to actually be the language family that most encourages experiments in new directions and most easily incorporates programming paradigms that aren t supported from the get-go
132632
swt	nebula
Pattern(s): 
nebula grid fits in well with the widget + viewer paradigm
i was able to migrate from normal swt table to this in a matter of minutes

132787
tapestry	wicket	tapestry	struts
Pattern(s): 
struts tiles is the classic example in the java world but it is really getting old and crufty compared to more modern framworks in java and other languages
tapestry and wicket are two more modern ones haven t used them though
for only 3 pages applying a whole web framework is probably overkill though but if your site grows.
133155
for-loop	arrays
Pattern(s): 
the second for-loop is pretty obscure it s basically splitting the arrays into a head the first element and a tail all other elements
haskell does it with the notation x xs but batch files do it with a for-loop called with the f switch
why not
134346
hash	md5
Pattern(s): 
using a non-reversible hash such as md5 is much more secure and you can store the hashed value as clear text
simply hash the entered password and then compare it with the stored hash

135226
opera	firefox	opera	safari	firefox	safari	getter	setter
Pattern(s): 
john resig has a good explanation
here s the full version breakdown ie 6-7 support jscript 5 which is equivalent to ecmascript 3 javascript 1.5 ie 8 supports jscript 6 which is equivalent to ecmascript 3 javascript 1.5 - more bug fixes over jscript 5 firefox 1.0 supports javascript 1.5 ecmascript 3 equivalent firefox 1.5 supports javascript 1.6 1.5 + array extras + e4x + misc. firefox 2.0 supports javascript 1.7 1.6 + generator + iterators + let + misc. firefox 3.0 supports javascript 1.8 1.7 + generator expressions + expression closures + misc. the next version of firefox will support javascript 1.9 1.8 + to be determined opera supports a language that is equivalent to ecmascript 3 + getter and setter + misc
safari supports a language that is equivalent to ecmascript 3 + getter and setter + misc
135367
boost	stl
Pattern(s): 
so use stl algorithms write your own functors and then translate them into inline expressions using boost lambda
from a professional standpoint i believe the best way to get started with boost lambda is to get usage of boost bind understood and accepted
use of placeholders in a boost bind expression looks much less magical than naked boost lambda placeholders and finds easier acceptance during code reviews
137344
inherited	subclassing
Pattern(s): 
editors are logical subclassing of viewers but since all viewers are subclassing - textviewer imageviewer etc. editor does not derive from viewer thus allowing the final texteditor imageeditor classes to avoid the diamond
in cases where the diamond is not avoidable using virtual inherited
the biggest caveat however with virtual bases is that the constructor for the virtual base must be called by the most derived class meaning that a class that derives virtually has no control over the constructor parameters
139276
gridview	repeater
Pattern(s): 
since you re building the layout by hand listview and repeater require more code
gridview is an updated datagrid so there is hardly any reason to use datagrid
gridview works really well when hooked up to standard asp.net datasources but restricts you to a tabular layout with lots of layout rules
140719
boost	stl
Pattern(s): 
otherwise practically no language has native threading as they re all a feature of the os
boost thread is great i m not sure whether you can say its part of the language though
it depends if you consider the crt stl boost to be part of c++ or an optional add-on library
141668
centos	linux
Pattern(s): 
most linux stuff is shipped for rhel redhat enterprise linux so you are usually best off using that
centos is a free distribution based on rhel in fact it s almost identical so a given vendor s stuff usually works the same there
it also depends on hardware support
142778
.htaccess	httpd.conf
Pattern(s): 
lastly you can enable a rewrite log using commands like the following in your httpd.conf rewritelog logs rewritelog rewriteloglevel 7 the log file thus generated will give you the gory detail of which rewrite rules matched and how they were handled
a restart is not required for changes to .htaccess
something else is wrong
142778
.htaccess	httpd.conf
Pattern(s): 
also check that .htaccess is readable by the httpd process
check the error_log - it will tell you of any errors in .htaccess if it s being used. putting an intentional syntax error in .htaccess is a good check to make sure the file is being used -- you should get a 500 error on any page in the same directory
lastly you can enable a rewrite log using commands like the following in your httpd.conf rewritelog logs rewritelog rewriteloglevel 7 the log file thus generated will give you the gory detail of which rewrite rules matched and how they were handled
143221
bitarray	bitvector	bitarray	bitvector
Pattern(s): 
it s a c extension so much faster than bitvector which is pure python and stores its data in an actual bitfield so it s eight times more memory efficient than a numpy boolean array which appears to use a byte per element.
bitarray was the best answer i found when i recently had a similar need
it s a c extension so much faster than bitvector which is pure python and stores its data in an actual bitfield so it s eight times more memory efficient than a numpy boolean array which appears to use a byte per element.
143846
bmp	ppm	bmp	ppm	bmp	tga
Pattern(s): 
render your font using whatever arrange the characters in a grid and save the image in a simple uncompressed format like ppm bmp or tga
if you want antialiasing make sure to use a format that supports transparency bmp and tga do
ppm does not
144141
int	chars
Pattern(s): 
you can read a bit more at the atoi documentation on msdn -
the user input is treated as a string that needs to be converted to an int using atoi or another conversion function
atoi will return 0 if the string cannot be interptreted as a number because it contains letters or other non-numeric chars
144303
int	chars
Pattern(s): 
tkint64 get setint64prop tkinteger get setordprop get setordprop functions can also be used for chars and widechar properties which i guess is why the name isn t 100 obvious
margins.xyzzy are all int properties not int64 properties so you need to use getordprop setordprop to read and modify them
setint64prop assumes it s a 64-bit property and tries calling the property setter function with a 64-bit parameter
144890
quicksort	mergesort
Pattern(s): 
note that the bit-flipping trick can be used regardless of what sorting algorithm you actually use.
all things being equal i d expect most people to use whatever is most conveniently available and that tends to be quicksort 3
other than that quicksort is known to be very fast on arrays just like mergesort is the common choice for lists
144997
inline	inlining
Pattern(s): 
most c++ compilers are smart enough now to inline functions for you
the inline keyword is just a hint to the compiler
some will even do inlining across translation units where they decide it s helpful
145200
ironruby	ironpython
Pattern(s): 
i suspect ironpython has a similar story
currently ironruby is pretty slow in most regards
it s definitely slower than mri matz ruby implementation overall though in some places they re faster
145200
ironruby	ironpython
Pattern(s): 
i suspect the team will go for language-completeness rather than performance first
this will allow you to run ironruby run most ruby programs when 1.0 ships then they can improve perf as they go
i suspect ironpython has a similar story
145996
gtk	motif
Pattern(s): 
a typical way would be to put it in a lib folder
look feels that are available by default in the jdk are com.sun.java.swing.plaf.gtk.gtklookandfeel com.sun.java.swing.plaf.motif.motiflookandfeel com.sun.java.swing.plaf.windows.windowslookandfeel quioting the link above the gtk l f will only run on unix or linux systems with gtk 2.2 or later installed while the windows l f runs only on windows systems
like the java metal l f the motif l f will run on any platform
146374
inherited	subclassing
Pattern(s): 
but if instances of a class are supposed to be immutable then making it final is one good way of making sure they really are all immutable that there aren t mutable instances of subclassing kicking around which can be used anywhere that the parent class is called for
i don t think the article you referenced should be taken as an instruction that all immutable classes must be final especially if you have a positive reason to design your immutable class for inherited
what it was saying is that protecting immutability is a valid reason for final where imaginary performance concerns which is what it s really talking about at that point are not valid
149437
range	max
Pattern(s): 
how will you display the values
know your range of data
a float is only good for 6 to 7 digits of precision so that means a max of about +-9999.99 without rounding
149442
google-chrome	safari	google-chrome	safari
Pattern(s): 
much like the safari browser does
at first i believed it was a built-in feature of the wysiwym markdown editor but shog9 is correct it s not baked-in at all but is courtesy of the jquery plugin textarearesizer i was lead astray by the browser was using to check on the editor demo because google-chrome itself adds the expandable functionality on textareas mdash
much like the safari browser does
149471
nstimer	nsrunloop
Pattern(s): 
that are the very basics how objective-c actually works
as i wrote below a nstimer object is created that gets a pointer to the target object and a pointer to a c string containing the method name and when the timer fires it finds the right c method to call by using the string table hence it needs the string name of the method of the target object hence it needs a reference to it
not exactly the implementation but pretty close to it every thread in cocoa has a nsrunloop it s always there you never need to create on for a thread
150009
unsigned	short
Pattern(s): 

i believe that compiler takes a hint to disable padding when you use the unsigned int wwindow 16 syntax
also note that a short is not guaranteed to be 16 bits
150148
filtering	grouping
Pattern(s): 
filtering and binding are done on another class dataview dotnet datagrid hides this a little
extract method is the nearest a datatable provides in termes of filtering it returns an array of pointers to datarows
grouping is not so powerful as in tclientdataset as also indexing is poorer
150584
int	chars
Pattern(s): 
eg for 2 unsigned shorts followed by a signed 32 bit value going by your code you are looking for in order a 3 chars string 2 single byte values major and minor version a 1 byte flags variable a 32 bit length quantity the format string for this would be
if you have a string with 2 bytes that you wish to interpret as a 16 bit int you can do so by note that the is for big-endian the largest part of the int comes first
this is the format id3 tags use
150835
filesystems	ntfs	filesystems	ntfs
Pattern(s): 
filesystems such as transactional ntfs can overcome this limitation
please note however that using the default filesystems under both win32 and nix there is no way to guarantee the atomicity of the operation if you check for the existence of files a b and c some other process or thread might have deleted file a after you passed it and while you were looking for b and c
filesystems such as transactional ntfs can overcome this limitation
150988
floating-point	integer
Pattern(s): 
this also requires multiple-precision integer arithmetic see also david m gay s correctly rounded binary-decimal and decimal-binary conversions for algorithms going both ways
the standard algorithm for converting a decimal number to the best floating-point approximation is william clinger s how to read floating point numbers accurately downloadable from here
note that doing this correctly requires multiple-precision integers at least a certain percentage of the time in order to handle corner cases
151244
suppressfinalize	finalizer
Pattern(s): 
the suppressfinalize optimization is not trivial as your objects can live a long time waiting on the finalizer queue
don t be tempted to call suppressfinalize on other objects mind you
that s a serious defect waiting to happen
151336
versioning	upgrade
Pattern(s): 
the versioning property you mention is used by msi engine internally for upgrade uninstalls etc and is never displayed
as far as i know msi file will never show versioning
simple reason is that msi files are not pe files they are sort-of database
151336
installation	upgrade
Pattern(s): 
simple reason is that msi files are not pe files they are sort-of database
msiexec.exe then interprets this database to do the actual installation
the version property you mention is used by msi engine internally for upgrade uninstalls etc and is never displayed
152132
versioning	upgrade
Pattern(s): 
it uses more disk space but disk is cheap
doing it this way we can stay with versioning 1 of a project until upgrading to versioning 1.5 is absolutely necessary
you still have the job with adding dll s when deciding to upgrade to a other versioning of the dll though
152425
put	get
Pattern(s): 
but don t just take my word for it in access-ordered linked hash maps merely querying the map with get is a structural modification the linked hash map s javadoc if you are absolutely sure that there are no caches no collection statistics no optimizations no funny stuff at all - you don t need to sync
in that case i would have put a type constraint on the collection don t declare the collection as a map which would allow linkedhashmap but as hashmap for the purists a final subclass of hashmap but that might be taking it too far...

152830
gdi	stretchblt
Pattern(s): 
however when it is scaled it will be stretched using stretchblt
a metafile is a file which records a sequence of gdi operations
it is scalable because the original sequence of operations that generated the picture are captured and therefore the co-ordinates that were recorded can be scaled
153015
udp	tcp
Pattern(s): 
since ip has become the dominant protocol a port in networking terms has become synonomous with either a udp or tcp port number - which is a portion of the socket address
udp is connection-less - meaning no virtual circuit between the 2 endpoints is ever created
however we still refer to udp sockets as the endpoint
156321
stdio	fflush
Pattern(s): 
reference
this doesn t mean that manually adjusting the stdio buffering is a good idea though
you may wish to utilise std endl or std fflush from which may help you
157010
typedef	typename	typedef	typename
Pattern(s): 
by the way it is considered good practice to also expose a few other types if you want your class to behave as a container and if needed by your class you ll find the meaning of all these typedef s here stl documentation on vectors edit added the typename as suggested in the comments
i am unsure about what you mean by not exposing std vector publicly but indeed you can just define your typedef like that you will be able to change these typedef later without the user noticing anything .
by the way it is considered good practice to also expose a few other types if you want your class to behave as a container and if needed by your class you ll find the meaning of all these typedef s here stl documentation on vectors edit added the typename as suggested in the comments
157456
perforce	svn
Pattern(s): 
but the svn clients are better especially the eclipse plugin
perforce is more expensive
these are merely opinions so perhaps this is a poor answer if i was already using one or the other i d be very hard pressed to switch since neither seems to offer really significant benefits over the other but the disruption in switching could be large
157625
perforce	svn	perforce	svn
Pattern(s): 
either is a great alternative to svn when working with a large team
it has features analogous to those available in perforce but is free foss
either is a great alternative to svn when working with a large team
157949
client-side	server-side
Pattern(s): 
a form should always have server-side validation
client-side validation is only there as a convenience
a malicious user could easily post data to your form bypassing any client-side validation that you have in place
158824
pdfbox	itext	pdfbox	itextsharp
Pattern(s): 
if you re looking for something a little more diy there s the itextsharp library - a port of java s itext - and pdfbox yes it says java - but they have a .net version by way of ikvm.net
here s some codeproject articles on using itextsharp and pdfbox from c#
and if you re really a masochist you could call into adobe s pdf ifilter with com interop
159454
width	height	width	height
Pattern(s): 
you need to listen for width changes on the content composite mparent compute the minimum height again given the new content width and call setminheight on the scrolled composite with new height
in listening for size changes note that we ignore any resize events where the width stays the same
this is because changes in the height of the content do not affect the minimum height of the content as long as the width is the same
160892
x86	mips
Pattern(s): 
in my opinion mips is actually a little bit more of a clean and elegant architecture than sparc but they re both great
in addition to complete system emulation qemu can also emulate sparc at the user-space level so that you can write a program in sparc assembly and use standard linux system calls and it will call the standard x86 kernel versions.
works pretty well
161983
struts	stripes
Pattern(s): 
i don t want to start some kind of flame development platform war but in my opinion stripes is a far superior and easier to use framework than struts we migrated from struts a year ago and have never looked back
that said yes you can integrate gwt with struts without too many hassles in fact if you do your entire ui in gwt you don t even need struts you can just rpc straight to your java back end
if you just want to make small components then gwt will work well for that too and i guess you could shudder pass it your struts forms if you wanted to
164368
profiler	yourkit	yourkit	jprofiler	yourkit	jprofiler
Pattern(s): 
that being said i ve never used jprofiler so i can t give a direct comparison
i ve used yourkit and it is a very nice profiler the best i ve ever used in java i ve used a variety of others over the years
that being said i ve never used jprofiler so i can t give a direct comparison
164437
yourkit	jprofiler
Pattern(s): 
it s so much less invasive than jprofile in that i ll happy run production servers with the yourkit agent installed which i would never do with jprofiler
also the analysis tool that comes with yourkit is more intuitive in my opinion making it easier to get the root cause of problems

164595
rss	feed
Pattern(s): 
of course if you re writing both the producer and consumer of the rss and your goal is that the feed always contains the full set of assigned tasks just updating the pubdate will work just fine
changing the pubdate does indicate that the entry changed but there is no requirement that a given rss reader do anything about it
strictly speaking there is no requirement than an rss reader do anything but let s remain reasonable. some reader do mark updated entries as changed
165622
yourkit	jprofiler
Pattern(s): 
it is priced also very reasonably about about 1100 for 5 licenses i think
i have used yourkit
i have not used jprofiler
165921
qpushbutton	qwidget
Pattern(s): 
having your own class allows you to add modifiy the signals slots available as you want
it is not possible to do it because it means you would add a slot to an existing qt class like qpushbutton which is not really the way to go
you should create your own qwidget eventually by subclassing an existing one
166098
subclass	getattr
Pattern(s): 
you either have to reimplement everything that touches this double-underscore attribute directly or you have to guess at the class name and mangle the name manually
the problem gets worse when this double-underscore attribute is actually a method overriding the method or calling the method in a subclass means doing the name-mangling manually or reimplementing all the code that calls the method to not use the double-underscore name
not to mention accessing the attribute dynamically with getattr you will have to manually mangle there too
167341
valgrind	memcheck	valgrind	memcheck
Pattern(s): 
valgrind --tool memcheck --leak-check full . a.out
valgrind is your new best friend
valgrind --tool memcheck --leak-check full . a.out
167536
accessor	properties
Pattern(s): 
moreover simply making all your properties atomic does not make your application thread-safe
also note of course that if you don t specify nonatomic and implement your own accessor methods rather than synthesising them you must implement them in an atomic fashion

168129
scheme	racket	scheme	racket
Pattern(s): 
update plt scheme is now called racket
plt scheme features a built-in continuation-based web server
update plt scheme is now called racket
168366
onclick	onsubmit	submit	submission	submit	submission
Pattern(s): 
unlike your form this is a plain old postback - it s not using anything client-side to trigger the form submission no client-side validation etc
if i attach an onclick handler to the submit button i can see that the button is being clicked - but if i attach an onsubmit handler to the form i get nothing
if i make the button onclick handler submit the form through javascript it works fine - it s just the direct submission that s not working
171644
free	malloc
Pattern(s): 
a pwsz frequently has different semantics for those
2 a bstr must be allocated and free with the sysalloc family of functions
a pwsz can be an automatic-storage buffer from the stack or allocated with malloc new localalloc or any other memory allocator
171669
apache	lighttpd
Pattern(s): 
of these alternatives lighttpd is probably the most popular
most here will use apache but there are other options
ibm posted a nice long article on the subject
172603
j2ssh	jsch	j2ssh	jsch
Pattern(s): 
i don t know how it compares to jsch though
i am using j2ssh works pretty well
i don t know how it compares to jsch though
172899
wordpress	joomla
Pattern(s): 
you can check out that site at chhobi.net
if you don t have many complex requirements i think wordpress is not a bad idea
if you need to expand the site later on and add different functionality like forums gallery polls etc. you better go for a proper cms solution like joomla drupal and likewise
173007
g++	gcc	g++	gcc
Pattern(s): 
gcc gnu c compiler g++ gnu c++ compiler the main differences gcc will compile .c .cpp files as c and c++ respectively
g++ will compile .c .cpp files but they will all be treated as c++ files
also if you use g++ to link the object files it automatically links in the std c++ libraries gcc does not do this
173406
firefox	safari
Pattern(s): 
currently i believe that safari is the only shipping browser to support any of these and i believe it only supports the client side databases and local storage parts
edit olliej correction firefox 3 supports the application cache but alas not the client side db

176144
opera	firefox	opera	firefox	opera	safari	opera	google-chrome
Pattern(s): 
my support list in order of priority currently looks like this unless a client expresses a need to expand it safari 3 firefox 2 firefox 3 ie 7 ie 8 beta public-facing functionality works looks correct in ie 6 google-chrome the reason i take this approach is that first it s best to work in a standards-compliant browser before tweaking to broken engines
second safari has the greatest standards support combined with a marketshare which isn t negligible opera is just hard to justify for cost benefit reasons
third in my experience going from safari to firefox is usually less problematic than the other way around
176144
google-chrome	firefox	google-chrome	safari
Pattern(s): 
also a side effect of targeting safari first ie is likely to be less painful as the webkit team has gone to great lengths to comply with existing practices wherever possible
google-chrome comes last because it s so likely to just work if safari is good to go
edit firefox 2 comes before firefox 3 because its support set is more restricted
176345
maven	cargo	maven	pom.xml
Pattern(s): 
here s the pom.xml from that functional test module - make of it what you will
the cargo maven plugin is a good way to go if you re doing servlet development and want to deploy the resulting war for integration testing
when i do this myself i often set up a multi-module project although that s not strictly nessecarily and encapsulate all the integration testing into that one module
176869
subclass	inherited
Pattern(s): 
sometimes because of class inherited you ll be stumped as to how to get the object mapped to a database row
or are all of the layers flattened down to columns in each subclass table
and your domain entities
177557
qdialog	qobject
Pattern(s): 
this is easily fixed by simply running qmake again
your dialog derives from more than one class and qdialog is not the first class that it derives from
for qmake to work correctly the qobject derived base class needs to be the first class that is inherited from
178555
verilog	vhdl	verilog	hdl	verilog	hdl
Pattern(s): 
once you re ready to choose an hdl i heartily recommend verilog having learned vhdl first
yes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previously
finally once you ve learned the hdl you have a hardware verification language hvl in systemverilog with strict-superset syntax saving you a good bit of the learning curve
179813
verilog	vhdl	verilog	hdl
Pattern(s): 
for hdl choice verilog is to c as vhdl is to ada
so verilog is easier to get started with but you can make mistakes more easily
check your simulation and compilation warnings to avoid those problems
180634
inherited	subclassing
Pattern(s): 
i don t think the chained super super suggestion is a good idea- if you re doing that you re probably tied in very hard to a particular hierarchy and changing it will likely break stuff badly
i ve always used inherited rather than super
probably due to a delphi background and i always make it private to avoid the problem when the inherited is erroneously omitted from a class but a subclassing tries to use it
181372
matlab	simulink
Pattern(s): 
however if one really needs speed than he can choose to implement the tested logic in c c++ etc
for further comparison with python i can say that matlab provides a full package for you to do your work without the need of looking around for external libraries and implementing extra functions
one last point about matlab which i see is not mentioned in the answers here is that it has a very powerful visual modeling simulation environment called simulink
182092
int	boolean
Pattern(s): 
a sql parameter can only be a single value so you d have to do where buildingid in buildingid1 buildingid2 buildingid3... which of course requires you to know how many building ids there are or to dynamically construct the query
as a workaround i ve done the following which will replace the text of the statement with the numbers ending up as something like where buildingid in 1 2 3 4 note that this is getting close to a sql injection vulnerability but since it s an int array is safe
arbitrary strings are not safe but there s no way to embed sql statements in an integer or datetime boolean etc
185365
terminate	timeout
Pattern(s): 
the timeout has to be big enough to delays in delivering the initial data from the client in the tls ssl handshake so it ll make establishing ssh connections slower
if the http proxy in your company is smart it ll actually eavesdrop on the expected tls ssl handshake when you connect to port 443 and when it detects that it s not an tls ssl handshake it might terminate the ssh connection attempt
to address that you could wrap the ssh daemon into an tls ssl tunnel stunnel but they you ll need to differentiate requests based on the tls ssl version in your client request to determine whether to route the tls ssl connection to the web server or to the tls ssl-tunneled ssh daemon
186279
inherited	properties
Pattern(s): 
adding a properties to the prototype of a function object will make it available to the constructed object as well as to all of the objects which inherit from it
advantages there may not be a hard and fast rule as to why prototypal inherited is an advantageous form of code-reuse
code reuse itself is advantageous and prototypal inherited is a sensible way of going about it
186668
firefox	safari	folder	directory	folder	directory
Pattern(s): 
on mac there is a directory for browser plugins
no matter if you use safari or firefox or possibly another browser it is standard or mac that browsers search their plugins in that folder
it is named library internet plug-ins and as always on mac this directory exists twice
188279
ordinals	difference	ordinals	difference
Pattern(s): 
you d have to be doing a lot of comparisons to notice the difference of course
stringcomparer.ordinalignorecase is slightly faster than invariantcultureignorecase fwiw an ordinals comparison is fast but culture-insensitive according to msdn
you d have to be doing a lot of comparisons to notice the difference of course
190149
prng	random
Pattern(s): 
on a computer your options are pretty limited to pseudo random number generators prngs and given your constraint that they never repeat then a prng is your best option - real random data will occasionally duplicate a number
in your case i d consider using a large prng 32 bit or larger to shuffle your 10 000 numbers and then send the numbers out in the shuffled order
once they re used up you can shuffle again - since the prng is so large you ll be able to go through the 10k numbers many times before duplicating a sequence
190745
cpu	processors
Pattern(s): 
applications differ in how they scale depending on a large number of variables including types of problem solving approach to solution and other factors
100 concurrent users consuming 10 cpu does not mean 500 concurrent at 50 it could be 20 or it could be 100
your bottleneck could be processors or memory or network bandwidth
190962
prepare	execute
Pattern(s): 
you can do prepare statements which is similar but different
here is an example the prepare statements are often used to see an execution plan for a given query
since they are execute with the execute command and the sql can be assigned to a variable you can approximate the some of the same behavior as dynamic sql
193952
superclass	subclassing	superclass	subclassing
Pattern(s): 
callvirt is for calling virtual methods so that if this is a subclassing that overrides the method the subclassing version is called instead
call is for calling non-virtual static or superclass methods the target of the call is not subject to overriding
callvirt is for calling virtual methods so that if this is a subclassing that overrides the method the subclassing version is called instead
194456
client-side	server-side
Pattern(s): 
hope that helps - sorry to not have any sample code but i suspect it s quite involved and i m not really a javascript developer
edit i ll leave this answer here as a sort of theoretical reference point but it sounds like the autocompleter answer is likely to be more useful to you disclaimer although i work for google which clearly has suggest elements in various uis i haven t looked at any of the code around this area nor even spoken to anyone about the client-side aspect
the server-side language is probably irrelevant here
195398
postgresql	mysql
Pattern(s): 
of course the picture is not so simple innodb tables on mysql have a very different performance behaviour at the load levels where postgresql s better locks overtake mysql s other parts of your platform could be the bottlenecks
postgresql does comply better with standards so it can be easier to replace later
in the end the choice has so many variables that no matter which way you go you ll find some important issue that makes it the right choice
196580
apache	nginx
Pattern(s): 
from a raw performance perspective nginx is faster but not so much faster that i would include that as a determining factor
apache has the advantage in the area of modules available and the fact that it is pretty much standard
any web host you go with will have it installed and most techs are going to be very familiar with it
197420
pthreads	fork
Pattern(s): 
having said this i would not use this code - i would either be inclined to fork mklink or look at the native library from jruby jpython sorry i cant look it up atm as my network connection is flakey
i seem to recall that jruby has written a library that wraps up various pthreads apis into java thinks like chown that are required for ruby compliance but are not cross platform
this library is being used by the jpython folks who seem very pleased with it
197429
boost	stl
Pattern(s): 
however the stl proposes std for_each but its syntax is a lot less intuitive
here is its prototype it takes two iterators defining a valid range and applies the unary function or functor f to each object in this range. you can rewrite your example using std for_each like this however if you want to stay close to the classical syntax of the for each construct and if you re ok about using boost you can use boost.foreach which will let you write

197437
hash	salt	hash	md5	hash	md5	salt	md5	salt	md5
Pattern(s): 
thus suppose you wanted a coupon for user 23 worth 200 you might build up a string like 23_200 and calculate an md5 hash with a secret salt of billthelizard to get 2671519131e974ee6fc746151e98f4a8 thus the complete code you give the customer is 200_23_2671519131e974ee6fc746151e98f4a8 now when you received the code you break it apart and check that md5 200_23 +secret 2671519131e974ee6fc746151e98f4a8 to verify the value edit if an 32 character hash is too long you could always truncate it chopping it down to 8 chars would still give you 4294967296 different hash values
i m guessing from way you ve phrased the question you don t want to store the codes in a database if you did you could simply verify each code against the database so what you could do is take all the pertinent information about what is in the coupon then hash it together with a secret salt to prevent tampering
thus suppose you wanted a coupon for user 23 worth 200 you might build up a string like 23_200 and calculate an md5 hash with a secret salt of billthelizard to get 2671519131e974ee6fc746151e98f4a8 thus the complete code you give the customer is 200_23_2671519131e974ee6fc746151e98f4a8 now when you received the code you break it apart and check that md5 200_23 +secret 2671519131e974ee6fc746151e98f4a8 to verify the value edit if an 32 character hash is too long you could always truncate it chopping it down to 8 chars would still give you 4294967296 different hash values
198473
post	get	post	get
Pattern(s): 
get or query string posts are really good for information required for either bookmarking a particular item or for assisting in search engine optimization and indexing items
post is good for standard forms used to submit one time data
i wouldn t use get for posting actual forms unless maybe in a search form where you want to allow the user to save the query in a bookmark or something along those lines
198607
xna	slimdx
Pattern(s): 
if you re missing some constants with float precisions just create them yourself don t have the cast to be done every time just at startup
xna provides several math constants including 3d specialists like pi 2 etc. and some advanced math functions with float precision though not the trigonometric functions
while that is most likely not an option for you since xna is not as slim as slimdx it certainly means that system.math is either actually missing something or the performance hit is not that big
200341
jar	war
Pattern(s): 
heck you can store content directly in a war file which is basically a jar file with a few extra bits
yes you may need to write a custom resolver to use classloader.getresourceasstream but basically as you re given the ability to generate the content however you like fetching it from a jar file seems perfectly reasonable
you ll probably want to make sure it only fetches a very specific set of extensions though
200715
xslt	xquery
Pattern(s): 
this helps keep xslt programs stylesheets pure and reusable but you need to add some sort of imperative framework to use them as part of a general-purpose processing system
xslt is an example of a functional programming language for doing transformations of data or documents represented as xml -- admittedly a very verbose and very limited one
if i remember correctly xquery is also purely functional
201298
configobj	configparser
Pattern(s): 
the downside here if the file will be hand-edited by a user errors could be hard to catch and debug
ini format i ve been using configobj for this with quite a bit of success
configobj is essentially a replacement for configparser with support for nested sections and much more
202192
bufferedreader	bufferedwriter
Pattern(s): 
if it turns out you are forced to perform a copy where the first line is replaced and the rest of the data shall be copied as-is i suggest using a and
first use bufferedreader s readline to read the first line
modify it and write it to the bufferedwriter
203444
prng	random
Pattern(s): 
so that s a viable option but seems like a bad policy for programming
normally seeding a new state takes quite while for a serious prng and making new ones each time won t really help much. the only case i can think of where you might want more than one prng is for different systems say in a casino game you have one generator for shuffling cards and a separate one to generate comments done by the computer control characters this way really dedicated users can t guess outcomes based on character behaviors
a nice solution for seeding is to use this random.org they supply random numbers generated from the atmospheric noise for free
203931
versioning	upgrade
Pattern(s): 
if you believe that you have already upgrade check your path environment variable to confirm that c program files microsoft sql server 90 tools binn adjusted for your installation appears before c program files microsoft sql server 80 tools binn otherwise the sql 2000 command line tools will be used in preference to the sql 2005
i tested this out several different ways on sql 2005 sp2 target databases in both compatibility modes 80 and 90 and it works ok for me using the sql 2005 versioning of bcp
however i also tested it with the sql 2000 versioning of bcp and that failed with which i guess is what you re getting
204777
union	distinct
Pattern(s): 
selectmany - for each element of source selector is invoked and a sequence of values is returned
union - when the object returned by this method is enumerated union enumerates first and second in that order and yields each element that has not already been yielded
edit i ve moved distinct to preserving order based on this implementation
206345
int	boolean
Pattern(s): 
a boolean is about truth and falseness
an int is about whole numbers
those are very distinct concepts truth and falseness is about deciding stuff
206964
soappy	suds
Pattern(s): 
does not work on python 2.5+ zsi very painful to use and development is slow
has a module called soappy which is different than soapy above
newer libraries suds very pythonic and easy to create wsdl-consuming soap clients
207062
google-chrome	firefox
Pattern(s): 
a folder called google-chrome can mean any number of things
google-chrome is a general term for the ui of a browser
firefox also has the word google-chrome all over its code base
207937
concurrenthashmap	readwritelock
Pattern(s): 
do you store a timestamp and use that for comparison in your binary search
if a map-type structure is more appropriate you can use a concurrenthashmap
with a list a readwritelock is probably the most effective way
208011
sudo	passwd
Pattern(s): 
it s very granular and has lots of configurability---but has sensible defaults so it won t take you long to set up
the systems i run have a sudo -only policy
the root passwd is disabled and people have to use sudo to get root access
208011
sudoers	passwd
Pattern(s): 
the root passwd is disabled and people have to use sudo to get root access
you can then edit your sudoers file to grant revoke people s access
it s very granular and has lots of configurability---but has sensible defaults so it won t take you long to set up
208025
sudo	passwd
Pattern(s): 
while that may be considered a security flaw it allows us to still log in if the ldap server is down
while it is a good idea to use a sudo only policy like chris suggested depending on the the size of your system an ldap approach may also be helpful
we complement that by a file that contains all the root passwd but the root passwd are really long and unmemorable
208508
wymeditor	jwysiwyg	wymeditor	jwysiwyg
Pattern(s): 
jwysiwyg is an alternative with much less features
wymeditor what you see is what you mean is a jquery plugin
jwysiwyg is an alternative with much less features
208728
ingres	oracle	ingres	oracle	ingres	mysql	informix	ingres
Pattern(s): 
so why might it be useful with oracle -- as a performance boost for read-only functions where wrong data is highly unlikely and highly inconsequential
in mysql db2 ingres informix not sure about sql server sybase it can be used to bypass the lock management facility for performance
here s an example of a situation where reads do not need consistency list of all products here s an example of a situation where reads need consistency list of products in stock oracle just doesn t even conceive of dirty reads nor could it be added as a feature without actually loosing the benefit of performance too many tricks would be required to get the dirty data in oracle s true mvcc architecture
208789
submit	submission
Pattern(s): 
if the daemon can t grab the lockfile it just dies so there s no worry about multiple daemons running
another approach to consider would be to submit the files via http post and then process them via a cgi
this way you guarantee that they ve been dealt with properly at the time of submission
210096
ubuntu	linux	ubuntu	debian
Pattern(s): 
urgency low sandro tosi debian control - list items lines in description starts with 2 space to avoid reformat on webpages closes #480341 bernd zeimetz debian patches 02_reconnect.dpatch - dropping patch comment in storm which explains the problem
if you are using ubuntu linux there was a patch added to the python-mysql package that added the ability to set that same mysql_opt_reconnect option see here
i have not tried it though
210685
post	get	post	put	put	get
Pattern(s): 
restful web services chapter 8 section overloading post reads if you want to do without put and delete altogether it s entirely restful to expose safe operations on resources through get and all other operations through overloaded post
doing this violates my resource-oriented architecture but it conforms to the less restrictive rules of rest. in short replacing put delete in favor of post makes the api harder to read and put delete calls are no longer idempotent

211049
superclass	subclassing
Pattern(s): 
even a class definition that does not explicitly specify a superclass still has a superclass class cookie end this defines the cookie class with the superclass of object
i ve encountered this error before and it will occur when you have some code trying to reopen a class without specifying the superclass and the programmer s assumption is that the class in this case cookie has already been defined and that he is simply reopening it to add some functionality
but if the reopening and the definition are in reverse order you ll get that error because the class will already have been defined as a subclassing of object but is trying to be redefined or reopened with a different superclass
211306
traceroute	packets	traceroute	packets
Pattern(s): 
the packets expires and it s discarded when the ttl reaches zero
traceroute sends icmp time exceeded messages rfc 792 back to the sender when this occurs
by using small ttl values the packets will quickly expire so traceroute causes all routers along a packets s path to generate the icmp messages that identify the router
211327
int	chars
Pattern(s): 
so i guess it s a final int
in java language spec arrays you can see in 10.4 arrays must be indexed by int values
short byte or chars values may also be used as index values because they are subjected to unary numeric promotion and become int values. an attempt to access an array component with a long index value results in a compile-time error
212565
quicksort	mergesort
Pattern(s): 
mergesort this will teach how to merge which is important because there are a ton of speedups you can get by merging two sorted lists together as well as how to divide the problem into smaller sub problems important for dealing with hierarchical structures and also used in quick sort
quicksort though faster is much harder to understand
you need two scanning variables a pivot item etc.
215746
opera	firefox	opera	safari	opera	google-chrome	firefox	safari
Pattern(s): 
camino contains native svg support as per its own documentation google-chrome uses an old version of web kit to support svg natively konqueror has svg support via a plugin ksvg2 from 2007 a here is a list of the state of svg support in many browsers
opera has native svg support firefox has native svg support internet explorer does not include svg support natively
safari has native svg support for images and fonts since version 3.1
215746
google-chrome	safari
Pattern(s): 
safari has native svg support for images and fonts since version 3.1
camino contains native svg support as per its own documentation google-chrome uses an old version of web kit to support svg natively konqueror has svg support via a plugin ksvg2 from 2007 a here is a list of the state of svg support in many browsers

216153
haskell	scheme
Pattern(s): 
it s not too widely used but definitely seems like a solid language to use especially considering the robustness of drscheme which in fact compiles scheme programs to native binary code
after that - haskell is incredibly interesting
it s a language which does lazy evaluation right and the consequences are incredible including such things as a one-line definition of the fibonnaci sequence
217361
dictionary	map
Pattern(s): 
if you do this a lot you could write an extension method to convert to a dictionary and use it so
can you use dictionary string string instead of namevaluecollection
since dictionary t t implements ienumerable you could use linq as so edit actually you may be able to use dictionary directly as if it doesn t map key value the way you want you can always go back to linq
217688
inherited	properties
Pattern(s): 
i would suggest you call it testsuite and make the list as a properties
has-a is much easier to maintain compared to inherited
in general i d be very careful to inherit something like a list
217708
config	ini
Pattern(s): 
being php parseing it is nearly eg the file needs to be opened closed etc as fast as having the code at the top of each script and much faster than ini and xml config solutions centralised location for the sites configuration on each server so easy to keep upto date server doesn t change that oftern updateing the config is simple with an update script
can be generated by the script all my sites have a function that rebuilds the config file useing the config assoc array
updates that effect the config file are as simple as config key new value
217836
jboss	geronimo	jboss	geronimo
Pattern(s): 
this article has many interesting points to aid your decision and is worth reading geronimo 2 is the clear choice if your java application needs are particularly extensive or if you just want to leverage total java ee 5 compliance
although jboss 4.2 is not completely compatible with sun s java ee 5 standard the jboss 4.2 team is responsible for many of the cutting-edge technologies used by all of the servers and added to the standard java ee 5 capabilities. tomcat 6 by itself is a lightweight solution
it does not come with all the java ee features and additional packages found in jboss and geronimo but also doesn t require much memory and runs fast even on smaller servers
217993
bitconverter	binaryreader
Pattern(s): 
whenever you convert to bytes however you re making a choice
the bitconverter class has an islittleendian field to tell you how it will behave but it doesn t give the choice
the same goes for binaryreader binarywriter
218749
punctuation	words
Pattern(s): 
it s easier for my brain to tokenise each words and understand its meaning
although because the punctuation characters are harder to read it s still hard going - but maybe that will change given a bit of time to get used to it i ll update this answer again tomorrow assuming i can make it through an entire day like this

219729
cairngorm	flex	cairngorm	puremvc	flexunit	cairngorm	flexunit	puremvc
Pattern(s): 
assuming your project was designed with a fairly loose degree of coupling you shouldn t need to change much at all if anything in order to test your code
if you re already using an mvc framework like cairngorm or puremvc flexunit should integrate pretty painlessly
i will say however that my experience with flash flex unit testing is not nearly as positive as it has been with other languages such as ruby or .net for three reasons
221953
mathml	tex
Pattern(s): 
tex also has a large user base and a number of stable open wysiwyg editors
also mozilla mathml page contains links to a tex- mathml translator and a possibly dead javascript mathml editor

222347
post	get
Pattern(s): 
into the code will throw an exception that will not get handled
the second version from the original post does not have this problem and it is generally preferred
that said there is a minor overhead using the exception and if you are 100 sure the data will not change you can use the but i recommend against it
222415
unix	solaris	unix	solaris
Pattern(s): 
features deep inspection of hundreds of protocols with more being added all the time live capture and offline analysis standard three-pane packet browser multi-platform runs on windows linux os x solaris freebsd netbsd and many others captured network data can be browsed via a gui or via the tty-mode tshark utility the most powerful display filters in the industry rich voip analysis read write many different capture file formats tcpdump libpcap catapult dct2000 cisco secure ids iplog microsoft network monitor network general sniffer compressed and uncompressed sniffer pro and netxray network instruments observer novell lanalyzer radcom wan lan analyzer shomiti finisar surveyor tektronix k12xx visual networks visual uptime wildpackets etherpeek tokenpeek airopeek and many others capture files compressed with gzip can be decompressed on the fly live data can be read from ethernet ieee 802.11 ppp hdlc atm bluetooth usb token ring frame relay fddi and others depending on your platfrom decryption support for many protocols including ipsec isakmp kerberos snmpv3 ssl tls wep and wpa wpa2 coloring rules can be applied to the packet list for quick intuitive analysis output can be exported to xml postscript csv or plain text
wireshark www.wireshark.org wireshark is a network protocol analyzer for unix and windows
features deep inspection of hundreds of protocols with more being added all the time live capture and offline analysis standard three-pane packet browser multi-platform runs on windows linux os x solaris freebsd netbsd and many others captured network data can be browsed via a gui or via the tty-mode tshark utility the most powerful display filters in the industry rich voip analysis read write many different capture file formats tcpdump libpcap catapult dct2000 cisco secure ids iplog microsoft network monitor network general sniffer compressed and uncompressed sniffer pro and netxray network instruments observer novell lanalyzer radcom wan lan analyzer shomiti finisar surveyor tektronix k12xx visual networks visual uptime wildpackets etherpeek tokenpeek airopeek and many others capture files compressed with gzip can be decompressed on the fly live data can be read from ethernet ieee 802.11 ppp hdlc atm bluetooth usb token ring frame relay fddi and others depending on your platfrom decryption support for many protocols including ipsec isakmp kerberos snmpv3 ssl tls wep and wpa wpa2 coloring rules can be applied to the packet list for quick intuitive analysis output can be exported to xml postscript csv or plain text
222573
allocator	stl	allocator	stl
Pattern(s): 
stl uses placement new to create container elements
it s useful if you want to separate allocator from initialization
stl uses placement new to create container elements
223288
client-side	server-side
Pattern(s): 
if javascript validation didn t work for any reason regular server-side validation scenario page reload with error informations takes place using the same server-side script
this solution isn t as responsive as pure client-side validation needs time to send receive data between client and server but is quite simple and you don t need to translate validation rules to javascript

226299
for-loop	loops
Pattern(s): 
if your application uses a database or web service that not loops control is almost always going to be be where the time goes
the list.foreach could be faster due to using that internally and a for-loop without the wrapper would be even faster
i disagree that the list.foreach delegate version is more functional in any significant way
226546
vb.net	vb6
Pattern(s): 
support for vb6 has ended but vb.net is still very much alive and gaining new features
vb.net compiles to msil bytecode that depends on some of the the .net libraries depending on which .net framework classes you use
some of those libraries are not written in pure .net or are just wrappers around the windows api
226925
facade	service-locator
Pattern(s): 
that is a service-locator though a low level one
in retrospect we probably should have created a modulefactory or something and used icontianerfacade to get a hold of it and then used that resolve modules vs going to the facade directly
hindsight is 20 20
227544
try-catch	exception-handling
Pattern(s): 
because it is easier the code will on average be better written and less buggy
to me that programmer and quality overhead is the primary argument against using try-catch for process flow
the computer overhead of exception-handling is insignificant in comparison and usually tiny in terms of the application s ability to meet real-world performance requirements
228254
kerberos	ntlm
Pattern(s): 
search ms support for kerberos hotfix to turn off kerberos for the site cscript adsutil.vbs set w3svc ### ntauthenticationproviders ntlm where ### is the siteid from the metabase
typically if you see an issue with authentication where it works in ie 6 but not ie 7 i d check to make sure kerberos is configured correctly
running as network service your kerberos spns should attached to the machine account
228882
post	get
Pattern(s): 
this blog post has a good rundown of what you need to do to get it working
i have done this myself too so if you re interested i can expand this post with some examples later

229451
gif	png
Pattern(s): 
note also that irfanview does an awful job of converting 32bit png image to 256 allowing only one transparent color which looks bad if full color was dithered
i see that the gimp manual states his png8 format like gif uses only one bit for transparency
only two transparency levels are possible transparent or opaque
229736
for-loop	loops
Pattern(s): 
it can be interesting in some cases but it can be a pitfall i saw in a source which is a major way to slow down a program because strlen is a costly function in c
somehow the for-loop is mostly designed to run a number of times know in advance you can still use break to terminate early so the dynamic evaluation of the stop term is more annoying than useful if you really need dynamic evaluation you use or
on some other languages like lua the stop condition is evaluated only once at loops init
230358
public	protected
Pattern(s): 

in addition to mark biek s answer the __destruct function must be declared public
otherwise the function will not be executed on script shutdown warning call to protected mychild1 __destruct from context during shutdown ignored in unknown on line 0 warning call to private mychild2 __destruct from context during shutdown ignored in unknown on line 0 this may not be harmful but rather unclean
231706
ssl	https
Pattern(s): 

as far as ssl goes you can buy separate certificates for the domain and subdomain or a single wildcard .foo.com cert that covers them both naturally the wildcard cert will be more expensive
if you have an https page that requests items from other domains all will be well as long as everything is https
232602
ienumerable	ienumerator
Pattern(s): 
i guess the generic enumerator t inherits from idisposable so there doesn t need to be a runtime type-check it can just go ahead and call dispose which should have better performance since it can be probably be optimized away if the enumerator has an empty dispose method
ienumerable t doesn t inherit idisposable
ienumerator t does inherit idisposable however whereas the non-generic ienumerator doesn t
233234
sudo	passwd
Pattern(s): 
if the private key does not have a passphrase ssh can be used without prompting for a passwd
the usual solution to this problem is setuiding a helper app that performs the task requiring superuser access sudo is not meant to be used offline
later edit ssh can be used with private-public key authentication
233262
multiton	singleton	multiton	singleton
Pattern(s): 
it s not simply everything that s not a singleton
yes there is a multiton pattern but it means something very specific
it s not simply everything that s not a singleton
235259
ant	cruisecontrol
Pattern(s): 
i don t think so
ant has better documentation including some nice o reilly books and it s well-established in the java universe so you avoid the problems of 1 we haven t copied feature x to phing yet and 2 the risk of the phing project going dead
here s an article on configuring phpunit to work with ant and cruisecontrol not that hard
236111
free	malloc
Pattern(s): 
on linux with glibc the memory is actually always returned to the os above a certain size glibc malloc uses mmap for big allocations controlled by mmap_threshold and in that case free calls munmap which frees automatically the reserved memory
below that threshold it uses brk and free does not return the memory in that case
note that the above explanation is not exact to be precise you need to know the difference between physical memory virtual memory etc.
236783
agile	sprint
Pattern(s): 
if you want to prove that agile development works i d probably vote for using the sprint to show what release early release often means
agile is quite the buzzword now but please keep in mind that it is not a silver bullet
it will not fix your development process just like that
237861
ant	maven
Pattern(s): 
i tend to roll my own repo without maven maven is fine but it doesn t click with me
i run something similar to the bsd ports system that is one big structured tree that contains little ant build files
these build files either checkout the source of a project pull its dependencies from somewhere else in the tree and build it these are for the projects i want to build- mine or pull binaries from somewhere else which might be an external source or my own binaries repository
238767
post	get	post	put
Pattern(s): 
my preference would be that the username password only be accepted via post so that it doesn t appear in the url at all but you could conceivably encrypt and encode the password so that it could be put in a get request
i can t envision any reason why i would do this instead of a post
edit as others have indicated if you have patient-related data you may need to encrypt all communications with the server
240272
post	put
Pattern(s): 
you can reissue a put update or delete request as many times as you want and it will have the same effect every time however the desired effect will modify a resource so it is not considered safe
a post request should create a new resource with every request meaning the effect will be different every time
therefore post is not considered safe or idempotent
240308
free	malloc
Pattern(s): 
whether these two areas are the same is an implementation details which is another reason that malloc and new can not be mixed
new delete allocate release memory memory allocated from free store returns a fully typed pointer
new standard version never returns a null will throw on failure are called with type-id compiler calculates the size has a version explicitly to handle arrays
241908
octal	hex	octal	binary
Pattern(s): 
even a simple task for a human in binary is long winded simple second grade math is still a lot of ones and zeros
so octal became popular because it allowed you to think in groups of three bits and you could use symbols we are familiar with as numbers 0 1 2 3 4 5 6 7
but groups of four which is another power of 2 gives the humans a lot more mental computing power than octal hex is based on 4 bits which is also a power of 2
241908
multiplying	subtract
Pattern(s): 
multiplying and divide take a lot of electronics the trade off is you can do them with adds and subtract in software
take the worst case multiplying for a four bit system 1111 1111 11100001 so it takes 8 bits to store the result of a 4 bit multiplying you will quickly find that if you had a 4 bit system most of the multiplies you want to do will result a number that cannot be stored in 4 bits
so when i saw you taking 64 bit integers the unsigned long long is often 64 bits and multiplying four times that means you need 64 5 or a 320 bit integer to store your answer you were trying to put that answer in a 64 big result which quite often depending on the compiler and computer will happily do and will truncate the upper bits leaving you with the lower 64 bits of the result which can easily look smaller than any of your operands which is what i had thought you might have done at first
242254
feeds	rss
Pattern(s): 
so yeah the rss feeds are probably the easiest way of interfacing with kuler
universal feed parser is really nice for most feeds but for extended feeds you might wanna try something called beautifulsoup
it s an xml html xhtml parsing library which is originally designed for screenscraping
242348
innodb	myisam
Pattern(s): 
otoh if you were looking to re-code your application to be transaction aware then deciding this setting will be part of the general performance review needed of the innodb settings
the other major thing to watch out for is that innodb does not support fulltext indices nor insert delayed
but then myisam doesn t support referential integrity
242683
directx	directdraw
Pattern(s): 
this removes the rectangle leaving the framebuffer intact
update the rectangle s coordinates details on how to do this with directx are a bit harder .
i believe directdraw the old school way of doing 2d in directx is obsolete so i guess you must be using direct3d
243197
redmine	bugzilla	redmine	bugzilla
Pattern(s): 
it is open source ajax enabled email interface scm integration integrated wiki configurable trackers workflow and roles rss and email notifications i have used jira too hard bugzilla too rubbish and fogbugz too expensive and i think redmine is fantastic
redmine
it is open source ajax enabled email interface scm integration integrated wiki configurable trackers workflow and roles rss and email notifications i have used jira too hard bugzilla too rubbish and fogbugz too expensive and i think redmine is fantastic
243285
printf	strtok
Pattern(s): 
which means that if one strtok is started while another is not ended one will corrupt the internal data of the other
using c api means using raw types which can lead to interesting bugs like buffer overflow and potential stack corruption when a printf goes too far or string cropping when using printf which is a kind of data corruption
even when working on raw data malloc can be easily abused as shown by the following code etc
244294
qsort	bsearch
Pattern(s): 
occasionally the perceived overhead of the function-call-per-comparison associated with using qsort or indeed bsearch is too great
sometimes people don t want to risk the potential o n 2 worst-case behaviour of quicksort but most production qsort algorithms will avoid that for you
quite apart from the various books on algorithms - sedgewick is one such but there are many others - you could also take a look at jon bentley s programming pearls or more programming pearls books
244584
cout	ofstream
Pattern(s): 
but i also think you need to rethink your solution to your problem
cout is just a ostream so if all classes functions takes a ostream then you can pass in anything you like
cout ofstream etc if that s too hard then i would create my own version of cout maybe called mycout that can be defined at either compiler time or runtime time depending on what you want to do
245323
cvs	svn
Pattern(s): 
that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs
call me old fashioned but i much preferred the branching tagging model under cvs
in cvs branches and tags are different things
246649
vb.net	vb6
Pattern(s): 
in addition find a personal project you can get highly motivated about with a tangible end goal deliverable that will make learning your new skills much more fun
imho i would suggest not moving to vb.net at all but instead utilizing your c background and making the move to c#
the reason for this is you already know the syntax and that vb.net is not enough like vb6 to make it as easy a move as you might expect
247056
dependency-injection	factories
Pattern(s): 
something like of course strictly speaking your permissionmanager should implement some kind of ipermissionmanager interface and that s what your other class should reference so a dummy implementation can be substituted more easily during testing
if you are using a dependency-injection framework then the common way to handle this is to either pass in a permissionsmanager object in the constructor or to have a property of type permissionsmanager that the framework sets for you
if this is not feasible then having users get an instance of this class via factories is a good choice
247627
hash	salt
Pattern(s): 
you should salt your passwords before applying the hashing function
salting a password does not affect the length of the hash result

247984
cobertura	checkstyle	cobertura	emma	cobertura	eclemma	emma	checkstyle	checkstyle	eclemma
Pattern(s): 
these are generated by our ci builds which run using continuum
i use a combination of cobertura checkstyle ecl emma and findbugs
eclemma is an awesome eclipse plugin that shows the code coverage by coloring the java source in the editor screenshot - the coverage is generated by running a junit test
248757
sudo	passwd
Pattern(s): 
edit looks like sudo has a nopasswd mode so i think it should work since you re running the programs as external commands
i would not run the application full time as root but you might want to explore making your application setuid root or setuid to some id that can become root using something like sudo for particular applications
you might be able to set up an account that cannot login use setuid to change your program s id temporarily when needed and have sudo set up to not prompt for passwd but always allow access to that account for specific tasks
248757
sudo	passwd
Pattern(s): 
it s been awhile since i ve done much unix development so i m not really sure whether it s possible to set up sudo to not prompt for a passwd or even if there is an api for it but as a fallback you could enable setuid to root only when needed
edit looks like sudo has a nopasswd mode so i think it should work since you re running the programs as external commands

248758
daemons	launchd
Pattern(s): 
that reduces the attack surface by allowing only permitted root launchd
your idea about the daemons has much merit despite the complexity it introduces
as long as the actions don t require some user interface interaction as root a daemons allows you to control what operations are allowed and disallowed
249603
perforce	svn
Pattern(s): 
i m sure you can do something similiar with svn but it s not as easy out of the box
perforce supports locking and seems to require it for some file types that cannot be merged binary resources think images etc
it does not however require locking for ordinary source files those can be opened for editing by multiple users at the same time and then merged back into the depot
249603
perforce	svn
Pattern(s): 
it does not however require locking for ordinary source files those can be opened for editing by multiple users at the same time and then merged back into the depot
i find perforce s system with changelists that group changes to multiple files and treat them as a unit nice
i m sure you can do something similiar with svn but it s not as easy out of the box
249808
folder	directory
Pattern(s): 
the simple answer is that you can t share files in svn - in the end we had to restructure our directory and use batch files
for source code files that were shared we moved them to an include folder and have all the projects reference that folder
for binary files that need to be copied to more than one location we store them just once in svn and then use batch files to copy them across to the target locations on each developers machine or also on the build machine
251773
switching	screens
Pattern(s): 
if your application deals with documents it s better to let each one have its own window
it makes it easier for the user to arrange their workspace and switching between documents using the os s app switching capabilities
a lot of mdi applications prevent this by corraling multiple documents into the same window which limits usability of screens real estate in a multiple monitor scenario
253463
redmine	trac	redmine	trac
Pattern(s): 
with trac you can have multi-project setups as well having a separate environment for each project but in the end it s a workaround
redmine has builtin support for multi-project environments
i previously used trac to manage my projects but i switched to redmine
253703
hash	salt
Pattern(s): 
with asp classic you d have to do this in a library instead of on the page to make sure that the user couldn t see your fixed salt
if you are trying to defeat brute force attacks you are better off enforcing some failed attempts window count rather than relying on the speed of the hashing or hash comparison mechanism to make the attack take longer to succeed
lock out the account after a certain number of failed attempts within the failure window and only let new attempts be made after a significant amount of time has elapsed
253740
hash	md5
Pattern(s): 
actually all other aspects being equal a slower hash function is more secure than a fast one
this is because a slower hash function results in slower generation of rainbow tables and slower brute forcing or dictionary attacks on the password
from thomas ptacek at as referenced in this coding horror article the problem is that md5 is fast
255682
profiler	xperf
Pattern(s): 
this one is about profiling
a sample profiler is a good choice here
on windows you can use the profiler built into visual studio or the xperf tools from the windows organization
256099
client-side	server-side
Pattern(s): 
but the server-side part is pretty simple
the client-side part is trickier i think
i found this article helpful he s writing things in php but the client side work is pretty much the same
256359
post	get	post	put
Pattern(s): 
put is often described as the edit method as by replacing the entire resource with a slightly altered version you have edited what clients will get when they next do
using rest in html forms the html5 spec defines get and post for the form element
the method content attribute is an enumerated attribute with the following keywords and states the keyword get mapping to the state get indicating the http get method
256670
ubuntu	linux
Pattern(s): 
this allowed my to run the stuff on linux but display it on my windows desktop
1 i used to run ubuntu in 64-bit mode but i had no end of trouble
mixing 64-bit and 32-bit is something mac os x does much better. 7.04 worked fine running 32-bit applications on the 64-bit kernel
257043
des	aes
Pattern(s): 
it s been widely in use for a long time but since it was originally specified with only a 56 bit key it s questionable whether it s secure enough for any important uses at this point
triple des is generally better but there are some known theoretical attacks
if you have a choice of cipher you might want to look at aes instead
257608
int	double
Pattern(s): 
the 10 byte long double provides a 64-bit mantissa
this is very convenient for when you want to store 64 bit int in floating point without loss of precision

257790
tapestry	wicket	tapestry	struts
Pattern(s): 
but no one seems to like struts anymore
the ex-jakarta menu on the apache jakarta page shows a number of web application frameworks that they ve incubated including tapestry turbine and velocity
there s also wicket a very decent comparison of wicket and tapestry is available here
257953
width	height
Pattern(s): 
safari will expand up to a width of 800px unless the width is already greater than 800 in which case it maintains that width and only modifies the window height
of course if there aren t any hard width values then the design is a liquid layout so the concern about designing for a particular width is somewhat altered
usually good liquid layouts despite being displayed correctly at any dimension are nonetheless designed to be viewed at reasonable window widths
258049
accessor	properties
Pattern(s): 
only provide accessor mutator functions if the accessor mutator methods are a sensible and useful part of the class s interface api
don t think of these methods as accessor or mutators
instead think of them as methods that access or mutate a certain abstract properties of the object that happens to be represented by a single member today but may be computed in a more complex manner tomorrow
258093
awt	swing	swt	swing
Pattern(s): 
i don t think that awt is capable of restyling native component peers in a reliable fashion
i know for certain that swt can t and it s a far more sophisticated toolkit than awt
this is part of why it was essentially deprecated in favor of swing back in java 1.2
259460
postgresql	mysql
Pattern(s): 
postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that
i suggest using nhibernate with postgresql
you can do all your testing and development on sqlite so you don t need to have an instance of postgresql running on your dev machine
260148
lxml	elementtree	lxml	libxslt	lxml	libxml2	libxml2	libxslt
Pattern(s): 
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well
if you have libxml2 and libxslt installed then also install lxml
it provides a nice easy-to-use binding for libxml2 and libxslt and it also implements the elementtree
260148
lxml	elementtree	lxml	libxslt	lxml	libxml2	libxml2	libxslt
Pattern(s): 
it provides a nice easy-to-use binding for libxml2 and libxslt and it also implements the elementtree
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well

260735
keydown	keyup
Pattern(s): 
if you want to what someone is typing in a text box it s usually best to wait until they ve released before trying to decide what they re doing
but if it s something like a game where you want to respond the instant it s pressed than you would use keydown
keydown is the moment the key is pushed down. keyup is after the key has been released
260826
subclass	abstract-class	public	protected
Pattern(s): 
for abstract-class this constructor scope public or protected is not of much difference since the instantiation is not allowed even if public
since it is meant to be invoked by the subclass it can invoke either public or protected constructor seamlessly
its completely on choice what to use
260972
strcpy	memmove	strcpy	strncpy
Pattern(s): 
standard c provides strcpy strcat strncat strncpy memmove memcpy etc
it makes sense to use strncpy over strcpy for safety if you don t know the source string will fit inside the destination buffer
however strncpy has a major performance issue in that it always writes the amount of bytes specified for the size
261159
public	protected
Pattern(s): 
define all your constructors protected making them public is pointless anyway your subclass constructor s can call one constructor of the abstract class
it may even have to call it if there is no no-arg constructor in the abstract class in any case don t forget that if you don t define a constructor then the compiler will automatically generate one for you this one is public has no argument and does nothing

261277
boost	stl	boost	stl
Pattern(s): 
i recommend nicola bonelli s answer to be accepted. that s part of the stl and doesn t require using boost if your code doesn t use boost thanks to the commenters for pointing this out
boost has a utility called next and its inverse prior for just that purpose
i recommend nicola bonelli s answer to be accepted. that s part of the stl and doesn t require using boost if your code doesn t use boost thanks to the commenters for pointing this out
263011
post	get	post	get
Pattern(s): 
an http post which is different from an http get is a separate logical call to the webserver but it still defines a uri that should process the post
a good webserver apache being one will again make the uri available to whatever module or appserver is running within it then will additionally make available the variables which were sent in the post headers
at the point where your application takes control from apache during a post you should have access to both the get and post variables and be able to do whatever control logic you wish including replying with a soap protocol instead of html
263791
folder	directory
Pattern(s): 
some options for when you want to update your exported copy run svn export --force home ..... myproject this will stop it complaining about overwriting the existing files
this method will mean that if you delete a file from your repository it ll still remain in your www folder
change your svn command to export into a new directory each time svn export home .... myproject_20081105 and then create a symlink to that folder ln -s myproject_20081105 myproject just delete and recreate the symlink each time you release
263934
minix	linux	minix	linux
Pattern(s): 
the linux kernel is too big for an academic exercise
if you re trying to understand the kernel look at minix
the linux kernel is too big for an academic exercise
264473
innodb	myisam
Pattern(s): 
sqlite runs in-process with the client application no network capability very low query overhead because of this potentially rather fast for easy queries because there is less ipc system calls and data copying to do
very limited concurrency i think it s either one writer or multiple readers per database file mysql far more features choice of engines innodb provides good features for many workloads much more control of storage backup restore etc network-capable - which allows its use in large scale applications better concurrency - the innodb engine has mvcc which means that readers do not block writers nor do writers block readers
even the old myisam engine has table-level locking rather than for the whole database as sqlite
265151
appfuse	spring	appfuse	stripes	sitemesh	stripes
Pattern(s): 
he calls it appfuse
i use struts2 with spring and hibernate and sitemesh which was an appfuse project to start with and it has served me well
stripes seems to be a great starting point for a java web app too
265372
client-side	server-side
Pattern(s): 
asp.net validation controls also provide two ways of validation server-side or client-side
the nice thing about these validation controls is that it will preform client-side validation when it detects the browser is able unless client-side validation has been disabled
thus reducing roundtrips
267793
public	protected
Pattern(s): 
a protected class is visible to other classes in the same package and to classes that extend the enclosing class
a public class is accessible to a class in any package
a class with default access class joe is only visible to other classes in the same package
267839
octal	decimal	octal	decimal
Pattern(s): 
you mask and shift would look something like #define mask 0x0038 #define shift 3 masks are often assigned in hexadecimal because it is easier to work with bits in the data type in that base as opposed to decimal
historically octal has also been used for bit masks
if i have a variable var that contains data that the mask is relevant to then i can isolate the bits like this i can isolate all the other bits like this i can clear the bits like this i can clear all the other bits like this i can set all the bits like this i can set all the other bits like this i can extract the decimal value of the bits like this i can assign a new value to the bits like this
268287
inherited	subclassing
Pattern(s): 
personally i wish classes were sealed by default in .net
classes should either be designed for inherited or prohibit it
there is a cost to designing for inherited it can pin down your implementation you have to declare which methods are going to call which other methods in case a user overrides one but not the other it reveals your implementation rather than just the effects it means you have to think of more possibilities when designing things like equals are hard to design in an inherited tree it requires more documentation an immutable type which is subclassing may become mutable ick item 17 of effective java goes into more details on this - regardless of the fact that it s written in the context of java the advice applies to .net as well
268335
ssd	sata
Pattern(s): 
so it will as you see be more than twice as bad as the simple read case
to improve the speed the first thing i d try is a faster hard drive or an ssd
sata is pretty much the easiest fastest option
268785
organization	naming
Pattern(s): 
i strongly recommend user research card sorting for organizing and naming non-standard menus
look closely at the ribbon and you ll see it s organization is pretty much the same as menu bars with equivalents for file the logo menu edit the home tab which includes formatting and view so from an organization standpoint it makes little difference whether you re using a ribbon or menubar
the menubar is still the best choice for most apps
269535
subclass	inherited
Pattern(s): 
use inherited
the new class is now a subclass of the original class
if the new class must have the original class
269670
copying	overwrite
Pattern(s): 
some platforms will not allow you to overwrite an existing file others will not allow you to rename a file so it changes location onto another partition
if you want to make the process completely safe you need to do the process yourself by removing the old file first and then renaming the new or copying if a partition change is possible
this is naturally prone to problems if your application machine crashes while doing this since it is no longer an atomic operation
270104
skip-lists	tree	skip-lists	tree
Pattern(s): 
a binary tree allows for more rapid searching and insertion by being inherently sorted and navigable
an alternative that i ve used successfully in the past is a skip-lists
this provides something akin to a linked list but with extra references to allow search performance comparable to a binary tree
271143
int	chars
Pattern(s): 
just remember that byte is always the size of a chars so if chars is bigger a byte is not only 8 bits any more
as kevin haines points out int have the natural size suggested by the execution environment which has to fit within int_min and int_max
the c89 standard states that uint_max should be at least 2 16-1 ushrt_max 2 16-1 and ulong_max 2 32-1
271143
int	chars
Pattern(s): 
the c89 standard states that uint_max should be at least 2 16-1 ushrt_max 2 16-1 and ulong_max 2 32-1
that makes a bit-count of at least 16 for short and int and 32 for long
for chars it states explicitly that it should have at least 8 bits char_bit . c++ inherits those rules for the limits.h file so in c++ we have the same fundamental requirements for those values
271143
int	chars	int	chars
Pattern(s): 
for chars it states explicitly that it should have at least 8 bits char_bit . c++ inherits those rules for the limits.h file so in c++ we have the same fundamental requirements for those values
you should however not derive from that that int is at least 2 byte
theoretically chars int and long could all be 1 byte in which case char_bit must be at least 32
271590
cpython	ironpython
Pattern(s): 
speaking for python ironpython c# is probably the easiest optimization path
cpython with c++ is doable but i find c a lot easier to handle but not all that easy being c
two tools that ease this are cython pyrex for c and shedskin for c++
272261
postgresql	greenplum	postgresql	mysql
Pattern(s): 
see this posting for a bit of fan-out on this topic
i m not sure off the top of my head if mysql does this but postgresql certainly does
iirc some of the variants greenplum i think also directly support bitmap indexes and there was some talk of incorporating it in the main db engine
272898
post	get
Pattern(s): 
hope this helps
without testing it or even trying to compile it i would do something like also here s a link to a blog post that achieves the same accross web applications
and finally a word of advice you ll get better search results if you use programmatically instead of code wise
273818
folder	directory
Pattern(s): 
so i wound up putting those resources in the package directory - in the end i had resources in several different places and it was more of a mess than putting everything in package directory would have been
that said here s the code i used to put my html templates in a separate folder
it should be added to init in your application class
275893
dictionary	map
Pattern(s): 
to access the relational data but if the object is available in the custom map you would at least avoid having to reconstitute it from the relational data
i d be more inclined to use a custom class backed by a dictionary t t than a datatable
presumably this would be built on top of a data access layer that could use linq or datatables etc
276255
inherited	properties	inherited	properties
Pattern(s): 
for instance this returns true and only if the specified type overrides the turningradius properties or declares a new one the properties has the myattribute attribute
okay given the extra information - i believe the problem is that getproperty is going up the inherited change
if you change your call to getproperty to then prop will be null if the properties isn t overridden
276842
ncover	partcover	partcover	opencover
Pattern(s): 
update opencover has replaced partcover
an alternative to ncover can be partcover is an open source code coverage tool for .net very similar to ncover it includes a console application a gui coverage browser and xsl transforms for use in cc.net
very interesting product
277177
disk	ram
Pattern(s): 
unfortunately some more experienced programmers learn the wrong lesson and assume that everything always needs to be cached in ram or it will be too slow
modern operating systems have very sophisticated disk caches so the second time you access the same part of a file might be significantly faster
finally interactive programs should do all file operations in another thread so your application doesn t slow to a crawl or stop working when the disk is busy or when a remote volume is temporarily unavailable
277233
g++	gcc
Pattern(s): 
the example you gave actually compiles c code where it is not an error to fail to declare function prototypes
if you meant to compile this as c++ code you would need the following command line g++ -o test test.cpp -framework opengl in that case you most certainly would get an error for not including gl.h and your code would fail to compile
when executing gcc from the command line g++ is the c++ compiler while gcc is the general c compiler
277445
innodb	myisam
Pattern(s): 
there are numerous other differences however the common one s i am aware of are myisam has typically been considered faster at searching but recent innodb improvements are removing this difference and improving high concurrency workload performance innodb support transactions whilst myisam does not innodb supports referential integrity whilst myisam does not innodb handles indexes a bit differently storing the primary key as part of every index making indexes take up more room on the disk but also making a covering index more likely myisam does table level locking while innodb can do row level locking different memory buffer index settings are used in the mysql configuration files innodb is typically said to have better crash recovery as mentioned in another answer the data is store on disk differently
i believe innodb is configurable in this area and can have one file per table etc
if required i m sure a google search or the mysql site will bring up numerous other differences in more detail
277452
innodb	myisam
Pattern(s): 
myisam uses a data file and an index file for each table stored in a directory named after the database
innodb seems to lump everything together in a file called ibdata1

277489
operands	scalar
Pattern(s): 
in scalar context or if the left operands is not enclosed in parentheses it returns a string consisting of the left operands repeated the number of times specified by the right operands
in list context if the left operands is enclosed in parentheses or is a list formed by qw string it repeats the list
if the right operands is zero or negative it returns an empty string or an empty list depending on the context
277511
innodb	myisam
Pattern(s): 
myisam locks the whole table for reading while inserts updates are executing
innodb can do row-level locking thus allowing multiple concurrent writes and read on the table

279287
folder	directory
Pattern(s): 
typically __init__.py is simply an empty file
if you structure your project this way src __init__.py main.py dirfoo __init__.py foo.py dirbar __init__.py bar.py then from foo.py you should be able to do import dirfoo.foo or from dirfoo.foo import fooobject per tom s comment this does require that the src folder is accessible either via site_packages or your search path
also as he mentions __init__.py is implicitly imported when you first import a module in that package directory
279805
tstringlist	tlist
Pattern(s): 
.add .insert .remove .clear etc. tstringlist has the basic tlist type methods and other methods custom to working with strings such as .savetofile and .loadfromfile if you want backwards compatibility then tstringlist is definitely the way to go
if you want enhanced functionality for working with a list of strings then tstringlist is the way to go. if you have some basic coding fundamentals that you want to work with a list of any type then perhaps you need to look away from tstringlist

280057
mousemove	mouseleave
Pattern(s): 
and yes they re classic vb -- that is vb6.
mousemove is the correct event in vb6
you ll have to do some work to manually detect when the mouseleave the client area cleanly
280621
folder	directory
Pattern(s): 
the file should then get copied to the output directory where the test gets run
edit localtestrun.testrunconfig in your solution items folder
select the deployment option and add the hibernate.cfg.xml file to the list of additional files to deploy
280881
phpunit	simpletest	phpunit	simpletest
Pattern(s): 
simpletest is maintained by a small but involved group of people
phpunit seems to have a bigger userbase which may count as an argument for switching
i m quite happy with simpletest though
280900
vbscript	vba
Pattern(s): 
here is some sample vbscript to output a tab delimited file
vbscript works quite well with the jet engine
however i do not see why you say it is not possible to export a query to a csv file from within access. sub transfercsv docmd.transfertext acexportdelim putnameofqueryhere c putpathand filenamehere.csv true end sub is the usual way in vba
281024
ubuntu	centos
Pattern(s): 
these files have a simple syntax that enabled you to specify users groups and packages to install and even to script some custom stuff
fedora and ubuntu use totally different package managers so you won t be able to easily do it in any sort of generic way
in centos which is redhat enterprise edition with the serial numbers filed off and so therefore pretty close to fedora we did this using kickstart files
281479
swt	swing
Pattern(s): 
if it s a flashy custom-styled application with tons of custom controls and complex compositing swing is the only game in town
however if a simpler api is more important to you or if your users demand the ultimate in platform laf fidelity swt is the best choice

282162
phpunit	simpletest
Pattern(s): 
simpletest and phpunit which i prefer
read the tutorials on how to write and run tests on the homepage of phpunit
it is quite easy and well described
283767
textinput	textfield
Pattern(s): 
this event does not occur if you use data binding or actionscript code to change the text . you can also use the valuecommit event which is dispatched when the user commits the changes usually by moving the focus away from the textfield but remember that this event is also dispatched when the field value is changed programmatically
textinput is dispatched only when the user has input text into the control
change on the other hand is dispatched on every change committed by the user
284711
uinavigationcontroller	uitabbarcontroller
Pattern(s): 
a uinavigationcontroller is a distinct object that is very different from a uitabbarcontroller
in general your application should have a tab controller one of who s tab s loads a uinavigationcontroller which in turn loads it s views - not that both maintain management over the different views
it is also improper to refer to the display of a uiviewcontroller as such an object doesn t have a visual representation
284851
junit	testng	ant	maven
Pattern(s): 
which are useful because maven will not execute the post-integration-test if any of the integration tests fail
not a problem with ant so i just use junit out of preference with it
in either case segmenting out the tests as both testng and junit do is helpful with integration tests too
285627
cvs	svn
Pattern(s): 
when you tag it with svn cp you re just making a copy of that particular revision with a longer name
and unlike a cvs tag you or other developers could continue doing ongoing development on that tag
it isn t a static entity like a cvs tag is well to be fair you can move a tag on individual cvs files which effectively changes it
285732
profiling	instrumentation
Pattern(s): 
these two techniques in tandem can form an iterative approach where you find the broad section of code that consumes the majority of your cycles using timers then instrumentation individual functions at a finer granularity to hone in on the problem
in essence if a profiling tool is not available you emulate what a profiling would have done
you insert counters into functions you think are interesting and count how many times and potentially with what size sort of arguments they re called
285809
serializable	deserialization	serializable	deserialization
Pattern(s): 
if the receiver has loaded a class for the object that has a different serialversionuid than that of the corresponding sender s class then deserialization will result in an invalidclassexception
a serializable class can declare its own serialversionuid explicitly by declaring a field named serialversionuid that must be static final and of type long if a serializable class does not explicitly declare a serialversionuid then the serializable runtime will calculate a default serialversionuid value for that class based on various aspects of the class as described in the java tm object serializable specification
however it is strongly recommended that all serializable classes explicitly declare serialversionuid values since the default serialversionuid computation is highly sensitive to class details that may vary depending on compiler implementations and can thus result in unexpected invalidclassexceptions during deserialization
286303
swt	swing	swt	swing
Pattern(s): 
now swt is os specific and you may not have the same flexibility than swing so you need to have good reason for looking for an alternative to swing especially when you consider there are good lafs look and feel for java
it depends with eclipse 3.4 swt 3.4 is quite supported with macos
now swt is os specific and you may not have the same flexibility than swing so you need to have good reason for looking for an alternative to swing especially when you consider there are good lafs look and feel for java
286617
inline	inlining
Pattern(s): 
note that the inline is just a compiler hint it doesn t force the method to be inlined. but that s good if the code size of an inner loop exceeds the instruction cache inlining easily hurts performance whether the pass return-by-reference can be resolved depends on the strength of your compiler i ve seen many where foo x out forces stack variables whereas x foo does keep values in registers
your wrapper itself will be inline however your method calls to the c library typically will not
this would require link-time-optimizations which are technically possible but to afaik rudimentary at best in todays tools generally a function call as such is not very expensive
286617
inline	inlining
Pattern(s): 
however inlining opens the door to more optimizations if you have v a + b + c your wrapper class forces the generation of stack variables whereas for inline calls the majority of the data can be kept in the fpu stack
also inline code allows simplifying instructions considering constant values and more
so while the measure before you invest rule holds true i would expect some room for improvements here
287676
hash	salt
Pattern(s): 
then the attacker needs to know 1 the way you combine the salt and the password not much security there 2 the salt which is likely in the db already and 3 they have to compute that value for each combination of password and salt
that s a lot more than just computing hash of common passwords and looking for a match

288615
hash	md5	hash	md5
Pattern(s): 
there are no known pre-image attacks against md5
as of 2017 there s no research that comes even close to feasibility so even a determined well-funded attacker can t compute a url that would hash to a hash of any existing url in your database
the only known collision attack against md5 is not useful for attacking url-like keys
289396
folder	directory
Pattern(s): 
a side note as the bin directory is managed by visual studio and is completely reproducible i suggest that it and it s sibling obj shouldn t be under source control
i assume that by bin folder you mean the build location where visual studio assembles the executable version of your application
generally i ve found that making manual changes to the bin folder is a good way to encounter a new world of pain
289412
mri	rubinius
Pattern(s): 
since approximately two years ago it is also possible to extend jruby in java and there is actually since last month a port of rcov for jruby
however this requires both a knowledge of ruby and c and a pretty deep knowledge at that because fiddling around with the internals of mri is not for the faint at heart
but only with rubinius will it be possible to write dynamic analysis tools such as code coverage tools in ruby itself making tool writing accessible to a much larger portion of the ruby community
290253
int	boolean	int	boolean	tinyint	boolean	tinyint	boolean
Pattern(s): 
for a boolean values bit 1 is pretty common
a tinyint is an 8-bit int value a bit field can store between 1 bit bit 1 and 64 bits bit 64
for a boolean values bit 1 is pretty common
290255
tinyint	boolean
Pattern(s): 
tinyint 1 allows any value that can be stored in a single byte -128..127 or 0..255 depending on whether or not it s unsigned the 1 shows that you intend to only use a single digit but it does not prevent you from storing a larger value
for versions older than 5.0.3 bit is interpreted as tinyint 1 so there s no difference there
bit has a this is a boolean semantic and some apps will consider tinyint 1 the same way due to the way mysql used to treat it so apps may format the column as a check box if they check the type and decide upon a format based on that
290553
inherited	properties
Pattern(s): 
i would like to see something like this in c# as it would simplify certain kinds of abstraction and contruction issues
was its support for mixin inherited - the methods from any other classes could be reused in your class
as long as your class provided the properties that these methods used it worked just fine and there was no diamond problem or other multiple-inheritance gotchas to worry about
290643
haskell	scheme
Pattern(s): 
inspired by lex augusteijn s sorting morphisms 3 ph.d
haskell programmer ate so many bananas that his eyes bugged out now he needs new lenses
post-doc haskell programmer from uustalu vene and pardo s recursion scheme from comonads 4 tenured professor teaching haskell to freshmen
290894
rss	feed
Pattern(s): 
there s no reason to have multiple formats for a site available and any modern feed client can now parse atom feed
atom has quite a few technical advantages over rss and is being widely supported and utilized by major companies such as google and microsoft
as for branding i don t really care what acronym is used
290894
feeds	rss
Pattern(s): 
despite the proliferation of rss and atom feeds i d say the average web user still has no idea what they are
looking at it in that way the whole concept of syndication feeds is still in its infancy

291470
next	except
Pattern(s): 
after the script is loaded imported the python interpreter won t access it anymore except when printing source line in a exception stack trace
any pyc file will be regenerated the next time as the source file is newer than the pyc

292421
treemap	linkedhashmap
Pattern(s): 
in this case there two potential standard implementations you mights want linkedhashmap can retain the order that the entries were added
treemap a sortedmap navigablemap will sort the results order of which can be determined by a comparator
alternatively you might want a form of map that fire events or also provides a tablemodel
293400
emacs	jedit
Pattern(s): 
the thing about using emacs is that the editors extensions language is lisp so it is a great way to learn lisp
i tried for long to find a good editor for my scheme code besides emacs but even with emacs tringer foubles it was still the best
jedit was the second best but its kind of like saying that the choices between cake sawdust and dirt the sawdust was second best
293400
emacs	jedit
Pattern(s): 
jedit was the second best but its kind of like saying that the choices between cake sawdust and dirt the sawdust was second best
emacs with paredit mode just owns for structured editing of s expressions
add to that the highlight parens mode and it gets even better
295657
sorting	filtering
Pattern(s): 
of course if those additional clauses go anywhere near user text input you have to sanitize them to prevent sql injection attacks. the database can filtering faster than any other tier in general because using a where clause on the database will often allow the database to avoid even reading the unnecessary records off the disk which is several orders of magnitude slower than anything you can do with the cpu
sorting is often faster on the db as well because the db can often do the joins in such a way that records are already sorted in the order you want them
so performance wise if you can do it on the db all the better
297123
dictionary	map
Pattern(s): 
abstract data types are not specific to any one programming language and the map adt can also be known as a hash or a dictionary or an associative array others at
notice we re making a distinction between the dictionary class and the dictionary adt. the dictionary class has been marked as obsolete so it s best not to use it

298306
maven	pom.xml	maven	pom.xml
Pattern(s): 
info checking out file opt viewstore common maven my_lf_ss vobs test_alm lf_build pom.xml info error build failure info info unable to enable editing on the pom.xml provider message the cleartool command failed. command output cleartool error element opt viewstore common maven my_lf_ss vobs test_alm lf_build pom.xml is already checked out to view my_lf_ss .
i have some maven repositories outside of clearcase for some third-parties libraries referential
but i have never used maven with clearcase since they follow a different logic maven needs signed names for files like myfile-1.2.jar whereas clearcase can store only myfile.jar and record the fact it is version labeled 1.2 that may have changed with the maven2 clearcase plugin reported by romaintaz but there is still some bugs in this new product as shown by this thread when one runs it a second time without unco ing the pom.xml file
298306
maven	pom.xml	maven	pom.xml
Pattern(s): 
but i have never used maven with clearcase since they follow a different logic maven needs signed names for files like myfile-1.2.jar whereas clearcase can store only myfile.jar and record the fact it is version labeled 1.2 that may have changed with the maven2 clearcase plugin reported by romaintaz but there is still some bugs in this new product as shown by this thread when one runs it a second time without unco ing the pom.xml file
maven is getting through the checkout fine but is not able to whatever the next step is
info checking out file opt viewstore common maven my_lf_ss vobs test_alm lf_build pom.xml info error build failure info info unable to enable editing on the pom.xml provider message the cleartool command failed. command output cleartool error element opt viewstore common maven my_lf_ss vobs test_alm lf_build pom.xml is already checked out to view my_lf_ss .
299292
profiling	debugging
Pattern(s): 
we discovered this by enabling the cache debugging which puts a small comment in the html about what cache is being used
after changing the setting allow writers to view cached content in the authenticated cache profiling we are seeing what this does for editors but for regular viewers the anecdotal evidence is that it is having a big impact

300156
capitalize	uppercase
Pattern(s): 
the letter s position in a word can make a difference
there s also a a distinct notion of title case where you just want to capitalize the first letter of each word
sometimes the title-case of a character is not the same as its uppercase
300851
integer	unsigned
Pattern(s): 
you are playing with numbers on the edge of the normal 31-32 bits range
please see additional documentation in the php manual the size of an integer is platform-dependent although a maximum value of about two billion is the usual value that s 32 bits signed
php does not support unsigned integers
300861
floating-point	integer
Pattern(s): 
however these only go so far if you add a large integer to a large integer php will see that the result is too big to fit into a normal integer and will assign it to a floating-point number
floating-point numbers floats themselves only go so high however and there s a point around the sixteen-digit mark where php will just lose the plot entirely
there is an option to use arbitrary-precision mathematics which supports numbers of any size and precision represented as strings
301455
hash	md5
Pattern(s): 
many people still use hashing for this purpose and md5 is a popular algorithm that gives you a 128-bit signature for the file with a high probability of changing when the contents of the file changes
in the general case you need to look at every bit of the file to include it in the hash and performance will probably be i o-limited
it s a sequential sweep over all data in the file updating the state of whatever hash algorithm you use for each new byte
304007
ant	maven
Pattern(s): 
if those are what you need then maven is the right tool
if you re just looking for a tool for dependency management you may want to look into ant s ivy too
it has been used in most of the projects that i worked on and
304481
minix	linux
Pattern(s): 
i d say go for it but remember that it is an experimenal environment not what you want for your day-to-day system
minix 3 is a new version
linux was prompted on the original minix
304481
minix	linux
Pattern(s): 
linux was prompted on the original minix
minix is really best suited to small systems of embedded systems
if you have an old x86 pc around it should run minix handily giving you an environment very much like what we called an amazing workstation in the mid-80 s
304880
maven	m2e
Pattern(s): 
along with the m2e plugin for eclipse managing dependencies becomes a doddle - it has an excellent dependency visualisation tool
overall i would say maven is a great tool starting out on a project but may start to lose its way once your build begins to gain complexity

305087
folder	directory
Pattern(s): 
override folder working directory path to which the files from star team are to be checked out for the build
if not specified the original working folder specified in the starteam will be used to extract the files
auto get source specifying this to true will allow cruisecontrol.net to automatically check out files from starteam filehistoryregex i had to make a change to the date regular expression as my regional settings was configured to english india wherein datetime is specified as dd-mm-yyyy hh mi ss ist
307510
extjs	mootools
Pattern(s): 
for things that need really slick animations i used to find that mootools was a little bit smoother but at least 8 months since i had to do anything with that much eye candy so my testing probably out of date
for an ajax widget fest dojo or yui or extjs probably have a bit more to offer but at the expense of library size and complexity
so sorry if that s a little vague but like anything else it comes down to what is the right tool for the job as a general purpose tool jquery usually wins for me but it depends a lot on the job
310850
bigloo	gambit	bigloo	gambit
Pattern(s): 
gambit-c gambit benchmarks
bigloo bigloo enables full connections between scheme and c programs between scheme and java programs and between scheme and c# programs
gambit-c gambit benchmarks
311254
maven-dependency-plugin	pom.xml
Pattern(s): 
more about the dependency plugin
with maven-dependency-plugin it s possible to resolve dependency conflicts and cyclic dependency problems
add to your pom.xml then run mvn dependency resolve or mvn dependency build-classpath to test it
312199
3-tier	n-tier	3-tier	n-tier
Pattern(s): 
i say this based on the n-tier architecture i have to work with
it s based on how you separate the presentation layer from the core business logic and data access wikipedia 3-tier means presentation layer + component layer + data access layer
n-tier is when unneccessary layers are added beyond these three and it s labeled with a buzzword so it doesn t seem like your architects are a bunch of crack monkeys
312593
packets	multicast	packets	multicast
Pattern(s): 
here is the abstract pragmatic general multicast pgm is a reliable multicast transport protocol for applications that require ordered or unordered duplicate-free multicast data delivery from multiple sources to multiple receivers
pgm guarantees that a receiver in the group either receives all data packets from transmissions and repairs or is able to detect unrecoverable data packets loss
pgm is specifically intended as a workable solution for multicast applications with basic reliability requirements
313394
ssl	https
Pattern(s): 
as a side note https usually listens on port 443 rather than port 80
ssl is the secure socket layer a cryptographic protocol to encrypt network traffic
the most recent version of ssl is version 3 which fixed some known issues in sslv2
313523
np-hard	np-complete
Pattern(s): 
note that np-complete problems are also np-hard
however not all np-hard problems are np or even a decision problem despite having np as a prefix
that is the np in np-hard does not mean non-deterministic polynomial time
317990
hash	salt	hash	md5
Pattern(s): 
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords
generally i prefer to keep passwords as hash that can t be recovered rather than as encrypted items that can be decrypted
by computing a hash from a visitor-supplied string plus some salt of course i can tell whether the user provided the same password twice without the security risk of allowing my application to be able to decrypt the provided password possibly maliciously
317990
crypt	salt	crypt	md5	crypt	hash	hash	salt	hash	md5
Pattern(s): 
by computing a hash from a visitor-supplied string plus some salt of course i can tell whether the user provided the same password twice without the security risk of allowing my application to be able to decrypt the provided password possibly maliciously
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords

318010
hash	salt
Pattern(s): 
it s beneficial in both scenarios
some applications require the user s password to be retrievable as opposed to a system where the user s password is randomly reset to something if forgotten because it cannot be decrypted because you re using a hash
also keep with the suggestion of using a salt value whether you hash or encrypt
318829
jsf	seam
Pattern(s): 
its always possible to use any orm framework with it because jsf doesn t play directly with the database it doesn t even know about it
hibernate + jsf is a very common combination
but if you are asking about using jsf managed beans with a jpa framework have a look at seam
319028
fgets	getchar
Pattern(s): 
if there is no terminating n before the ending 0 it may be that there is more data or that the next request will report end-of-file
you ll have to do another fgets to determine which is which
in this regard looping with getchar is easier. in the updated example code above if line sizeof line -1 0 after successful fgets you know that the buffer was filled completely
319613
qmainwindow	qwidget
Pattern(s): 
the window with the tabs would not need to be a qmainwindow unless you want to also want add a toolbar to that window as well
you can have as many qmainwindow instances as you want
a qmainwindow is just a qwidget which provides a menu bar toolbar status bar and docking framework
319796
ant	maven
Pattern(s): 
once you have your project built using maven all that is required for someone who wants to build from source is to run mvn install
fwiw the same can be accomplished using ant ivy to some degree

320181
inherited	subclassing
Pattern(s): 
i mark all my classes with sealed unless i specifically want to enable inherited and in those few cases i only make the required methods virtual
it is easy to remove the sealed tag if the class needs to change to allow inherited in the future
however if you want to change a class which is already being used as a base class for some other type you risk breaking the subclassing when you change the base class
322081
getter	setter
Pattern(s): 
therefore the getter defined by your interface will be marked virtual when implemented in a derived class
the dbkey property getter is virtual in the il because it is in an interface
the setter is not virtual because it is not part of the interface but part of the concrete class
323221
inherited	properties
Pattern(s): 

to talk to the same instance between appdomains it must inherited from marshalbyrefobject
done this way every method call to the object including properties etc is actually a remoting call to the other app-domain
324087
filesystems	ntfs	filesystems	ntfs
Pattern(s): 
ntfs will operate in compatibility mode with that.
if i were you i would never rely on any version of any filesystems driver be it microsoft s be it another os s to be consistent about the algorithm it uses to generate short file names
the exact behavior of the microsoft fastfat and ntfs drivers is not officially documented except as somewhat high level overviews thus are not part of the api contract
324355
lxml	libxml2
Pattern(s): 
also libxml2 has more features
lxml is mostly api compatible with xml.etree.elementtree
and there is good documentation in its web site
325964
range	max	range	min
Pattern(s): 
deriving this from above if start and end dates can be out of order if it is possible that or then you also have to check that they are in order so that means you have to add two additional validity rules or or or but to implement min and max you have to code using c ternary for terseness
starta endb and enda startb proof let conditiona mean that daterange a completely after daterange b _ |---- daterange a ------| |---date range b -----| _ true if let conditionb mean that daterange a is completely before daterange b |---- daterange a -----| _ _ |---date range b ----| true if then overlap exists if neither a nor b is true - if one range is neither completely after the other nor completely before the other then they must overlap. now one of de morgan s laws says that not a or b not a and not b which translates to note this includes conditions where the edges overlap exactly
if you wish to exclude that change the operators to and to note2
326073
post	get
Pattern(s): 
the get is also easily accessible by manually adding query parameters to the url in the form of name-value pairs
the beauty and complexity of the post however is that the name-value pairs are communicated from the browser to the web server enclosed within the http request header which is not as easily accessible
the only way to accomplish the post without using a tag is to manually alter the http request header and add the name-value pairs in yourself
327402
prng	random
Pattern(s): 
what you want to do is to have an uniform random generated but restricted to a certain range in this case an entropy of 4
if your prng has say an entropy of 32-bit you cannot be certain that computing the output mod 4 will work as expected
this require a bit more work
327810
glassfish	geronimo
Pattern(s): 
for example by using the geronimo server which uses tomcat as its container or by taking the jar files from glassfish
glassfish is a complete java application server with implementation for apis like jpa ejbs and more
glassfish contains a servlet engine initially used by tomcat but they improved it don t know what exactly
328604
vsts	tfs
Pattern(s): 
so when you re using the full microsoft stack vsts and tfs i d suggest just sticking with msbuild scripts
i m actually still trying to figure this question out myself but there is one big bonus for msbuild here using the same build file for local continuous integration by calling msbuild.exe directly while also being able to use vsts s server-side continuous integration with the same build file albeit most likely different properties settings
as compared to teamcity s support for msbuild scripts vsts only supports msbuild scripts
328942
uitabbaritem	uitabbarcontroller
Pattern(s): 
in the case of uitabbarcontroller these are properties that can and do change
the uitabbaritem is actually more of a button than anything else
it s the thing you tap on to select a tab
329223
prepare	execute
Pattern(s): 
using a prepare and execute style means that only one place execute needs to know about escaping if escaping is even necessary
it s always better to use prepare queries and parameter placeholders
like this in perl dbi for best performance prepare all your often-used queries right after opening the database connection
329243
division	multiplication	division	addition
Pattern(s): 
since most processors can do an addition comparison or multiplication in a single cycle those are all counted as one flop
but division always takes longer
how much longer depends on the processor but there s sort of a defacto standard in the hpc community to count one division as 4 flops
330999
cvs	svn	cvs	svn
Pattern(s): 
svn is good enough for most purposes and has the userbase community and tool support to make it a very attractive choice for people just getting started
cvs used to be the default it was pretty much the only answer
svn was designed explicitly to be a better cvs
331283
crypt	salt	crypt	md5	crypt	hash	salt	md5
Pattern(s): 
md5 and now even sha1 may be broken but they are still relatively good for password hash and md5 is still the standard for linux local passwords
for some added strength you can get the crypt module to use md5 by using a salt in the format
where abcdefgh is your salt string
331283
crypt	salt	crypt	md5	crypt	hash
Pattern(s): 
where abcdefgh is your salt string
note that this is a gnu extension to crypt see man crypt on a linux system
md5 and now even sha1 may be broken but they are still relatively good for password hash and md5 is still the standard for linux local passwords
332975
profiling	instrumentation
Pattern(s): 
however note that the set check can still be used with a typecast to eliminate the truncation warning actually this is the only reason that charinset exists its output on my laptop here is charinset 0.261 seconds case stmt 0.077 seconds set test 0.060 seconds
aqtime is an instrumenting profiling
instrumenting profilers often aren t suitable for measuring code time particularly in microbenchmarks like yours because the cost of the instrumentation often outweighs the cost of the thing being measured
333631
webkit	gecko
Pattern(s): 
having said that there are independent efforts underway to bring it to ie
with gecko-engined browsers you get in terms of other browsers implementing these features i m only aware of webkit implementing array extras but it s actually quite easy to monkeypatch support for those in all browsers since they re just additional methods
gecko opera and webkit also support the canvas element which although being a new html element is used via javascript so i m not sure if that fits your criteria
334646
windbg	mdbg
Pattern(s): 
but i used to do .net debugging support for msft and i ve never needed anything like that to troubleshoot memory leaks
windbg is first and foremost a win32 kernel debugger
so you may want to try one of the managed debuggers like mdbg
335379
filesystems	ntfs
Pattern(s): 
happily sql server 2008 allows you to have your cake and eat it too with the filestream attribute in sql server 2008 you can apply the filestream attribute to a varbinary column and sql server then stores the data for that column on the local ntfs filesystems
storing the data on the filesystems brings two key benefits performance matches the streaming performance of the filesystems
blob size is limited only by the filesystems volume size
337637
jflex	cup	jflex	cup
Pattern(s): 
it works closely with cup which is a bit closer regarding actions
not sure if this is an answer but one of the scanner generators i regularly use is jflex which outputs java code
it works closely with cup which is a bit closer regarding actions
338821
wordpress	joomla
Pattern(s): 
however using joomla can be difficult at first as its content organization is rather complex
if the site would consist of basic blog-like webpages then wordpress is the way to go
wordpress is a very simple blogging cms with a huge user community
338821
wordpress	joomla
Pattern(s): 
wordpress is a very simple blogging cms with a huge user community
it s very easy to use has many plugins for it and the newest version of wordpress even has auto-updating features
wordpress isn t as good as joomla when it comes to user management though
340682
accessor	properties
Pattern(s): 
calling initanint on the properties raises an error
you shouldn t create public fields variables on classes you never know when you ll want to change it to have get set accessor and then you don t know what code you re going to break especially if you have clients that program against your api
also you can have different access modifiers for the get set get
346183
getter	setter	public	protected
Pattern(s): 
don t assume that the goal should be to keep all variables private. in cases of inheritance making variables as protected is usually a good alternative
rather than marking all instance data public you create getter setter for those that need to be accessed to the outside world
don t make them all available - only the ones you need
346958
width	margin
Pattern(s): 
without being given a width #inner is automatically expanding to the full width of #outer which causes its contents to be flush left
the problem is that you need to give #inner a set width anything but auto or inherit
the margin 0 auto
348516
filesystems	ntfs
Pattern(s): 
one other note if you are using ntfs based storage windows server etc you might consider finding a way around putting thousands and thousands of files in one directory
i am not sure why but sometimes the filesystems does not cope well with that situation
if anyone knows more about this i would love to hear it
348548
codeigniter	kohana
Pattern(s): 
i prefer kohana over codeigniter ymmv
assuming you are using the latest version of codeigniter codeigniter which is 1.7.0 codeigniter is pretty strict about what characters it allows in urls
you can modify the regex that is used to filter urls
350855
anjuta	gnome	anjuta	geany	anjuta	kdevelop
Pattern(s): 
looks promising
then there are some others where i cannot tell you how they are since i ve not tested them including anjuta for the gnome desktop and code blocks written with wxwidgets it s quite cross-platform
if all you want is a gui for the compiler and a symbol browser you could also use geany which is very fast and includes an embedded terminal like kdevelop
351679
vtk	paraview
Pattern(s): 
i believe the memory footprint was close to 500mb but i also had a 400 000 point set where each point had a 7-tuple vector property and some other miscellaneous data available as well
i wanted to point out that in addition to using vtk directly there are two other products built on vtk that may be of interest to you
1 paraview paraview.org is a user interface built on top of vtk that makes scientific visualization products much easier
351952
overwrite	preserve
Pattern(s): 
applying changes corresponding only to the differences between the model and the underlying db
that means any customizations renamed properties navigation properties etc that you have made in other areas of your model will not be removed overwrite unless they are in conflict with the underlying db schema
in which case you can still preserve them by adding them to the add-in s exclusion list you can download it and get a free 30-day trial license from
352804
onmouseover	onclick
Pattern(s): 
because some mobile browsers read handheld media and some insist on screen styles and pretend to have 960px-wide screen iphone you ll need to serve mobile stylesheet with both the latter is css3 media query very useful and works with other mobile browsers too you can use it in stylesheets with
don t rely on hover or onmouseover because these events don t work on touch screens
onclick is delayed mousemove may not work
352860
try-catch	exception-handling
Pattern(s): 
... a method is not required to declare in its throws clause any subclasses of error that might be thrown during the execution of the method but not caught since these errors are abnormal conditions that should never occur
as the specification mentions an error is only thrown in circumstances that are chances are when an error occurs there is very little the application can do and in some circumstances the java virtual machine itself may be in an unstable state such as virtualmachineerror although an error is a subclass of throwable which means that it can be caught by a try-catch clause but it probably isn t really needed as the application will be in an abnormal state when an error is thrown by the jvm
there s also a short section on this topic in section 11.5 the exception-handling hierarchy of the java language specification 2nd edition
354067
inherited	properties
Pattern(s): 
that s my thoughts anyway
i wouldn t create a publisher class to inherited book since publisher isn t a book it is metadata information about a book. the bible though would inherited book
my advice would be to create a publisher properties on the book. this publisher could be of type ipublishinformation and the string publisher could use a namedpublisher string name class implementing ipublishinformation
354253
mergesort	timsort
Pattern(s): 
and since you don t care about lexicographic order the hash table solution sounds better for you if you can afford to hash the keys
a galloping mergesort such as python s built-in sort c.f
timsort has good expected performance when there are large runs of already-sorted data like in your example identical objects -- you ll skip o log n work per merge
354253
mergesort	timsort
Pattern(s): 
timsort has good expected performance when there are large runs of already-sorted data like in your example identical objects -- you ll skip o log n work per merge
you can also distribute a mergesort across multiple cpu s and disks if your dataset is extremely large this is called an external sort
however it will be worst case o nlog n
355064
trie	tree
Pattern(s): 
i can t think of anything more simple and straightforward than that and it preserves efficient string storage and searching
to store a word like stackoverflow insert into trie path values s st sta stac stack stacko stackov stackove stackover stackover stackoverf stackoverflo stackoverflow
the materialized path in the tree is the prefixed sequence of characters itself
355405
folder	directory
Pattern(s): 
if you re using a single ip for multiple sites configure the ip and hostnames domains that will be used to access that site so iis will know which site entries belong to which domains and where to route the requests
generally when i configure iis i set the properties for the default web site to a folder that doesn t contain anything then create individual entries within iis for each web site
for example you would create a new entry for myapplication.com and set its home directory to the proper folder on the server that contains your root files usually c inetpub wwwroot myapplication.com but it could be anywhere you like
355768
inherited	subclassing
Pattern(s): 
no you have spotted a problem with using inherited - that subclassing get tightly coupled to superclasses and their internals so it can be fragile
that is why effective java and others say you should favour delegation before inherited if possible
i think krosenvold s solution sounds clean
356028
range	max	range	max	range	min	range	min
Pattern(s): 
the use of min max value is very inelegant but i m not aware of a good way around it at the moment
yep easily possible just make sure you re covering the times in your indexes to pull it based purely off the dates a small amount of trickery is required due to sphinx requiring a bounded range x..y as opposed to x y
the use of min max value is very inelegant but i m not aware of a good way around it at the moment
356920
google-chrome	safari
Pattern(s): 
if you have the necessary resources i would advise to look into fixing it up
google-chrome uses webkit a fairly standard rendering engine
safari uses it also and it doesn t sound like webkit is going away
360494
cpu	processors	cpu	affinity
Pattern(s): 
some of its strategies include passive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processors
active loadbalancing if there are 3 tasks 2 on one physical cpu and 1 on the other when the second physical processors goes idle the scheduler will attempt to migrate one of the tasks to it
it does this while attempting to keep thread affinity because when a thread migrates to another physical processors it will have to refill all levels of cache from main memory causing a stall in the task
361157
uiviewcontroller	uitabbarcontroller	uiviewcontroller	uiwindow	uiviewcontroller	uinavigationcontroller
Pattern(s): 
if you want to control the position of a view make it a subview of the view controlled by your uiviewcontroller
because the view owned by a uiviewcontroller fills the available space in its parent
its parent will be either a uiwindow or the view controlled by something like a uinavigationcontroller or uitabbarcontroller
361949
udp	tcp	udp	tcp
Pattern(s): 
this is because tcp enforces an ordering before passing data to an application by default you can get around this by setting the urg pointer but no one seems to ever do this and that can be highly undesirable in an environment where you d rather get current realtime data than get old data reliably
udp is often used for various types of realtime traffic that doesn t need strict ordering to be useful
this is because tcp enforces an ordering before passing data to an application by default you can get around this by setting the urg pointer but no one seems to ever do this and that can be highly undesirable in an environment where you d rather get current realtime data than get old data reliably
362315
equals	icomparable
Pattern(s): 
by the way type should just use the regular reference compare provided by equals so it should just work fine with the above
do you mean this works with for else falls back to equals
there is also for inequality comparisons greater less this uses or t icomparable otherwise
362315
equals	icomparable
Pattern(s): 
there is also for inequality comparisons greater less this uses or t icomparable otherwise
by the way type should just use the regular reference compare provided by equals so it should just work fine with the above

362425
strtok	malloc
Pattern(s): 
for example you call malloc from thread1 and thread2 and they both get memory but they don t access each other s memory
a counter-example would be strtok which is not thread safe and would break even on unrelated calls
as soon as your threads start to talk to each other over data the usual thread safety doesn t guarantee much
362937
subclass	inherited
Pattern(s): 
i don t have to write a default passthrough to a hashtable.hashcode object o method which frankly seems like it s moving away from object orientation
if there is a framework class that does almost exactly what you want but a particular function of its interface throws a notsupported exception or for some other reason you only want to override one method to do something specific to your implementation it s much easier to write a subclass and override that one method rather than write a brand new class and write pass-throughs for each of the other 27 methods in the class
similarly what about java for example where every object inherited from object and therefore automatically has implementations of equals hashcode etc
363214
dynamic-languages	compiled-language
Pattern(s): 
unlike a statically typed compiled-language it is rather easy to use dynamic hooks such as __get and __set and reflection to make generic abstract objects
i m rather sceptical on the merits of code generation in the context of a dynamic-languages such as php
you can generally use other kinds of abstraction to get the same results
363594
subclass	inherited
Pattern(s): 
say the control class contains basic drawing functions ie paint - well control would become a basiccontroldelegate or similar and the subclasses would be created with a reference to a basiccontroldelegate which would be used for all inherited functionality
if you want to use the parent delegate functionality as-is you create a paint method in the each subclass which simply calls the same method on the delegate
if you want to change the functionality you create a different implementation
365834
innodb	myisam	innodb	myisam
Pattern(s): 
in innodb however primary keys are clustered meaning they stay attached to the data pages and ensure that the row contents remain in physically sorted order on disk according to the primary key but only within single data pages which themselves could be scattered in any order. this being the case i would expect that innodb might have an advantage in that myisam would essentially have to do double work -- write the integer once in the data pages and then write it again in the index pages
innodb wouldn t do this the primary key index would be identical to the data pages and would only have to write once
it would only have to manage the data in one place where myisam would needlessly have to manage two copies
366741
inherited	subclassing
Pattern(s): 
some languages like java have a fairly limited set of language features available meaning that subclassing is fairly often used because it s a convenient method for re-use technical inherited
closures and lambdas of c# make inherited for technical reasons much less relevant
so normally inherited is used for semantic reasons like cat extends animal
366864
hide	show
Pattern(s): 
the thing with web development as the nature of your question already show is that there are so many ways to do the same thing with the same results
though these are by no means official the common practices that i follow would result in something like this create the element that will act as the notification container in the markup but hide it by default this can be done numerous ways - javascript external css or inline styles
keep the scripts responsible for the behavior of the notification outside of the markup
367279
versioning	upgrade	versioning	upgrade
Pattern(s): 
compatible upgrade
when merely altering a table to add a column that permits nulls the versioning number stays the same
incompatible upgrade
367335
versioning	upgrade
Pattern(s): 
users may need this to troubleshoot problems perhaps while in contact with tech support or when using a knowledge base
use a versioning number system such that this is all the user needs to specify their build
versioning number is also needed for the users to know if they can upgrade
367901
packets	pcap
Pattern(s): 
it seems this tool can import pcap files and some other formats and edit them
it can then export the edited packets again but only to colasoft capsa packets files colasoft s own capture file format
but that should not be a problem as packets player is be able to read their own format
371348
equals	gethashcode
Pattern(s): 
the rules are if two things are equal then they must return the same value for gethashcode if the gethashcode is equal it is not necessary for them to be the same
this is a collision and equals will be called to see if it is a real equality or not
in this case it looks like return fooid
371946
stringbuilder	stringwriter
Pattern(s): 
something like this
i suspect it s because it s writing to a stringbuilder which is inherently utf-16
an alternative to get round this is to create a class derived from stringwriter but which overrides the encoding property
372544
subclass	inherited
Pattern(s): 
in java a static member method or field cannot be overridden by subclasses this is not necessarily true in other object oriented languages see smalltalk. a static member may be hidden but that is fundamentally different than overridden
since static members cannot be overriden in a subclass the abstract annotation cannot be applied to them
as an aside - other languages do support static inherited just like instance inherited
373446
bluecloth	rdiscount
Pattern(s): 
the guts are implemented in c
see also moving past bluecloth on ryan tomayko s blog
ryan s post includes the following benchmark of 100 iterations of a markdown test bluecloth 13.029987s total time 00.130300s average maruku 08.424132s total time 00.084241s average rdiscount 00.082019s total time 00.000820s average update august 2009 bluecloth2 was released it s speed is on par with rdiscount because it is based on rdiscount - it is not pure ruby
373446
kramdown	bluecloth	kramdown	rdiscount
Pattern(s): 
ryan s post includes the following benchmark of 100 iterations of a markdown test bluecloth 13.029987s total time 00.130300s average maruku 08.424132s total time 00.084241s average rdiscount 00.082019s total time 00.000820s average update august 2009 bluecloth2 was released it s speed is on par with rdiscount because it is based on rdiscount - it is not pure ruby
thanks jim update november 2009 kramdown 1.0 was just released
i haven t tried it yet but it is a pure-ruby markdown parser that claims to be 5x faster than maruku
374428
equals	compareto
Pattern(s): 
if b is a subtype of a and a s equals method checks that the argument is an instanceof a and b s equals method checks that the argument is an instanceof b it is quite likely that the equivalence relation defined by these methods is not symmetric
this is only for classes implementing comparable and allows for an implementation of equals which is always the same
all comparison logics to be located into one place only the compareto function
376517
lisp	scheme
Pattern(s): 
for scheme the easiest way to get started is drscheme
like others i suggest using emacs for common lisp
the easiest way to get started is lispbox which is emacs + slime + some common lisp implementation all fully featured and already configured
376828
haskell	scheme
Pattern(s): 
examples the programming language scheme is dynamically typed aka duck-typed and it has many dozens of interpreted implementations but also some fine native-code compilers including larceny gambit and plt scheme which includes both an interpreter and a jit compiler making seamless transitions
the programming language haskell is statically typed
the two most famous implementations are the interpreter hugs and the compiler ghc
376913
try-catch	exception-handling	try-catch	exception-handling
Pattern(s): 
this code is a better replacement while the older code blocks look like or that s the microsoft enterprise library way of providing configurable exception-handling handler within hard-coded action policy plus if you have action policy you can tell it configure to log sleep retry on certain types of exception-handling instead of simply failing or doing some other hard-coded action
for complex production-grade scenarios it is a horrible practice to have multiple try-catch statements and it is highly inflexible practice to have these statements within the business logic at all
windows cloud computing team their code has to be efficient and reliable seems to stick with the exception-handling handling action policies instead
377155
polymorphism	specialization
Pattern(s): 
it means that the function measure takes a list of anything a is a generic type parameter because it starts with a lowercase letter and returns an integer
so this works for a list of any element type - it s what would be called a function template in c++ or a polymorphism function in haskell not the same as a polymorphism class in c++
we can now define that by providing specialization for each interesting case measure the empty list and you get zero
377533
inherited	subclassing	inherited	base-class
Pattern(s): 
there is a precedence issue - the overridden method is defined in the base-class so for best method purposes the overload even with an implicit cast is preferable since it is defined in the most-specific type the subclassing
if you re-declared the method new then it would get precedence but you can t override and new a method with the same name and signature in the same type - you d have to add an extra level of inherited to achieve this
the exact logic for this is detailed in 14.5.5 and 14.4.2 of ecma 334 v4
378253
folder	directory
Pattern(s): 
all their code is self-contained in a single working directory that contains just what they need they can checkout multiple versions of multiple projects into separate working directory without wasting space and still keep track of what the hell is going on
it may require some minor refactoring of your workspace if project1 expects to find project2 outside of it s project folder rather than inside but that s a minor tweak in the grand scheme of things
if you really have your heart set on a single repository that s fine too that s what we use at my workplace and at home come to think of it however do ensure that you have a structure where each project has its own tags trunk branches folders and that checking out the trunk of project1 is all you need to do to get the code for project1 to build
379153
filtering	grouping
Pattern(s): 
in some of the cases you can copy out the subquery and execute it outside the context of the large query
this form also allows you to put the filtering clauses with the individual subquery and save the joining clauses for the final select
at work our development grouping generally finds them easier to maintain and frequently faster
379625
post	get
Pattern(s): 
for instance let s assume that you have a get request to a page which lets the user add an administrator to a site and the user clicks a link to a page which does a response.redirect username attackernamehere
while normally a post does not offer much protection against this nothing will stop someone from having a form method post action sharepoint has a concept of form digests which contain information about the previous request that is generating the post back including the user s name
this reduces the footprint for this kind of attack significantly
380149
range	max	range	minimum	range	min	minimum	max
Pattern(s): 
the xor operation used here widens both operands to int64 which requires an explicit cast back to longint so the min function will produce the correct result
finally if the operands are all neg the minimum will be found in the upper range and the answer will be neg
in this case we want the answer to be 0 so we simply clip it with the max function
381368
cpu	processors
Pattern(s): 
the cpu always reads at its word size 4 bytes on a 32-bit processors so when you do an unaligned address access on a processors that supports it the processors is going to read multiple words
the cpu will read each word of memory that your requested address straddles
this causes an amplification of up to 2x the number of memory transactions required to access the requested data
382550
polymorphism	specialization
Pattern(s): 
generic in haskell usually means polytypic but aboe i use the c++ meaning of generic
in haskell functions are as generic polymorphism as possible - the compiler will infer the most general type
for example themarko s example swap is polymorphism by default in the absence of a type signature main let swap a b b a main t swap swap t t1 - t1 t as for partial specialization ghc has a non-98 extension file c ghc ghc-6.10.1 doc users_guide pragmas.html#specialize-pragma also note that there s a mismatch in terminology
382550
polymorphism	specialization
Pattern(s): 
for example themarko s example swap is polymorphism by default in the absence of a type signature main let swap a b b a main t swap swap t t1 - t1 t as for partial specialization ghc has a non-98 extension file c ghc ghc-6.10.1 doc users_guide pragmas.html#specialize-pragma also note that there s a mismatch in terminology
what s called generic in c++ java and c# is called polymorphism in haskell
generic in haskell usually means polytypic but aboe i use the c++ meaning of generic
382960
rss	feed
Pattern(s): 
from experimentation google reader seems to pass through certain styles unharmed
the philosophy of rss is indeed that the reader is responsible for presentation
many people think that rss should be plain text and that css in rss feed is inappropriate
383540
tostring	getter
Pattern(s): 
javascript s fundamental data structure is the object a special type of map which only accepts strings as keys and has special semantics like prototypical inheritance getter and setters and some further voodoo
when usings objects as maps you have to remember that the key will be converted to a string value via tostring which results in mapping 5 and 5 to the same value and all objects which don t overwrite the tostring method to the value indexed by
you might also involuntarily access its inherited properties if you don t check hasownproperty
384966
dotnetzip	sharpziplib	dotnetzip	sharpziplib
Pattern(s): 
sharpziplib is a far more powerful and flexible solution
i ve found the dotnetzip library to be this easiest way to work with zip files
sharpziplib is a far more powerful and flexible solution
385054
typedef	typename
Pattern(s): 
in c not c++ you were required to use enum enumname to refer to a data element of the enumerated type
to simplify it you were allowed to typedef it to a single name data type
allowed functions taking a parameter of the enum to be defined as void f myenum x instead of the longer void f enum myenum x note that the name of the typename does not need to be equal to the name of the enum
385727
directcast	out
Pattern(s): 
with linq you can just use oftype for this purpose but you see what i mean... in my experience direct casting is appropriate more often than trycast - although with generics i find myself casting a lot less often than i used to anyway
for c# developers trycast is similar to as and directcast is the equivalent of normal casting
as mike pointed out in the comments as works for nullable value types but trycast doesn t. if the value really should be a t then directcast is indeed the right way to go - it fails fast with an appropriate error
386164
metaclass	superclass
Pattern(s): 
also inside class definitions self is set to the class being defined so class greeting def self.say_hello hello end #is the same as def greeting.informal hi end end what happens there is that the object greeting which is of class class gets a new metaclass with the new methods so when you call there s no such thing as class methods in ruby but the semantics are similar
a quick explanation of what that means in ruby you can define methods on a particular object what happens when you do that is that the object a which is of class string gets its class changed to a ghost class aka metaclass singleton class or eigenclass
that new class superclass is string
386164
metaclass	superclass
Pattern(s): 
that new class superclass is string
also inside class definitions self is set to the class being defined so class greeting def self.say_hello hello end #is the same as def greeting.informal hi end end what happens there is that the object greeting which is of class class gets a new metaclass with the new methods so when you call there s no such thing as class methods in ruby but the semantics are similar

386948
armadillo	blitz++
Pattern(s): 
mathstudio mathstudio.sourceforge.net an interactive equation editor and step-by-step solver
library armadillo c++ library the armadillo c++ library aims to provide an efficient base for linear algebra operations matrix and vector maths while having a straightforward and easy to use interface
blitz++ blitz++ is a c++ class library for scientific computing biginteger c# libapmath welcome to the homepage of the apmath-project
389002
innodb	myisam
Pattern(s): 
if you re doing a lot of lookups by pk or indeed range scans etc this is a good thing because it means that it won t need to fetch as many blocks from the disc
a non-pk unique index will never be clustered in innodb
on the other hand some other engines myisam in particular don t cluster the pk so the primary key is just like a normal unique index
389824
innodb	myisam	innodb	myisam
Pattern(s): 
myisam is effectively always autocommit
innodb enforces foreign key constraints
myisam doesn t enforce or even store foreign key constraints
390005
decimal	ieee
Pattern(s): 
the double type complies with the iec 60559 1989 ieee 754 standard for binary floating-point arithmetic
edit the reason why decimal has a getbits and double does not is that decimal preserves significant digits
3.0000m 3.00m but the exponents mantissas are actually different
392599
cpu	processors
Pattern(s): 
so the decoding logic of those designs is to translate cisc-type instructions into small uops which are generally targeted at a simpler load store unit risc-like
in this aspect we can say altough this may not be technically exact that machine code describes the higher-level complex instructions of the architecture not the real operations that are carried atomically by the underlying execution logic of the cpu
so we ve an architectural instruction set or architectural machine code and an inner-level micro-instruction set which is hidden from the outer world. the trace cache of the intel processors was conceived to store such ops to optimize the superscalar performance of the processors as the cpu executes uops not the architectural instruction-set available for execution by programs
395979
gridview	formview
Pattern(s): 
if you need to insert a new row formview appears also in a separate space
gridview shows them all like an html table
if you click on a key in a row detailview shows the details for the row in a separate space
397268
x86	64bit
Pattern(s): 
lots of com components seem to be 32 bit only i know this is a generalisation but is often the case
in order to use them you need to build your application as 32 bit x86
64bit windows has different 32 and 64bit registry nodes
397529
perl	tcl
Pattern(s): 
even when writing in c c++ i found a useful pattern was to embed a domain specific scripting language tcl though i don t much like that language
the actual choice of language is i think a religious choice though there are some tradeoffs that are obvious readability for example - perl is useful but is too easy to write cryptic scripts in
in some ways it is a write-only language -
399731
webclient	webrequest
Pattern(s): 
namespace system.net assembly system in system.dll you can alternatively use the system.net.webclient class webclient class provides common methods for sending data to and receiving data from a resource identified by a uri
namespace system.net assembly system in system.dll this class simplifies some common tasks like downloading a file method downloadfile the webclient class provides common methods for sending data to or receiving data from any local intranet or internet resource identified by a uri
the webclient class uses the webrequest class to provide access to resources
401693
salt	md5	salt	md5
Pattern(s): 
with that type of salting even md5 is decently secure
i usually use sha1 and salt with the user id or some other user-specific piece of information and sometimes i additionally use a constant salt so i have 2 parts to the salt
sha1 is now also considered somewhat compromised but to a far lesser degree than md5
404802
try-catch	exception-handling
Pattern(s): 
also since you raised the issue yes the try-catch block does incur some overhead even if the exception-handling is not thrown
personally and i think this is backed up by convention eafp is never a good way to go. you can look at it as an equivalent to the following as opposed to moreover consider the following this may look a lot less elegant and yes this is a crude example - bear with me but it gives you much greater granularity in handling the error as opposed to wrapping it all in a try-catch to get that nullpointerexception and then try to figure out where and why you got it
the way i see it eafp should never be used except for rare situations
405361
superclass	subclassing	superclass	subclassing
Pattern(s): 
the superclass changes and the subclassing is now broken
test every single method individually for each implementation class in particular failure to override a superclass method properly is a common bug
the author of the subclassing makes assumptions about the superclass
405484
webkit	gecko
Pattern(s): 
it is the user style sheet.
soypunk already mentioned the ua style sheet for webkit
the ua style sheet for gecko in standards mode consists of ua.css forms.css and html.css
408200
for-loop	loops
Pattern(s): 
the good news is that matlab supports java objects so you can do something like this
matlab s for-loop is static in nature
you cannot modify loops variable between iterations unlike the for initialization
408830
awt	swing
Pattern(s): 
finally you might also want to check out swt the gui toolkit used for eclipse and an alternative to both awt and swing which is somewhat of a return to the awt idea of accessing native widgets through java
awt is a java interface to native system gui code present in your os
it will not work the same on every system although it tries
408830
awt	swing
Pattern(s): 
features of widgets that aren t the same on every platform might not be supported or worse they might work differently on each platform
people used to invest lots of effort to get their awt applications to work consistently across platforms - for instance they may try to make calls into native code from java
because awt uses native gui widgets your os knows about them and handles putting them in front of each other etc. whereas swing widgets are meaningless pixels within a window from your os s point of view
409034
bazaar	rcs	bazaar	git
Pattern(s): 
one thing to note it will not mark your file read-only like rcs but i consider this an advantage
modern distributed version control systems like git mercurial or bazaar are the best tool in a situation like this
not because of the distributed aspect which is clearly not crucial here but because it is extremely easy to create a repository in-place
410681
converter	multibinding
Pattern(s): 
you should be able to do something along the lines of by using a multibinding and using self as the first binding we can then lookup resources in our converter
the converter needs to implement imultivalueconverter rather than ivalueconverter and can look something like this it s not something i do very often but that should work from memory

412098
uiview	calayer	uiview	calayer
Pattern(s): 
my assertion that the calayer associated with a uiview shares the same coordinate system could in fact be entirely erroneous
it could also be that calayers use the same coordinate system as uiview they re never flipped vertically but i thought they were since coregraphics uses a flipped coordinate system relative to uikit
a simple way to test would be to add a screen-sized calayer as the sublayer of a view s layer then add another small calayer as a sublayer of that
412292
vmware	virtualbox
Pattern(s): 
there is also sun s virtualbox which is free and the latest version is rather nice but i haven t looked at how slow disk operations are yet
with vmware disk operations are slower
for php development i doubt it would be a problem but you d definitely notice it if you are compiling a large c++ project
412765
free	malloc	free	calloc	free	memset
Pattern(s): 
the c translation of java code looks correct
second the suggested automatic free cannot work malloc does not initialize the allocated memory
i would use calloc instead or add a memset after malloc
413093
tostring	icomparable
Pattern(s): 
iequatable or icomparable or similar comes to mind
tostring - not all classes can be converted to a string should be moved to an interface
iformattable or similar comes to mind
413151
hash	md5
Pattern(s): 
for example if you want a string which cannot be read by humans encrypt it - check out the mcrypt extension which offers a variety of options
if you want to make a tamper-proof string which is human readable add a secure hash to it
md5 is indeed falling out of favour so try sha1
413338
mouse	keyboard
Pattern(s): 
you can also use and to select the file tab to the left or right of the current one
it is possible to re-arrange the file tabs by using the mouse to drag-sort them click and hold the mouse button on a tab and then drag it to the new location
this should make it possible to arrange them so that keyboard switching is more natural
414934
innodb	myisam
Pattern(s): 
because innodb provides row-locking rather than table-locking your select s can be concurrent not just with each other but also with many insert s
however unless you are intending to use sql transactions set the innodb commit flush to 2 innodb_flush_log_at_trx_commit
this gives you back a lot of raw performance that you would otherwise lose when moving tables from myisam to innodb
415091
multiplying	add	multiplying	addition
Pattern(s): 
in addition programmable calculator can store short sequences of keystrokes as a program which later can be replayed with a single keypress
say you set this sequence as a program one instruction per line now you have a custom operation pressing the program key or which one you ve assigned to it will run the sequence without your further assistance and will multiplying the content of the display with 2 and will add 1 - this is a program
later you can try more enhanced techniques storing temporary results to memory branch on result
415444
bash	zsh
Pattern(s): 
bash complicates this in that .bashrc is only read by a shell that s both interactive and non-login so you ll find most people end up telling their .bash_profile to also read .bashrc with something like other shells behave differently - eg with zsh .zshrc is always read for an interactive shell whether it s a login one or not
the manual page for bash explains the circumstances under which each file is read
yes behaviour is generally consistent between machines
415748
bash	subshell
Pattern(s): 
in your specific case you could use something like then pipe the output of go.bash into mysql and voila hopefully you won t destroy your database -
it can be done in bash itself if you have control of the configuration file format
you just need to source . the configuration file rather than subshell it
416340
keydown	keyup	keydown	keyup
Pattern(s): 
by the time keyup or keypress is triggered the default for keydown has already happened
i have found that in order to prevent the default action for an enter or tab key event you have to listen for the keydown event and handle cancel it
by the time keyup or keypress is triggered the default for keydown has already happened
416917
boost	allocator
Pattern(s): 
in the situation of a limited memory device i would avoid any kind of container more complex than a statically allocated array
replacing your containers with boost containers is not a good idea
the work to make appropriate custom allocator wouldn t be that bad but you d be violating the spirit of your allocate at startup rule
419198
free	malloc
Pattern(s): 
this is no different from freeing p in this case would be an error because p points to n which is a variable on the stack
therefore p holds a memory location in the stack and cannot be free
in this case the free is correct because p points to a memory location on the heap which was allocated by malloc
419600
tiff	png
Pattern(s): 
tiff remains widely accepted as a photograph file standard in the printing business
the tiff can handle device-specific colour spaces such as the cmyk defined by a particular set of printing press inks
png the png portable network graphics file format was created as the free open-source successor to the gif
419602
gif	png	gif	bmp
Pattern(s): 
as there is no loss of information in lossless compression it is not able to achieve as high a compression as lossy compression in most cases
examples of lossless image compression is png and gif
gif only allows 8-bit images. tiff and bmp are both wrapper formats as the data inside can depend upon the compression technique that is used
419619
allocator	stl
Pattern(s): 
i assume that c is being used over c++ for performance reasons and hence stl is not an option
edit as per request from filip s comment a simple strcat implementation based on a fixed size char buffer using dynamic allocator in this case you have to free your buffer manually when you are finished with it
handled by destructors in c++ equivalents addendum pax okay since you didn t actually explain why you had to create here it is
422343
int	double
Pattern(s): 
since floats and double already implement these values you might as well use them instead of trying to find the largest smallest values on your platform
with int it s more difficult to use infinity since it s not supported by hardware

422511
kerberos	ntlm
Pattern(s): 
i don t know which browsers support this off hand but my assumption would be that most do
from my experience kerberos is more of a prefered method but i have not worked with it much so unfortunately i don t have much advise as far as that goes
on a side note i recall reading somewhere that the jre also has ways of tying into ntlm on your web server in order to obtain identity information for the authenticated user
423100
public	protected
Pattern(s): 
using protected will of course allow subclasses to see the methods
btw i think that the reason interface methods are inferred to be public is because it is very much the exception to have an interface which is only implemented by classes in the same package
they are very much most often invoked by something in another package which means they need to be public
424750
post	get
Pattern(s): 
applied to the quick brown fox example renumbering the users to 1-3 i get this user 3 owns 75 45 60 of the final post user 1 owns 25 15 60 of the final post note that user 2 which only added the sometimes part which was subsequently removed is removed from the list
the id s for the post are as such things the algorithm will cope with if i copy something when making my new post the algorithm will properly attribute the copied elements even if i now copy parts of which i also added
example this is the first post which is cool 1111111111111111111111111111111111111 this is the second post which is the second post. 11111111111122222211111111111111112222222222111111 -- copied ------ the only problem with this algorith and this post in its entirety is that i m not entirely sure it produces what i would call an intuitively fair result
424936
bitwise-and	modulo
Pattern(s): 
however in my experience calling the modulo costs more than the benefit one gets so i use bit tricks involving 255 2 8-1 to compute the residue
for better or worse i am not using the trick of reading individual bytes out of a word only bitwise-and and shifts. to actually check if the residue is a square i look up the answer in a precomputed table. finally try to compute the square root using a method similar to hensel s lemma
i don t think it s applicable directly but it works with some modifications. before doing that i divide out all powers of 2 with a binary search at this point for our number to be a square it must be 1 mod 8. the basic structure of hensel s lemma is the following
425061
x86	64bit	x86	64bit
Pattern(s): 
as has been stated the 64bit jit compiler behaves differently to the x86 jit compiler
the x86 compiler will take advantage of some optimizations that the x64 one does not
for example in .net 3.5 the 32-bit jit will inline function calls with structs as arguments but the 64bit jit does not
425061
x86	64bit
Pattern(s): 
for example in .net 3.5 the 32-bit jit will inline function calls with structs as arguments but the 64bit jit does not
in production code i have seen x86 builds running as much as 20 faster than x64 builds with no other changes

425349
nullpointerexception	runtimeexception
Pattern(s): 
it depends the general rule is to throw runtime for programming errors and checked for recoverable conditions
if the exception could be avoided by programming correctly such as nullpointerexception or indexoutofbounds use runtime if the exception is due to some external resource out of control of the programmer the network is down for instance and there is something that could be done display a message of retry in 5 mins or something then a checked exception should be used
if the exception is out of control of the programmer but nothing can be done you could use a runtimeexception
425467
setinterval	settimeout	setinterval	clearinterval
Pattern(s): 
an example would be warning i ve not tested this at all
probably the best way to handle this is to use setinterval instead of settimeout
like settimeout setinterval returns an integer which can be passed to clearinterval to cancel the processing
426058
bazaar	git
Pattern(s): 
it will allow you to check out code from your subversion repositories develop independently with local history and check your code back in to subversion as and when you need to
take a look at bazaar
it s rather less daunting than git and has a useful-looking interface to subversion repositories via bzr-svn
426861
jsf	seam
Pattern(s): 
spring mvc seam struts are not suitable here
jsf is a good choice but it has quite a learning curve
i don t find it too difficult though but folks usually complain this alot and i have seen developers doesn t really understand the philosophy soon enough
430476
base	fractions
Pattern(s): 
on average then a brute force attack will find a successful password in about n k 2 or n k-1 trials
for convenience and because of some information-theoretic considerations i m not going to go into we usually express that as a number of bits which is lg n k where lg denotes the logarithm base 2
because we re used to thinking of bits as discrete things we actually usually take the ceiling of that number ie the least integer greater than lg n k but in fact the fractions value is perfectly legitimate
430553
unsigned	short	unsigned	short
Pattern(s): 
done away with short when did you last use 16-bit signed arithmetic
reading between the lines i think the logic was something like this generally the java designers wanted to simplify the repertoire of data types available for everyday purposes they felt that the most common need was for signed data types for implementing certain algorithms unsigned arithmetic is sometimes needed but the kind of programmers that would be implementing such algorithms would also have the knowledge to work round doing unsigned arithmetic with signed data types mostly i d say it was a reasonable decision
done away with short when did you last use 16-bit signed arithmetic
432844
int	boolean
Pattern(s): 
another way to do it is bool a bool b the xor operator on two boolean is logical xor unlike on ints where it s bitwise
which makes sense since bool is just a subclass of int but is implemented to only have the values 0 and 1
and logical xor is equivalent to bitwise xor when the domain is restricted to 0 and 1
433829
post	get	post	put
Pattern(s): 
i know nothing about the modules however
in regards to the custom skin there s a blog post from nina meiers that goes into a bit of detail on how to get a legacy skin to work in dnn 5
in the end i don t think she got it to work and it doesn t look like it d be a trivial task however so i d be prepared to put in some hours to learn how it works under the covers
433980
subclass	inherited
Pattern(s): 
this explicitly forbids treating your class as a base instance from the outside
seen from the outside your class derived is not a subclass of base only from inside the class itself
the same counts for protected inherited with the only difference that the base class now isn t private to the own class any more but rather to any derived class as well
434139
printf	fgets	printf	getchar	printf	fgetc	pclose	mkstemp	pclose	ftell	pclose	usleep	lseek	fread	lseek	ftell	lseek	fcntl	lseek	fseek	lseek	mkstemp	lseek	pclose	lseek	fgetc	fwrite	freopen	fgets	lseek	fgets	ftell	fgets	fread	fgets	getchar	fgets	fgetc	fgets	fseek	fgetc	ftell	fgetc	fread	fseek	fread	fseek	fgetc	fseek	mkstemp	fseek	pclose	fseek	getchar	fseek	ftell	ftell	fread	getchar	fgetc	getchar	ftell	mktime	strftime	puts	fflush	puts	gets	puts	putchar	putchar	fflush	putchar	gets	getc	fputs	getc	gets	getc	fflush	getc	puts	getc	putchar	fflush	gets	fputs	fflush	fputs	gets	fputs	putchar	readdir	fgetpos	getpwuid	mkstemp	getpwuid	getcwd	mkstemp	getcwd	mkstemp	ftell
Pattern(s): 
i got to it from the open group bookstore . cancellation points cancellation points shall occur when a thread is executing the following functions accept aio_suspend clock_nanosleep close connect creat fcntl when the cmd argument is f_setlkw fdatasync fsync getmsg getpmsg lockf mq_receive mq_send mq_timedreceive mq_timedsend msgrcv msgsnd msync nanosleep open pause poll pread pselect pthread_cond_timedwait pthread_cond_wait pthread_join pthread_testcancel putmsg putpmsg pwrite read readv recv recvfrom recvmsg select sem_timedwait sem_wait send sendmsg sendto sigpause sigsuspend sigtimedwait sigwait sigwaitinfo sleep system tcdrain usleep wait waidid waitpid write writev a cancellation point may also occur when a thread is executing the following functions access asctime asctime_r catclose catgets catopen closedir closelog ctermid ctime ctime_r dbm_close dbm_delete dbm_fetch dbm_nextkey dbm_open dbm_store dlclose dlopen endgrent endhostent endnetent endprotoent endpwent endservent endutxent fclose fcntl for any value of the cmd argument
presumably except f_setlkw which is listed. fflush fgetc fgetpos fgets fgetwc fgetws fmtmsg fopen fpathconf printf fputc fputs fputwc fputws fread freopen fscanf fseek fseeko fsetpos fstat ftell ftello ftw fwprintf fwrite fwscanf getaddrinfo getc getc_unlocked getchar getchar_unlocked getcwd getdate getgrent getgrgid getgrgid_r getgrnam getgrnam_r gethostbyaddr gethostbyname gethostent gethostid gethostname getlogin getlogin_r getnameinfo getnetbyaddr getnetbyname getnetent getopt if opterr is non-zero. getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwnam_r getpwuid getpwuid_r gets getservbyname getservbyport getservent getutxent getutxid getutxline getwc getwchar getwd glob iconv_close iconv_open ioctl link localtime localtime_r lseek lstat mkstemp mktime nftw opendir openlog pathconf pclose perror popen posix_fadvise posix_fallocate posix_madvise posix_openpt posix_spawn posix_spawnp posix_trace_clear posix_trace_close posix_trace_create posix_trace_create_withlog posix_trace_eventtypelist_getne posix_trace_eventtypelist_rewin posix_trace_flush posix_trace_get_attr posix_trace_get_filter posix_trace_get_status posix_trace_getnext_event posix_trace_open posix_trace_rewind posix_trace_set_filter posix_trace_shutdown posix_trace_timedgetnext_event posix_typed_mem_open printf pthread_rwlock_rdlock pthread_rwlock_timedrdlock pthread_rwlock_timedwrlock pthread_rwlock_wrlock putc putc_unlocked putchar putchar_unlocked puts pututxline putwc putwchar readdir readdir_r remove rename rewind rewinddir scanf seekdir semop setgrent sethostent setnetent setprotoent setpwent setservent setutxent stat strerror strerror_r strftime symlink sync syslog tmpfile tmpnam ttyname ttyname_r tzset ungetc ungetwc unlink vfprintf vfwprintf vprintf vwprintf wcsftime wordexp wprintf wscanf an implementation shall not introduce cancellation points into any other functions specified in this volume of ieee std 1003.1-2001
the side effects of acting upon a cancellation request while suspended during a call of a function are the same as the side effects that may be seen in a single-threaded program when a call to a function is interrupted by a signal and the given function returns eintr
435831
vb.net	vb6
Pattern(s): 
if costs are a constraint you could try this there is a wizard in visual studio that will attempt to upgrade vb6 to vb.net
it s not 100 accurate and you will have to write code for things vb.net does not support such as control arrays etc
once the code is in vb.net you can use a tool like sharpdevelop to convert the vb.net to c#
436417
firefox	safari
Pattern(s): 
normal or break-word. this is currently supported in ie safari and firefox 3.1 alpha
with older and current versions of firefox there is no standard way google was my friend of doing it
some suggest using a small script that adds in the middle of the word
436754
inherited	subclassing	inherited	subclassing
Pattern(s): 
if instance variables could be overridden in subclassing like you re trying to do here it would cause many more problems than it would fix
accessor methods themselves getdee are inherited but instance variables are not
if instance variables could be overridden in subclassing like you re trying to do here it would cause many more problems than it would fix
437296
bazaar	svn	bazaar	git
Pattern(s): 
one of factors you might want to consider is the support for inetracting with svn
git has git-svn bazaar has bzr-svn and mercurial has hgsubversion extension
disclaimer i am git user and small time contributor and watch and participate on git mailing list
439146
cvs	svn
Pattern(s): 
if you need some automatic post-check-out processing on the working copy you ll not have much other alternatives then writing a script and remind the clients to execute them
i ve never really been a cvs user so i do not know what common use-cases the solved wanted to... by using check-out hooks actually i haven t known them
svn provides pre-commit and post-commit hooks among some others which should be able to do whatever one wants to be done per-change on the source
439178
fileinputstream	fileoutputstream
Pattern(s): 
besides html to pdf there are also possible other convertions doc -- pdf html txt rtf xls -- pdf html csv ppt -- pdf swf code example import officetools.officefile
... fileinputstream fis new fileinputstream new file c test.html
fileoutputstream fos new fileoutputstream new file c test.pdf
440705
inherited	properties	inherited	properties
Pattern(s): 
the style collection properties itself is read-only you can t replace it but you can an element to it to reflect setting that style properties
table.style.add display none or the same is true for table rows as the style collection is inherited from htmlgenericcontrol
edit the html control needs to be runat server for this to work which i m assuming yours is since you are able to set the visible properties
441165
wordpress	vbulletin	wordpress	phpbb	wordpress	joomla	joomla	vbulletin	joomla	phpbb
Pattern(s): 
phpbb3 and vbulletin are good choices for php phpbb is open source but vbulletin is a private product unfortunately
some say wordpress is a good thing to look at i disagree but i expect joomla wouldn t be a bad place to look either
build a cacheable feed reader slightly more advanced - build a system that reads feeds stores their contents and returns the data
444692
try-catch	exception-handling
Pattern(s): 
2 things
put the try-catch blocks where they make sense
if you re interested in exception-handling from mycall as well as i s value then use throw objects of different classes for different errors
446068
width	margin
Pattern(s): 
the easiest thing would be to add a css-style property float right
to your 200px div however this would also cause your main -div to actually be full width and any text in there would float around the edge of the 200px-div which often looks weird depending on the content pretty much in all cases except if it s a floating image
edit as suggested by dom the wrapping problem could of course be solved with a margin
448079
free	malloc	free	malloc
Pattern(s): 
when free ing the piece first goes into a free-list for quick reuse by another malloc if the size fits
it may at this time be merged with another free item to form bigger free blocks to avoid fragmentation a whole bunch of different algorithms exist there from freelists to binary-sized-fragments to hashing and what not else
when freed pieces arrive so that multiple fragments can be joined free usually does this but sometimes fragments remain depending on size and orderof malloc and free
448079
free	malloc	free	malloc
Pattern(s): 
when freed pieces arrive so that multiple fragments can be joined free usually does this but sometimes fragments remain depending on size and orderof malloc and free
also only when a big such free block has been created will it be sometimes returned to the os as a block
but usually malloc keeps things in its pocket dependig on the allocated free ratio many heuristics and sometimes compile or flag options are often available
449918
webclient	webrequest
Pattern(s): 
update webclient is simpler to use than webrequest
normally you could stick to using just webclient unless you need to manipulate requests responses in an advanced way
see this article where both are used
450010
capitalization	toupper
Pattern(s): 
toupper in .net is a linguistic operation
in some languages capitalization rules are not straight forward
turkish i is famous for this
451156
ienumerable	ienumerator
Pattern(s): 
one of the limitations of ienumerator is that it holds its current state and it doesn t remember its prior state
as a result ienumerable is forward-only
if you need to hold onto prior states read the ienumerable into a list or linkedlist and enumerate through those objects instead
451612
int	chars
Pattern(s): 
the type chars without signed or unsinged is implementation-defined which means that it can act like a signed or unsigned type
signed int overflow leads to undefined behavior where a program can do anything including dumping core or overrunning a buffer

453149
matlab	simulink
Pattern(s): 
i m not sure what simulink is exactly
matlab is an interpreted programming language and graphics environment suitable for solving mathematical and engineering problems
it contains highly optimised matrix and other mathematical functions so it s not as slow as you might think if used properly
453149
matlab	simulink
Pattern(s): 
it contains highly optimised matrix and other mathematical functions so it s not as slow as you might think if used properly
i believe that there is a compiler that can compile a matlab program into an equivalent c program which can then be compiled to an executable
i m not sure what simulink is exactly
453751
kerberos	ntlm
Pattern(s): 
mike
there are 3 authentication protocols that can be used to perform authentication between java and active directory on linux or any other platform and these are not just specific to http services kerberos - kerberos provides single sign-on sso and delegation but web servers also need spnego support to accept sso through ie
ntlm - ntlm supports sso through ie and other browsers if they are properly configured
453751
kerberos	ntlm
Pattern(s): 
but i haven t tried it
the sun implementation of kerberos has been a comedy of errors over the years so based on sun s track record in this area i wouldn t make any promises about their spengo implementation until you have that bird in hand
for ntlm there is a free oss project called jcifs that has an ntlm http authentication servlet filter
453792
integer	fractions
Pattern(s): 
a javascript array by itself has numeric indices
if you store something with an index that can be interpreted as a nonnegative integer it will try to do so
if you store something with an index that is not a nonnegative integer it s alphanumeric negative or a floating-point number with a fractions piece it will fail on the array-index store and default to the object which is array s base class store which then converts the argument to a string and stores by string index -- but these stored properties are not seen by the array class and therefore are not visible to its methods properties length join slice splice push pop etc
456819
cpu	affinity
Pattern(s): 
if you want to this as a cpu load simulation you might want to take a few addtional steps on a multicore system be sure to either spawn the loop like this in multiple threads one for each cpu or execute the process multiple times and to make the scheduling predictable assign thread process affinity explicitly sometimes you may also want to increase the thread process priority to simulate the environment where cpu is heavily loaded with high priority applications
your loop mostly sleeps which means it has very light cpu load
besides of sleep be sure to include some loop performing any computations like this factorial implementation is left as an exercise to reader you may replace it with any other non-trivial function
456819
cpu	affinity
Pattern(s): 
besides of sleep be sure to include some loop performing any computations like this factorial implementation is left as an exercise to reader you may replace it with any other non-trivial function
by adjusting sleepbalance computebalance you may adjust how much cpu this program takes
if you want to this as a cpu load simulation you might want to take a few addtional steps on a multicore system be sure to either spawn the loop like this in multiple threads one for each cpu or execute the process multiple times and to make the scheduling predictable assign thread process affinity explicitly sometimes you may also want to increase the thread process priority to simulate the environment where cpu is heavily loaded with high priority applications
459061
perforce	cvs
Pattern(s): 
perforce has a nice document describing the process working disconnected from the perforce server one thing the document doesn t mention is the allwrite clientspec attribute which marks all files in your working directory as writable instead of only the files you have checked out
one option is to use perforce as if you were disconnected from the server and reconcile your changes later rather than telling perforce everything you do before you do it
this is roughly equivalent to the workflow in cvs or subversion. you would synchronize your working copy go off and develop and then ask perforce to figure out what you did while it wasn t watching
459061
perforce	cvs
Pattern(s): 
this is roughly equivalent to the workflow in cvs or subversion. you would synchronize your working copy go off and develop and then ask perforce to figure out what you did while it wasn t watching
perforce has a nice document describing the process working disconnected from the perforce server one thing the document doesn t mention is the allwrite clientspec attribute which marks all files in your working directory as writable instead of only the files you have checked out

459723
hide	show
Pattern(s): 
iirc you need to have a unique key or id for each node element and then use treeview.select for the node returned from treeview.findnode
-- or -- hide the treeview userform instead of closing it me.hide
when the second userform is closed or ok cancel pressed then show the treeview userform again treeviewform.show
460176
integer	radix	integer	radix
Pattern(s): 
the second paramter radix makes sure it is parsed as a decimal number
parseint will force it to be type integer or will be nan not a number if it cannot perform the conversion
the second paramter radix makes sure it is parsed as a decimal number
461754
cvs	svn
Pattern(s): 
i use svn with the tortoisesvn shell add-on and i m quite happy with it
cvs is alright too but gets very slow as projects get large

463340
nullreferenceexception	argumentnullexception
Pattern(s): 
in this case you should throw an argumentnullexception
throwing a nullreferenceexception here is a bad idea for a few reasons a null reference did not actually occur so seeing one is counterintuitive throwing a nullreferenceexception and causing a nullreferenceexception to occur produce discernably different exceptions one way to see the difference is the error code
this is true of many exceptions that are thrown by the clr
463633
int	chars
Pattern(s): 
now perhaps in 2009 a 800gb database is the same for all intents and purposes as a 810gb if you converted the varchars to chars but for short strings 1 or 2 chars chars is still a industry best practice i would say
now if you look at the wide variety of data types most databases provide even for int alone bit tiny int bigint there are reasons to choose one over the other
simply choosing bigint every time is actually being a bit ignorant of the purposes and uses of the field
463769
stateless	stateful
Pattern(s): 
however doing so on a singleton is not a reliable way to capture process or appdomain tear-down
at the risk of offering subjective design advice if the object is truly stateless make it a static class
if it is stateful question why it is a singleton you re creating a mutable global variable
463954
firefox	safari
Pattern(s): 
firefox is just better for web development and i prefer safari overall
firefox lets you use different profiles
each profile can have separate preferences themes and plugins
464096
kerberos	ntlm
Pattern(s): 
as i eluded to earlier ntlm is only one of several windows security support providers ssp
there s also a digest ssp kerberos ssp etc
but the negotiate ssp which is also known as spnego is usually the provider that ms uses in their own protocol clients
464432
bazaar	perforce	bazaar	cvs
Pattern(s): 
then if there is ever a need to add them to an official work repository then that is nice and easy
bazaar is a good option
its simpler to install than subversion perforce or cvs and no server component is required
466217
subclass	inherited
Pattern(s): 
but if you only want to vary the value of the data then just vary the data
other things being equal i prefer the simpler solution a single concrete class which takes a string as a constructor parameter to the more complicated one using a base class and a subclass
inherited is appropriate when you want to vary behaviour if the browser watcher will do something that the ordinary process watcher doesn t
466397
cvs	svn
Pattern(s): 
i prefer a tag all approach however this is my personal choice
you should leave cvs
cvs is old and not very fast in terms of branching tagging branch tag creation depends linearly on number of files in a project you should think of your branching strategy first do you want to have a stable trunk feature branches developer branches unstable trunk release branches platform branches this heavily depends on your project and development philosophy if you want to use svn you really have to think of your repository layout because nearly all softwareprojects are module-based and you should find a structure in which you can easily tag all needed modules
466926
ada	vhdl	ada	vhdl
Pattern(s): 
it s also a basis for vhdl
ada is still popular in colossal legacy government-targeted programs
it s also a basis for vhdl
470060
int	chars	int	boolean	int	double
Pattern(s): 
so you can convert it to a number but not necessarily an int
according to the vb6 documentation isnumeric returns true if the data type of expression is boolean byte decimal double int long sbyte short single uinteger ulong or ushort or an object that contains one of those numeric types
it also returns true if expression is a chars or string that can be successfully converted to a number. many of those cannot be converted to an int
472197
int	chars	int	double
Pattern(s): 
i count twelve of them
i would add as well as a common trick in these sort of questions it in the assumption you make that i is an int
other common assumptions might be s is a string x y are a double ch is a chars b is a byte etc. if you see a question like this you can bet that i is not its expect type
474081
implements	extends
Pattern(s): 
they should only be used to extends class functionality
if you have access to the base class code and the functionality you re trying to implements is logically part of the inheritance heirarchy then you should put it in the abstract class
my point is just because you can doesn t mean you should
474567
int	double
Pattern(s): 
in fact if you want to handle equality correctly don t rely on double to work properly. if b d is positive a b c d if ad bc
if there are negative int involved that can be handled appropriately.
i might rewrite as the use of long here is to ensure there s not an overflow if you multiply two large int s
475394
reverse-engineering	obfuscation
Pattern(s): 
obfuscation is not a reliable protection against this
you can add prohibition against reverse-engineering to your end-user license agreement for your software
most proprietary companies do this
475953
jython	pypy	cpython	ironpython	cpython	ironpython	cpython	pypy
Pattern(s): 
ironpython is quickly becoming one of the best in this respect though and there is a lot of traffic on planet python about it
the main thing that will encourage developers to write code that s different from what they would write in cpython is the lack of c extension modules like numpy this is a problem in jython and pypy as well
an interesting project to keep your eye on is ironclad which will let you call c extension modules from within ironpython
476079
accessor	properties
Pattern(s): 
eric lippert recently blogged on this subject in a couple of posts - automatic-vs-explicit-properties future-proofing-a-design
aside from the point made by others whether to use an accessor or a field directly may need to be informed by semantics
some times the semantics of an external consumer accessing a properties is different from the mechanical necessity of accessing its value by internal code
476332
post	get
Pattern(s): 
the best way to get a beep sound is to pinvoke into the messagebeep function
the pinvoke signature for this method is pretty straight forward this blog post has an excellent more thorough example on archive.org

476633
metaclass	superclass
Pattern(s): 
the fact that the target class is a meta class or an abstract superclass or a concrete class doesn t matter
metaclass make classes
they might make other metaclass which is weird but they re still just metaclass making classes
477345
versioning	upgrade
Pattern(s): 
all applications need to be treated accordingly on how they were build
most of the time wizards make a good job but you need to execute a walkthrough code review in order to refactor and take advantage of the new framework versioning
wishing my customers also approve the framework upgrade to the applications
477769
int	chars
Pattern(s): 
in this sense the c int arithmetic is a placeholder which is not defined exactly by the programming language specification but is only completely instantiated by determining the target machine
java precisely defines how int are represented and how int arithmetic is to be computed
java int -------------------------- signed | unsigned -------------------------- long 64-bit | int 32-bit | short 16-bit | chars 16-bit byte 8-bit | chars is the only unsigned int type
478244
integer	unsigned	integer	unsigned
Pattern(s): 
also adding unsigned does not affect the size of the column just how the number is represented
according to section 10.2 of the mysql 5.1 manual in non-strict mode when an out-of-range value is assigned to an integer column mysql stores the value representing the corresponding endpoint of the column data type range
if you store 256 into a tinyint or tinyint unsigned column mysql stores 127 or 255 respectively
