1517
emacs aquamacs
Pattern(s): 0	
someone syncs carbon emacs with the upstream tree quarterly i think
aquamacs has a more irregular schedule but it s seen some pretty major updates over the last year



1561
emacs aquamacs
Pattern(s): 0	
someone syncs carbon emacs with the upstream tree quarterly i think
aquamacs has a more irregular schedule but it s seen some pretty major updates over the last year



13942
imperative declarative
Pattern(s): 0	
imperative
declarative is usually better for anything where you really don t need the fine-grained control over how something is done



48015
vim textmate
Pattern(s): 0	
stick with vim
textmate is a better emacs for macs though that won t help you with solaris



57802
jruby mri
Pattern(s): 1	
only choice not that that s a bad one jruby is actually faster



60315
internationalization translation
Pattern(s): 0	
in my experience internationalization requires a little more than translating strings
many strings when translation require more space on a dialog



68674
ubuntu linux
Pattern(s): 1	
ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using ubuntu



77625
innodb myisam
Pattern(s): 0	
i found that the table-level locking in myisam caused serious performance problems for our workload which sounds similar to yours
unfortunately i also found that performance under innodb was also worse than i d hoped



77945
quicksort mergesort
Pattern(s): 0	
quicksort has less overhead so with small n and slow computers it is better
but computers are so fast today that the additional overhead of a mergesort is negligible and the risk of a very slow quicksort far outweighs the insignificant overhead of a mergesort in most cases



79771
subtraction multiplication
Pattern(s): 1	
addition and subtraction are then a very simple integer operation such as 0.72 + 1 becomes 72 + 100 becomes 172 becomes 1.72
multiplication is slightly more complex as it needs an integer multiply followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44



79771
addition multiplication
Pattern(s): 1	
addition and subtraction are then a very simple integer operation such as 0.72 + 1 becomes 72 + 100 becomes 172 becomes 1.72
multiplication is slightly more complex as it needs an integer multiply followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44



86590
ferret sphinx
Pattern(s): 0	
when you do have to mass index your data ferret is definitely slower than acts_as_sphinx by a factor of 3



88684
post get
Pattern(s): 0	
john does a better job of covering some of the advanced techniques without getting into a bunch of the academic tripe you get elsewhere
i also wrote this post which did surprisingly better than i thought



90444
udp tcp
Pattern(s): 0	1	
udp has less overhead but isn t guaranteed delivery
conversely tcp is more trustworthy



99194
for-loop loops
Pattern(s): 0	
i would agree that the for-loop is clearer and more appropriate when iterating
the while loops is appropriate for polling or where the number of loops to meet exit condition will change based on activity inside loops



107415
post put
Pattern(s): 1	
an http post is more general
an http put is supposed to initiate an action on the server



124248
rsa aes
Pattern(s): 1	
that is actually not the case with rsa which is --- more so than aes --- just a math equation



124591
inherited subclassing
Pattern(s): 0	
when you proceed this way there is not a problem with the fragile class or at least the designer is conscious or the threat and the subclassing do complete only those parts the designer allow them
inherited is more to specialize the classes in the same fashion a truck is an specialized version of car and mostertruck an specialized version of truck



164437
yourkit jprofiler
Pattern(s): 1	
it s so much less invasive than jprofile in that i ll happy run production servers with the yourkit agent installed which i would never do with jprofiler
also the analysis tool that comes with yourkit is more intuitive in my opinion making it easier to get the root cause of problems



176144
opera firefox
Pattern(s): 0	
second safari has the greatest standards support combined with a marketshare which isn t negligible opera is just hard to justify for cost benefit reasons
third in my experience going from safari to firefox is usually less problematic than the other way around



179813
verilog hdl
Pattern(s): 0	
for hdl choice verilog is to c as vhdl is to ada
so verilog is easier to get started with but you can make mistakes more easily



179813
verilog vhdl
Pattern(s): 0	
for hdl choice verilog is to c as vhdl is to ada
so verilog is easier to get started with but you can make mistakes more easily



195398
postgresql mysql
Pattern(s): 0	
at the load levels where postgresql s better locks overtake mysql s other parts of your platform could be the bottlenecks
postgresql does comply better with standards so it can be easier to replace later



234967
skip-lists tree
Pattern(s): 0	
nd i used a skip-lists to implement my std map
the reason i went with my std map is because it is a simple algorithm which is very close to the performance of a balanced tree but has much simpler iteration capabilities



256092
bazaar git
Pattern(s): 0	
bazaar is a distributed version tool just like git but is imo simpler to setup and use



257043
des aes
Pattern(s): 0	
triple des is generally better but there are some known theoretical attacks
if you have a choice of cipher you might want to look at aes instead



260148
lxml elementtree
Pattern(s): 1	
t provides a nice easy-to-use binding for libxml2 and libxslt and it also implements the elementtree
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well



260277
skip-lists tree
Pattern(s): 1	
the rebalance operation can affect large portions of the tree which would require a mutex lock on many of the tree nodes
inserting a node into a skip-lists is far more localized only nodes directly linked to the affected node need to be locked



278760
getelementsbytagname getelementbyid
Pattern(s): 1	
in general getelementsbytagname is probably best avoided because the name attribute in html has several overlapping purposes which can confuse
using getelementbyid is much more reliable



278989
jboss glassfish
Pattern(s): 0	
i would prefer jboss because of its wider customer base maturity etc
glassfish is harder to incorporate into an automated build deployment process but it might be nicer for some of its specific features if you need them



295657
sorting filtering
Pattern(s): 1	
the database can filtering faster than any other tier in general because using a where clause on the database will often allow the database to avoid even reading the unnecessary records off the disk which is several orders of magnitude slower than anything you can do with the cpu
sorting is often faster on the db as well because the db can often do the joins in such a way that records are already sorted in the order you want them



313130
cpu processors
Pattern(s): 0	
with only one processors you d have to render pixel-by-pixel on a super-fast processors to achieve the same effect
the reason cpu manufacturers moved to more than one core was because manufacturing a single core at higher speeds was getting more difficult and expensive and that a single core would suck up more power and produce more heat than two cores at half the speed basically



317990
crypt salt
Pattern(s): 0	
by computing a hash from a visitor-supplied string plus some salt of course i can tell whether the user provided the same password twice without the security risk of allowing my application to be able to decrypt the provided password possibly maliciously
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords



317990
salt md5
Pattern(s): 0	
by computing a hash from a visitor-supplied string plus some salt of course i can tell whether the user provided the same password twice without the security risk of allowing my application to be able to decrypt the provided password possibly maliciously
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords



323219
post get
Pattern(s): 1	
also as pointed out in the link littlegeek posted a get url is more likely to be written to your server logs



327972
innodb myisam
Pattern(s): 0	
nother thing is that i think you use myisam table engine which locks the entire table on update.i suggest you use innodb instead
innodb is slower on select -queries but faster on insert and update because it only locks the row it s working on and not the entire table



329243
division multiplication
Pattern(s): 0	
since most processors can do an addition comparison or multiplication in a single cycle those are all counted as one flop
but division always takes longer



329243
division addition
Pattern(s): 0	
since most processors can do an addition comparison or multiplication in a single cycle those are all counted as one flop
but division always takes longer



332410
postgresql mysql
Pattern(s): 0	
my opinion is that mysql is more of a programmers dbms
whereas postgresql and others like it are database administrator s dbms



337637
jflex cup
Pattern(s): 1	
not sure if this is an answer but one of the scanner generators i regularly use is jflex which outputs java code
the scanner generators i regularly use works closely with cup which is a bit closer regarding actions



350224
int chars
Pattern(s): 1	0	
or the same reason using smaller int is better if you need maximum speed
otoh if the variance is small a field has a maximum of 20 chars and most records actually are nearly 20 chars long then chars is better because chars allows some additional optimizations by the db



350459
ogre irrlicht
Pattern(s): 0	
o i simply can not see a reason why to spent months learning ogre s terrible api - if one has free time i would advice to learn d3d d3d
i can say even more - irrlicht is better than many commercial engines for example - torque absolute lack of documentation forces to start project over existing one etc truevision etc



355552
haskell scheme
Pattern(s): 0	
but haskell is a bit trickier in that you can attempt to redefine a variable within the same scope but instead you just introduce another recursion equation
this is a pitfall for people who learned ml or scheme first



362013
udp tcp
Pattern(s): 0	
voip is not significantly improved by reliable packet transmission and in fact in some cases things in tcp like retransmission and exponential backoff can actually hurt voip quality
therefore udp was a better choice



384966
dotnetzip sharpziplib
Pattern(s): 1	
i ve found the dotnetzip library to be this easiest way to work with zip files
sharpziplib is a far more powerful and flexible solution



402774
disk ram
Pattern(s): 1	
disk i o is more important than cpu power but with more cores you can more easily scale to more vms
plenty of ram assigned to each vm avoids swapping and aids caching meaning less disk i o



405231
mantis bugzilla
Pattern(s): 1	
 ve used bugzilla and mantis and found bugzilla better from a technical point of view but mantis wins if some of your bug reporters are not programmers not programmer minded
mantis interface is less threatening for a novice bugtracker user



472312
cpython ironpython
Pattern(s): 0	
after a lot of investigating here are the reasons why i stick to cpython
performance there are some articles out there stating that there are always cases where ironpython is slower so if performance is an issue



497332
haskell sml
Pattern(s): 1	
haskell is extreme lazy pure has active users lots of documentation and makes runnable applications
sml is less extreme strict impure has active users formal specification many implementations sml nj mlton moscow ml etc.



497849
mergesort in-place
Pattern(s): 0	
another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort



497933
quicksort mergesort
Pattern(s): 1	
as a result for relatively small datasets quicksort is more likely to get cache hits and therefore just tends to run faster on most hardware
mergesort is still a pretty good solution for large data sets or other data structures like linked lists as your experiments confirm



504981
post get
Pattern(s): 1	
get and post are part of http protocol
as mark noted post is more secure



511928
int double
Pattern(s): 0	
the largest double value is also larger than an int so it would have to be a long



511948
int double
Pattern(s): 0	
returning int as a double is the right thing to do here because int offers a much wider usefull number-range than a int could



512113
integer unsigned
Pattern(s): 0	
so for integers at least the need for a separate unsigned type is stronger than just giving warnings



519191
emacs jedit
Pattern(s): 0	
jedit is still pretty good but emacs is quite better



524386
unix bsd
Pattern(s): 1	1	
plus bsd is a bit more mature operating system being directly descendent from at t system v unix
the commonly cited wisdom is that bsd is more useful for a server os and linux is more useful for a desktop os



526303
margin height
Pattern(s): 0	
ou ll need overflow hidden on the parent object but the result will be that each column will request to render this additional height suggested by the margin but not actually request layout of that size because the negative margin counters the calculation
this will render the parent at the size of the tallest column whilst allowing all the columns to render at all the columns height + the size of bottom padding used if their height is larger than the parent then the rest will simply clip off



542262
awt swing
Pattern(s): 0	
if you are planning to move your gui onto multiple platforms then go with awt
otherwise swing gives you a much broader set of components to work with



548705
haskell scheme
Pattern(s): 0	
n lisp scheme a function is thought of a piece of code and examining a function simply means examining a piece of code code
in haskell a function means something closer to a piece of code mathematical definition as a map from a set a to a set b



550690
integer fractions
Pattern(s): 0	
obviously both are only integer approximations because most values in one scale cannot be represented as integers in the other scale
and in one direction you may be losing some precision because the fractions form can represent much finer times - one increment of the fractions form is less than 0.00024 microseconds



573102
bash zsh
Pattern(s): 0	
another solution to the command line too long problem is to use a c-style for-loop within bash
this works in zsh as well though i bet zsh has some niftier way of using zsh i m just still new to zsh



573582
required placeholder
Pattern(s): 0	
that is our quite simple bind object would not fit into the small buffer and would required operator new to be stored
if the bind object above would use a compressed_pair a compressed_pair can actually reduce a compressed_pair size to 8 bytes or 4 bytes for non-member function pointer often because the placeholder is nothing more than an empty object



574726
range min
Pattern(s): 0	
normally the exp range is - max+1 - max
if min is smaller than - max+1 you have as floats and doubles have subnormals



579589
innodb myisam
Pattern(s): 0	
their conclusion innodb has 30 higher performance than myisam on average



597847
northwind adventureworks
Pattern(s): 0	
talk about sql server 2005 adventureworks is better than northwind



601996
wxhaskell gtk2hs
Pattern(s): 0	0	
most of what i say below is a personal take on the differences and why i choose to work on and with wxhaskell myself
gtk2hs has a larger team working on gtk2hs and is released more regularly



601996
wxhaskell gtk2hs
Pattern(s): 0	
i think that if linux was my main development and delivery platform i d probably use gtk2hs
it isn t however i deliver mainly to windows with occasional osx and i think wxhaskell is a better match to these platforms although both options support all three platforms



610260
memcpy strncpy
Pattern(s): 0	
but for the example you give the example doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as presumbly strncpy has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively



610260
strcpy strncpy
Pattern(s): 0	
but for the example you give the example doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as presumbly strncpy has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively



610542
gif png
Pattern(s): 0	
png is a newer format and often better than either jpeg of gif - especially for screenshots



620670
swt nebula
Pattern(s): 1	
i wouldn t go with another table implementation since you lose the biggest advantage you have with swt using a native widget which looks and feels right in each os
if you want to do that anyway grid from the nebula project is much more mature than the alpha tag implies



630283
accessor properties
Pattern(s): 1	1	
i think using the public accessor is better since the public accessor allows more maintanable code in case later on you need to change the way the total value is calculated
in that way the users of the totalvalue properties will not need to worry about your changes since your changes will not affect your changes code in any way



632342
des aes
Pattern(s): 0	
sorry - triple des is no longer considered best practices
aes is simply a better algorithm so if you can use it then you should



636468
debian linux
Pattern(s): 0	
os upgrades always have the potential for subtle bugs whether it s windows linux or anything else
debian has got better than it used to be in this regard



649402
portrait landscape
Pattern(s): 1	
if you re working mostly with text as most programmers or other technical folks do or even documents then portrait mode is much more valuable
in fact the general trend in displays is all the wrong direction aspect ratios are squishing landscape displays to a mail slot to better fit the format of movies



660864
unsigned short
Pattern(s): 1	
when you convert a signed type to an unsigned type if the number is negative the result of the conversion must be the 2 s complement representation of the integer
in short there is not a faster way than -a



660920
cpu processors
Pattern(s): 0	
negating a number is a very simple operation in terms of cpu hardware
i m not aware of a processors that takes any longer to do negation than to do any bitwise operation - and that includes some 30 year old processors



665042
postgresql mysql
Pattern(s): 0	
postgresql has better foreign key support better referential integrity transactions views subselects etc
but that doesn t mean mysql doesn t have its place



669924
jquery scriptaculous
Pattern(s): 1	
jquery is better
jquery has noconflict method that allows you to easy migrate having both prototype scriptaculous and jquery library included



680613
quicksort mergesort
Pattern(s): 0	1	
quicksort is usually faster than this but given the theoretical worst possible input it could run in o n 2 which is worse than the worst possible merge sort
quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss



693792
mp3 ogg
Pattern(s): 1	
generally the player has to reconnect to the stream every so often causing a playback glitch otherwise memory just fills with mp3 data
ogg is harder



710959
jruby mri
Pattern(s): 1	
mri has pretty lousy threading concurrency support so if that s what your aiming for jruby is probably a better place to go



729163
realloc memmove
Pattern(s): 0	
the specific error you re getting is likely because one of your strings is length 0 and realloc foo 0 simply gives you that error on your system or because you re writing the trailing 0 in unallocated memory and overwriting something else important causing corruption
simply rearranging pointers frags i frags i+1 or using memmove is easier quicker and stops you wasting memory though



729994
setinterval settimeout
Pattern(s): 0	
the setinterval makes it easier to cancel future execution of your code
if you use settimeout you must keep track of the timer id in case you wish to cancel it later on



732595
merb ruby-on-rails
Pattern(s): 1	
ruby-on-rails had more built in assumptions that you would use activerecord



745380
seam ajax4jsf
Pattern(s): 1	
you can have slick ajax functionality via richfaces and ajax4jsf
seam is being more or less standardized via the jcp



774698
udp tcp
Pattern(s): 0	
this description is only really valid for tcp ip sockets however
the udp case is simpler and quite different since udp sockets are not necessarily connected



788233
nullreferenceexception argumentexception
Pattern(s): 0	
hile it may seem on the surface to make sense to throw a nullreferenceexception on an extension method it does not make sense to do so for a static method
it s not possible to determine the calling convention in the method and thus argumentexception is the better choice



803031
innodb myisam
Pattern(s): 0	
innodb is definitely safer so i d stick with it anyhow



803700
nginx lighttpd
Pattern(s): 1	
it s simple and nginx is even more ridiculously fast and lightweight than lighttpd



813646
haskell sml
Pattern(s): 1	
time and space costs of haskell programs can be very hard to predict even for experts
sml offers much more limited ways to blow the machine



813646
haskell sml
Pattern(s): 0	
there just isn t a nice way to deal with type signatures in sml
haskell has better concrete syntax



843116
punctuation words
Pattern(s): 0	
then you process one sentence at a time after removing all punctuation commas semi-colons colons and so on
then when you re left with an array of words it becomes simpler



843131
cairngorm mate
Pattern(s): 0	
i m not in favor of using any mvc framework cairngorm puremvc in flex code
mate is a better candidate



843131
mate puremvc
Pattern(s): 0	
i m not in favor of using any mvc framework cairngorm puremvc in flex code
mate is a better candidate



846356
postgresql mysql
Pattern(s): 1	
in mysql you connect to all databases not just one at a time
postgres postgresql is much more standards compliant but postgres postgresql s uglier and more complicated especially from a ui perspective



853150
collabnet svn
Pattern(s): 1	
i think now with merge tracking in svn the process would be quite a bit simpler assuming you follow the best practices outlined by collabnet
but bear in mind that tfs is a big product with really great gui tools for managing your source while svn depends more heavily on the command-line so this complicates things if you re used to working with the gui



855268
codeigniter cakephp
Pattern(s): 1	
cakephp is a good ruby on rails imitation
i found codeigniter felt much more like php in a good way it s documentation is also my favourite of any project i ve used



867461
width height
Pattern(s): 0	
gl_invalid_value is generated if width
or height is less than 0 or greater



869908
fgets strtol
Pattern(s): 0	
for interactive input fgets is better
you ll then want to use either strtol strtoul strtod nsscanner or nsnumberformatter to convert the input to numeric types



869908
fgets strtod
Pattern(s): 0	
for interactive input fgets is better
you ll then want to use either strtol strtoul strtod nsscanner or nsnumberformatter to convert the input to numeric types



872522
post get
Pattern(s): 0	
just change the method for the form to post if you want to do it via post
both are equally insecure although get is easier to hack



891854
superclass subclassing
Pattern(s): 1	
subclassing must be aware of superclass es implementation details
creating the superclass is much harder when you have to think about how it can be extended



901826
vmware virtualbox
Pattern(s): 0	
at home w ubuntu linux virtualbox is easier to maintain performs as well as i require and is free
vmware player is too feature limited



926904
for-loop loops
Pattern(s): 0	
the issue is in your for-loop
as you remove labels scrollview subviews count decreases which means you won t get to all your labels since loops runs less times than there are labels



943494
ant maven
Pattern(s): 0	
having said all of that i do think that maven is a very interesting and useful system i m not calling a while a tool like ant is maven is broader than that for software development configuration and build management



943515
mockito easymock
Pattern(s): 0	
it allows partial mocking painlessly - something that easymock required a separate library for
also mockito has much better error messaging



948285
cvs svn
Pattern(s): 0	1	
there is only one good argument i ve heard in favor of cvs and that is in situations where you have a project that will have many different releases and branches in cvs it is easier to just push an arbitrary file into the branch or tag you need when you need it
svn is more formal about these things and makes it harder to just pick on one file and merge it as you need it



950103
coalesce nvl
Pattern(s): 1	
coalesce is more modern function that is a part of ansi-92 standard
nvl is oracle specific it was introduced in 80 s before there were any standards



953927
width margin
Pattern(s): 0	
you said you specified the height to 800px and wanted the div not to stretch when the width was greater than that.
to center horizontally you can use the margin auto



988624
google-chrome safari
Pattern(s): 0	
google-chrome javascript console f12 or ctrl + shift + j
mostly the same browser as safari but safari is better imho



999113
bazaar git
Pattern(s): 1	
bazaar was probably too slow at least then and a bit on centralized side i guess
git is more powerfull in my opinion mercurial is simpler in people opinion and a bit more portable python



1003562
margin font-size
Pattern(s): 0	
if that still gives you trouble remove the margin and try a position relative on the child with a top 10px
finally try adding a overflow hidden to your parent element to force your parent element to not budge when the font-size gets larger



1008704
post get
Pattern(s): 0	
yes post is better than get because post data is not usualy logged by a proxy or server but it is not secure



1011950
bazaar git
Pattern(s): 0	0	1	
bazaar is easier to extend in an api way git is easier to extend in a unix way pipes
git is immensely more powerful imho



1014695
versioning upgrade
Pattern(s): 0	
one last thing you should do is to add table valued parameters to your wish-list of reasons to upgrade to the next versioning of sql server
as that wish-list grows your justification for spending the money to upgrade gets a bit easier to make



1020038
vim emacs
Pattern(s): 0	
it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa



1026810
argumentnullexception argumentexception
Pattern(s): 0	
an argumentnullexception would be misleading so argumentexception is a better fit



1035179
scons autotools
Pattern(s): 0	
everyone i ve seen that uses ant for c advocates calling out to gcc with exec tasks
scons is better but cross compiling is not its strong point
it is not a build system like cmake or autotools either it is only a build tool



1052708
postgresql mysql
Pattern(s): 1	
for that to work the database postgresql must have the correct encoding set see the first two references
note mysql handles collations much better so if you aren t too far along and you require multiple collations then it may be a good idea to switch



1068025
stdout stderr
Pattern(s): 0	
always stdout makes it easier to pipe to less grep it etc
if you are showing the help text because there was a problem with parsing the command line arguments then you might use stderr



1073776
nsis uninstaller
Pattern(s): 0	
you might be better off using the popular free nsis installer platform rather than using batch scripts
it s possible to do all the same things you re doing with it and building an uninstaller is much easier



1088743
coalesce isnull
Pattern(s): 1	
but more important is the fact that coalesce is more flexible
isnull will only work with two parameters



1099807
udp tcp
Pattern(s): 0	
udp has lower overhead as stated already is good for streaming things like video and audio where it is better to just lose a packet then try to resend and catch up
there are no guarantees on tcp delivery you are simply supposed to be told if the socket disconnected or basically if the data is not going to arrive



1109329
hash salt
Pattern(s): 0	
anyways i want to reiterate that plain md5 hash are easy to crack for most passwords since people like short and easy to remember passwords. use a salt and or a more complex algorithm
i d recommend both and use a salt that is longer than two characters and not limited to numbers



1109329
salt md5
Pattern(s): 0	
anyways i want to reiterate that plain md5 hash are easy to crack for most passwords since people like short and easy to remember passwords. use a salt and or a more complex algorithm
i d recommend both and use a salt that is longer than two characters and not limited to numbers



1121319
hide show
Pattern(s): 1	
term hide is more appropriate for
run-time dynamic show hide



1147858
versioning upgrade
Pattern(s): 0	
but if you do use the splitter then--yes--you will have to upgrade to a versioning that has a splitter before doing it



1149151
width height
Pattern(s): 0	
if the height is greater than 1500 you could start picking off substrings substringwithrange from the end and measuring them like above until you get something the remainder above 1500 that was returned by textsize



1168616
multiplying multiplication
Pattern(s): 1	
for division by a constant the compiler can often convert the operation to a multiplying by a magic number followed by a shift
this can be a major clock-cycle saver since multiplication is often much faster than a division operation



1176723
freemarker velocity
Pattern(s): 0	
freemarker works well and is very powerful
velocity has a simpler syntax is somewhat less powerful and is a lot more forgiving wrt



1230875
pseudo-class visited
Pattern(s): 1	
that value can be overridden though and the specificity of the pseudo-class is more important than the order in which the styles are defined or what other real classes are attached to the link



1233693
firefox safari
Pattern(s): 0	
firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit
safari i believe is currently the fastest rendering engine out there



1240875
hash md5
Pattern(s): 0	
moreover md5 is made to make it difficult to find any such reversed hash however there have been attacks that produce collisions - that is produce two values that hash to the same result but you can t control what the resulting md5 value will be
however if you restrict the search space to for example common passwords with length under n you might no longer have the irreversibility property because the number of md5 outputs is much greater than the number of strings in the domain of interest



1275295
aptana rubymine
Pattern(s): 0	1	
i don t really use the code completion much so i don t have the problems you describe but i don t think aptana is any better
rubymine is better at that stuff so if that s important to you give it a try



1311780
post get
Pattern(s): 1	
there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable



1317710
mvp presenter
Pattern(s): 1	
to summarise the differences controllers in the mvc have more control over the ui and handle events while a presenter in the mvp is more passive and just presents information through the ui



1331967
postgresql mysql
Pattern(s): 1	
postgresql s traditionally had a more complete feature set in terms of acid compliance support for advanced queries etc than mysql postgresql has solid windows odbc drivers and postgresql documentation scrupulously points out any areas in which postgresql deviates from the sql standard



1337871
inherited subclassing
Pattern(s): 0	
from a good database design point of view joined table inherited is better
joined table inherited enables you to have foreign keys to subclassing enforced by the database it s a lot simpler to have non-null constraints for subclassing fields



1338712
postgresql mysql
Pattern(s): 0	
postgresql has a richer set of abilities and a better optimizer
its ability to do hash joins often makes it much faster than mysql for joins



1350502
post get
Pattern(s): 0	
there s an interesting blog post which has a bit more information
if you re problem is just rubygems you might be able to get away with downloading rubygems and install downloading rubygems manually



1363670
wordpress joomla
Pattern(s): 1	
this is my personal pov i ve created extensions to both of them and i think joomla s way of structuring extensions is more complicated
i think the wordpress documentation is better too



1373617
postgresql mysql
Pattern(s): 1	1	
the simple answer is that postgresql is better for both features and security
however mysql is much more popular so is more likely to be directly supported by a random application especially web applications



1388552
versioning upgrade
Pattern(s): 0	
another reason is that as you are doing your own custom development it is much better to have control over what versioning of the libraries or interpreters you are using rather than have a operating system patch break something that was working before
a controlled upgrade is better than having the application break on you all of a sudden



1420987
sctp tcp
Pattern(s): 0	
sctp requires more design within the application to get the best use of it
there are more options than tcp the sockets-like api came later and it is young



1430188
vim emacs
Pattern(s): 1	
that is at the heart of the vim emacs debate
personally i also think emacs is far more extensible



1463254
clang llvm
Pattern(s): 0	0	
clang llvm has much better separation between the parser and the other parts of the compiler chain



1490106
nunit mstest
Pattern(s): 0	
mstest is supposed to have tight integration with team suite which since your company has already paid the outrageous fee for that is a point in its favor
nunit comes with less vendor lock-in and has a rich api



1528864
folder dir
Pattern(s): 1	
note this copies files into a flat folder structure
if you want to maintain the dir structure the dir structure is a bit more involved



1534821
gradle ivy
Pattern(s): 1	
as you know ivy is a much more powerful and much less opinionated dependency management tool than say maven
gradle detects dependencies between projects and between projects and jars



1539576
udp tcp
Pattern(s): 0	
if your hardware device is sending udp it should be it s a lot easier to handle both in your client program and on the device itself receiving that data is trivial
tcp is not much harder



1545598
postgresql mysql
Pattern(s): 0	
mysql has some advantages like easy replication but postgresql is generally nicer to work with



1551247
clang llvm
Pattern(s): 1	
llvm s back-end is faster than gcc s



1590087
ant maven
Pattern(s): 1	
maven does address some things that aren t addressed implicitly by ant but with some up front planning ant is the much more flexible better documented and the less buggy tool



1621902
inherited properties
Pattern(s): 1	
this is roughly how to implement the inherited method suggested by glen
glen s wrapper class with same interface method is also very nice from a theoretical point of view but has slightly different properties that makes it less probable to work in your case



1630987
postgresql mysql
Pattern(s): 1	
postgresql is more developer friendly and makes it easy to do the right thing regarding data integrity by default
if you give mysql an incorrect type it will implicitly convert it even if the conversion is incorrect



1634229
postgresql mysql
Pattern(s): 1	
postgresql fulltext
is about 10-100x faster than mysql fulltext is a lot more powerful gist is fast on inserts updates no problem with locks in other words it s a totally decent solution



1634671
postgresql mysql
Pattern(s): 0	
option 2 postgresql
mysql has the larger user base but fewer features



1658649
postgresql mysql
Pattern(s): 1	
however mysql has imo more user-friendly admin tools see mysql gui tools that you may like if you aren t familiar with the command line
if you are interested by a comparison between mysql and postgresql check mysql vs postgresql from wikivs the open comparison website



1687594
serializable deserialization
Pattern(s): 0	0	
serializable deserialization becomes a bigger bottleneck when you scale out to a session server or use sql server to manage session state



1706281
strcpy strncpy
Pattern(s): 0	
use strcpy and check the buffer size by hand
strncpy is a little safer but dangerous in other way



1712946
hex binary
Pattern(s): 1	
hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc



1716751
arp tcp
Pattern(s): 0	
the arp reply would appear from your question that the period of the tcp message is shorter than the arp refresh time



1730263
innodb myisam
Pattern(s): 1	
with only a few transactions per second tps you re not likely to tell the difference in the performance but innodb is more reliable and scales better
2 with only 2-3 tps you will not see any significant difference between innodb and myisam



1734747
icomparable compareto
Pattern(s): 0	
the icomparable defines order less than greater than
the method defined by the icomparable defines is compareto with which you can determine the order between two elements



1734992
lseek fseek
Pattern(s): 0	
open lseek to the end of file getting the size of file using tell and then allocating memory accordingly would work well as suggested above
unless there is specific reason to do suggested above fopen fseek ftell is a better idea portable staying within the c standard library



1734992
lseek ftell
Pattern(s): 0	
open lseek to the end of file getting the size of file using tell and then allocating memory accordingly would work well as suggested above
unless there is specific reason to do suggested above fopen fseek ftell is a better idea portable staying within the c standard library



1736308
cout cin
Pattern(s): 0	1	
 remember many times when my solution didn t make it before the time limit just because of cin cout while printf scanf did work
besides that it seems normal at least for me that cout is slower than printf because cout does more operations



1738309
matlab simulink
Pattern(s): 0	
generally matlab has a better programming environment better documentation better debuggers better object browser and is easier to use you can use matlab without doing any programming if you want
simulink allows you to visually program by connecting blocks in graphs



1747128
printwriter bufferedwriter
Pattern(s): 1	
printwriter just exposes the print methods on any writer in character mode
bufferedwriter is more efficient than according to its buffered methods



1753139
width height
Pattern(s): 0	
the height is a bit trickier as an empty span seems to have a height so you need to set the font-size to 0
and of course it does not work in ie7 and probably ie6 at least in ie7 compatibility mode the box magically disappears when the box s empty and doesn t show the bottom border when i put a non-breaking space in the bottom border which messes up the width anyway .



1754080
sortedlist sorteddictionary
Pattern(s): 0	
as you can see on sorted data the sorted list is faster than the sorteddictionary
on unsorted data the sortedlist is slightly quicker on retrieval but about 9 times slower on adding



1756222
hash salt
Pattern(s): 0	
also always use a salt code with your hash
a side note after time has passed using hardened hash is far better than using a plain speed-based hashing function



1774432
int double
Pattern(s): 0	
find the closest 32bit unsigned int that is larger than x
i use this to double the size of arrays the high-water mark



1779555
apache nginx
Pattern(s): 1	
i ve used apache passenger and nginx passenger on a vps and memory usage was better with nginx
i didn t do any benchmarks with my particular app but nginx just feels faster



1786929
vim emacs
Pattern(s): 1	
i am a vim guy so i would recommend it naturally you can get to basic editing pretty easily and a one-postcard cheat sheet can help you a lot
emacs needs a little more remembering of its c-x c-.



1786935
vim emacs
Pattern(s): 0	
this will sound stupid but i use vim because the keyboard shortcuts are mostly one finger at a time if not you can shift with one hand and key with the other and i map esc to something easier
emacs requires more contortions and hurts my hands



1786996
vim emacs
Pattern(s): 1	
that said over the years i ve tended toward vim because i find that it s harder for me to get lost in it s user interface when i can t remember what i m doing
i have also noticed over time that emacs is a little more touchy when it comes to tty settings



1792370
postgresql greenplum
Pattern(s): 0	
i think you ll find that postgresql works a lot better for nearly any workload olap especially than mysql
greenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use cases



1811677
inline inlining
Pattern(s): 0	
be aware though that this should only be on a release build since inline code is difficult to debug
also you said that you don t mind making your program larger as long as your program gets faster but that often inlining makes it slower



1840924
octal hex
Pattern(s): 0	
and octal was used primarily for older systems that used 12-bit bytes
hex made for a more compact representation of data when compared to displaying raw registers as binary



1853219
quicksort heapsort
Pattern(s): 0	
one of the major factors is that quicksort has better locality of reference -- the next thing to be accessed is usually close in memory to the thing you just looked at
by contrast heapsort jumps around significantly more



1857438
perforce accurev
Pattern(s): 1	
perforce is more robust but it is not very easy to administer
in any case it is a superior product in comparison to accurev



1882390
cos sqrt
Pattern(s): 1	
i ve used a look up table for circular functions sin cos tan successfully many times in high performance real time systesm
the sqrt is harder this way but if your input range is restricted to say screen pixels it s hard to beat for speed and you can tune the space accuracy trade off exactly



1882390
sin sqrt
Pattern(s): 1	
i ve used a look up table for circular functions sin cos tan successfully many times in high performance real time systesm
the sqrt is harder this way but if your input range is restricted to say screen pixels it s hard to beat for speed and you can tune the space accuracy trade off exactly



1918210
for-loop loops
Pattern(s): 1	
is exactly equivalent to the while loops
the for-loop is more compact and thus easier to parse for such a common idiom



1937370
postgresql mysql
Pattern(s): 0	
in the event of having to kill the server forcefully either by kill -9 or due to power outage postgresql generally has better resilience to table corruption
full support for acid compliance and other relational db features that support for again imho and experiance are weak or lacking in mysql



1939838
jboss glassfish
Pattern(s): 0	
i had a number of issues with more advanced configuration on jboss
glassfish has more super-high-end entrprise add-ons like ha-database that stores



1947902
opera safari
Pattern(s): 0	
i found that on google-chrome safari and opera many special keys don t get passed through to ajaxterm including backspace the arrow keys ctrl+c ctrl+h home end etc
opera is even worse when you press shift the keypress gets translated into p so you can t type capitals



1947902
opera google-chrome
Pattern(s): 0	
i found that on google-chrome safari and opera many special keys don t get passed through to ajaxterm including backspace the arrow keys ctrl+c ctrl+h home end etc
opera is even worse when you press shift the keypress gets translated into p so you can t type capitals



1965541
int double
Pattern(s): 0	
using double multiplication is shorter because the compiler uses the processor s floating point opcodes which probably run faster but actually i don t know than not using t for the same operation



1987651
accurev cvs
Pattern(s): 0	
both systems are a little hard to get your head around especially if you re used to cvs
for my two cents accurev is the better product



1991217
subtraction multiplication
Pattern(s): 0	
addition and subtraction are simple
multiplication requires a bit more work as the naive algorithm requires nested loops



1991217
addition multiplication
Pattern(s): 0	
addition and subtraction are simple
multiplication requires a bit more work as the naive algorithm requires nested loops



1997606
int chars
Pattern(s): 0	
to distinguish between float s and int s is trickier
a regex is one way to go but we could just check for floating chars



2027842
division subtraction
Pattern(s): 1	
again this is not ambiguous once you know what the terms of reference are but beware of incorrectly comparing the first analysis i gave of euclid s algorithm with division o n 2 against this analysis of the algorithm with subtraction o n
n is not the same in each and subtraction is not faster



2073928
base fractions
Pattern(s): 0	
he log of 1 for any base is 0 which means we don t need to add any more
if result + fractions is not greater than result then we ve hit the limits of precision for we numbering system



2091344
filesystems ntfs
Pattern(s): 0	
the limit probably originates with the filesystems
fat32 has a limit of 4gb whereas ntfs has a much higher limit in the terabytes



2100414
toolbar tabs
Pattern(s): 1	
constantly changing tabs would make a ribbon too inefficient
if so using a menu bar and a single toolbar is more space efficient than a ribbon



2131927
return-value-optimization nrvo
Pattern(s): 0	
whenever compiler optimizations are enabled and in most compilers even when optimizations are disabled return-value-optimization will take place
nrvo is slightly less common but most compilers will perform this optimization as well at least when optimizations are enabled



2131927
return-value-optimization nrvo
Pattern(s): 1	
he only cases where it can t be made are the ones where the optimization doesn t apply return-value-optimization only applies when you return an unnamed temporary
if you want to return a named local variable nrvo applies instead and while you want to return a named local variable nrvo is slightly more complex for a compiler to implement it s doable and modern compilers have no problem with it



2141406
xetex xelatex
Pattern(s): 0	
xetex has much better unicode support
the following run through xelatex produces é both in jobname.test and the output pdf



2167140
hid keyboard
Pattern(s): 0	
in keyboard mode the card reader will read a card swipe and output a plain text string containing the swipe contents as if it were a keyboard and you need to parse that string to get the data out you want
hid mode is a little cleaner and you interact with it by reading swipes off of the usb device



2171798
gridview repeater
Pattern(s): 1	
the gridview is for tabular data only and does a lot of the work for you like binding data automatically to columns
the repeater gives you more control over the result but you have to do more because nothing gets binded automatically



2189005
hash salt
Pattern(s): 0	
b keeping the salt separate from the password hash is not an effective defense we are assuming administrators after all
c using existing data as a salt is a little better but i doubt existing data has as much entropy a random salt has



2197183
ubuntu linux
Pattern(s): 0	
for windows and mac osx not for linux
you will need to install an svn client on ubuntu that supports the newer repo format



2237837
boost allocator
Pattern(s): 1	
using boost variant is faster than a union and leads imo to the most elegant code
i d guess that the extremely poor performance of the class hierarchy approach is due to the need to use dynamic memory allocator and dynamic dispatch



2242618
int double
Pattern(s): 0	
using and at the same time to check equality on a int results in slower code because it takes two comparisons instead of one taking the double amount of time



2267285
onclick onchange
Pattern(s): 0	
when settting the checked state programatically the onchange handler never fires in those browsers
i concur with pointy that onclick is a better way to handle checkboxes if you want to avoid surprises



2271760
nerdtree netrw
Pattern(s): 0	
the nerdtree plugin gives you a collapsible project tree
personally i find that the netrw plugin is more than sufficient and this usually comes installed with vim



2277052
postgresql mysql
Pattern(s): 0	
postgresql is older than mysql so it might have influenced them



2288815
gridbaglayout boxlayout
Pattern(s): 1	
boxlayout is almost as easy
gridbaglayout is more powerful allowing more than one column components spanning more than one cell .



2293090
haskell ocaml
Pattern(s): 0	
imo it s is much more straightforward to achieve c++-like performance in ocaml than in haskell
through as already said haskell has much nicer community packages tools and support syntax features ffi probability monads via typeclasses and parallel programming support



2303046
udp tcp
Pattern(s): 1	
udp servers are the only ones which use signal drive i o and at the very rarely
tcp is a bit more complicated



2310396
junit testng
Pattern(s): 0	
hey might not be exactly what you want but they are probably the best you get with junit
supposedly testng has better test grouping possibilities but i haven t really looked into it myself yet



2329665
hash md5
Pattern(s): 1	
storing hash password is better since it hides the password from prying eyes of dba s
also yes md5 was broken but is still used to this day



2336575
gif png
Pattern(s): 0	
you should use png instead of gif because png instead offers better compression and features



2336582
tiff png
Pattern(s): 0	
digital photographers use image file formats capable of reproducing a greater range of colors such as tiff raw or the lossy jpeg which is more suitable for compressing photographs
the png format is a popular alternative to gif images since the png format uses better compression techniques and does not have a limit of 256 colors but pngs do not support animations



2360509
lxml celementtree
Pattern(s): 1	
object models such as lxml s objectify or amara might be more natural for python developers when speed is not a consideration
celementtree is faster when only parsing is required



2382460
getter setter
Pattern(s): 1	
for example if car has the color property it s acceptable to let clients observe it using a getter
if some client needs the ability to recolor a car the class can provide a setter recolor is more clear name though



2393989
nunit mstest
Pattern(s): 1	
there are several of these implemented by 3rd parties for mstest
nunit is much faster



2398833
int double
Pattern(s): 1	
this doesn t change the binary value so the number displayed is the binary representation of a float or a double
the actual cast from float to int is much more complex in the generated assembly



2404936
arraylist linkedhashmap
Pattern(s): 1	
the reason that linkedhashmap iteration is faster than hashmap iteration is that hashmap iteration has to iterate over all of the buckets even the empty ones



2422410
nunit mstest
Pattern(s): 0	1	0	
nunit is an older more established unit testing framework designed to do exactly one thing - unit testing
mstest is newer so it does not have the same level of maturity in its api



2429857
width border-box
Pattern(s): 0	
nobody is interested in the width of the content
i agree the border-box model makes more sense at least the border-box model does to me



2430207
width font-size
Pattern(s): 0	
you can then check if the width of the text is greater than 800px and reduce the font-size until the width is less than or equal to



2436304
haskell scheme
Pattern(s): 1	
if you re interested in functional programming haskell is the only purely functional language on that list
common lisp is a weakly functional mixed-paradigm language and scheme is more strongly functional but still not pure



2465473
disk ram
Pattern(s): 0	
more ram means less disk access



2467567
mp3 ogg
Pattern(s): 0	
ogg vorbis is better quality per meg than mp3 plus no licensing legal issues



2496793
fgets getline
Pattern(s): 0	
edit as wolfer alluded to a null in your input will cause the string to be terminated prematurely when using fgets
getline is a better choice if available since it handles memory allocation and does not have issues with nul input



2531997
udp tcp
Pattern(s): 0	
in the end at the levels where java will operate there s either udp or tcp
tcp has more overhead by guarantees delivery via retransmission and ordering



2535830
ubuntu linux
Pattern(s): 0	
if you just want the fun of linux command line programs without access to all of ubuntu cygwin is smaller and might be faster



2553400
profiler visualvm
Pattern(s): 1	
using a profiler is better because you can find out average execution times and bottlenecks in your app
i use visualvm



2579251
codeigniter cakephp
Pattern(s): 1	
i don t know too much about codeigniter but i remember ruling it out when i was evaluating frameworks myself about a year ago
cakephp seemed much more developed at the time



2585086
profiler aqtime
Pattern(s): 0	
i don t know if anything you can do in aqtime to improve this other than to profile less
however you could also try a sampling profiler which has less overhead for the profiler itself but might miss calls to routines which execute quickly



2606557
printf strcpy
Pattern(s): 1	
printf is more robust if you want to format your string
if you only want to concatenate use strncpy don t use strcpy since it s more efficient



2606557
printf strncpy
Pattern(s): 1	
printf is more robust if you want to format your string
if you only want to concatenate use strncpy don t use strcpy since it s more efficient



2614454
imperative declarative
Pattern(s): 1	
and historically work on functional programming the main branch of declarative programming has followed more from backus s turing lecture on liberating programming from the von neumann bottleneck



2619383
submit submission
Pattern(s): 1	
you can have the form validate on submit which is better anyways
you can return false from your validation function to prevent the form from submission



2625704
swt swing
Pattern(s): 1	
we rely on swt for we java guis
yes you have to include an external native library but the look and feel is native more responsive although swing has become much faster in the past few years and seamless with other apps on the target platform



2640105
floating-point integer
Pattern(s): 0	
because floating-point representation is of lower precision
while long type can represent all integer numbers in the range from its minimum to maximum double type can only represent some of it



2665997
multiplying subtract
Pattern(s): 0	
zero or multiplying by one
this also reveals that subtract is a better search term than minus



2675744
versioning upgrade
Pattern(s): 0	
redgate also has a tool that automatically packages a database install or upgrade
we don t use that one as we have found that the compare against scripts for a versioning gives us more flexibility



2679922
floating-point integer
Pattern(s): 0	
a further increase from 16 to 32 integer registers would help some but not as much
avx512 does increase to 32 vector registers though because floating-point code has higher latency and often needs more constants. see comment



2682753
int chars
Pattern(s): 0	
it s going to be a performance memory trade-off anyway because writing one int is generally faster than three chars separately



2695303
ant maven
Pattern(s): 1	
all of this is well-intentioned but can make it hard to figure out someone s ant scripts
maven is far more fully features



2698958
for-loop loops
Pattern(s): 1	
the for-loop is more readable in this scenario and is definitely the convention you ll find used within virtually every language that has looping directives
if you use the while loops people are going to wonder why you didn t use a for-loop



2699569
dictionary map
Pattern(s): 0	
i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and in at least some implementations leaves some optimisations to the user dictionary already has



2705536
inherited properties
Pattern(s): 1	
the other way to do this is multiple-table inherited which is better for your database but not as easy to map in code
you do this by having a base table which defines some common properties of all the objects - perhaps just an id and a name - and all of your specific tables person etc use the base id as a unique foreign key usually also the primary key



2729988
ant maven
Pattern(s): 0	
i then constructed an ant build file with the characteristics that you describe and got exactly the same result that you did
i noticed that the maven version contains many more dependent libraries



2750804
wxpython pyqt
Pattern(s): 0	
nd now we had to switch into pyqt since qt is integrated in maya 2011
however wxpython is more straight forward and you can easily start working on wxpython and learn wxpython from zero fast .it provides and awesome resources and decumentation



2757869
phpunit simpletest
Pattern(s): 0	
hpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that
it s also said that simpletest has better support for some of the more advanced techniques called mocking replacing part of a class to test with something under your own control



2771080
gtk jhbuild
Pattern(s): 1	
the official osx port of gtk is better
what your original problem probably was is that you weren t compiling your program from within the jhbuild environment



2777409
disk ram
Pattern(s): 1	
even flash drives which beat the hell out of disk for random writes are still significantly better at sequential writes
actually even most ram is better at sequential writes because there are fewer control signals involved



2844021
django web2py
Pattern(s): 0	
django gives you a better looking database administrative interface
web2py instead gives you something easier to start with a web based ide and the option to run code unmodified on the google cloud



2846508
geocoding geocode
Pattern(s): 0	
you need a service that does geocoding
yahoo s geocode api is getting much better results globally



2846994
cpu processors
Pattern(s): 1	
since the 80s there is a difference in access time between the cpu and the memory
the speed of the processors is growing faster than the speed of the memory



2867802
gridview repeater
Pattern(s): 0	
also you can use templatecolumn with gridview and add your labels into this template column
but imo repeater is simpler to customize your view by templates



2874922
yourkit jprofiler
Pattern(s): 1	
for performance analysis on yourkit i have been unsuccessful in resolving any performance issue i have tried to resolve with yourkit
jprofiler shows more accurate and concise information for performance analysis with the exact number of method invocations and percent time spent in each method



2882325
erlang ocaml
Pattern(s): 1	
erlang is more practical but not quite as amenable to metaprogramming
ocaml is another possible choice but suffers a bit on the practicality front as well



2889354
gridbaglayout springlayout
Pattern(s): 1	
the springlayout has an example that does exaclty this
the gridbaglayout is more difficult to use but also support row column type layout



2892969
comparator comparable
Pattern(s): 1	1	
if the ordering of an object is an implementation detail of the object the comparable is more appropriate
if the ordering of the objects is controlled by the caller then comparator is more appropriate



2898174
ant maven
Pattern(s): 1	
ant is more likely to be used in their future employment
you may consider maven if you want to go through the problem of complex and or remote dependency in projects



2912577
apache nginx
Pattern(s): 1	
also nginx s configuration is much more flexible than apache and by having it on the front end it gives you a lot of flexibility



2914733
swt swing
Pattern(s): 1	
addendum gilbert le blanc raises an excellent point about the ease portability of swing
in contrast swt requires slightly more effort to deploy but some users prefer the greater fidelity of org.eclipse.swt.widgets.filedialog as shown here



2917997
swift objective-c
Pattern(s): 1	
 swift 2.0 version
the objective-c version is a little more efficient as the objective-c version does mutable operations on the string



2927116
swt swing
Pattern(s): 1	
he only alternative swing has is swt eclipses toolkit however the only alternative swing s not portable as swing and not as flexible as well
the only alternative swing offers however faster performance and the use of native components which might be what some people actually want



2927816
exponent modulo
Pattern(s): 0	
the private exponent is always smaller than the modulo so you should be able to encrypt the private exponent using the raw rsa operation if you make sure to remove the prepended zero



2963234
factors mean
Pattern(s): 0	
aking a guess at what you mean a subquery in the with clause is typically executed only once before the main query is executed
for large datasets subquery factors is obviously better since you re executing a subquery in the with clause only once in most if not all cases



2985456
ubuntu debian
Pattern(s): 0	
in ubuntu it is a bit easier to install packages for java development but it doesn t really matter that much
remember that ubuntu is based on debian so it works the same



2985456
ubuntu debian
Pattern(s): 0	
emember that ubuntu is based on debian so it works the same
ubuntu just adds more user-friendly gui s



3025706
jboss glassfish
Pattern(s): 0	
other than that - jboss especially 5.x is an excellent application server
glassfish has better administration console and documentation support for java ee 6 in glassfish 3 and better documentation



3034603
mvp presenter
Pattern(s): 1	
for example in an mvp -based web application
now another class such as a presenter is less likely to depend on the standardnavigator implementation and more likely to depend on the inavigator interface since the standardnavigator implementation would need to be cast to an interface to make use of the redirect method



3072211
swt swing
Pattern(s): 1	
but in practice it all depends on swt and swing implementations on each platform
in my experience swt is faster in windows but it is not faster on mac os x



3075441
innodb myisam
Pattern(s): 1	
myisam performance is really bound by disk speed for this reason
with innodb it gets a little more complicated



3082138
postgresql mysql
Pattern(s): 1	
sql support - postgresql is much better for complex sql-queries for example with lots of joins and aggregates
mysql s stored procedures didn t feel very mature



3084827
bottle flask
Pattern(s): 1	
so i m biased because i m the author of flask but here something to help you make the pick
itty - very minimal framework bottle is probably a more stable alternative if you want a single file installation



3095620
min max
Pattern(s): 0	
value references continue to evolve so rvalue references reference implementation of min and max probably isn t exactly right anymore but it should at least be a pretty decent starting point
warning its reference implementation of min is a lot more complex than you re going to like



3114467
postgresql mysql
Pattern(s): 1	
using stored procedures helped out regarding structuring the project but performance actually got a little worse this was at the time stored procedures was a new feature in mysql
postgresql performs better with complex queries in my experience but writing real graph queries for it isn t really possible read here and here for why this is so



3143390
pop-up dialog
Pattern(s): 0	
obviously this only makes sense if you really need a full new activity say if you have lots of code to initialize the pop-up or validate the input
otherwise a simple dialog is a easier



3153718
hash md5
Pattern(s): 1	
if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible



3165191
spss eviews
Pattern(s): 0	
you could also use spss which is even more of a gui tool than stata and is a little less comprehensive for example for econometric work such as tobit models or panel regressions particularly discrete choice models
there s also eviews unfortunately i have forgot most about it and only used it for a couple of easy regressions in my studies



3168292
prng random
Pattern(s): 0	
he f#.net journal articles numerical libraries special functions interpolation and random numbers 16th march 2008 and numerical libraries linear algebra and spectral methods 16th april 2008 tested quite a bit of functionality and nmath was actually the slowest of all the commercial libraries
all the commercial libraries prng was slower than all others and 50 slower than the free math.net library some basic functionality was missing the ability to calculate gamma -0.5 and other basic functionality the gamma-related functions all the commercial libraries did provide was broken



3182877
gradle ivy
Pattern(s): 0	
we use gradle and chose gradle over maven and ant
ant gave we total flexibility and ivy gives better dependency management than maven but there isn t great support for multi-project builds



3197783
goto break
Pattern(s): 1	
i guess the goto is slightly more readable intuitively.
but if you wanted to avoid the goto i think all you d have to do is throw the code in a while true loop and then have a break statement at the end of the loop for a normal iteration



3200689
abc isinstance
Pattern(s): 1	
isinstance used to be considered a last-ditch measure with serious warnings against overusing it.
but while the gist of that classic tirade remains valid since python 2.6 it has acquired an important proviso while checking if something is an instance of a specific concrete class remains in the rarely a good idea category checking if it s an instance of an abstract base class aka abc is a more frequently useful idea because it just offers a nice and flexible way to check if something implements or not some interface



3217975
boost allocator
Pattern(s): 0	
better is to use shared_ptr or many of the other popular smart pointers available in boost and or tr1 and or c++0x
performance-wise objects allocated on the stack can be done so very quickly the stack size is increased per-function-call so all the required memory has been allocated up-front by a simple move of a pointer. contrarily dynamic allocator generally requires much more time



3218551
quicksort heapsort
Pattern(s): 0	
unless you re going to write a very good sort probably quicksort merge sort or heapsort depending on your specific needs quicksort will be better and your specific needs quicksort takes fewer lines of code



3227242
profiling instrumentation
Pattern(s): 0	
this is due to the fact that profiling need to instrumentation the code to keep track of invocations - this can interfere with the jit s ability to inline those methods and the instrumentation overhead becomes significantly larger than the time spent actually executing the methods body



3275705
springsource grails
Pattern(s): 1	
also if we re talking a bit more outside the box i see someone else mentioned scala lift another alternative would be groovy on grails
this is based on spring and owned by springsource but is much more fun quick to develop with



3293341
division addition
Pattern(s): 0	
 think it is a few cycles slower than addition but yes division is very slow compared to the others
division takes significantly longer and unlike the other 3 operations division is not pipelined



3293364
innodb myisam
Pattern(s): 1	
i ll just reiterate that in tvanfosson s quote from an article myisam is better suited for system with mostly reads
this is because this uses table level locking instead of row level like innodb so myisam can t handle high concurrency as well plus this s missing features that help with data integrity such as transactions and foreign keys again already mentioned by others



3312450
mongoid mongomapper
Pattern(s): 0	0	
mongomapper has better support for relational associations non-embedded and has greater third-party support
mongoid has better query support much better documentation mm has close to none though a website is supposedly in the works rail 3 support and thus devise support and a slightly more active community on google groups



3312492
inherited properties
Pattern(s): 0	
inherited seems to pop up mostly when i m storing collections of things where the different kinds of things will have data properties in common
inherited often feels more natural to me when there is common data whereas interfaces are a very natural way to express common behavior



3335426
merb camping
Pattern(s): 0	
merb which is a lighter alternative in the full blown framework department
and you have a ton of lighter ones like sinatra which is probably one of the most elegant small web framework i have ever seen or camping which is small and very fun to use



3359437
innodb myisam
Pattern(s): 0	
since you re looking at a pretty even mix of read write traffic innodb is the better choice
myisam s full-table locks on every write would probably be murder



3365484
boost stl
Pattern(s): 1	
boost makes it much neater
i never use the stl



3366523
udp tcp
Pattern(s): 1	
if you want a reliable as in other parts of the system will worry about errors and retries stream of bytes between the two pcs then tcp ip is not much more complicated to use than udp



3392475
parsley robotlegs
Pattern(s): 0	0	
robotlegs has fewer features and a smaller learning curve
parsley has more features and a steeper learning curve



3422364
postgresql mysql
Pattern(s): 0	
mysql is very popular
postgresql i think has lot more features personal preference



3436045
ubuntu linux
Pattern(s): 1	
i started using ubuntu for rails development a few weeks ago and have noticed a big improvement over windows although i still dual boot due to the following
terminal in linux is alot more robust than command prompt



3455592
ienumerable ilist
Pattern(s): 1	
ienumerable basically only supports iterating over the results contained in the collection
ilist is more specific and allows you to



3480284
passenger unicorn
Pattern(s): 1	
if you are looking at a new setup think about passenger or unicorn
both are great unicorn is a bit more complicated and i would not recommend it to a beginner



3481703
int double
Pattern(s): 0	
the result might not fit into an int or a long
the range of a double is much greater



3484307
lisp plai
Pattern(s): 1	
probably the best introduction to scheme s macros along with some of the rationale behind them is shriram krishnamurthi s plai chapters 36 and 37
i suspect that the reason people write scheme style macro systems in common lisp is more for the pattern matching than for the hygiene



3497719
mathml mathjax
Pattern(s): 0	
it follows pretty much the same principles as jsmath but adds support for mathml and takes better advantage of modern browsers webfonts and javascript technology
while davide will answer questions about jsmath no future development will likely occur on no future development and no future development users are strongly encouraged to move to mathjax



3533390
innodb myisam
Pattern(s): 0	
additionally innodb has row level locking which is far more performant under concurrent load than myisam table level locking
i could keep going but somone s already provided a really good summary of why innodb is a better choice for oltp



3540407
ant maven
Pattern(s): 0	
in my opinion ant is a little easier to work with when you have to make custom builds
the problem with ant is that it is more difficult to make into a sharable module that you can share and configure like you can with a maven plugin



3563703
opera firefox
Pattern(s): 0	
firefox also has a limit of 50 cookies per domain
opera is lower at 30 cookies



3563703
opera safari
Pattern(s): 0	
opera is lower at 30 cookies
safari 3 has no apparent cookie limit



3565246
int double
Pattern(s): 0	
but a double is much larger so printf only gets a bunch of zeros



3587257
htmlcleaner jsoup
Pattern(s): 1	
use the jsoup htmlcleaner with a configuration specified by a whitelist
jsoup offers more advantages than that as well



3602188
apache nginx
Pattern(s): 0	
nginx s static file performance is better than apache
apache mpm-worker is much faster than mod-prefork if mod_php isn t needed



3605068
google-chrome firefox
Pattern(s): 1	
your html was invalid and google-chrome did not accept it
firefox was more lenient in what it allowed



3605831
lxml celementtree
Pattern(s): 0	
as a side-effect of implementing proper parent traversal lxml is a bit slower than celementtree for parsing



3607684
arraylist treeset
Pattern(s): 0	
so if you re mainly retrieving and don t sort often arraylist is the better choice
if you sort often but dont retrieve that much treeset would be a better choice



3638337
for-loop arrays
Pattern(s): 1	
the iterating for-loop is much better
if you need to know the index into an arrays you should use the range operator



3638337
for-loop loops
Pattern(s): 1	
c-style for loops are generally not required in perl 5
the iterating for-loop is much better



3646066
django web2py
Pattern(s): 1	
in contrast to turbogears django is more out-of-the-box
i don t have any experience with web2py but from my impression web2py tries to do a little to much out-of-the-box



3646066
turbogears web2py
Pattern(s): 1	
in contrast to turbogears django is more out-of-the-box
i don t have any experience with web2py but from my impression web2py tries to do a little to much out-of-the-box



3651941
range minimum
Pattern(s): 0	0	
e need the minimum within a range defined by the segment
if the minimum is less than our segment s lower bound then the minimum of the segment must be at the lower bound because quadratic curves only have 1 turning point and if the minimum is greater than our segment s upper bound then the segment s minimum is at the upper bound



3659729
querypath phpquery
Pattern(s): 1	
generally querypath is better suited for manipulation of documents
while phpquery also implements some pseudo ajax methods just http requests to more closely resemble jquery



3670082
union distinct
Pattern(s): 1	
if you want to ensure two collections have the same distinct set of members where duplicates in either are ignored you can use
using the set operations intersect union except is more efficient than using methods like contains



3676955
floating-point integer
Pattern(s): 1	
as you see integer multiplication floating-point multiplication and floating-point addition all took about the same time
array indexing took a little longer and you re doing it three times and integer addition was a little faster



3676955
addition multiplication
Pattern(s): 1	
as you see integer multiplication floating-point multiplication and floating-point addition all took about the same time
array indexing took a little longer and you re doing it three times and integer addition was a little faster



3689215
sortedlist sorteddictionary
Pattern(s): 0	0	
sorteddictionary has faster insertion



3689215
sortedlist sorteddictionary
Pattern(s): 1	
from sorted data sortedlist is faster
than sorteddictionary



3692789
floating-point integer
Pattern(s): 1	
therefore apis such as opengl and direct3d often use floating-point types which are capable of holding these values
however manipulating the integer mantissa is often more efficient so these apis allow specifying coordinates in texture space color space etc this way as well



3734604
jtwitter twitter4j
Pattern(s): 0	0	0	
twitter4j currently covers a bit more of the twitter api namely streaming
jtwitter is cleaner and simpler - it uses a lot less classes to do the same thing
jtwitter has better exception handling and some robustness features for when twitter is flaky



3745138
udp tcp
Pattern(s): 0	
udp is a lightweight protocol that by design doesn t handle things like packet sequencing
tcp is a better choice if you want robust packet delivery and sequencing



3767831
versioning upgrade
Pattern(s): 0	
your mysql server versioning is older and not compatible with the one where the dump was created
try to upgrade your mysql server or to export the dump using the --compatible option of mysqldump



3774036
printf strncpy
Pattern(s): 0	
 is the correct printf format string for printing pointers not lli
strncpy is not really a safer strcpy - strncpy is designed for filling fixed-length text fields which means that it does not always nul-terminate the destination



3774036
strcpy strncpy
Pattern(s): 0	
strncpy is not really a safer strcpy - strncpy is designed for filling fixed-length text fields which means that it does not always nul-terminate the destination



3782125
jboss glassfish
Pattern(s): 1	
glassfish comes with oracle s java ee and is the easiest to install
jboss is more widely used in commercial settings



3783278
base fractions
Pattern(s): 1	
also notice that every node belongs either to the left or right side of the tree depending on whether the log fractions component is less or great than 0.5



3819023
lxml libxml2
Pattern(s): 0	
lxml is much easier to use than the xml libraries included in the standard python library
it s a binding for the c libxml2 library so i m assuming it s also faster



3824159
strlen strstr
Pattern(s): 0	
additionally you only have two bytes of storage pointed to by test which means that unless somestr refers to a string whose strlen is less than or equal to 1 you would end up attempting to write over some other memory whatever happens to be after the 0 that test points to
i don t know what is going on here since strstr only takes 2 arguments both of them



3828932
datamapper activerecord
Pattern(s): 1	
the datamapper is not more modern or newer but just more suited for an orm
the main reason people change is because activerecord does not make for a good orm



3835805
int chars
Pattern(s): 0	
that answer is pretty clear a chars is smaller than an int and when objective-c was designed back in the 80s shaving off a few bytes was always good



3838911
alarmmanager timertask
Pattern(s): 0	
timer and timertask are fine for things with short periods that are only relevant while an activity is on-screen
alarmmanager is for longer periods such as time and date to be notified because it allows your service to get out of memory



3867552
profiling instrumentation
Pattern(s): 1	
as you noted tier interaction profiling tip gives you more detailed information about calls to databases right down to the sql statements for more information refer to the profiling blog
another recommended option when profiling asp.net is to profile using instrumentation mode



3893175
post get
Pattern(s): 0	
on the client side the post requires more processing to prepare the message
you ll notice this if doing any ajax this s a lot easier to send a get request than post



3900409
direct3d gdi
Pattern(s): 1	
imho the right way to go is direct3d or opengl but given delphi is windows only maybe direct3d is better
delphi was introduced exactly because the gdi is not good at such tasks



3901872
post get
Pattern(s): 1	
this blog post does a bit more that what you re asking for but this blog post s something that will get you started



3927111
dictionary map
Pattern(s): 0	
 safer approach would be to create a private map between a label and myobject using a dictionary instance
a safer approach has the extra overhead of a dictionary but produces more reliable code imho



3972208
folder directory
Pattern(s): 1	
well creating the folder is very easy
setting the directory permissions is a bit more difficult



3983743
codeigniter yii
Pattern(s): 1	
you may find it getting in your way a bit more too as you try to do everything the yii way
codeigniter is more flexible - gives you the foundation you need w o getting in your way



3997093
int double
Pattern(s): 0	
the int cases are easy
the double case is trickier until you remember about infinities



4006152
config ini
Pattern(s): 1	
the disparity between the a database config file yet having the remainder of the runtime options in the database seems silly
imo it s often done due to lazyness because setting up securely and modifying a file ini store is more involving than just another sql table



4025244
lxml beautifulsoup
Pattern(s): 0	
you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else



4028988
lisp scheme
Pattern(s): 1	
common lisp is the de facto standard for lisp
scheme is more pedagogical primarily due to its association with the famous mit class and book sicp although it is powerful on its own



4055983
lxml libxml2
Pattern(s): 0	
the parsers page in the lxml docs goes into more detail about setting up a parser and iterating over the contents



4057456
innodb myisam
Pattern(s): 1	
change your tables from myisam to innodb
innodb is more reliable in periods of high traffic



4059538
postgresql mysql
Pattern(s): 1	
postgresql supports more advanced queries it performs better on complicated queries but is harder to manage
mysql is fast easy to manage but you can run into it s limitations on advanced queries stored procedures and the like



4075835
setinterval settimeout
Pattern(s): 1	1	
setinterval is better when you want the behavior to repeat forever
settimeout is better when you want to stop the behavior later



4092349
nexus artifactory
Pattern(s): 0	
edit this is not true anymore as of 2017 nexus gives a much larger support for other build tools end of edit
artifactory provides an awesome hudson teamcity and bamboo integration and gradle ivy support



4113570
passenger unicorn
Pattern(s): 1	
unicorn also has a similar feature but phusion passenger s version is more flexible because



4121333
primefaces richfaces
Pattern(s): 0	
richfaces does not have a bunch of common components like the star rating component captcha component and password strength
primefaces is easier to skin since it is based on themeroller



4123564
webclient webrequest
Pattern(s): 0	
webclient is simpler and provides a downloadfile method that should do what you want
if you find you need more control over the process you could switch to using webrequest



4135139
filtering grouping
Pattern(s): 1	
so if you had a recordset of 1000 rows tags in your db and only 4 potential tags words in your title if you loop through the rows in php using the proposals above- the loop has to run 1000 times to simply identify 4 possible matches...if you move the criteria identification to the sql the loop only has to run 4 times in order to build the initial filtering which is far more efficient
what the loop will also do is automatically prevent against duplicats - though if they exist in your db simply append grouping by tag to



4146126
freemarker velocity
Pattern(s): 1	0	
velocity gives more freedom and ultimately more features through add-on projects like velocitytools
freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #



4157451
dictionary map
Pattern(s): 1	
the immutable dictionary implementation is faster but no less pure in usage than the map implementation



4175889
int chars
Pattern(s): 0	0	
while int supports more than two options it takes 4 bytes -- performance will be better with a smaller more narrow data type
chars 1 has the edge over tinyint - both take the same number of bytes but chars provides a more narrow number of values



4196925
crypt salt
Pattern(s): 0	
in modern applications website password aren t stored using crypt
using the hash value with a salt is much safer if someone breaks into your db no password is there



4201996
stdout stderr
Pattern(s): 1	
in general you shouldn t be writing to stdout at all from your library - even in a console application that could corrupt the output that the application is producing
stderr is a little more forgivable but you still shouldn t really use that unless the application requests it



4212704
hash salt
Pattern(s): 0	
ut if salt is appended attacker can make such database for password dictionary and additionally compute only salt s hash
given salt is usually shorter than password like 4 chars salt and 8 char password it will be faster attack



4228646
inherited properties
Pattern(s): 1	
t might be helpful to extend the magiccard interface so that it has a properties that returns the object as cardproperties for easy accessibility
dual inherited makes it more tricky to access both the base class and interface for a container element since you can only store one type in the generic container



4241239
memcpy memmove
Pattern(s): 1	
the memmove function properly handles overlapping source and destination
memcpy is faster on some platforms and can be safely used to copy between strings



4279554
postgresql mysql
Pattern(s): 0	
ostgresql timestamp is not unix timestamp and mysql s unix timestamp is not postgresql s or oracles timestamp
postgresql timestamp gets harder to port if you use database timestamps



4288871
actionlistener focuslistener
Pattern(s): 1	
an actionlistener is the more common approach to buttons as discussed in how to use buttons etc
a focuslistener also used in this example is one way to change a button s appearance in the way you describe



4299612
quicksort shellsort
Pattern(s): 0	
if worst case is critical just don t use quicksort
shellsort has a better upperbound



4305116
mergesort heapsort
Pattern(s): 1	
he alternatives were heapsort and mergesort since java was created in the early 1990s
mergesort is less desirable because mergesort requires extra storage space



4309307
wordpress joomla
Pattern(s): 0	
wordpress is very focused on the task of blogging so visual design and usability tend to be much better
joomla has more resale-friendly licensing so there s more money to be made in that business model



4309323
calloc malloc
Pattern(s): 1	
the other thing i changed was your malloc usage
i feel like calloc is a better stylistic choice here



4309323
memset calloc
Pattern(s): 0	
it s like plus a memset but feels cleaner to me
you also shouldn t have a cast on malloc calloc etc generally speaking it can obscure useful warnings and you need to allocate six slots like i said so you can have the null-terminator which is the zero-valued character so we don t need to set it explicitly



4309323
memset malloc
Pattern(s): 0	
it s like plus a memset but feels cleaner to me
you also shouldn t have a cast on malloc calloc etc generally speaking it can obscure useful warnings and you need to allocate six slots like i said so you can have the null-terminator which is the zero-valued character so we don t need to set it explicitly



4310587
haskell ocaml
Pattern(s): 1	
i d go with some broader criteria -- if you want pervasive parallelism then haskell s the better choice
if you want genuinely pervasive mutation then ocaml is better



4311215
imagemagick graphicsmagick
Pattern(s): 0	
graphicsmagick is generally a better version of imagemagick i d take a look at that



4311582
icmp tcp
Pattern(s): 0	
on 1gb hardware i see 80µs icmp latency i cannot help on 10gige or infiniband
at faster fabrics though it really depends upon what protocols you are using tcp often has more acceleration options than other protocols and hence can reach higher performance figures



4333016
profiling instrumentation
Pattern(s): 1	
knowing where inlining was really being done would give me a warm fuzzy feeling
but profiling seems more promising and useful generally
i fear the benefits are more intuitively real than actually and compiler writers are better off pursuing c++0x features run-time instrumentation introspection or writing d on the side



4352956
flask web2py
Pattern(s): 0	
some would say that there is a danger of learning the framework and not the language so it might be best to get a deeper understanding of the python language and lighter weight frameworks flask or wekzeug first
having said that web2py has a lower initial learning curve than django as web2py was specifically designed as a learning tool



4353256
carrierwave paperclip
Pattern(s): 0	1	
paperclip is the older one good but feels a bit dated
carrierwave feels more in sync with rails 3 and i ve been hearing a lot of great things about it



4358927
for-loop loops
Pattern(s): 0	
your problem with the code is that your calling 2 times within the while loops causing it to increment twice
using the for-loop is much cleaner then as incrementing is done within the expression for you



4360130
tripledes aes
Pattern(s): 0	
des is a very weak algorithm you might want to think about aes rijndael
even tripledes is better then just plain des



4394406
postgresql mysql
Pattern(s): 1	1	
i feel postgresql is much more mature and robust than mysql
whereas mysql is more easy and simple to use



4409812
jquery simplemodal
Pattern(s): 0	
even in the simplest case the the amount of javascript code needed to create a modal popup in jquery is less than with ajax control toolkit mpe
for example i like the jquery plugin simplemodal



4411575
freemarker velocity
Pattern(s): 0	
freemarker has more i18n support built into the core engine
however velocity with the addition of the velocitytools project offers more i18n functionality i believe



4413955
for-loop loops
Pattern(s): 1	
you re iterating and a for-loop is more compact
you can achieve the same thing in either case anyway but for this i prefer to use for because you have all loops drivers condition counter increase in the beginning



4418648
innodb myisam
Pattern(s): 0	
if this all seems like too much remember that you can just use a filesystem or lvm snapshot online with innodb and then just copy the files
with myisam it s a bit trickier but can still be done



4421747
postgresql mysql
Pattern(s): 1	
postgresql is much more mature for this
if your app has lots of stored procs this pretty much rules out mysql



4436253
for-loop loops
Pattern(s): 1	
the for-loop is more concise and more readable
while loops are rarely used in python with the exception of while true



4448792
gridview repeater
Pattern(s): 1	
for me datagrid or gridview can be used when you need to display data with able to edit each row sorting paging etc
if you want just to display one table repeater is more prefered



4476826
swt swing
Pattern(s): 1	
it is commonly argued on the internet that swt and jface are more suitable for quick out-of-the-box type ui development on the eclipse platform because swt and jface work so well together eg
jface wizards databinding and validation whereas swing is more suitable for enterprise level development in netbeans that requires more ui customising



4482306
webclient httpwebrequest
Pattern(s): 1	
basically webclient is designed to be quick and easy
httpwebrequest is more complex but more powerful



4514872
innodb myisam
Pattern(s): 1	
innodb supports a ton of features which myisam doesn t the most important being transactions followed by referential integrity and bunch of other items
many people will try to argue that myisam is faster and so it still has a place but a that gap has closed considerably and speedups can be done outside of the database ie memcached etc and b a fast database with bad data isn t all that useful



4518494
perl tcl
Pattern(s): 0	
tkx is a thin layer over tcl tk which gives it access to the new themed widgets in tcl tk so your application would look better
perl tk has a lot more documentation around but the module itself does not seem to be developed anymore



4528318
tinyint boolean
Pattern(s): 0	
 bit column generally can t be indexed i can t necessarily speak for all databases on that statement hence generally so something like a tinyint would make more sense if indexing is required
keep in mind that depending on the use and on the system using the system while a boolean takes less space because the system s just a single bit depending on the implementation an int is the native word size of the hardware



4541290
division logarithm
Pattern(s): 0	
note that this exact same trick can get you matrix exponentials and logarithm
according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication



4555502
tweetsharp dotnetopenauth
Pattern(s): 0	
linqtotwitter and tweetsharp are both .net free libraries for calling into twitter
dotnetopenauth has a longer history in openid than oauth but oauth is very much a first class scenario for dotnetopenauth



4579928
swt swing
Pattern(s): 1	0	
there are two serious contenders for a gui swing and swt
swing is more mature arguably is part of the standard jdk no deployment issues very flexible and well-documented
swt makes it easier to behave like a native application across different oses but this also means significantly more portability issues



4604630
windbg mdbg
Pattern(s): 1	
my answer is that visual studio is truly a better debugger for stl and complex types just like visual studio is just a plain better debugger than mdbg
this is not to say windbg is less powerful just that it s lower level try doing anything useful with crash dumps using visual studio -- you can t



4623212
dictionary map
Pattern(s): 1	
generator expressions are generally preferred to map and using the dictionary constructor is more canonical than dict.fromkeys



4623300
dojo dwr
Pattern(s): 0	
dwr sounded good but in practice it was buggy and difficult to use
dojo was much cleaner and more modular



4635570
post get
Pattern(s): 1	
and remember a get request should be used to retrieve and a post request should be used to create
in your case it seems a post is more appropriate reply



4637753
cpython ironpython
Pattern(s): 0	
rdinary cpython requires python .net to do the same or similar things
in my experience python .net works most of the time but not always and ironpython provides a much more polished experience in accessing .net from python



4640692
for-loop loops
Pattern(s): 0	
frankly if you need to increment decrement a for-loop makes sense if you don t know the bounds and there is no real increment decrement a while loops makes more sense



4675998
profiling benchmarking
Pattern(s): 1	
benchmarking is a simple process of running a bunch of code a number of times and seeing how long it takes
profiling is more detailed and can show you how long was spent in different sections of your code including the number of calls to all methods in the stack



4676830
octal hex
Pattern(s): 1	
itshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal
bitshifts boils down to whoever wrote the code you re reading probably thought hex was more understandable than decimal in that instance but this is obviously subjective



4699921
gridbaglayout miglayout
Pattern(s): 1	
for more complex layouts i often used gridbaglayout which is more complex but that s the price
today i would probably check out miglayout



4702136
nstextview appkit
Pattern(s): 1	
for the record nstextfield is probably the closest equivalent appkit class to uilabel
nstextview is a more heavyweight class that you generally only need if you want to do full paragraphs and more advanced typesetting



4754988
flask pyramid
Pattern(s): 1	
on a personal note i second the recommendation for flask - it s a great microframework for beginners as well as useful to pros working on small projects
i ve also fallen in love with the framework pyramid which is a bit more complex but suited very well for larger applications



4759461
subtraction multiplication
Pattern(s): 0	
as a general rule addition subtraction and multiplication take roughly the same time on a large number of processors
you might imagine that multiplication is a lot slower but it turns out not to be



4759461
addition multiplication
Pattern(s): 0	
as a general rule addition subtraction and multiplication take roughly the same time on a large number of processors
you might imagine that multiplication is a lot slower but it turns out not to be



4766196
for-loop loops
Pattern(s): 0	
every internal for-loop increases k by 250 so both increase it by 500 for every while loops while
this means there is a point where k reaches 40001 the condition is satisfied and loops goes one more



4769160
jboss resin
Pattern(s): 0	
jboss 6 starts noticeable slower on my 2.93 ghz i7 a good 12 seconds in non-debug mode and takes a little longer when starting it in debug mode
if you re only interested in the web profile of java ee 6 which includes ejb lite then caucho resin might be a candidate worth looking into



4771738
client-side server-side
Pattern(s): 0	
to that extent i had to make a few changes to my server-side presentation layer but as a result i think my client-side code is cleaner and more focused on processing actual user events



4779070
postgresql mysql
Pattern(s): 0	
postgresql is also free
mysql is easier to learn due to it s friendly sql not standard compliance



4784852
pdfbox itext
Pattern(s): 0	
pdfbox contains tools for text extraction
itext has more low-level support for text manipulation but you d have to write a considerable amount of code to get text extraction



4809586
nfa dfa
Pattern(s): 0	
as a result a posix nfa engine is slower than a traditional nfa engine and when using a posix nfa you cannot favor a shorter match over a longer one by changing the order of the backtracking search
traditional nfa engines are favored by programmers because programmers are more expressive than either dfa or posix nfa engines



4837111
mybb phpbb
Pattern(s): 0	
i may suggest mybb which is really simple to manage and edit and it s quite extensible
or you could try phpbb which is tougher in personalization but very solid and powerful



4841196
google-chrome firefox
Pattern(s): 0	
for example try hiding a dom of of 200+ children in google-chrome vs safari vs firefox you will notice google-chrome takes 20+ sec safari takes 5+ seconds firefox takes less than 1 second



4864749
daemon cron
Pattern(s): 0	
you can take a look at for a good tutorial on how to set up a daemon
cron is obviously better for a timed task but if cron really isn t available this might be an option



4882583
hex binary
Pattern(s): 1	
each single hex character describes four binary digits exactly while an octal character describes 3 binary digits
hex is used much more often than octal



4903248
for-loop loops
Pattern(s): 0	
first worrying about the efficiency of a for-loop is almost always a waste of your own time
what s inside of loops usually has much more impact on performance than the details of how loops is specified



4920030
postgresql mysql
Pattern(s): 1	1	
postgresql is more suitable for large-scaled websites althought they both work on large-scale
anyway mysql is faster



4920288
public protected
Pattern(s): 0	
public as expected means that everyone is given access to either attributes or methods
protected is somewhat less trivial



4996740
unsigned short
Pattern(s): 0	0	
btw on some processors unsigned short is much slower than unsigned int because the c standard requires that operations on unsigned types wrap



5005518
ant maven
Pattern(s): 1	
really you can do almost anything you wish to put time into using ant
maven is a little more strucutred and newer and you can see a discussion of the differences here



5010119
freebsd solaris
Pattern(s): 0	
both systems have large suites of available software packages available freebsd is likely larger and there s a better chance something may have been ported to freebsd over solaris depending on the niche of the package of course



5014331
int double
Pattern(s): 0	
f double
although f int is a better



5026705
qsharedpointer qscopedpointer
Pattern(s): 1	
qscopedpointer - this name should also look familiar and actually was in fact based on boost scoped_ptr unlike the qt versions of shared and weak pointers
it functions to provide a single owner smart pointer without the overhead of qsharedpointer which makes it more suitable for compatibility exception safe code and all the things you might use std auto_ptr or boost scoped_ptr for



5051022
hash salt
Pattern(s): 0	
that s why most algorithms call the hash function several times
using salt gives a lot more of randomness to the generated password and thus make the generated password less guessable



5056164
cvs svn
Pattern(s): 0	
he cvs options for move were awful and bad and svn made the downsides small enough to warrant renaming files as needed
we managed to throw away most of we custom makefile recipes because our custom makefile recipes weren t needed any longer svn was that much better



5060861
datamapper activerecord
Pattern(s): 0	
if you mean a data access object dao which is a class or classes to function as a bridge between the database records and your application objects try the datamapper or activerecord patterns
note that the activerecord pattern is a little older and falling out of favor with some so the articles about activerecord in php tend to be older and are a bit out of date



5078792
folder directory
Pattern(s): 1	
if one is referring to a container of documents the term folder is more appropriate
the term directory refers to the way a structured list of document files and folder is stored on the computer



5088054
integer unsigned
Pattern(s): 0	
otherwise if the operand that has unsigned integer type has rank greater or equal to the rank of the type of the other operand then the operand with signed integer type is converted to the type of the operand with unsigned integer type



5089505
union distinct
Pattern(s): 1	
union all is faster than union
in case of union if you have 10 columns and 100 rows it will compare each cell.i.e 10 100 to get distinct values while in union all this is not the case



5123066
strncmp strcmp
Pattern(s): 0	
the strncmp method is much safer than strcmp



5177265
strcpy malloc
Pattern(s): 1	
you re getting lucky that strcpy isn t hitting anything of consequence so the program runs
malloc often allocates a few more bytes than requested to better keep memory aligned



5191346
ocaml sml
Pattern(s): 0	
more generally sml tends to be rather more elegant while ocaml has some more advanced features quirks and users



5198877
swt swing
Pattern(s): 0	
swt community is smaller and it doesn t provide that many tools as swing does



5199938
int double
Pattern(s): 1	
the f is because there s no need for the operation to be done in double -- i expect there s more chance of an implementation where 1.0 i would be significantly slower for no benefit software float emulation indifferent optimization than one where 1.0f is significantly slower for no benefit if double is faster than float that s because you have fp hardware so conversion between the two will be very fast so not introduce significant slowdown



5223158
quicksort mergesort
Pattern(s): 1	
quicksort is fast when the data fits into memory and can be addressed directly
mergesort is faster when data won t fit into memory or when it s expensive to get to an item



5258530
bazaar svn
Pattern(s): 1	
if you really can t decide pick the one with the nicer clients tortoisesvn vs the bazaar client - a better client will most likely make it easier to use
bear in mind that svn is a little more common and there are a lot of tools for svn



5265916
ant eclemma
Pattern(s): 1	0	
emma integration into ant is a fracton more complex and doesn t offer a complexity factor
the eclemma plugin is nicer and more mature then ecobertura



5265916
ant emma
Pattern(s): 1	
emma integration into ant is a fracton more complex and doesn t offer a complexity factor



5270194
directx gdi
Pattern(s): 0	
after 100 trials capturing my dual monitor display the gdi implementation averaged 0.65s per screen capture while the directx method averaged 1.72s
so gdi is definitely faster than getfrontbuffer according to my tests



5296129
post get
Pattern(s): 1	
for this type of scenario post is better suited
even if you want to stuck with get you can use javascript and use window.open function for your purpose and build url dynamically reading fields



5302408
db4o eloquera
Pattern(s): 1	
for instance eloquera is free for commercial use and db4o not db4o has the same licensing options than mysql free for free but paid for commercial use
for this and technical things i think eloquera is better



5329644
swt swing
Pattern(s): 0	
so in my view using swing is simply easier unless you have more experience in swt



5338890
client-side server-side
Pattern(s): 1	1	
or client-side you can include a javascript snippet which calls the js function you mentioned
for server-side server-side is definitely more complicated



5372482
scheme racket
Pattern(s): 1	
mit scheme is known for strong interactivitiy support while plt racket feels much more static



5381995
multiplying addition
Pattern(s): 1	
multiplying a vertex with a matrix takes the equivalent of 4 dot products therefore you need the equivalent of 32 dot products to check all 8 corners
calculating the distance of a point to a plane takes a dot product and an addition which is somewhat more efficient in the worst case and much more efficient in the average case since you can often discard an object after clipping after one or two planes and never more than three



5435784
trie tree
Pattern(s): 0	
this is what the a radix tree would look like
whereas the trie looks more like



5473155
fixed-point fractions
Pattern(s): 1	
the primary difference between decimal and double is that decimal is fixed-point and double is floating point
that means that decimal stores an exact value while double represents a value represented by a fractions and is less precise



5485831
udp tcp
Pattern(s): 0	
also note that it is easy to implement your own stack on top of udp that performs worse than tcp



5509684
cpu processors
Pattern(s): 1	
the iphone 3gs and iphone 4 armv7 cpu does not have a pipelined vfp unit and is thus actually slightly slower at some floating point sequences than the iphone 3g
but the armv7 processors is faster at vectorizable short floating point because the armv7 processors has the neon parallel vector unit instead



5514765
versioning upgrade
Pattern(s): 0	
if the apps versioning number is bigger the apps versioning number s an upgrade and you now need to save that as the last installer versioning



5550445
versioning upgrade
Pattern(s): 0	
an app can have the same versionname as long as the versioning code is higher for the update
first versioning android versioncode 1 upgrade versioncode 2



5561668
udp tcp
Pattern(s): 0	
so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp



5562628
postgresql mysql
Pattern(s): 1	
that is another i reason i avoid mysql - the license situation is simply too unclear and vague for me
postgresql is more complicated to setup in an environment where you need a true cluster with load balancing read and write statements



5571083
post put
Pattern(s): 0	
if you actually want to just update an object what it looks like you re doing a put is better and you should just switch your routes over to put
if like i was you re doing something that really requires a post it can t be sent more than once safely you can write your form_for like this



5575414
onclick onchange
Pattern(s): 0	
internet explorer only fires the onchange event when the checkbox loses the focus onblur
so onclick is more of a cross browser solution



5594195
udp tcp
Pattern(s): 0	1	
the speed for tcp in comparison with udp is slower
udp is faster because there is no error-checking for packets



5594213
udp tcp
Pattern(s): 1	0	
udp is faster than tcp because packets are sent without guarantee of delivery nor order
tcp is safer because each packet is acknowledged and ordered



5605064
lemmatization stemming
Pattern(s): 1	
lemmatization deals only with inflectional variance whereas stemming may also deal with derivational variance
in terms of implementation lemmatization is usually more sophisticated especially for morphologically complex languages and usually requires some sort of lexica



5635618
post get
Pattern(s): 1	
the first link blog post is more relevant to your situation
your only other option would be to use wcf discovery to discover your endpoint and configuration at runtime but that approach is certainly more work and can get complicated in managed mode



5642827
profiler aqtime
Pattern(s): 0	
casionally i also use the free profiler that comes with sharpdevelop
i prefer the aqtime pro though the aqtime has a steeper learning curve but once you get the hang the hang really provides allot of insight i use the hang for analyzing code not for speed optimization but simply tracing the paths of code who calls this method when i click on ...



5649131
division addition
Pattern(s): 0	
and division has larger complexity than addition



5649131
division multiplication
Pattern(s): 0	
if you do it cleverly you only do addition not even multiplication
and division has larger complexity than addition



5676173
innodb myisam
Pattern(s): 1	
innodb is more reliable than myisam



5678975
atof strtod
Pattern(s): 1	
i just remembered the problem with atof -- it doesn t tell you where the number ended so reading several numbers in sequence is difficult
strtod is better in that regard



5687741
comparator comparable
Pattern(s): 1	
he comparable approach mandates that the keys are always sorted in the same way and would be used for keys which have a canonical ordering like integers where you want to use this ordering
the comparator approach is more flexible since you can use the same key objects for different maps where they are differently ordered and you can use the comparator approach for keys over which you have no control or who don t have a canonical ordering like list trees graphs etc



5692272
webkit gecko
Pattern(s): 0	
webkit .net is a wrapper for the webkit engine used by google-chrome and apple safari
geckofx is a wrapper for the gecko rendering engine used by mozilla firefox



5715112
quicksort mergesort
Pattern(s): 0	
your implementation may of course have stack unwinding while in mergesort the sorting is done on the way up the splitting step does not move elements at all but on the way back up you need to merge two sorted lists
as for the performance comparisons it is certainly true that the worst-case behavior of quicksort is worse than that of mergsesort but the constant factor for the average case which is observed almost exclusively in practice is smaller which makes quicksort usually the winner for generic unsorted input



5754894
for-loop arrays
Pattern(s): 1	
this is a situation where an index-based for-loop is more appropriate than enhanced for-loop that you re using as what you need to grab is the index
you can base all your work on the original arrays rather than converting the index to a list and i suspect you were going for case-insensitive match



5759317
udp tcp
Pattern(s): 0	
udp is not a good choice for persistant connections
tcp is a much better choice



5813236
try-catch exception-handling
Pattern(s): 1	
yi rather than using try-catch in this way you should just use dispose instead - under the covers it does the same thing but the result is cleaner and easier to read
you should avoid catching swallwoing exception-handling too - if the above throws an exception-handling it is better if the caller handles the caller



5815939
nunit mstest
Pattern(s): 0	1	
from my experience mstest is much slower than nunit
the actual execution of tests may be almost the same however the setup and teardown time for mstest is significantly more



5819252
opera firefox
Pattern(s): 1	0	
well if you take a look at this statistic it shows that opera is getting more known and popular since 2002 maby not that fast but it still growing
i m one of the people who used to use opera before and it has some realy nice features but since the people who used to use opera before got bigger it not as fast as before but it supports the maskerading to firefox and ie



5825333
caliburn prism
Pattern(s): 0	
for smaller apps caliburn micro provides a simpler framework
to me prism is especially useful when you need to define regions in your application



5826510
rvm bundler
Pattern(s): 1	
rvm is more like a containment unit
while bundler is like a manifest dependency manager of what the application will require or use in it s lifecycle among other things



5848081
.htaccess httpd.conf
Pattern(s): 1	
this goes in your root .htaccess but if you have access to
httpd.conf that is better



5914554
pull push
Pattern(s): 1	
r she can pull bob s change and merge then push
if alice s push is earlier then bob bob s commit will go through creating a branch that bob s will have to merge



5930700
guava lambdaj
Pattern(s): 1	
recently popular is guava
another one is lambdaj which seems more specialized



5941723
postgresql mysql
Pattern(s): 0	
i agree with denis postgresql is a good choice and is definitely a lot stronger on the sql feature side than any other open source dbms and rivals the big ones as well
mysql has been easier to setup in a high-availability master slave environment but the game has changed with 9.0 and will change even more with 9.1 and synchronous replication which is more or less the same as oracle offers with it s data guard



5965768
screens hdpi
Pattern(s): 0	
however things are slightly different due to the much larger screens size on 3.0 tablet
in these cases often using the hdpi assets gives a better size



5965768
tablet hdpi
Pattern(s): 0	
however things are slightly different due to the much larger screens size on 3.0 tablet
in these cases often using the hdpi assets gives a better size



5970686
udp tcp
Pattern(s): 1	
reasons udp is used for dns and dhcp
dns - tcp requires more resources from the server which listens for connections than it does from the client



5992152
stringr stringi
Pattern(s): 1	
stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below



5999808
lxml beautifulsoup
Pattern(s): 1	
lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion



6061256
gson jackson
Pattern(s): 1	
jackson is a little faster so its up to you what you want



6081405
executable upx
Pattern(s): 0	
your normal executable is larger than the limit and gets compressed with an exe packer
demos usually don t use upx but specialized packers which have a very small loader unpacker and might even leak memory who cares about memory leaks if you can safe a few bytes



6090985
ssl https
Pattern(s): 1	
for additional reading see the questions tagged ssl on security.stackexchange.com
long story short post over https is much more secure than over http



6118339
jenkins luntbuild
Pattern(s): 1	
i found jobs builds much easier to set up and configure in jenkins especially for projects built from different repository urls
documentation is neither project s strong-suit but luntbuild s seems more voluminous while being less useful



6167181
int chars
Pattern(s): 0	
int matching is always faster than string matching and will almost always have lower storage requirements so try using int session ids instead of the strings you re using now
shorter strings are faster to match than longer strings and fixed width strings are also a bit better than variable length ones varchars so you might consider applying a hashing function to the user agent and storing the user agent in a fixed-width chars field



6187291
dreamweaver aptana
Pattern(s): 1	
id go with dreamweaver because is has the design view as well as the code view
aptana is more for developers rather than designers and developers



6187535
udp tcp
Pattern(s): 1	
note that if tcp loses too many packets the connection dies
thus udp gives you much more control for this application since udp doesn t care about networkt transport layer drops



6216870
cocos2d-x corona
Pattern(s): 0	
cocos2d-x has a much more managable learning curve than doing it all from scratch and there are a number of great resources available cocos2d-x forums this blog etc
a quick google search showed me that corona has costs associated with corona for distribution - cocos2d-x does not



6234277
post get
Pattern(s): 0	
once you add the configuration values you should be able to get a valid cachemanager from the cachefactory
the post also has some more information that might help you



6259340
shadowing named
Pattern(s): 1	
shadowing is more general term it is applicable outside the ruby world too
shadowing means that the named you use in an outer scope - is shadowed by local one therefore makes in non accessible and confusing



6263705
free malloc
Pattern(s): 1	
such an operation in reality would lead to a memory leak as the memory address which was stored in a initially is not free and is no more pointed by anyone
let the first malloc in main fetch the address 0x1234abcd



6275133
air flashdevelop
Pattern(s): 0	
air 2.7 is bringing more performance improvements as well but i don t know when it s gonna be out
to deploy ios applications with air 2.6 you can use a lot of apps flash cs5 modifying some files flash cs5.5 flash builder 4 or higher the plain commandline compiler flashdevelop etc



6314981
innodb myisam
Pattern(s): 1	
not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma



6326524
mp4 webm
Pattern(s): 0	
be sure mp4 comes first
webm - webm is higher quality than ogg so browsers that support both will choose webm first if listed in this order



6376920
put get
Pattern(s): 0	
detecting an incomming mms message is easy just put in broadcast receiver monitoring wap_push_recieved events as in.
making sense out of what you get is a lot harder



6381886
avassetwriter avassetexportsession
Pattern(s): 1	
you could use avassetreader and avassetwriter to merge the two files but that s probably further along the control power curve than you need
an avassetexportsession is probably a better fit as you can merge audio and video tracks in a few lines of code



6425529
directx gdi
Pattern(s): 0	
gdi is the original graphics interface in windows
directx is a newer interface originally created for games development but now also used by higher level frameworks like wpf



6426570
post get
Pattern(s): 1	
performance wise you might get a boost by using tcp bindings rather than http but connecting external applications is easier on http if some non wcf client is involved
perhaps this post contains more questions than answers but you are the only one who can decide given the brevity of your description



6461775
udp tcp
Pattern(s): 0	
it is possible to achieve this with java when nats are traversable but it requires a sophisticated solution for tcp
for udp it is simpler



6465004
google-chrome firefox
Pattern(s): 0	
at least this is how it works for me in firefox
surprisingly google-chrome is much worse in it from my experience



6483305
testdriven.net ndepend
Pattern(s): 1	
testdriven.net is more adapted to run tests than vs test integration especially because it integrates with most of third-party options as a consequence if you are only using vs tooling td.net is useless
my opinion is certainly biased concerning ndepend since i am part of the tool team



6504717
apache nginx
Pattern(s): 0	
having deployed django behind both apache and nginx in windows i have to say that i found nginx to be infinitely easier
however since nginx is more of a static file server with excellent proxying capability i ran a separate wsgi server for the django app



6509539
memcpy strncpy
Pattern(s): 1	
ccording to the c standard the real difference between strncpy and memcpy is that if the source string is less then n value then null characters are appended to the remaining n quantity
memcpy is more efficient but less safe since memcpy doesn t check the source to see if the source has n quantity to move to the target buffer



6533387
swing windowbuilder
Pattern(s): 0	
jigloo swt swing gui builder - home page
the windowbuilder is quite better tool



6533387
swt windowbuilder
Pattern(s): 0	
jigloo swt swing gui builder - home page
the windowbuilder is quite better tool



6577063
gitolite gitosis
Pattern(s): 1	
gitosis is no longer actively developed
gitolite gives you more features



6583063
fiddler charles
Pattern(s): 0	
so you configure your app to call localhost 8888 and fiddler forwards to remote 80
another option is charles which has easier configuration for this setup



6649888
lxml beautifulsoup
Pattern(s): 1	
lxml is much faster than beautifulsoup and probably the fastest parser available for python



6655578
width height
Pattern(s): 0	
to prevent a datagridview from displaying a datagridview horizontal scrollbar you ll need to make sure your dgv s width is not less than the width of a datagridview columns plus the row header s width
you ll also need to adjust for the two pixels that are added to the control s width and height when a datagridview borderstyle property is not none



6667203
mouseout mouseenter
Pattern(s): 0	
there can be times when mouseout is a better choice than mouseleave
for example let s say you ve created a tooltip that you want displayed next to an element on mouseenter



6669748
uisegmentedcontrol uiswitch
Pattern(s): 1	1	
o if you use a uiswitch you could do
if you do want to use a uisegmentedcontrol a uisegmentedcontrol is a bit longer but just as simple



6732222
defaultdict enumerate
Pattern(s): 0	
defaultdict does that check for you but does it in c in the python implementation
enumerate is better than for i in range len li again because it s fewer python steps



6741606
xna slimdx
Pattern(s): 1	
microsoft used to offer managed directx which has been deprecated in favor of xna
slimdx is a more modern wrapper for the directx libraries exposing most of their functionality but does have some performance cost



6745058
kerberos ntlm
Pattern(s): 1	
kerberos is however more secure and can handle delegation where the web server can access other resources a file server using the client s identity



6761005
serializable deserialization
Pattern(s): 0	
you need to find the balance in serializable and deserialization performance speed ease of working with the data size of files number of files and management of files and ability to use external libraries
when it comes to file foramts and serializable binary is normally faser than json which is normally faster than xml



6777202
post get
Pattern(s): 0	
i believe post is better than get



6791026
accessor ivar
Pattern(s): 1	
that is one possible reason for the sample code to eschew accessor in favor of direct access but precisely why it is done in any given case is not necessarily easy to know
another possible reason is that accessing the ivar is faster and on ios in particular cycles are hard-won



6798042
metaclass subclassing
Pattern(s): 1	
using a metaclass gives you more control in case you need to customize the singleton class definitions in other ways
your singletons won t need multiple inheritance because the metaclass is not a base class but for subclassing of the created class that use multiple inheritance you need to make sure the singleton class is the first leftmost one with a metaclass that redefines __call__ this is very unlikely to be an issue



6798177
partcover opencover
Pattern(s): 0	
opencover is newer and is also on github opencover on github opencover has 64 and 32 bit support and overcomes some of the limitations that partcover has memory and results delivery



6825085
16-bit 64bit
Pattern(s): 0	
i d do the same thing with a 16-bit number as well
a 64bit number takes more space in memory as well



6885549
innodb myisam
Pattern(s): 1	
innodb is the more modern storage engine and is considered more reliable supporting things such as atomic transactions and foreign key constraints
however myisam may be more performant and supports full text search



6899938
onclick onsubmit
Pattern(s): 0	
mplungjan onclick of submit just falls out of that being a button
form onsubmit is clearly better



6960666
django web2py
Pattern(s): 0	
i think that django probably has more matured addins apps
that being said crafting your own blog in web2py a simple blog is probably only a little harder than configuring one for another framework



6960666
django web2py
Pattern(s): 0	
hat being said having not used frameworks i would say to with web2py unless you need certain modules that only exist in the django world
web2py probably has a little more gradual learning curve



6961688
django web2py
Pattern(s): 0	
i ve used codeigniter for php and find that web2py was so much simpler and easy to understand
also as for the directory structure django is not actually true mvc -- the directory structure django s mtv model template view



6964301
x86 mips
Pattern(s): 0	
update x86 config has better comments
for arm mips sparc and others archs which limits unaligned access to memory the alignment requires of any machine instruction may be recorded in arch.md file in sparc.md



6984826
nltk lingpipe
Pattern(s): 0	
lingpipe probably also has something built in but nltk is much easier to use



7008938
trac phabricator
Pattern(s): 0	
but my very subjective impression is that crucial plugins were never affected by this kind of problem and with trac that happened a bit fewer
last last but not least least i will try out phabricator as phabricator offers builtin workflow for code review



7010918
hash hmac
Pattern(s): 1	
unless you need the signatures to be verifiable by someone who doesn t know the secret key hmac is probably a better choice than public-key systems for reasons of efficiency



7056519
maven buildr
Pattern(s): 1	
also using gradle buildr means that to build the product one needs to install gradle buildr
maven is much more standard here



7059973
memcpy strcpy
Pattern(s): 0	
nstead of overwriting the first element with the last using memcpy instead of overwriting the first element with the last using memcpy can also be done with strcpy and assignment of the priority like in your remove
using memcpy is simply easier



7060640
gradle ivy
Pattern(s): 1	
although buildr is undoubtedly a great effort at the moment gradle is much more professionally made
the only problem i faced with gradle is lack of native support for reusing ivy.xml and ivysettings.xml despite the fact that gradle actually uses ivy as its dependency engine



7074620
putimagedata todataurl
Pattern(s): 0	
you may want to have a look at this video from jsconf 11 that also touches this topic
that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year
see this stackoverflow answer for details especially this jsperf testcase comparing putimagedata getimagedata todataurl and drawimage



7078933
client-side server-side
Pattern(s): 1	
parsing xml at client-side in browser is quite slow and should be avoided
delegating this to server-side is usually faster and therefore more user friendly big files will cause your browser stop responding for a long time



7104307
oncreate setcontentview
Pattern(s): 1	
if you use startactivity in the new activity s oncreate you will also set the contentview
so with respect to time setcontentview alone is faster since it doesn t start a new activity



7128912
springlayout grouplayout
Pattern(s): 1	
in this link developers seem to agree that grouplayout is a more effective replacement of springlayout



7134969
scrypt salt
Pattern(s): 0	
salt prevent some rainbow table attack sbut they they don t prevent dictionary or brute force attacks
use scrypt or bcrypt instead where scrypt is much stronger but both uses a proof of work system to make it much harder to crack a password



7147370
multiplying division
Pattern(s): 1	
i suppose one minor thing you can do unless you re already doing it is that in the 3rd step multiplying by the reciprocal of the sum instead of dividing by the sum
division is a lot more expensive than multiplication



7164786
case-sensitive case-insensitive
Pattern(s): 0	
if you re looking for a single character and it is not case-sensitive use the overload that works with a char
searching for a single case-insensitive char is quicker than a sub-string



7169537
nswindowcontroller nsviewcontroller
Pattern(s): 0	
nswindowcontroller is a better fit for managing the details of the ui a ui-controller and essentially you are just controlling the view of the model with your search bar
yes i know that we have nsviewcontroller as well but sometimes that s just additional complexity for the sake of it



7310184
gtk xcb
Pattern(s): 0	
the usual basic library to use is the x11 library libx11 and that is usually wrapped by a toolkit library like gtk or qt or wxwindows or tk or
there are low level libraries too xcb which is a thinner layer over the x protocol and higher level libraries as well gnome kde



7318764
nsmutablestring nsstring
Pattern(s): 0	
if soapresults is an nsstring either because you declared it so or because you affected an nsstring to it you may instead create a new nsstring by appending string to it then create a mutablecopy from it.
but i don t recommend this as this will generate useless allocations and nsmutablestring is better to avoid this



7343905
viewdidload didreceivememorywarning
Pattern(s): 1	
for iphone os 3.0 and later viewdidunload maybe called during low memory situtations so best to release views in viewdidunload just note that for custom views create them at viewdidload instead of init method of the class
didreceivememorywarning is used more for releasing custom data structures instead of releasing views



7343978
backgrounding multitasking
Pattern(s): 1	
how the device handles backgrounding application is more a function of the ios than the device
even 2nd generation phones running ios 4.0 have multitasking



7379854
jmonkeyengine ardor3d
Pattern(s): 1	
ardor3d documentation
the documentation for jmonkeyengine is much more suitable and contains many more tutorials so i would start there



7403512
innodb myisam
Pattern(s): 0	
use innodb instead of myisam
innodb has faster indexes



7432356
google-chrome firefox
Pattern(s): 0	
the service is still in beta trial and firefox conversion is working better than safari one
i can the service fully disclose what s the service technical solution but this being an so answer i can add a few details we have re-developed a full javascript api stack that mimics most of google-chrome extension apis for safari and firefox



7444128
free malloc
Pattern(s): 1	1	
free is the opposite of malloc
new calls malloc but does a bit more
as delete calls free but does something more



7445138
setinterval settimeout
Pattern(s): 1	
note that i use settimeout instead of setinterval since you can t be sure every request will return in 3 seconds
using settimeout is better in general



7450285
tcpdf fpdf
Pattern(s): 1	
fpdf has almost no comments
tcpdf has a few more methods but also has full blocks of phpdoc-like comments with explanations of every parameter and usage and examples in html format before every method and property



7483347
google-chrome safari
Pattern(s): 0	
the open source browsers are webkit which is used for safari and the mozilla flavoured firefox
there is also chromium which is the open source version of the google flavoured google-chrome which uses a lesser javascript engine squirrel as opposed to v8 and does not have the multi-separate-thread modularisation of google-chrome



7483347
google-chrome firefox
Pattern(s): 0	
the open source browsers are webkit which is used for safari and the mozilla flavoured firefox
there is also chromium which is the open source version of the google flavoured google-chrome which uses a lesser javascript engine squirrel as opposed to v8 and does not have the multi-separate-thread modularisation of google-chrome



7504168
disk ram
Pattern(s): 0	
in other words the operating system is using some of your hard disk space to satisfy your 13 mb allocation request at great expense of speed since the hard disk is much much slower than ram



7552520
post get
Pattern(s): 1	
ecause it is a significant change of state the operation should not be done by get
while you could do it is a significant change of state by put technically post is better because of the non-idempotency assumptions associated with it is a significant change of state which in turn encourages browsers to pop-up a warning dialog



7552533
unixodbc iodbc
Pattern(s): 1	
iodbc is lgpl bsd
in practice there is not a lot of difference but i think you ll find unixodbc is more widely used



7558548
junit testng
Pattern(s): 0	0	
junit is older and have more extensions dbunit cactus etc
testng has much more annotations



7591199
observer-pattern presenter
Pattern(s): 0	
ote it s also a 1 to 1 implementation of observer-pattern so the interconnection between view and presenter is necessary
as for creation i feel presenter is the stronger entity despite presenter playing the observer role



7606313
gtk cairo
Pattern(s): 0	
cairo
you are right in saying that gtk performs a lot better on linux and other operating systems as compared to windows



7639431
drawimage putimagedata
Pattern(s): 1	
if this is the case definitely just use drawimage othercanvas x y instead of using getimagedata and putimagedata if possible
using drawimage is far faster



7665891
getter setter
Pattern(s): 1	
next time you re tediously implementing a getter consider what the caller will do with the data and whether you can just provide that functionality directly
properties encourage mutable state through setter which makes a program less parallelizable



7678099
integer unsigned
Pattern(s): 0	
here is how gcc does gcc gcc sign extends if the integer type is larger than a pointer type this ll happen regardless of the integer being signed or unsigned just because that s how gcc decided to implement gcc



7697557
skip-lists tree
Pattern(s): 1	
i do not know of a .net implementation but a data structure that might work for you is an indexible skip-lists
a .net implementation but a data structure that might work for you has similar o lg n performance like a balanced binary tree but is conceptually more like a linked list



7723152
inherited properties
Pattern(s): 0	
if you are fuzzy about prototype inherited make sure you read up on it - it will help you reason about this problem
in essence an object inherits all properties of an object prototype but an object s own properties has higher precedence than those of its prototype



7765857
innodb myisam
Pattern(s): 1	
myisam tables will be reloaded automatically as soon as the table is next touched by mysql obviously you need to make sure the .myi .myd and .frm files are consistent
innodb is a bit more complex and depends on whether it s a traditional configuration with all tables in the same tablespace or if you re using innodb_file_per_table



7773169
jlist jlabel
Pattern(s): 0	
ou could show them in a jlist in a jscrollpane or in a jpanel that uses gridlayout and that holds jlabel that hold the icons again all in a jscrollpane
myself i much favor the jlist solution as the jlist solution makes it much easier to be able to select an image on mouse click



7781073
subtraction multiplication
Pattern(s): 1	
for x86 64bit addition subtraction is done using add-with-carry and subtract-with-borrow instructions
64bit multiplication is much more complicated but also done using a combination of 32-bit multiplies and 32-bit add-with-carry instructions



7781073
addition multiplication
Pattern(s): 1	
for x86 64bit addition subtraction is done using add-with-carry and subtract-with-borrow instructions
64bit multiplication is much more complicated but also done using a combination of 32-bit multiplies and 32-bit add-with-carry instructions



7793515
jython pypy
Pattern(s): 0	
here is a recent benchmark of jython 2.5.2 running on jvm 7 where jython is slower than pypy but faster than cpython



7810983
post get
Pattern(s): 1	
you would not want to use get for it because in that case a witty user may raise mayhem simply changing the id at the end of the url and deleting all random uses
post allows more data and can be hacked to send streams of files as well



7892478
crypto++ botan
Pattern(s): 1	
the style of the botan api was more straightforward for me but both of c++ crypto libraries i also found crypto++ are solid and mature



7913630
django web2py
Pattern(s): 0	0	0	0	
web2py is definitely easier and makes the code simpler and cleaner
but django gives you a better understanding on whats going on and also more power to modify the design process
web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit



7919037
arraylist treeset
Pattern(s): 1	
now let s say you ve implemented your list with an arraylist
later you change your mind deciding that a treeset is better



7928739
printf strlen
Pattern(s): 0	
you should use printf with the real length of buffer or at least handle the size limit yourself inside the loop
in case strlen str is larger than buffer s size 2



7949706
lxml elementtree
Pattern(s): 1	1	
but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library



7969462
junit testng
Pattern(s): 1	
junit is more aimed at unit testing
for functional testing take a look at testng which offers advanced functional testing features such as



7986180
ant maven
Pattern(s): 1	
with ant you can do exactly what you want
maven is the more up-to-date way to build and package jars and do much more other stuff



8000320
postgresql mysql
Pattern(s): 1	
bonus tip avoid mysql
postgresql is better in nearly every respect



8001471
vim emacs
Pattern(s): 0	0	
vim can be scripted in different languages and you can find many useful scripts at www.vim.org
emacs is heavier but lisp is a very powerful scripting languages
so emacs is much more of a general tool than just a text editor



8021206
innodb myisam
Pattern(s): 0	
innodb is much much stricter than myisam



8028597
wxpython pyqt
Pattern(s): 1	1	
wxpython is better because... or no way
pyqt is better because...



8028787
uiview calayer
Pattern(s): 0	
edit unless you have a good reason want to use some services of uiview which are not offered by calayer you should use calayer as mattdipasquale suggests
uiview has a greater overhead which might not be a problem in most cases but still the other solution is more elegant



8055818
filesystems ntfs
Pattern(s): 0	
i wrote about filesystems esp
fat since the timestamp resolution of fat is someabout 2 seconds while ntfs has much higher resolution again this could have an impact when comparing timestamps.



8092532
innodb myisam
Pattern(s): 1	
innodb is more suitable for data critical situations that require frequent inserts and updates
myisam on the other hand performs better with applications that don t quite depend on the data integrity and mostly just select and display the data



8110300
crypt salt
Pattern(s): 0	
to call crypt with the blowfish algorithm use a salt that begins with followed by a number the cost parameter between 04 and 31 followed by a and then 22 digits from the alphabet . 0-9a-za-z
the php crypt manual contains more details on how to use crypt



8118370
strdup strtok
Pattern(s): 1	
in this case strdup is better
and you don strlen actually copy the string returned by strtok you copy the pointer



8118370
strlen strdup
Pattern(s): 1	
in this case strdup is better
and you don strlen actually copy the string returned by strtok you copy the pointer



8120079
width height
Pattern(s): 0	
found the situation was related to the issue of imagemagick when the result width size was bigger than default image width
so you should use maxw instead width in your configuration and maxh instead of height



8124202
hex binary
Pattern(s): 0	
first of all 0x00001111 is in hex which is a larger number than 255 - and byte overflows
look here how to represent binary numbers or just use



8136656
nunit mstest
Pattern(s): 0	
if the test method above does not throw an argumentnullexception mstest will mark the test as a fail
nunit has a more granular assert.throws that gives you more specific control of exactly where in the test method an exception is expected



8153127
floating-point integer
Pattern(s): 1	
this way you ll get the exact result using integer math alone
using floating-point math is the more general solution but you need to be aware of rounding issues



8182996
postgresql mysql
Pattern(s): 0	
postgresql is a lot more advanced when postgresql comes to sql features
things that mysql still doesn t have and postgresql has



8189201
serializable deserialization
Pattern(s): 0	
for serializable filtering properties blog entry should help
deserialization side has less support since it is more common to want to filter out stuff that is written



8195090
allegro sdl
Pattern(s): 0	
you could try allegro
it is somehow similar to sdl but seems simpler to use



8197557
gson jackson
Pattern(s): 1	
gson is really simple to use and if performance isn t an issue it s quite nice
jackson is much much faster though and is not really that much more effort to use



8207079
teamcity jenkins
Pattern(s): 1	1	
between cruisecontrol and teamcity teamcity is faster and easier to set up but you may need to check on licensing for it
i can t speak to jenkins never having used it



8231535
boost stl
Pattern(s): 0	
c++ s stl is getting better and better yet c++ s stl s not nearly as huge as boost and is not intended to



8240426
for-loop arrays
Pattern(s): 0	
indexof is faster than a for-loop but the algorithmic complexity is still o n 2
if the size of the arrays gets much larger consider a different data structure such as a hash table



8274818
tablelayout margins
Pattern(s): 1	
you could use a tablelayout which seems more appropriate in that case
you can also use a linearlayout with a weight of 1 for each button and the margins or padding you want



8298866
passenger unicorn
Pattern(s): 1	
unicorn scales properly and is a grown up unix citizen - it s what i use for production personally
edit - have just noticed that passenger 3 is a bit more rvm-friendly as given in the documentation above - but you still have to run against a wrapper



8311518
viewdidappear viewwillappear
Pattern(s): 0	
if you put your code in viewwillappear animated this should work
edit as per saphrosit s comment viewdidappear is an even better place to do this



8325803
maven pom.xml
Pattern(s): 1	
part of the configuration is dispersed along in the pom.xml file
maven packaging lasts more because the filtering



8350591
weka mallet
Pattern(s): 0	
the problem with mallet is that the training uses gb of memory and it can take hours if you have large training sets
weka has more documentation but most of it makes no sense



8394115
margin height
Pattern(s): 0	
this is designed for the 100px margin-top you specified as well as a 100px margin between the bottom of the element at its tallest and the bottom of the window
when the window is resized the function iterates twice in case the window height is greater than that of the previously-squished lightbox at which point its height would be set to auto but ends up being shorter than the relaxed height of the newly expanded lightbox in which case we need to squish the lightbox again to match the new window height



8395720
versioning upgrade
Pattern(s): 1	
the dbi versioning is less likely to be the source of the trouble but the dbi versioning would still be good to upgrade to the most current versioning



8396571
codeigniter yii
Pattern(s): 0	
here is codeigniter 2.0 and yii 1.1.6
so latest codeigniter 2.0 is better than latest codeigniter 2.0 according to this benchmarks



8428492
listview gridview
Pattern(s): 0	
if paging sorting editing etc is needed then listview is better choice
as far as showing multiple tables goes you can use nested controls - for example repeater list-view nesting a gridview



8430879
google-chrome firefox
Pattern(s): 1	
whether you use a plugin or write your own code css only is a no go for google-chrome safari and as you said firefox is better at dealing with it



8506558
children parent
Pattern(s): 0	
i think there is a problem if one of your nested items dropdown children is larger than your main-item
if thats the case your children should specify the size of your parent li



8525480
for-loop loops
Pattern(s): 1	
every other object will still check if it hit so your inner for-loop will need to start from 0 but then you save the full collision check for non-moving objects
overall it looks like good code you already have physics and logic broken out so you can update the logic in a separate loops that is called less often as you mentioned in the post



8548265
udp mtu
Pattern(s): 0	
udp packets smaller than the mtu will not be fragmented but the mtu depends on more factors such as ip options and vlan headers so it may not be greater than 1500



8550609
submit submission
Pattern(s): 1	
nowdays we do not submit mails to port 25
port 587 is used for submission which has more relaxed rules although it may be necessary to authenticate yourself if your ip address is not white listed



8562600
disk ram
Pattern(s): 0	
less disk seeks - faster queries
if data sits in ram - no disk seeks are required at all required data is served right from memory



8574629
maven-shade-plugin appassembler
Pattern(s): 0	
maven-shade-plugin example configuration creates additional jar
example appassembler configuration creates subfolder structure and .bat .sh



8576733
d3.js highcharts
Pattern(s): 0	
if you want conventional x-y line bar plots then for instance you can build your plots in highcharts much faster
d3.js becomes more interesting as use cases become more specific--in particular animation and unorthodox visualization sunburst diagrams chord diagrams parallel line plots geographic maps etc.



8588362
post get
Pattern(s): 1	
post is also more secure but certainly not safe
although http fully supports crud html 4 only supports issuing get and post requests through a cleaner url various elements



8603197
innodb myisam
Pattern(s): 1	
innodb loves to be able to have it s indexes in memory it slows considerably if it can t
myisam does much better in low memory situations with large data sets



8605035
versioning upgrade
Pattern(s): 1	
that means your compiler versioning is more recent than the jvm versioning where you are trying to run the classes
either downgrade your machine s java compiler or upgrade the other machine s runtime jvm



8611790
maven m2e
Pattern(s): 1	
in my first round with maven i thought i was smarter than maven s standards and used my own - which was actually a hybrid with the eclipse defaults



8614181
cpu processors
Pattern(s): 0	
pinning the processors is not recommended since it wastes cpu resources
the processors is better to block a thread when a thread is not required to do any work and awake once a thread is required to act upon signals



8622623
awesomium berkelium
Pattern(s): 0	
berkelium or awesomium in general are probably a good bet they re rather widely used for embedding webkit and will work well
berkelium is somewhat newer and may have a few less features but documentation tends to be better



8673820
lisp smalltalk
Pattern(s): 1	
n programming languages of the lisp family scheme comes to mind if is an expression meaning that it returns a value and is implemented as a special form
on the other hand in pure object-oriented languages such as smalltalk if really is a method more precisely a message typically implemented on the boolean class or one of a method subclasses



8676360
imagemagick graphicsmagick
Pattern(s): 1	
note that imagemagick is the most powerful exactimage is the fastest and graphicsmagick is a folk of imagemagick which is faster but a little less powerful and has some bugs



8709321
ubuntu centos
Pattern(s): 0	
i believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supported



8731150
d3.js raphael
Pattern(s): 1	
i don t know why but d3.js is more efficient when animating a large number of elements at once
you can make them both work seamlessly by creating a raphael function that receives a set and returns the html objects you want to animate



8772814
vbscript jscript
Pattern(s): 1	
vbscript is a much more natural partner for adodb that jscript



8810612
coalesce isnull
Pattern(s): 0	
use coalesce instead
it functions much like isnull although provides more functionality



8843436
winpcap scapy
Pattern(s): 0	
f the performance issue is critical for you may use winpcap but you have to write more complex code in c
doing the same task using python scapy is pretty easy an simple but python scapy is not faster than c



8852991
datamapper activerecord
Pattern(s): 0	
if you are a beginner in the orm world i would suggest going with activerecord because it is simple and usually requires less code
on the other hand if you are building a large complex model i think datamapper is the better option



8866125
int boolean
Pattern(s): 1	
the pure int solution is faster by a factor of two compared to the math.ceil solution
thomas proposed an int based solution that is identical to the one i have above except that the one i have uses a trick by multiplying boolean values



8883535
width height
Pattern(s): 1	1	
this makes this more flexible across devices regardless of orientation not to mention width height is more widely supported than orientation



8909591
imperative declarative
Pattern(s): 0	
while it is possible to explore non-imperative computer concepts it doesn t seem to be worth the effort at the current time - building a declarative machine as an interpreter on top of an imperative machine is much cheaper and faster than a true declarative machine



8953059
nexus artifactory
Pattern(s): 0	1	
nexus looks better choice than artifactory because of using filesystem instead of database to keep repository
about nexus vs apache archiva my quick tests show that nexus is more intuitive and is as well a bit faster



8965136
strcpy strncpy
Pattern(s): 1	
strcpy adds a null terminator so your string ends there
perhaps strncpy is a more useful function for your situation



8996405
uiview calayer
Pattern(s): 0	
ote that there s a layer property in uiview of the type calayer
however coding directly with uiview is easier but uiview doesn t expose the full powers of core animation



9005774
integer fractions
Pattern(s): 1	
if you immediately run the same code block again however you re just as likely to see the reverse where the integer version runs slightly faster
realistically where you re trying to measure differences in milliseconds or fractions of milliseconds you re well into the realm where system noise is going to come into play



9021304
fdt swc
Pattern(s): 1	
besides the general differences fdt max is less expensive than fb and fdt will soon offer a subscription option



9080288
magento expressionengine
Pattern(s): 1	
thinking you can format magento blocks any better in a cms such as expressionengine and use magento just for the backend will put you on a hiding to nothing to end up with a fairly useless setup that isn t going to go anywhere



9086223
swt swing
Pattern(s): 0	
so if you are programming raw swing you get some support but still have to do a lot of work by yourself
swt asks for more basic effort and discipline from your side



9097566
slider jcarousel
Pattern(s): 1	
nivo slider is pretty cool and easy to use
or you can use jcarousel is closer to what you need



9132638
post get
Pattern(s): 0	
my personal thought is that it is better to put it in post for a couple of reasons
get is much easier for users to manipulate



9132638
put get
Pattern(s): 0	
my personal thought is that it is better to put it in post for a couple of reasons
get is much easier for users to manipulate



9136110
comparator comparable
Pattern(s): 0	
if you can using a comparator is actually much simpler
in fact a comparator gives you a couple of additional options that you cannot have with comparable such as defining alternative sort orders



9138399
udp tcp
Pattern(s): 0	
f the clients are listening on that address the clients ll get the message although the message s not guaranteed like tcp if the clients re not there the broadcaster doesn t care
it sounds like what you need is udp which is more of a broadcast to anyone that s listening scenario



9143497
loops if-statement
Pattern(s): 1	
in vba it is more optimal to use 2 if-statement in these cases that way you aren t checking for florida if you don t find miami
the other advice i have is that a for-each loops is faster than a for-loop



9163056
apache nginx
Pattern(s): 0	
apache can be just as good but requires building from source and knowing exactly what configuration to use to match nginx
however apache has more features and is a little easier to work with



9166163
qtableview qtablewidget
Pattern(s): 1	
the following example is actually using a qtableview + qstandarditemmodel
the reason is because qtablewidget is much more limited since you can only use methods from the widget



9181554
bcel cglib
Pattern(s): 1	
you can break down bytecode framework into ones that provide a high level api that allows you to get away from learning low level opcodes and jvm internals e.g javassist and cglib and low level frameworks when you need to understand jvm or use some bytecode generation tools asm and bcel
for analyzis bcel historically evolved a bit more but asm provides a decent functionality that is easy to extend



9181554
javassist bcel
Pattern(s): 1	
you can break down bytecode framework into ones that provide a high level api that allows you to get away from learning low level opcodes and jvm internals e.g javassist and cglib and low level frameworks when you need to understand jvm or use some bytecode generation tools asm and bcel
for analyzis bcel historically evolved a bit more but asm provides a decent functionality that is easy to extend



9232189
vim emacs
Pattern(s): 1	1	
emacs is better for typing especially large-scale i m writing a new feature and it will be a while before i even try to see if it runs
vim is better for editing especially quick edits



9245736
folder directory
Pattern(s): 0	
asically i had copied the folder to a new location and modified the folder forgetting that the folder would bring along all the hidden .svn directory
once you realize how the folder happens the folder is easier to avoid in the future



9249025
udp tcp
Pattern(s): 0	
tcp is probably your best choice
if you are designing a high performance game where you have to allow for dropped packets and handle latency better udp becomes a better option but then you have to take into consideration what happens when you drop packets and have things like out of order packets



9264216
width border-box
Pattern(s): 0	
adding the border increases the overall size of the boxes to 50 +1px so together the boxes combined width is greater than 100 and something s gotta give
you can use the css3 property box-sizing border-box to incorporate the border into the total 50 width or more specifically -moz-box-sizing in firefox -webkit-box-sizing in chrome safari and simply box-sizing in opera



9264795
dbcontext objectcontext
Pattern(s): 1	
now my answer is mostly - for new users dbcontext api is probably better
dbcontext api is simplified - both in terms of usage and features but you can still get objectcontext from dbcontext and use features available only in objectcontext api



9287416
udp tcp
Pattern(s): 1	
udp is less reliable on a wide area network but in a closed environment of a vm talking to a vm host you can safely skip all the tcp reliability stuff



9289339
tostring string.format
Pattern(s): 0	
it provides no conversions beyond calling tostring no formatting etc
string.format is a much richer allowing format patterns etc



9321791
jerkson jackson
Pattern(s): 0	
jerkson uses jackson underneath which repeatedly scores as the fastest and most memory efficient json parser on the jvm
i ve used both lift json and jerkson in production and jerkson s performance was signficantly better than lift s especially when parsing and generating large json documents



9321934
joptionpane jdialog
Pattern(s): 0	
as i understand it joptionpane is great for what it can do but you can t really change the functionality beyond that not easily
jdialog is better to inherit from if you want to create your own custom dialogs



9335763
jlabel jeditorpane
Pattern(s): 0	
really not good idea to hold or display long html formatted text in the jlabel since is possible better would be use jeditorpanes jtextpanes these jcomponets support styled and html formatted text icons etc .



9335763
jlabel jtextpane
Pattern(s): 0	
really not good idea to hold or display long html formatted text in the jlabel since is possible better would be use jeditorpanes jtextpanes these jcomponets support styled and html formatted text icons etc .



9372254
nullpointerexception illegalargumentexception
Pattern(s): 1	
i find that a nullpointerexception is easiest when the argument is to be used in that method
if you re going to be saving the reference for later in a constructor then the illegalargumentexception makes a bit more sense



9374764
width height
Pattern(s): 0	
so you can make a 180x180 box and fill the background in black if the image height s is smaller



9403354
ember.js backbone.js
Pattern(s): 1	1	
i think it will also be down to inexperience on my part or bad architecture
ember.js i found slightly more moo-ish as an interface though it did not quite click either
frankly backbone.js was less trouble to setup



9408374
post get
Pattern(s): 0	
ut i couldn t get the conversion working so opted for this slower method in the rails console with more downtime
if anyone has a faster solution please post anyone has a faster solution



9433251
ember.js sproutcore
Pattern(s): 1	
from the technical standpoint ember.js is focused on more modularized code and so called semantic-templates for views
sproutcore is more monolithic



9436676
mapping-by-code fluent
Pattern(s): 1	
there are few major differences - fnh is well established and quite popular but mapping-by-code is more powerful better coupled with nhibernate features and i find it much more elegant
i d like to suggest you to read my blog series comparing mapping-by-code to fluent nhibernate - here is the table of contents and my final conclusions



9517785
sortedlist sorteddictionary
Pattern(s): 0	
sorteddictionary offers same advantages than sortedlist but performs better if values to insert are not already sorted



9524360
innodb myisam
Pattern(s): 0	
myisam could crash on insert update intensive applications but it has automatic recovery
however keep in mind that in such application innodb has far better performance



9589442
mathml tex
Pattern(s): 1	
converting latex to mathml i could find only webbased solutions is different to converting latex to svg in the sense that mathml is more like a description of the math source like latex source and svg is a format to store the typeset equations like pdf



9594816
cashapelayer calayer
Pattern(s): 0	
you could also use a regular calayer as the mask with your semi-transparent image as the contents it depends on whether or not you want the ability to customize the size shape of the hole
caveats cashapelayer is slower than normal layers and mask is slower than non-masking as well



9614527
lisp scheme
Pattern(s): 0	
for sure this dual meaning s a complication that makes this dual meaning harder to explain the language to whoever is learning this dual meaning and that s why scheme is considered a better simpler language for teaching but many expert lispers think that it s a good choice that makes the lisp language a better tool for real problems



9618446
backgroundworker dispatchertimer
Pattern(s): 1	
use either the timer or a backgroundworker
timer is probably most appropriate for your brief description unless you want to do something on the ui thread in which case a dispatchertimer is better for you as a dispatchertimer calls back on the ui thread



9656407
kramdown redcarpet
Pattern(s): 1	
it has a lot of advantages over redcarpet but i m using second one due it is very fast
but sometimes kramdown is better option



9675447
innodb myisam
Pattern(s): 1	
innodb doesnt read number of rows from stored cached value like myisam does if column is not null cause innodb is more optimized for writing than reading opposing to myisam



9714461
subtraction multiplication
Pattern(s): 0	
for integers addition subtraction and logical operations like and or xor are never any slower than any other operation
for integers multiplication is harder than addition may be slower than addition etc but may still be very fast as long as there is sufficient cpu-power dedicated to it



9714461
addition multiplication
Pattern(s): 0	
for integers multiplication is harder than addition may be slower than addition etc but may still be very fast as long as there is sufficient cpu-power dedicated to it



9723024
sudo passwd
Pattern(s): 0	
sudo -u postgres createuser pgs_root
set user passwd for the postgresql user



9765599
jasmine mocha
Pattern(s): 1	
mocha is usually paired with a separate library for assertions often chai.js if you are doing in-browser testing or should.js for node-only testing
i am happy with chai s assert.equal interface but the jasmine style seems more elegant to me



9776326
innodb myisam
Pattern(s): 0	
innodb is pretty much newer and has more support from mysql team so using it for smaller and easily recreatable restorable tables is what i am practising right now
datas which are more frequently updated inserted still use myisam on my own server



9815550
division multiplication
Pattern(s): 0	
multiplication and division are a bit trickier but again a few tips
multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros



9823788
javassist byte-buddy
Pattern(s): 1	
byte buddy byte-buddy
byte buddy is a rather new library but provides any functionality that cglib or javassist provides and much more



9847548
erd diagram
Pattern(s): 1	
an erd is probably more useful to a database designer to make sure that the database can support the relationships correctly
a context diagram from what i understand would probably be more useful to a web developer or interface designer so that they can pull the correct data into certain views or forms



9879578
postgresql mysql
Pattern(s): 1	
i really like postgresql s indexes which are far better than mysql s
postgresql is generally much better in features



9879578
postgresql mysql
Pattern(s): 0	
 one last thing to say mysql is a little bit easier to start than postgresql
postgresql is a little bit more complex because postgresql has more features



9948201
innodb myisam
Pattern(s): 1	
myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases
myisam is typically faster for table scans of read-only tables



9991303
range min
Pattern(s): 0	
check the the min value of this range is lower than the ip



9998385
3des aes
Pattern(s): 0	
3des implementations may be less vulnerable to side channel attacks although it certainly is not immune from it
aes is harder to get right - as i ve come to understand - because of it s internal design table accesses



10009533
google-chrome safari
Pattern(s): 1	
safari also uses this
google-chrome uses the more modern rfc 6455



10015028
margin height
Pattern(s): 0	
i see what you mean in ie9 your height was way bigger than the top fill div
i removed the 270px margin constraint and the 270px margin constraint started behaving properly in ie9



10033564
for-loop arrays
Pattern(s): 0	
the second one you are just saving the references to the objects which are only in the scope of the for-loop and once those are unset the objects are gone
the reason why this arrays takes up less memory is that this is only storing references to objects



10076282
expander itemscontrol
Pattern(s): 0	
also when the expander content was larger than the listview the scroll would not work properly
the fix was simply replacing listview with itemscontrol and putting itemscontrol inside a scrollviewer



10106229
cakephp yii
Pattern(s): 1	
cakephp is sweet too but yii have more things and is more advanced
the default scaffold on yii is better advanced search implemented and jquery on the fly



10106642
post get
Pattern(s): 1	
here s a basic example to get you started
here s a blog post that delves further into the concept of a work task queue



10137802
accessor properties
Pattern(s): 1	
not every ivar needs accessor methods
ultimately is the difference between the 2 properties gives you more flexibility with regards to memory management and multi-threading and the normal one gives you the defaults



10146830
versioning upgrade
Pattern(s): 0	
ou cannot forcibly upgrade the app though -- the user will have to be involved
you also cannot installed upgradable versioning -uninstalled older versioning except by hand -- once the app is uninstalled the app has no way to trigger installation of some other app



10154782
glut glfw
Pattern(s): 0	
you could stop using glut
glfw gives you better control over the loop so that it s easier to do other processing



10170433
shadowing named
Pattern(s): 0	
his effect is called shadowing
this effect means that all variables with named value are always there but if you lookup the named one is found earlier thus making the other invisible shadowed



10178330
hash md5
Pattern(s): 0	
lso both the hash you cited have issues md5 more so and should not be used if there is any risk that someone could have any incentive to create documents having the same hash yet being different this is readily doable with md5 which is completely broken from a cryptographic point of view and possibly not far away with sha1
basically what you propose hashing then compare the hash is likely slower than plain compare unless you read from a really seek averse media and have issues of a really seek averse media own



10188935
jar war
Pattern(s): 0	
you could also use the maven dependency plugin s unpack goal to extract classes from the dependency war to
but i do recommend if at all possible to refactor your controllers into a separate jar it is much easier and more maintainable



10252104
hive hdfs
Pattern(s): 1	
specifically to your question i can see a few main scenarious when hive is better then rdms
a data is already in the hdfs and we have some other usage of a data there like mr jobs



10369204
fileoutputstream filewriter
Pattern(s): 1	
if i remember correctly fileoutputstream is more general purpose - it can be used for binary data or text data
filewriter is used for text only



10371167
gtk clutter
Pattern(s): 1	
use clutter which is much more suited to animation and integrates with gtk



10406289
qsort bsearch
Pattern(s): 1	
using qsort is very straight-forward
using bsearch is slightly more complex because you typically have to fake up a record to find



10438915
hash md5
Pattern(s): 1	
the class also commits a computer science no-no of using a cyptographic hash function where cryptograpic security is not required
the md5 algorithm is a lot more expensive to run than a regular non-secure relatively



10478057
post get
Pattern(s): 0	
and querystring will be generated like textbox username1234 from extension in the packet s body unlike one goes in get with the headers along side the url
jquery s post method makes it simpler for you to format data you send using json and then internally it converts that to a querystring to send parameters



10513207
memcpy strcpy
Pattern(s): 1	
strncpy - memcpy is faster but you need to know the size of the input string
strcpy may be the fastest if your string sizes vary much because it determines the required size while copying



10527980
google-chrome firefox
Pattern(s): 1	
obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary



10537232
profiler hprof
Pattern(s): 1	
n reality you probably want to set some extra options google hprof for more details.
the latter is easier in principle but i mention the possibility of adding your own profiling routine because it s more flexible and you can do it in a servlet environment where running another profiler is more cumbersome



10547095
pygtk pygobject
Pattern(s): 0	
the new draw signal uses a callback that already passes the cairo context as a parameter you don t need to do stuff like like you did in pygtk to get the cairo context while attending the expose-event signal
in pygobject is simpler



10562872
innodb myisam
Pattern(s): 0	
innodb has shown much better results in the beginning but has quickly deteriorated much before 1mil records until i have removed all indexes including primary
at that point innodb has become superior to myisam when executing inserts updates



10603921
uninstall upgrade
Pattern(s): 0	
hen back up your user databases from express restore your user databases on developer and once you are happy that everything is working uninstall express edition
in addition to avoiding peculiar upgrade issues when moving to a new edition and a new versioning unless you don t really mean express is sql server 2008 you also have the added bonus that you still have your original databases intact which you won t have if the upgrade fails in worse ways than simply being blocked



10623815
versioning upgrade
Pattern(s): 0	
current rvm versioning provides an easier way to do this
the upgrade option will migrate gem sets wrappers and environment files -



10639406
haskell scheme
Pattern(s): 0	
so yes scheme is pretty close to lc but that s not saying much with all of these issues
haskell is arguably a better candidate since it s both lazy and does that kind of currying for multiple arguments to functions



10647688
highcharts fusioncharts
Pattern(s): 0	0	
customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts
nevertheless fusioncharts flash has more advanced animations and that are really easy to setup



10659772
division addition
Pattern(s): 0	
usually simple operations like addition subtraction and multiplication are very fast
division is a bit slower



10659772
division multiplication
Pattern(s): 0	
usually simple operations like addition subtraction and multiplication are very fast
division is a bit slower



10659772
division subtraction
Pattern(s): 0	
usually simple operations like addition subtraction and multiplication are very fast
division is a bit slower



10671833
union distinct
Pattern(s): 0	
in most cases union all is slightly faster than union distinct



10678637
inherited subclassing
Pattern(s): 0	
my general rule of thumb before using inherited consider if composition makes more sense
reason subclassing usually means more complexity and connectedness harder to change maintain and scale without making mistakes



10678768
inherited subclassing
Pattern(s): 0	
my general rule of thumb before using inherited consider if composition makes more sense
reason subclassing usually means more complexity and connectedness harder to change maintain and scale without making mistakes



10690144
vagrantfile hosts
Pattern(s): 0	
if you just started a vagrant box with this vagrantfile there is nothing more than an empty ubuntu lucid which does not run any service yet
so there is nothing served on port 80 this is why there is nothing to see either from inside the box on port 80 or the hosts machine on 8080



10692069
width margin
Pattern(s): 0	
to ensure that the element s maximum width is less than the width of the parent allowing some space between the content of the element and the borders of the parent
margin 0 auto



10697578
mouse keyboard
Pattern(s): 1	
in this way you can send any keyboard and mouse events as well
ignoring mouse events is more difficult



10698323
udp tcp
Pattern(s): 0	
udp protocol depends on the type of connection you need and your application s capacity to deal with dropped packets etc
tcp has a higher initial cost for building up the initial connection but the transmission is reliable and for long running transactions may turn out to be the fastest



10698323
udp tcp
Pattern(s): 0	0	
tcp has a higher initial cost for building up the initial connection but the transmission is reliable and for long running transactions may turn out to be the fastest
udp is cheaper to create connections but you may have dropped packets



10698323
udp mtu
Pattern(s): 0	
udp is cheaper to create connections but you may have dropped packets
maximum transmission unit mtu is a parameter than can have a significant affect on an ip based network



10787175
addition modulo
Pattern(s): 1	
in addition trove provides an more memory-efficient implementation for storing primitive values than standard java collections
if the array is not sparse and you really really do need the whole blob in memory you will probably have to use a two-dimensional structure with a map matching offsets modulo 1024 to the proper 1024-byte array



10820455
cpython pypy
Pattern(s): 0	
it s very hard to do correctly with cpython
pypy has much better sandboxing capabilities



10839789
qobject qmetaobject
Pattern(s): 1	
use qmetaobject invokemethod
posting qevents to qobject is faster than using signal-slot invocations because there are no copy constructors called and there s no marshalling done except directly by you upon construction of a qevent



10856576
svg vml
Pattern(s): 0	
we tried vml on ie as backup for canvas but it was much slower than flash
svg was slower then all the rest



10871583
opera google-chrome
Pattern(s): 0	
i think google-chrome has a performance problem with image processing
mozila firefox and opera works smoother



10899741
google-chrome firefox
Pattern(s): 1	
when a cookie has a bad date from an de-synchronized host machine which happens frequently in my virtual machine environment google-chrome correctly rejects it which causes the php session variables to be lost
firefox is more lenient



10901876
justmock typemock
Pattern(s): 0	
it can mock almost anything like typemock and is also cheaper than typemock which is good
the better part is they have a trimmed version of they product - justmock lite which is free



10909575
mef prism
Pattern(s): 0	
prism uses mef unity or any other inversion of control library to implement composition and dependency injection
mef is newer and easier to work with than unity but it all depends on the templates you decide to use



10922074
inherited properties
Pattern(s): 0	
the first half of your question sounds like inherited is a perfect fit
however upon reading about your need to get a list of common and individual properties it seems like less of a great fit



10960330
public protected
Pattern(s): 1	
rotected internal is actually the second most permissive access modifier after public
protected internal s worth noting that protected is arguably more permissive than internal since protected internal allows access from code that you have no control over other assemblies



10969303
eigen lapack
Pattern(s): 1	
if the blas functionality of eigen is actually faster then that of gotoblas gotoblas atlas mkl then they should provide a standard blas interface anyway
this would allow linking of lapack against such an eigen-blas



10987999
carrierwave paperclip
Pattern(s): 1	
if you re just starting out i would recommend using either paperclip or carrierwave to handle file uploads in a rails app
both projects are really good but i think you ll find that carrierwave is more flexible in the long run



11020597
pull push
Pattern(s): 0	
pull would be easier but would be a bigger load on the server and obviously not quite as real-time
for a good chat experience push is definitely better



11083338
strtol atoi
Pattern(s): 1	
there is no standard method of checking whether the conversion actually succeeded or not when using atoi
since you are writing c++ you could get the same result with better error checking by using a std istringstream std stoi c++11 or strtol which is a better interface when dealing with arbitrary numbers



11193158
icomparable gethashcode
Pattern(s): 1	
equals and gethashcode are usually given a different implementation in the context of searching or hashing
implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison



11219099
clang llvm
Pattern(s): 1	
clang is better
it parses c and c++ to asts can do analyses on the llvm intermediate representation and has some kind of mechanism for spitting out to-be-applied-later patches to source text inspired by a desired tree change



11229003
jlist jtextpane
Pattern(s): 0	
i tried the solution given at how to word wrap text stored in jtextpanes which are cells in a jlist and a variant found at
but i found out that the breakview is no longer called when the jtextpane is smaller than the longest word in the sentence



11281905
bmp png
Pattern(s): 1	
the code i have lying around for loading .bmp s uses gl_bgr instead of gl_rgb so i think that will solve your problem with bmp s
the problem with your png image is more likely caused by the png being 32-bits per pixel



11314411
mp4 h.264
Pattern(s): 1	
h.264 is more often encapsulated in mp4 container and vp8 in mkv



11317711
min max
Pattern(s): 0	
if the top of the max heap the max heap has more than k terms pop off the top term and push the max heap into the min heap



11322221
appkit nsscrollview
Pattern(s): 0	
- nssize contentsize in appkit returns the size of the nsclipview and not the height of the content that scrolls inside the table view
i don t know how uiscrollview s work but on os x an nsscrollview has a content view more aptly named the nsclipview that clips the actual content which is provided by a document view scrollable if an nsscrollview has a size larger than that of the clip view that is a subview of the clip view



11337217
uiview calayer
Pattern(s): 0	
uiview method has better animation responsiveness
in my case the uive fps is about 60 but the calayer is about 34



11349814
coalesce isnull
Pattern(s): 0	
the function isnull is kind of equivalent but coalesce allows more arguments and is standard sql.



11352880
hmac scrypt
Pattern(s): 0	
hmac is a better approach but even then if you re using something like sha-1 you ve already picked an algorithm which is unsuitable for password hashing due to its design for speed
use something like bcrypt or possibly scrypt and take the problem out of your hands entirely



11379946
accessor properties
Pattern(s): 1	
elete on accessor properties properties with get set has the same effect as get set does on data properties namely that get set removes the properties
after executing delete log4moz.repository the properties is no longer present on the log4moz object and the getter setter functions are no longer bound to the properties



11397945
postgresql mysql
Pattern(s): 1	
you d be pretty safe with postgresql or sql server for instance
mysql - requires a bit more thought



11434121
for-loop loops
Pattern(s): 1	
objective-c has non-trivial method call overhead so your problem is in the setup of the nested loops
as you can see fast enumeration + for-loop is faster than for-loop + for-loop and here you re avoiding additional method calls



11446587
hash salt
Pattern(s): 0	
so an attacker trying to brute-force all your password hash has an easier time because he only needs to crack the same password once for all users
therefore it is still very advisable to use user-specific salt



11460367
post get
Pattern(s): 0	
update yes get requests are encrypted over https
but post just seems safer to me for some maybe unfounded reason



11462074
easeljs tweenjs
Pattern(s): 0	
from what i understand easeljs performance is significantly worse on non-hardware accelerated canvas implementations
if you can use createjs s version of tweenjs over other tweening libraries



11555489
for-loop loops
Pattern(s): 1	
it s a bit of an oversimplification to say that the enhanced for-loop is more efficient
it can be but in many cases it s almost exactly the same as an old-school loops



11555489
for-loop loops
Pattern(s): 1	
one place where the enhanced for-loop is faster than a naively implemented traditional loops is something like this



11564150
google-chrome firefox
Pattern(s): 1	
google-chrome is correct in rejecting it
firefox is simply more forgiving



11564234
width height
Pattern(s): 1	
width is easy since you don t seem to want horizontal scrolling just make it the width of the screen 320
height is a little more tricky



11587000
public protected
Pattern(s): 1	
for example it is a compile-time error for a public class to derive from a private or internal class
here you re trying to derive a protected class from a private class - the protected class is more accessible than the private class hence the error



11592279
int chars
Pattern(s): 0	
s scottgriffiths notes correctly in a comment below the int approach will work if your string contains 0x at the start while the character-by-character check will fail with this
also checking against a set of chars is faster than a string of chars but a set of chars is doubtful this will matter with short sms strings unless you process many many



11592396
vmware virtualbox
Pattern(s): 0	
vmware doesn t seem to have the same issue
running on linux virtualbox seems much happier and linux can be very light weight



11597004
filesystems ntfs
Pattern(s): 0	
perhaps my real issue was that since they were on different filesystems my bottleneck was i o
converting just one file from the ntfs partition took 3x longer than if i moved it to the ext4 partition



11630159
for-loop loops
Pattern(s): 0	
note you can do it with one for-loop
but personally i think the two loops version is clearer



11630356
cocos2d-x libgdx
Pattern(s): 1	
personally i dislike the cocos2d-x api
libgdx is much more low-level and allows you to completely decouple the rendering logic from your game logic



11662922
pthreads fork
Pattern(s): 1	
with various arguments clone can also have a fork 2 -like behavior
very few people directly use clone using the pthreads library is more portable



11665051
jslint jshint
Pattern(s): 1	
jslint is less helpful than it might be in my view by conflating substance issues with style issues although granted it s a fine line with javascript
you might consider using jshint a fork which gives you more control over what it checks



11692277
jung jgraph
Pattern(s): 0	
i ve created an application with this library instead of jgraph because i thought that jung is easier to learn than jgraph for newbies even if it provide less features



11709903
client-side server-side
Pattern(s): 0	
the code you provided is html which is on the client-side meaning that you wouldn t really process the text user s details there
i m sure that if you tell us what the server-side code is a lot more people will provide input



11760761
flask pyramid
Pattern(s): 0	
flask is lighter
also you can try pyramid



11760761
flask django
Pattern(s): 0	
but django is probably not the fastest solution
flask is lighter



11790179
google-chrome firefox
Pattern(s): 1	
the fact that you are using a different protocol is making firefox believe you are making a cross-site request
google-chrome i believe is less strict with this restriction when on local



11800714
factors matrix
Pattern(s): 1	
those three factors can be applied in the duotone matrix
the larger a factors is the more tinted the image will be with that colour



11830012
innodb myisam
Pattern(s): 1	
also restructure your tables to use innodb vs myisam
innodb works better with larger tables which are frequently read written



11832917
webclient webrequest
Pattern(s): 0	
for older framework version you can use either webclient which is really simple class for downloading uploading data or use httpwebrequest
webrequest is lower level but you can define method get post useragent etc



11890330
udp tcp
Pattern(s): 0	
tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable



12065223
lzo snappy
Pattern(s): 1	
normally - lzo is faster than gzip compression though gzip compression ratio normally be better
snappy is robust with compression but compression ratios are normally worse



12066854
yacc ocamllex
Pattern(s): 1	
a first advertisement minute instead of ocamlyacc you should consider using françois pottier s menhir which is like a yacc upgraded better in all aspects more readable grammars more powerful constructs easier to debug... while still very similar
it can of course be used in combination with ocamllex



12082396
udp tcp
Pattern(s): 0	
udp communication requires much less overhead than tcp due to the number of messages exchanged



12082945
inherited subclassing
Pattern(s): 1	
c++ inherited is also slightly more complicated than java inherited because multiple inherited is supported and as such virtual inherited is also an option



12124393
strlen strcmp
Pattern(s): 0	
strlen c1 is slower than s1.length
for comparisons strcmp c1 c2 has to compare several characters to determine the strings are not equal but can tell the lengths are not the same and return false immediately



12176555
udp tcp
Pattern(s): 1	
instead you add a listener which is tcp and a listener which is udp
imho udp is more useful if you use a broadcast or multi-cast address



12179503
requestfactory gwt-rpc
Pattern(s): 0	
more specifically requestfactory can update individual properties fields and can thus increase efficiency by sending the differences in state only
an important architectural difference is that gwt-rpc operates at a more functional level



12221360
move drag
Pattern(s): 0	
in the mousereleaseevent i check to see if the overall move was greater than at least a tiny amount



12230087
x86 64bit
Pattern(s): 0	
a x86 has not many registers
the 64bit version has more



12238312
pyenchant whoosh
Pattern(s): 0	
pyenchant
whoosh it does a lot more than spell checking but i think it has some edge on it.



12267081
int chars
Pattern(s): 0	
if you try to cast an int to chars obviously you ll loose upper three bytes
you can do so by if you are sure that your int is not longer than 1 byte



12315839
google-chrome safari
Pattern(s): 0	
i think it s a bug in google-chrome s svg rendering implementation
at least in firefox and safari it looks much better



12331307
for-loop loops
Pattern(s): 0	
one more option using for-loop
the only disadvantage is that loops for is slower then while or especially foreach



12335990
gridbaglayout boxlayout
Pattern(s): 0	
while gridbaglayout gives you finer control and lets you diverge from a standard grid for example to do what you might do with rowspan or colspan in html
boxlayout is useful for a single row or single column



12342238
typedef struct
Pattern(s): 0	
o your typedef above is creating a synonym for a student record struct so you can pass around student records without having to call them struct studentrecord every time
struct studentrecord makes for cleaner and more readable code



12349097
vmware virtualbox
Pattern(s): 1	
from my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performance



12369308
ocaml sml
Pattern(s): 1	
as far as type checking and inference goes ocaml is more expressive and intuitive than f#
sml would be closer than either of sml to a vanilla hm but sml also has a few extensions for some operator polymorphism and record support



12380215
avr microcontroller
Pattern(s): 0	
i don t know the criteria you chose the target processor on but consider using an avr 8-bit microcontroller if the project don t need the arm m3 32-bit processing power
avr is much easier and cheaper to start with especially for beginners



12416387
gif png
Pattern(s): 0	
one thing to note is that gif supports a smaller palette than png - only up to 256 colors



12416954
folder directory
Pattern(s): 0	
he key is to check the file dates in the tomcat directory of where you deployed the war
i noticed that even though i was deploying an entirely new cleaned war and deleting all folder there were still older cached files in there probably because eclipse keeps even though i was deploying an entirely new cleaned war and deleting all folder to save compile time thinking even though i was deploying an entirely new cleaned war and deleting all folder don t have any changes



12446158
entity-relationship diagram
Pattern(s): 0	
first entity-relationship modeling is more than just an erd
we tend to try to put the entire entity-relationship model on one diagram



12476575
srp principles
Pattern(s): 0	
code the violates the srp is harder to understand maintain and more difficult to test



12555504
lwjgl jogl
Pattern(s): 0	
i don t know how this would work using jogl
perhaps you should switch to lwjgl which has a much more reasonable java implementation of this function



12565598
uicollectionview uitableview
Pattern(s): 1	
a uicollectionview works very similar to a uitableview but gives you more control over how the cells should be displayed and aligned



12642808
comparator comparable
Pattern(s): 0	
you could also achieve your objective by implements a comparable in the class to sort but you can t as long as string is final so you cannot extends
therefore there is no other way than to implement a comparator which is simpler too



12645320
folder directory
Pattern(s): 0	
the new directory is shallower than the previous one



12682140
devise cancan
Pattern(s): 1	
devise is to control authentication this should not to be your responsibility
you want to control authorizations for that cancan is better



12707414
base fractions
Pattern(s): 0	
so you have pi written as a positional series where on each fractions position you have different base used n 2n+1 and all digits are equal to 2
it obviously converges as that base is less than 1 2 so to calculate pi up to n significant decimal dgits you need no more than log_2 10 n terms n 10 n 3+1 is perfect stuff



12716104
ramaze camping
Pattern(s): 0	
depending on the purpose of the exercise you might want to consider using a very simple web framework like camping sinatra or ramaze
this is probably the best solution if you re trying to get a top level understanding of web programming because it only has exactly what you need camping is less than 4k



12728529
getter setter
Pattern(s): 1	
if you use reflector to look at the implementation of control.visible its getter does this
however its setter is much more complicated



12760132
geocoding geocode
Pattern(s): 1	
 had originally used yahoo maps api to geocode a postcode and then use google maps for the map as google map s geocoding was woefully inaccurate
yahoo turned yahoo service off so i changed yahoo to the google local search version of geocoding which was more accurate at the time than google maps this was last year 2011



12767890
devise cancan
Pattern(s): 0	
you can use devise to authenticate the user and call authenticate_user in the controller to ensure only authenticated users can go to that page
you can also take a look at cancan which gives you more control like setting read write permissions



12778772
udp tcp
Pattern(s): 1	1	
udp is more suitable for streaming media
but if you are sensitive with your music streaming tcp is more secure



12785099
google-chrome safari
Pattern(s): 0	
google-chrome moves the transformation-center over the z-axis safari leaves this center were it was but moves the object itself over the z-axis
the object therefore is zoomed in safari and seems bigger



12792176
goto break
Pattern(s): 1	
as for your question your use of goto would make me uncomfortable
the only reason that break is less readable is your admittance to not being a strong c++ developer



12801051
for-loop arrays
Pattern(s): 0	
firstly you need to initialise your arrays after you know how big it is
secondly you will find a for-loop is easier than a do loops for implementing the logic as you don t need to keep track of loops counter manually



12819707
disk ram
Pattern(s): 0	
you told you have 670g free memory but that is hard disk space
the running program requires memory in ram and probably your ram memory is lower then what you require



12839544
strlen strstr
Pattern(s): 0	
you also ought to include and in frequence.c since you use strstr strlen and free
in frequence.c strlen is always greater or equal to zero so the comparison will always be true



12843259
atomic interlocked
Pattern(s): 1	
t s generally recommended to avoid volatile because it makes every atomic access to that variable volatile which may not be that big a deal on x86 x64 and kinda hides the fact that access to the variable is different
something like interlocked is generally more recommended because it explicitly details the thread-safety concerns on each use of the variable



12875016
newtype either
Pattern(s): 1	
the results were that the newtype was slightly faster for these
so the benchmark shows no substantial difference in either case and the overall outcome depends on the supplied arguments



12891191
lxml libxml2
Pattern(s): 1	
between lxml and beautifulsoup lxml is more equivalent to nokogiri
because it is based on libxml2 and it has xpath css support



12892837
macports homebrew
Pattern(s): 0	
removing macports is a good idea
homebrew has less problems integrating into os x



12909426
versioning upgrade
Pattern(s): 1	
yes they are different but you can hardly say that the vb.net versioning is less capable than the vb6 versioning
if you upgrade do the vb.net versioning fully and you will not regret the decision in the future



12953739
g++ gcc
Pattern(s): 1	
since there is only one compiler it is also accurate to call it gcc no matter what the language context
however the term g++ is more useful when the emphasis is on compiling c++ programs



12980797
for-loop loops
Pattern(s): 0	
if the order isn t important consider decrementing your for-loop towards 0
jquery s each loops is a bit slower than looping through the set yourself as well



12983538
for-loop loops
Pattern(s): 0	
a while loops makes more sense in this situation or a for-loop without initialization



12999399
ember.js backbone.js
Pattern(s): 0	
ember.js is larger than backbone.js but thanks to expires cache-control this only matters on the the first load



13032415
int double
Pattern(s): 0	
and since float is typically promoted to double with varargs calls if your int is smaller than your double this will break



13040735
french hebrew
Pattern(s): 1	
finding if a string is hebrew or english is very easy the characters are all different
finding if a string is english or french is harder because you need to figure out if words are english or french



13048327
multiplying multiplication
Pattern(s): 0	
if you want to add a to b before multiplying you ll need to use parentheses
that s because the multiplication oprator has higher precedence than addition



13079329
abstract-class superclass
Pattern(s): 0	
here an abstract-class makes more sense
some languages let you override superclass methods but that s kind of awkward in this scenario



13079329
subclass abstract-class
Pattern(s): 0	
however consider complex as being a subclass of number if number were not abstract the add method found in number assuming it s a real number addition algorithm would make no sense for complex numbers
here an abstract-class makes more sense



13102496
crypt md5
Pattern(s): 1	
note that you may also want to verify what encryption algorithm is actually used when you call crypt
md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash



13103282
typedef typename
Pattern(s): 1	
that branch with that lone typedef is a separate local scope that ends immediately after that if
this means that after your if typename internetconnect_ is no longer known



13112135
int chars
Pattern(s): 0	
reading an int is 32-bit into a chars buffer makes an int is 32-bit easier to access those four bytes in an int



13118389
qtableview qtablewidget
Pattern(s): 0	
qtableview is model based if you don t know what model is then i suggest you read here
use qtablewidget instead is much easier for a beginner and you can add a row just like this



13200688
for-loop arrays
Pattern(s): 0	
iterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loop



13239133
screens tablet
Pattern(s): 0	0	1	
this second resource will automatically be loaded if the screens is wider than 480dp
in portrait mode your phone screens is smaller than that so screen_is_narrow is true whereas in landscape mode and on tablet it is wider and thus screen_is_narrow becomes false



13241460
tcpdf fpdf
Pattern(s): 1	
fpdf is very lightweight and could be perfect for you if you are just echoing out variables
tcpdf is much more html- pdf in terms of syles and css features but the file size is a bit bigger



13247861
innodb myisam
Pattern(s): 1	
innodb is more suitable for data critical situations that require frequent inserts and updates
myisam on the other hand performs better with applications that don t quite depend on the data integrity and mostly just select and display the data



13255186
width height
Pattern(s): 1	
you just need to edit your css style and fix one measure in this case the width is better so your image will get scaled to fit that value
if you don t specify your height image will be resized and mantain scale accordingly



13340308
for-loop loops
Pattern(s): 0	
use a for-loop if you know the number of iterations in advance
if you do not and especially if loops termination depends on more than one variable a while loops will be much more readable



13405370
actionscript mxml
Pattern(s): 0	1	
doing the same tasks with actionscript statements means a lot more typing
the mxml code is more concise and that gives the mxml code a lot more clarity maintainability in my opinion



13435113
mathml mathjax
Pattern(s): 0	
additionally mathjax has better mathml support than webkit and you can always configure mathjax to use the native mathml support if you want -- say when you know your content should render fine in webkits native support



13482483
rvm bundler
Pattern(s): 1	
rvm is really more for personal use
for a system service i would just install the version of ruby you want someplace that doesn t conflict with the system version like usr local and use bundler in deployment mode to get the gemset



13503732
innodb myisam
Pattern(s): 0	
though innodb has many more tuning parameters and it s important to set some edge cases where myisam may still run faster well because the defaults are much too low for good performance



13509171
apache nginx
Pattern(s): 0	
apache mod_wsgi is still a more than acceptable solution and it will actually perform better with less resources when run as
nginx - apache mod_wsgi



13557296
postgresql mysql
Pattern(s): 1	
mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful



13558575
int double
Pattern(s): 0	
int values will be represented exactly as double numbers so long
as the absolute value of the int is less than 2 m the length of



13569169
folder directory
Pattern(s): 0	
basically you can set group owner and acl for the whole folder which is way better than setting everything to world writable on the host
i have not found any method to change the ownership of a nested directory



13579388
backbone.js javascriptmvc
Pattern(s): 0	
i ve had this kind of thing happen a lot with backbone.js too
javascriptmvc is a bit better for cleaning up after itself



13598917
children parent
Pattern(s): 0	
he width and height property of ti.ui.size force the object to have the width and height of it s children
once i began utilizing the layout property coupled with ti.ui.size ti.ui.fill takes the size of it s parent layouts became much easier hope this helps



13614390
dbcontext objectcontext
Pattern(s): 0	0	
actually dbcontext is just a layer on top of objectcontext
dbcontext api has much nicer smaller api and is easier to work with



13659093
integer unsigned
Pattern(s): 0	
ince the integer promotions are performed on the arguments of the shift operator the cast to uint16_t is not necessary if int is more than 16 bits wide but if int is exactly 16 bits wide the shift can lead to undefined behaviour because the value need not be representable as an int then so to be safe a cast is needed before the shift
if int is 16 bits wide uint16_t obtained from a cast will then be converted to an unsigned int - unless you have a perverse implementation where the width of unsigned int is smaller than that of int - otherwise to int but that s wide enough then



13661529
int chars
Pattern(s): 0	
first check the number of digits 32-bit unsigned int ranges between 0 to 4 294 967 295
if the number s string representation in decimal has more than 10 chars has more than 10 digits more than 10 chars already overflows



13662043
128bit 64bit
Pattern(s): 0	0	
128bit has more than 10 38 different keys
64bit has more than 10 19



13765985
trie tree
Pattern(s): 1	
what you re describeing is called trie
a compact radix tree is more compact



13781137
width height
Pattern(s): 0	0	
the x dimension of the width which gets a little smaller than the full width using the cosine
the x dimension of the height which gets a little higher than 0 using the sine



13792801
free malloc
Pattern(s): 1	
the most likely explanation is that there s a memory bug in your program writing to free memory buffer overrun etc
an outright bug in malloc is far less likely



13811326
int chars
Pattern(s): 0	
in many cases a more elaborate encoding scheme for int keys is a better choice
packing an int into its two-complement representation in a chars as suggested in another answer to this question is one option



13888402
boost allocator
Pattern(s): 0	
boost any internally holds a pointer to an object which it allocates with new
one of the things that makes std vector significantly faster than say std list is that vector keeps all of its objects in a contiguous storage in a single allocator which aside from the obvious reduction in memory allocator overhead is also a lot more cache-friendly



13929876
for-loop arrays
Pattern(s): 1	
traditional for-loop is faster than foreach + range
the first one only uses integer comparison and increasing while the last one has to create an possibly big arrays and then extract each element by moving the internal arrays cursor and checking whether the end is reached



13950440
innodb myisam
Pattern(s): 1	
normally you should use innodb
however for read-only tasks data mining myisam is more efficient



13960625
octal hex
Pattern(s): 0	
n all-true-bits byte 1111 1111 is 377 in octal but ff in hex
hex is easier for most people to convert to and from binary in most people heads since binary numbers are usually expressed in blocks of eight because that s the size of a byte and eight is exactly two hex digits but hex notation would have been clunky and misleading in dennis time implying the ability to address 16 bits



13971524
pop-up dialog
Pattern(s): 0	
in this case pop-up is much better solution
unlike dialog which acts as another page and is a another page pop-up is a part of a single page so i has a much better usability in server side generation



13975365
geocoding geocode
Pattern(s): 1	
geocoding api via rest is usually rate limited also due to legal reasons
you can use openstreetmap geocode which is less restricted and has a maintained cpan module geo coder many osm



13993552
post get
Pattern(s): 0	
the simple solution of configureawait false will cause everyone to forget about it which means that once in a blue moon your continuation could just get lost
i have a blog post that goes into more detail on this subject



14023079
strcat gets
Pattern(s): 1	
i m not sure strcat is much more efficient than printf is when used in this way



14028965
multiplying multiplication
Pattern(s): 0	
multiplying first is probably simpler than using floating point if you only want an integer result and if you know that the multiplication will never overflow



14032673
division modulo
Pattern(s): 1	
all we have to do is unconditionally add n and do another modulo
that s unlikely to be the best solution unless you have a computer where division is faster than branching



14056377
google-chrome firefox
Pattern(s): 0	
google-chrome has a few proprietary selectors to change some shadowdom elements but not all
firefox has even fewer as far as i know and opera has none



14071133
gruntjs browserify
Pattern(s): 0	
lso while it isn t minify related you can also concatenate your scripts with browserify using this gist
gruntjs also has a more straightfoward way of concatenating as well via gruntjs concat task



14102764
jwindow jdialog
Pattern(s): 0	
use undecorated jdialog instead of jwindow otherwise jtextcomponets aren t editable
jdialog has better support for alwaysontop and modalitytypes only hardcoded to the setalwaysontop



14113098
accessor ivar
Pattern(s): 0	
technically accessing the ivar directly is faster than using accessors but there are very few situations in which it will make a significant performance difference and would probably be a case of premature optimization



14119210
internationalization translation
Pattern(s): 1	
full internationalization is a bit more involved though - you need to take care of date formats and all
and then there is the part about actually providing the needed translation



14229076
pull push
Pattern(s): 1	
pull is suited to addressing the problem of configuration drift
for deployment on demand and potential rollback push is better



14231224
cublas thrust
Pattern(s): 0	
thrust inclusive_scan_by_key writes much more data to dram compared to thrust reduce_by_key which can be one of the reasons for longer kernel time



14280235
vbscript autoit
Pattern(s): 0	
this isn t possible in vbscript out-of-the-box because it doesn t provide access to windows apis used for window management
autoit seems a better tool for the job



14323861
gson jackson
Pattern(s): 1	
try the gson lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in we test



14325529
vert.x netty
Pattern(s): 1	
the client side is generally written in javascript but they have a number of servers written including two in java vert.x and netty
it looks like the vert.x implementation is a little more mature at this point in time



14326139
gruntjs yeoman
Pattern(s): 0	
t has a lot of options and can be difficult to use but it gets easier with a build tool like gruntjs or especially yeoman which uses gruntjs to build
in both you can use the rjs task which optimizes modules but again yeoman is a bit easier since yeoman has generators which will configure yeoman already for you



14336566
ienumerable ilist
Pattern(s): 1	
by ienumerable
therefore ilist is the more strict conversion and is therefore selected



14353636
range max
Pattern(s): 0	
as commenters have said using modulo to reduce the range of rand will not give you a good random distribution
also be sure to check that max is greater than 0 otherwise you will get an error



14373894
for-loop loops
Pattern(s): 0	
for your example the following is the for-loop equivalent in a single line of code
in this case however the while loops reads easier



14419674
disassembly shellcode
Pattern(s): 0	
o the cpu will call 0x402000 the beginning of our shell code at 0x402000 lets disassembly what ever at 0x402000
as you see a shellcode is nothing more than assembly instructions the only different is in the way you write these instructions a shellcode uses special techniques to make a shellcode more portable for example never use a fixed address



14445868
trie tree
Pattern(s): 0	
this is faster than the red-black tree by a factor of o log n which could potentially be significant for large collections
however the trie has worse locality since there is a lot more pointer-chasing involved and no contiguous arrays of characters to scan



14507745
processors hyperthreading
Pattern(s): 0	
in computer 1 the eigen3 performance is worse because the number of total processors virtual + physical - due to hyperthreading is greater than the number of physical processors



14509574
postgresql mysql
Pattern(s): 0	
for most platforms postgresql s just as easy to install as mysql but postgresql is a better database and postgresql s especially an improvement on mysql when postgresql comes to handling large amounts of data which you are doing



14519655
udp tcp
Pattern(s): 1	
this is why your client can communicate over tcp
but udp is more difficult to handle because it is connectionless and stateless



14531737
nsstring nsdata
Pattern(s): 0	
for example if your string includes an é nsstring represents it on one byte
but utf-8 requires two bytes so the nsdata uses more space



14559532
ember.js backbone.js
Pattern(s): 0	
from what i understand about ember.js which i haven t used yet it has a concept of adaptors which allow it to integrate with a variety of back-ends one exists for django + tastypie so it does a bit more of the work for you
there s also backbone.js which is a much lighter js application framework which can be made to integrate with tastypie very easily



14578193
disk ram
Pattern(s): 0	
this is usually a hard disk
basically a backing store some other device that ua usually slower than ram but is much bigger in capacity



14600703
entities entitymanager
Pattern(s): 0	
it means that entities fetched during transaction t1 are fetched in an entitymanager session that is bound with t1
once t1 is commited the entitymanager session is no more attached to any transaction since t1 is finished



14627362
awt swing
Pattern(s): 1	
awt is not mvc based
swing works faster



14627362
awt swing
Pattern(s): 0	
awt componentsare heavy weight
swing occupies less memory space



14627362
awt swing
Pattern(s): 0	0	
swing occupies less memory space
awt occupies more memory space



14628176
width border-box
Pattern(s): 0	
jeff kaufman has a good demonstration of how box-sizing works and why border-box makes more sense



14628176
height border-box
Pattern(s): 0	
jeff kaufman has a good demonstration of how box-sizing works and why border-box makes more sense



14637712
division subtract
Pattern(s): 0	
adding numbers together is relatively easy so is subtract
doing multiplication and division is a little harder



14646618
int chars
Pattern(s): 0	
since int is larger than chars this allows eof to be somewhere inside the space of numbers expressible as int while being outside the set of chars



14650943
int chars
Pattern(s): 0	
i simply want to be able to manipulate the innards of a chars in the same way as i can a int
in that case you don t even want a short you want an int which is even simpler



14661809
int chars
Pattern(s): 0	1	
the only case where using an unsigned can help in java is if you have a range of 0 - 65535 and you have a choice of either chars or int
in this case chars is smaller
note storing unsigned numbers in a chars is usually more confusing than useful however



14664193
glut glfw
Pattern(s): 1	
i would recomend moving away from glut and freeglut
glfw is much more modern and easier to understand



14681551
printf strdup
Pattern(s): 1	
f you want to return that string strdup it then you ll need to free the result of strdup later
ps printf is more dangerous than printf because ps printf could overflow the buffer



14686887
stdout stderr
Pattern(s): 1	
standard error or stderr
of the two stdout is used more often both by internal commands like copy and by console utilities or external commands like find and others as well as by third-party console programs



14709269
jboss glassfish
Pattern(s): 0	
even if jboss is the better product in my next project i will shift to glassfish because of the better documentation



14720991
mouseup mousedown
Pattern(s): 0	
 grant you that there may be times where you want to take action on a mousedown such as in dragging but it is the exception and when done properly the mouseup will be seen - except in some versions of ie when the mouseup will be lost if you drag the cursor off the page - to the top left or right
if you want to move things around and be able to see the mouseup the mouseup is far better to use divisions or such than things like links



14762655
nsformatter nsnumberformatter
Pattern(s): 0	
that is a member of the parent class nsformatter
nsnumberformatter has more specific methods that avoid confusion of object types like numberfromstring and stringfromnumber



14770156
versioning upgrade
Pattern(s): 0	
you are trying to connect to a sonar server which versioning is less than 3.4
if you upgrade your sonar server to lastest versioning 3.4.1 everything will be back to normal



14777718
int double
Pattern(s): 0	
there is an implicit conversion from int to double but not the other way around
hence the implicit conversion from b to int is considered better and wins



14779513
umbraco dotnetnuke
Pattern(s): 0	
if your a die hard programmer needing to integrate custom code - umbraco might be a better fit
if you want to leverage a larger community and add code to the base dotnetnuke is a better fit



14811689
activiti drools
Pattern(s): 0	
with activiti is easier
also you can integrate drools with activiti



14819855
subtract addition
Pattern(s): 0	
think of long division - you do a series of subtract - shift operations and you don t know what you need to do next until you have completed the previous part of the operation
for addition it is easier to see how you could achieve a complete operation in one cycle



14819855
division addition
Pattern(s): 0	
think of long division - you do a series of subtract - shift operations and you don t know what you need to do next until you have completed the previous part of the operation
for addition it is easier to see how you could achieve a complete operation in one cycle



14846908
innodb myisam
Pattern(s): 0	
innodb requires more attention to tuning configuration variables since the defaults are not exactly suitable for use by a production website



14871174
google-chrome firefox
Pattern(s): 0	
on google-chrome ie bitwise is slower
but on firefox logical is slower



14885351
addeventlistener onload
Pattern(s): 1	
if it s a simple self-contained piece of code that nobody else will be messing with then there s no issue with using onload
if it s a more complex piece of software that other developers may mess with and any kind of extensibility is desired and you have cross browser support for event listeners then addeventlistener is more flexible and is probably more desirable



14886668
sqoop hadoop
Pattern(s): 0	
sqoop 1 is older fully functional and mature project supporting hadoop 0.20 1.x 0.23 and 2.0.x you can download the bits from here



14955658
ant maven
Pattern(s): 1	
maven knows how to fetch the libraries and where to find the source classes on it s own
while ant gives you more flexibility it also forces you to constantly reinvent the wheel



14990231
int double
Pattern(s): 0	0	
this example is exactly the situation described in the second bullet so the function returning double is clearly better than the other two
here s where it gets weird by a very literal reading operator int is also better than the template specialization because of the third bullet



15023759
junit mockito
Pattern(s): 0	
use junit and mockito
mockito is much better than easymoc



15036991
onkeyup onblur
Pattern(s): 1	
sincerely i m not being able to tell you why but the problem is the dynamic value change on the input a guess would be that the change isn t performed by the user but i really don t know if you remove the code inside the onkeyup it will work
whatever if what you want is to execute some code when the input loses focus you can use onblur instead is more accurate in that case



15045871
pull push
Pattern(s): 1	
for comparison pull technology is the more traditional process of a client connecting to a server and requesting data
your best bet for apple ios will be using your best bet for apple ios push notification service



15072525
hash md5
Pattern(s): 1	
the security of the hash method is slightly less important for a key derivation function
it s probably best to choose one that matches the required key size although use of md5 in general should be discouraged



15086548
for-loop loops
Pattern(s): 1	
the semantics of a for-loop is to evalute the body for all elements you are iterating
since your goal is to stop after the first which satisfies a condition a while loops seems much more natural



15117503
x86 64bit
Pattern(s): 1	
over time newer x86 processors added more bits to the address lines and added virtual memory and added larger words
so a 32-bit data item was called a double word and a 64bit data item became known as a quad word and then sse came along and we had 128-bit octaword or double quadword here s a table of data sizes



15122181
ant maven
Pattern(s): 0	
ant uses build.xml files to define where to find the source code and which steps to take to build your project
maven is more than just a build tool it is a project management tool



15220223
d3.js raphael
Pattern(s): 1	1	
raphael will help you draw elements
d3.js is more comprehensive and will help you bind data to elements
so i d say d3.js is more powerful



15222464
d3.js raphael
Pattern(s): 0	
n the other hand normally d3.js visualizations need less mathematics than the similar processing or raphael examples because there are many prepackaged layouts already
i would say normally d3.js is the better choice for an obvious reason d3.js is based on the current web standards stack html dom - even if you hate normally d3.js you need to use normally d3.js css svg even canvas and is a library for working with data



15242168
wordpress joomla
Pattern(s): 0	
if that will solved later than wordpress menu is better than joomla



15262701
mouse keyboard
Pattern(s): 1	
then update this current object reference during appropriate mouse event methods
now you can use this current object in your keyboard interactions set up earlier



15262835
width margin
Pattern(s): 0	
to make sure the margins shrink before the content use a fixed pixel width for the content and margin 0 auto
and when the pixel width is wider than the screen make that width smaller



15279160
maven pom.xml
Pattern(s): 0	
maven is the paramount of a method of defining your build using a formal grammar in a standard manner
your pom.xml file contains a lot more than just your build it is the identity of your artifacts the project metadata the modules and the plugins brought in



15291802
width height
Pattern(s): 0	
specifically the height must be at
least 120px and if the width is less than 100px then the aspect



15339895
post get
Pattern(s): 1	
if you want to retrieve a lot of data using a url advice rethink if there might be a better option then it s necessary to use post from wikipedia
there are times when http get is less suitable even for data retrieval



15421342
webkit gecko
Pattern(s): 0	
webkit .net is a wrapper for the webkit engine used by google-chrome and apple safari
geckofx is a wrapper for the gecko rendering engine used by mozilla firefox



15455987
screens mdpi
Pattern(s): 1	
regarding the ldpi-icon issue i guess the nexus 10 and only relevant for the launcher icon not the screens density in general that s still xhdpi are simply becoming less relevant as fewer and fewer devices are sold with a ldpi-density and downscaling from mdpi is probably more cost-effective than having an extra image-file in your resources folder



15497433
d3.js raphael
Pattern(s): 0	
you may order the svg elements such that the circles will be rendered first the lines with arrows thereafter in d3.js there is a .order method see here for details
for the record the corrsponding part of the raphael api is discussed here



15531878
int chars
Pattern(s): 0	
a longer string of int is larger otherwise compare chars in order



15535029
filtering grouping
Pattern(s): 0	
a filtering will return only those grouping where the sum of othervalue of the rows in this grouping is greater than zero



15609235
innodb myisam
Pattern(s): 1	
he speed comes with a price though myisam does not support transactions or foreign keys
this means this is optimal for example for saving and analyzing log data and as a backend for data mining and data warehouse technologies while innodb is better for transaction processing and as the storage layer of information systems in general



15635368
inherited subclassing
Pattern(s): 1	
it is elegant and honors basic inherited contracts between superclass and subclassing
even in your original post the subclassing is actually more restrictive than the superclass so doing something like



15659693
strlen strcpy
Pattern(s): 1	
since is a string use strlen
by the way you could also use strcpy which is more suitable for strings



15676683
salt md5
Pattern(s): 0	
an unsalted md5 hash is not much safer than storing



15710193
division addition
Pattern(s): 1	
for multiplication the technique described at is a reasonably easy thing to implement and is better than serial addition
division is more complex in general but a good place to start is



15710193
division multiplication
Pattern(s): 1	
for multiplication the technique described at is a reasonably easy thing to implement and is better than serial addition
division is more complex in general but a good place to start is



15716516
reportlab pycairo
Pattern(s): 1	
there is also reportlab but that s more for generating pdf files
if you have the cairo library installed on your system pycairo is a less heavyweight option to generate pdf documents



15723245
webclient httpwebrequest
Pattern(s): 1	
i recently just finished a web app using asp.net mvc 4.0 and i ran into some limitations while using webclient instead i opted for httpwebrequest which gave me more options to fine tune my requests



15732823
hash md5
Pattern(s): 0	
an md5 hash is twice as fast
the chance of a collision two different text producing the same hash value is somewhat greater though



15733433
bindparam bindvalue
Pattern(s): 1	
if you don t know if you need bindvalue or bindparam go for the former
bindvalue is less ambiguous and has lesser side effects



15770527
heroku openshift
Pattern(s): 1	
having used both i can tell you that an alternative s a much more polished platform the servers are about 4 faster you can run as many apps as you want and the heroku toolbelt is much more powerful than the openshift s client tools



15780337
division exponent
Pattern(s): 0	
note here that the n 2 in your code actually is n-1 2 for odd n since integer division rounds down automatically
this recursion terminates since the exponent grows smaller with each step



15868809
jquery tooltipster
Pattern(s): 0	
however lately i ve been using tooltipster instead because qtip2 integration with jquery validate is somewhat cleaner



15955572
strtol atoi
Pattern(s): 1	
o convert from a string to an int you need to use atoi or better strtol
strtol is better because it does not result in undefined behaviour if the input string is not convertable to a number and it allows you to detect cases like 42xyz and react correctly



15961408
verilog vhdl
Pattern(s): 1	0	
at texas instruments verilog was more popular
my experience is that designers can use whichever designers prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl



15967940
cpu processors
Pattern(s): 0	
your cpu doesn t support the rdtscp instruction
the rdtscp instruction s a core i7 instruction and your processors is an earlier generation merom-l



16031002
int double
Pattern(s): 0	
if you want to map the range -128 to 127 to 0 to 255 i suggest you use an int which is easier to work with in java
as you have 32-bit or 64-bit registers using a short local variable doesn t help you as much as you might think unless you have a lot of t and i mean millions btw the byte code only allows for two sizes of local variables one slot boolean byte short float int reference and two slot long and double note reference uses one slot even on 64-bit jvms



16031002
int boolean
Pattern(s): 0	
if you want to map the range -128 to 127 to 0 to 255 i suggest you use an int which is easier to work with in java
as you have 32-bit or 64-bit registers using a short local variable doesn t help you as much as you might think unless you have a lot of t and i mean millions btw the byte code only allows for two sizes of local variables one slot boolean byte short float int reference and two slot long and double note reference uses one slot even on 64-bit jvms



16085970
for-loop arrays
Pattern(s): 1	
if you want to use a while loops you need to pre-declare an arrays containing and which by the way are a bad choice for variable names
having said that a for-loop construct is the more natural choice here



16085970
for-loop loops
Pattern(s): 1	
if you want to use a while loops you need to pre-declare an arrays containing and which by the way are a bad choice for variable names
having said that a for-loop construct is the more natural choice here



16136954
google-chrome firefox
Pattern(s): 0	
it is supported on ios safari google-chrome and some latest version of opera..
it s not yet adopted by ie and firefox that s it......what more one can ask than local db on browser which has relational db system...so u can query it easily and handle complex data....which is very tougher in key vale based systems



16146593
salt md5
Pattern(s): 0	
that is when the user creates a new account and enters a password you build a string from the password plus user name plus a salt which is just a small string that s the same for everyone on your site--this is to thwart rainbow table attacks
then you run that string through a good hash algorithm--something like sha1 is fine even md5 is more than adequate despite reports to the contrary



16164311
for-loop arrays
Pattern(s): 1	
the longer the arrays gets the more iterations your for-loop will need



16269242
lxml html5lib
Pattern(s): 1	
try installing lxml which is more lenient and much faster
if that doesn t work html5lib is your best bet as that doesn t work html5lib s the most lenient but also the slowest



16279245
typedef struct
Pattern(s): 0	0	
one camp most notably the linux kernel people thinks that struct a is clearer than the typedef
the other camp pretty much everyone except the linux people thinks that typedef is clearer



16398609
quicksort mergesort
Pattern(s): 1	
note this may reduce memory usage if you have a really large dataset it is actually used to handle such situations but may perform worse than raw quicksort beacause of the split cost which becomes linear if you copy over the subarrays and the multithreading overhead
consider that inplace mergesort is more space-efficient when applied to large arrays



16410555
google-chrome firefox
Pattern(s): 1	
it appears in newer versions of google-chrome this is no longer an issue
i have not tested firefox recently



16431843
getter setter
Pattern(s): 0	
generally getter are not doing any alloc or init for you
your setter is a little closer and i assume this was for a property declared as retain



16464988
iprincipal iidentity
Pattern(s): 1	
hen register a method with ninject that a method can call to resolve an iidentity for any component that requires a method
you may decide that injecting an iprincipal is more useful as you can get information about user roles with an iprincipal too



16524702
cypher gremlin
Pattern(s): 0	
aveat when you start reading you may encounter with gremlin which is a common graph query language supported by neo4j
is quite awkward and very different from cypher so if you are going with neo4j you should stick to cypher neo4j has more features and most of the development is made against neo4j



16527055
udp tcp
Pattern(s): 0	
if you couldn t care less if a packet or two are lost then udp may be a viable solution
less control than tcp means a lighter protocol but you re never sure that the data reached the other side unless you implement your own control



16559648
equals compareto
Pattern(s): 0	
looking at the implementation of equals and compareto in java.lang.string on grepcode we can easily see that equals is better if we are just concerned with the equality of two strings



16561209
integer unsigned
Pattern(s): 0	
using unsigned integers is generally better if you do not need to hold negative values



16594231
ant maven
Pattern(s): 1	
ant build.xml
for maven it is much more complex



16594411
quicksort mergesort
Pattern(s): 1	
quicksort and heapsort are both normally considered in-place and heapsort can be implemented with o 1 extra space i was mistaken about this earlier
mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal



16647668
m2e pom.xml
Pattern(s): 0	
in my case i had build some custom hamcrest matchers but the hamcrest dependencies in my pom.xml were set as removing this scope restriction fixed my bug
seems like m2e still needs more work



16675812
for-loop loops
Pattern(s): 1	
you nested for-loop is more likely to cause the performance problem than the jquery selector
you could alsochange loops to



16695135
swt swing
Pattern(s): 0	
also swt is actually newer and more actively maintained than swing



16737168
hammer.js fastclick.js
Pattern(s): 1	
hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer



16743563
crypt salt
Pattern(s): 0	
heck-out crypt as well
using a salt is always good because a salt makes a salt harder to find the original password reverse engineer



16754894
gilead dozer
Pattern(s): 0	
using gilead is a cleaner approach no need for all this dto code but dtos are more ligtweight and thus produce less traffic through the wire
anyhow there is also dozer that will generate the dtos for you so there will not be much need for yo to actually write the code



16781119
awt swing
Pattern(s): 1	
swing is generally more configurable and flexible to use
you should avoid mixing awt and swing components within the same ui ui tend not to play well together



16810355
awt swing
Pattern(s): 0	0	
awt is a thin layer of code on top of the os whereas swing is much larger
swing also has very much richer functionality



16823769
width height
Pattern(s): 1	
width is easy canvas s context has a built in metric for measuring text width
height is more difficult because measuretext doesn t compute height



16836589
3des aes
Pattern(s): 0	
note that the security margin of 3des is even lower
aes on the other hand can be used with 128 192 and 256 bits all of which are used



16853235
uiview subviews
Pattern(s): 0	
i think your problem is the size of the very root uiview the superview of the uiview you talk about of your views
when a certain subviews is larger than a certain subviews superview a certain subviews will not receive touch events in this portions of a certain subviews s frame that go outside of the superview frame



16950152
firefox safari
Pattern(s): 1	
you have few errors in html code marked with stars open site in firefox view source and you will get better picture in that part of page
i guess that safari is more sensitive to these errors than other browsers



16979279
union distinct
Pattern(s): 1	
i changed union to union all because union implies a distinct
i don t think that s what you want or even need union all is also faster because it doesn t have to check if there are duplicate rows



17014858
firefox safari
Pattern(s): 1	
make sure that the syntax for background-position is absolutely correct otherwise safari will not be able to figure it out
firefox was a bit more forgiving



17018327
uitableview uipickerview
Pattern(s): 1	
a uitableview is more suited to displaying a large number of choices
similar to above use a uipickerview inside a pop over



17024479
junit testng
Pattern(s): 0	
all of which junit needs or does poorly
testng even has better reporting please google for reportng or my fav testng-xlst



17058770
for-loop arrays
Pattern(s): 0	
if you don t need i for anything else than extracting the element then the enhanced for-loop looks a bit nicer
if you are using i for both accessing the arrays and something else then i would argue way 1 is best



17084059
inherited subclassing
Pattern(s): 1	
your subclassing becomes more specialized and less generalized as you move down the inherited hierarchy



17084059
superclass subclassing
Pattern(s): 1	
our superclass is a generalized class but your subclassing will be a specialized inheritor of your superclass
your subclassing becomes more specialized and less generalized as you move down the inherited hierarchy



17118318
memcached apc
Pattern(s): 1	
apc is faster on a single server - but memcached is distributed



17126971
setinterval settimeout
Pattern(s): 0	0	
setinterval is actually evil if the code inside setinterval takes longer than the time you have set setinterval will create another process before the function finishes messing everything up
so choosing settimeout is actually better



17138836
multiplying add
Pattern(s): 0	
multiplying is a little slower than + but makes little difference in this case
add a loop3 which does exactly the same number of operations as loop2 but over a small memory range using with a 2 n -1 value to restrict the range



17157022
wav riff
Pattern(s): 1	
if you open a wav file in your hex editing program you ll see that the first four bytes are riff --this is a marker often called a magic number even though it is readable as text indicating that the contents are an audio file



17173089
int chars
Pattern(s): 1	1	
procedure setposition line word chars int
property lowerpointer int read fcoredata.lowerpointer write fcoredata.lowerpointer
property higherpointer int read fcoredata.higherpointer write fcoredata.higherpointer



17173577
int chars
Pattern(s): 1	
f i saw a loop iterating over a short or a chars i d spend a bit of time to figure out why
an int is more intuitive because an int s the most used type for iteration even more used that iterator or size_t



17190680
int double
Pattern(s): 0	
on glibc 2.21 it is an int
the manual says that using double is a better idea



17197973
dbcontext objectcontext
Pattern(s): 0	
the dbcontext is a smaller api exposing the most commonly used
features of the objectcontext



17201044
width height
Pattern(s): 0	0	
the percentage change in viewport width is less than 1
the percentage change in viewport height is greater than 35



17213705
projectile angle
Pattern(s): 0	
then you should use the law of cosines with the sai angle
it will yield a quadratic equation with variable t that is easy to solve no solutions your projectile is slower than asteroid



17225303
lodash underscore.js
Pattern(s): 0	
therefore in my app backbone doesn t know if it is underscore.js or lodash as long as i am passing _ using amd
i started to use lodash just because i read lodash has better performance



17306689
int double
Pattern(s): 0	
except that double is much better than int for storing the join_angle in radians



17315027
pdfsharp itextsharp
Pattern(s): 0	
i have been able to achieve this using another library pdfsharp
it is somewhat similar to how itextsharp works except for some places where in itextsharp is better and easier to use



17332674
symfony lithium
Pattern(s): 0	
thers to consider are lithium and laravel
the userbase on symfony is larger than others to consider but others to consider re all pretty much solid



17340057
wadl wsdl
Pattern(s): 0	
like the rest of rest wadl is lightweight easier to understand and easier to write than wsdl



17415822
post get
Pattern(s): 1	
to post something to a servlet using http post dopost is a better option
get doget is to get a resource



17438412
int double
Pattern(s): 1	
if you were to use an int on an older 8086 or on a 16 bit processor microcontroller an int might be 16 bits
a double is a little more standard



17516253
postgresql mysql
Pattern(s): 1	0	1	
postgresql is a more mature database postgresql has a longer history postgresql is more ansi sql compliant postgresql query optimizer is significantly better
mysql has different storage engines like myisam innodb in-memory all of them are incompatible in a sense that an sql query which runs on one engine may produce a syntax error when executed on another engine



17635225
innodb myisam
Pattern(s): 1	
myisam is old technology
innodb is the more modern engine



17640850
qapplication qdialog
Pattern(s): 1	
in qt5 qapplication is no longer part of qtgui module qt5 qapplication s now in qtwidgets
in your #include directive use the same applies to qdialog



17660990
addeventlistener onmouseup
Pattern(s): 1	
as far as i know and this might be wrong - which doesn t help you with your dispute the addeventlistener method is more efficient - if so slightly as to make no difference at all
this is because the onmouseup inline method is merely a shortcut to addeventlistener



17712283
addition multiplication
Pattern(s): 0	
with addition of results there is possibility of 2 different objects return same hashcode
whereas with multiplication there is very less chance to have duplicate hashcodes for different object



17718956
coalesce isnull
Pattern(s): 0	
in such cases coalesce is better choice
below is an example showing the difference between isnull and coalesce



17738380
accessor properties
Pattern(s): 0	
after looking around for answer i ve found a solution along with the expose annotation the jms serializer comes with another annotation for just that purpose accessor
yes a dummy properties is still required but you can make a dummy properties private and a dummy properties is much better than the method i tried before



17739225
for-loop loops
Pattern(s): 1	
a while loops shouldn t be used here
a for-loop is better



17771927
minimum max
Pattern(s): 1	
to determine if all the names are the same i like to compare the minimum to the maximum
calculating the min and max is generally more efficient than a count distinct



17791071
versioning upgrade
Pattern(s): 1	
there is an upgrade tutorial which may be useful to you
after you have a running v4.x of typo3 on your server you may want to use the 4.5lts or the latest 6.1 but upgrading to those versioning is less complicated if you already have a 4.x running



17841465
for-loop loops
Pattern(s): 1	
i guess if i had to write this correctly with a for-loop i might use something like this
though i d be more likely to use a while loops which is more semantically correct



17897762
asterisk freeswitch
Pattern(s): 1	
omparing to asterisk i would advise to start every greenfield project with freeswitch and use asterisk only if there s already a working system and trained personnel
many things are much easier to implement in freeswitch and freeswitch configuration is much more structured and easy to troubleshoot



17898429
udp tcp
Pattern(s): 1	
my conclusion is that iphone powers down the antennae which severely affects udp
tcp is better because the phone knows of the open connection and is faster to power up



17918438
width height
Pattern(s): 0	
on the horizontal axis this is as simple as making sure that mouse position x + the width of the popup is not greater than the width of the parent container
on the vertical axis you want to make sure that mouse position y + the popup height is not greater than the parent container height



17942172
beanstalk amazon-web-services
Pattern(s): 0	
there are such services as elastic beanstalk that offers you different servers including tomcat amazon relational database service that offers you oracle database as well as other rdmses and amazon elastic compute cloud that enable you install jboss as yourself even if beanstalk with tomcat doesn t work for you
it looks like amazon-web-services is cheaper than openshift but as for me ec2 is still expensive



17965429
mapr cloudera
Pattern(s): 0	
being the first one cloudera definitely has an extra edge in terms of experience and a solid customer base
but mapr has gone more innovative in terms of significant changes to the mapreduce and hdfs components to improve performance



18009486
profiler visualvm
Pattern(s): 0	0	
i suggest you try increasing your maximum to just under half your main memory and attach a profiler visualvm is better than nothing and see if where objects are being retained



18050184
scala typesafe
Pattern(s): 0	
typesafe is working toward removing the 22 limit from tuples and functions and doing this is necessary for scala and once this is done slick will no longer have problem with 22+ column tables
since the issue must be fixed in scala it makes more sense to do this than create a new orm and work with the community to adopt it



18055600
sorting grouping
Pattern(s): 0	
 similar approach would be to to simply concatenate the arrays to strings banana banana-shake so that you didn t need a custom compare function any more and then split them after sorting to get back the original values
however your grouping method is superior to these approaches as your grouping method requires much less comparisons



18066670
int double
Pattern(s): 0	
if you must use binary floating point double is usually a better choice than float unless you are dealing with a lot of numbers and know float has enough precision



18177157
urwid ncurses
Pattern(s): 1	
urwid offers more complex gui widgets for the discerning terminal gui developer
you can t use the ncurses module on windows unfortunately



18244754
octal hex
Pattern(s): 1	
hex is much more compact when scaling to larger masks



18303534
drawimage putimagedata
Pattern(s): 1	
if you get curious and discover the putimagedata function in the canvas 2d api please note that drawimage is much faster which might be unintuitive



18303913
screens mdpi
Pattern(s): 0	
in this case android will pick the images from the appropriate folder drawable-mdpi depending on the device s screens density but the actual dpi value encoded inside the image file is still irrelevant
images in these different folders should have different physical pixel sizes mdpi has smaller images than hdpi but the images pixel densities aren t used



18381551
filesystems xfs
Pattern(s): 0	0	
switching to an xfs filesystems gives a much larger max file size and the core dump completes up to 16tb



18398991
passenger unicorn
Pattern(s): 1	
passenger is not as stable as most people think
a nginx + unicorn is more stable imho



18402025
magma openblas
Pattern(s): 0	
below are the results from a benchmark using a nvidia geforce gtx 675mx gpu with 960 cuda cores and openblas
seems like as if magma is a bit slower compared to culatools in this example



18420717
maven pom.xml
Pattern(s): 0	
using maven makes life easier in such cases
opening the pom.xml in ide like eclipse sts will give you a better picture like following -



18422435
srp principles
Pattern(s): 1	
solid is interesting because single responsibility principles is often at odds with don t repeat yourself and you have to come up with a balance
in most cases dry loses because srp is far more important



18424464
typedef struct
Pattern(s): 0	
why a typedef struct
to use a struct is better than use individual variables



18430312
fgets getline
Pattern(s): 0	
edit if you really want to use getline here s a version of your original program that ll work
but allocating your own memory and using fgets is better there s no call for using non-standard extensions when there s a perfectly good standard way of doing it even if you re using a third-party library like ncurses to begin with



18436657
vim gedit
Pattern(s): 0	
if you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being gedit



18448499
for-loop loops
Pattern(s): 0	
here is a working example that prints the file names for the currently active message s attachments to the immediate window using each type of for-loop
as you can see the for each loops is far simpler



18454981
quicksort heapsort
Pattern(s): 0	0	
in short - if all we care about are comparisons heapsort is a better choice than quicksort
but since memory systems use caches and cache misses are expensive quicksort is usually a much better option



18552018
int double
Pattern(s): 0	
the range of exact representation of integers by the double type is wider since the value occupies 64 bits and there are 53 bits reserved for the mantissa



18573852
nsurlconnection nsjsonserialization
Pattern(s): 1	
now once you have verified that the web service is working mapping the curl command to a corresponding nsurlconnection request is more than simple
you should use nsjsonserialization to create the json from a dictionary and serialize the json to a nsdata object to a json text



18612298
bindparam bindvalue
Pattern(s): 1	
if you don t know if you need bindvalue or bindparam go for the former
bindvalue is less ambiguous and has lesser side effects



18636154
d3.js sigma.js
Pattern(s): 0	
d3.js is a full on toolbox for visualization
since i only want to draw graphs the concise sigma.js interface was easier to work with



18638814
versioning upgrade
Pattern(s): 0	
upgrade your system or find a way to add the updated package to your package manager
if your package versioning is larger than 1.40 you should be reasonably safe unless there was some awkward backwards-incompatible change



18697383
sse avx
Pattern(s): 1	
now for sse is clearly faster and for the smaller values it s nearlly as fast as avx



18799962
glasspane mouselistener
Pattern(s): 0	
glasspane only added more troubles to me because i could not scroll jscrollpane which is under glasspane and redispatching mouse event suggested in glasspane swing tutorial did not help at all because mouselistener on glasspane did not receive mousedragged



18856869
google-chrome firefox
Pattern(s): 0	
in google-chrome you can supply none or only one parameter to addeventlistener and no errors will be reported
however firefox is stricter and will spit out the not enough arguments error



18950039
memcpy memmove
Pattern(s): 0	
libc s memcpy is likely to be much better optimized using larger-than-byte units platform-specific performance tricks example inline assembly sse on x86 etc
there s also memmove which has better specified behavior when the buffers overlap



18951075
google-chrome firefox
Pattern(s): 0	
alas there is still no really neat way to do this in google-chrome
firefox has more options.



18954610
post get
Pattern(s): 0	
one more thing some guys would misunderstand that post is safer than get as user can not see the sent data



18984246
int chars
Pattern(s): 0	
you can do that by casting the int to a chars
if the int is more than 2 16 you ll need to deal with surrogate pairs



19017369
for-loop loops
Pattern(s): 0	
a for-loop in your case would look like this
this isn t terrible either but i think the while loops is clearer



19101174
parsley cairngorm
Pattern(s): 0	
swiz robotlegs puremvc parsley and mate are some
cairngorm is an older one and has fallen out of favor due to cairngorm perceived complexity



19106889
quicksort mergesort
Pattern(s): 1	
quicksort this is a bit tricky to implement efficiently with lists but it is possible
i won t discuss it because it s not a good early programming project and mergesort is faster in many cases



19191003
min max
Pattern(s): 0	
the difference with min is that you need to start with big value
where max is a constant bigger than possible value of any element



19261219
int chars
Pattern(s): 0	
the reason why read returns an int is to have one extra value to represent eof
all the values of chars are already defined to mean something else so a chars uses a larger type to get more values



19274392
int chars
Pattern(s): 0	0	0	0	
long long int is greater than long int which is greater than int which is greater than short int which is greater than signed chars



19306349
getter setter
Pattern(s): 1	
the setter is a little more complicated
the getter first checks whether the backing field already has the correct value



19316364
innodb myisam
Pattern(s): 0	
i can t find the timeout setting for myisam right now - it s set in mysqld.conf for innodb
as others have said - innodb is a better engine if you need transaction support



19336152
awt swing
Pattern(s): 0	
that is an old approach when using awt
swing has better api s



19355167
opera firefox
Pattern(s): 0	
basically safari google-chrome opera is used in mobile devices and device features works fine with these
firefox browser is not a better option for mobile devices



19355167
google-chrome firefox
Pattern(s): 0	
basically safari google-chrome opera is used in mobile devices and device features works fine with these
firefox browser is not a better option for mobile devices



19357899
lxml beautifulsoup
Pattern(s): 1	
lxml is more strict and simply raises an exception if the html is malformed
in contrast to the multitude of functions provided by the beautifulsoup api lxml mainly uses the xpath mini-language for navigation



19388029
range max
Pattern(s): 0	
to start off get the range of the two date series for our purposes column 1 is revenue and column 2 is traffic
for each series get the max value of the series or 1 if the max is less than or equal to 0



19408142
integer unsigned
Pattern(s): 0	
32-bit integers hold up to 4 billion and some unsigned and only 2 billion and some signed
the number you are converting to an integer is much larger than that



19429156
google-chrome firefox
Pattern(s): 0	0	
second issue is that the reason buttons and divs are different sizes in firefox and google-chrome is only because of the text size
firefox makes slightly bigger text size
for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does



19466905
apache nginx
Pattern(s): 0	
there are ways to improve apache efficiency by coalescing all your rules into a single htaccess or through the use of location blocks in the config
nginx is slightly safer due to packing less stuff that is built-in and requiring cgi processes for almost every mundane task however



19483659
maven m2e
Pattern(s): 0	
i don t understand where many ide using in back end build tools why spring source or other framework forcing us to use maven again i thinks instead of using maven it is better to build plugins to sts for configure and download jars automatically for bootstrapping project
the maven structure and m2e really annoy me .it is just dependency inside another dependency



19597931
pthreads usleep
Pattern(s): 1	
i said theoretically because pthreads is a million implementations of the same idea and then there s windows to consider i m not experienced enough with windows to provide sound advice but you shouldn t rely on it s behaviour whatever .
the usleep function is more suitable for threads



19711483
leaflet openlayers
Pattern(s): 0	
openlayers and leaflet both do the job well
leaflet though is a bit easier to grasp if your new to the topic



19719152
udp tcp
Pattern(s): 1	
a small udp packet with a server s current usage level isn t going to bring down a network even one that s already busy
tcp is better at doing that due to lost packets causing retransmits thus creating even more traffic but even then this is won t be a problem for a couple of reasons



19753288
keydown keyup
Pattern(s): 1	
keydown will be triggered when key is pressed and keyup will be triggered after pressing the key
in your case keyup is more suitable



19754809
google-chrome firefox
Pattern(s): 1	
firefox encodes more characters than google-chrome



19808270
puma unicorn
Pattern(s): 0	
unicorn ruby web server uses less resources than unicorn but has more requirements to your code unicorn ruby web server better be thread-safe because puma is a threaded server



19809144
xpc smjobbless
Pattern(s): 0	
the evenbetterauthorizationsample is what you should be aiming for but it s quite involved if you re coming to it for the first time especially as it uses xpc communication between the application and its helper
smjobbless is a simpler example that can help you get started and understand the concepts for creating a separate helper application



19839452
children parent
Pattern(s): 1	
each child has a simple task as befits children
the parent has a more complex task mainly ensuring that exactly the right number of file descriptors are closed



19872867
i2c spi
Pattern(s): 0	
if there are a lot of them and the required data rate is low again i2c makes more sense
spi is almost always simpler to use so that s a plus if there s not too many devices



19872867
i2c spi
Pattern(s): 0	
spi is almost always simpler to use so that s a plus if there s not too many devices
i2c uses fewer pins



19890724
versioning upgrade
Pattern(s): 1	
now i understand that 8.3 is a big upgrade it is the only one that caused us issues in ledgersmb
you may need some time to address that but the alternative is to get further behind and be asking questions on a versioning that is less and less in current understanding as time goes on



19961442
xslt xquery
Pattern(s): 1	1	
but typically xslt is better for transforming xml into different xml formats on disk
xquery is better for more complex xml queries applications and when the xml is in a database



19973015
coalesce nvl
Pattern(s): 0	
p.s. don t use nvl
it has a lot of potential pitfalls coalesce is safer



19982505
lisp scheme
Pattern(s): 0	
this macro will make a global defun that works as in common lisp
define in scheme has more hats than defun mostly because of the one-namespace nature of scheme



19985007
width margin
Pattern(s): 0	
ox-sizing border-box sets the height width of an element and takes into consideration the padding as well as the border width
the scope of an element s margin is greater than the element itself meaning the element itself modifies the flow of the page and the element itself surrounding elements therefore directly altering the way the element fits within the element itself parent relative to the element itself sibling elements



19985007
margin height
Pattern(s): 0	
ox-sizing border-box sets the height width of an element and takes into consideration the padding as well as the border width
the scope of an element s margin is greater than the element itself meaning the element itself modifies the flow of the page and the element itself surrounding elements therefore directly altering the way the element fits within the element itself parent relative to the element itself sibling elements



19985007
margin border-box
Pattern(s): 0	
ox-sizing border-box sets the height width of an element and takes into consideration the padding as well as the border width
the scope of an element s margin is greater than the element itself meaning the element itself modifies the flow of the page and the element itself surrounding elements therefore directly altering the way the element fits within the element itself parent relative to the element itself sibling elements



20048625
width border-box
Pattern(s): 0	
you have set a width of 50 and an additional padding and border - these add up to a total width which is greater than 50
by applying box-sizing border-box



20061963
post put
Pattern(s): 1	
consider html forms you post with application x-www-urlencoded-form and get returns text html
with get and put it is more likely that the media-types are symmetric however that is not a hard rule



20081969
inline inlining
Pattern(s): 1	
the fact that the array pointer could be kept in a register when the method was inline was probably more significant
so the conclusion is that the big difference you re seeing is because of inlining



20155301
width height
Pattern(s): 1	
if the thumb text width is less that the height of the track the thumb shape will be scaled down



20167596
google-chrome firefox
Pattern(s): 1	
google-chrome is just more forgiving for some mistakes then firefox



20294982
integer unsigned
Pattern(s): 0	
integer tokens in c always have a positive value so in your example 0xfc7f is bigger than 0x7fff and does definitively not fit into an int16_t
the first fit rule for hex constants implies that it has a type that is either unsigned or has more than 16 bit



20395213
ssl https
Pattern(s): 0	
in many sites you authenticate yourself over ssl https
however supporting ssl connection has higher cost than normal http



20500913
xrange enumerate
Pattern(s): 1	
or use xrange len letters to generate sequence of indices
but enumerate is more concise and faster



20505399
int chars
Pattern(s): 0	
thus when you use the operator + only with objects of type chars which is smaller than int these values are automatically converted to int before the operation happens



20542163
tostring string.format
Pattern(s): 1	
changing his code for string.format to use iformatprovider
change everything again without tostring is faster for 200 nanoseconds



20577562
post get
Pattern(s): 0	
testing post is trickier see the client code in the upload section for idea of using post
in the server code the do_get function handles all the get requests and the do_post function handles all the post requests



20583180
addition multiplication
Pattern(s): 1	
obviously addition is the simplest
multiplication gets a little more difficult



20586592
macports homebrew
Pattern(s): 0	
in my experience macports has many more packages available than homebrew and the dependencies are installed with a lot less fuss and bother than trying to do macports yourself



20598437
serializable deserialization
Pattern(s): 1	
serializable is easy but we have to deal with complex data structure implementations std string std map for example that play with allocated buffers
deserialization is more complex and you need to rebuild your object with all its members plus references to vtables .



20741194
factors mean
Pattern(s): 0	
note that this does not mean that the largest prime factors is less than sqrt n but that if there is a prime factors greater than sqrt n there is only one such prime factors



20761439
django web2py
Pattern(s): 0	
 ve played with flask cherrypy and web2py
django is better than all of django even if i just want to build something small and lightweight i d choose django



20761439
flask django
Pattern(s): 0	
 ve played with flask cherrypy and web2py
django is better than all of django even if i just want to build something small and lightweight i d choose django



20801231
atomic interlocked
Pattern(s): 0	
note that interlocked provides a smaller interface than lock - see previous question here



20831875
ethernet wireless
Pattern(s): 0	
you can use bluetooth or usb or wifi perhaps wifi ethernet to communicate to your ipad app
there is a camera connection kit to give you a standard usb plug on the ipad but wireless is easier



20851613
inline inlining
Pattern(s): 0	
code memory if you are inlining a function which is used in many places then the code size will increase
stack usage if your inline function uses more variables then more stack space is used



20887720
int chars
Pattern(s): 0	
takes the bit that indicates wether the chars was lower case or not



20940609
fread read.table
Pattern(s): 0	
i will reiterate that fread is significantly quicker as is shown in this post on stack overflow quickly reading very large tables as dataframes in r
in summary the tests on a 51 mb file - 1e6 rows x 6 columns showed an performance improvement of over 70 against the best alternative methods including sqldf ff and read.table with and without the optimised setting recommended in the answer by lukea



20959465
post get
Pattern(s): 1	
in order words you should not use the complex body to include all the sub-resources in your post
get is more subtle



20982731
implements extends
Pattern(s): 0	
you could also so an anonymous class which implements runnable
but whether or not your use an anonymous class is orthogonal to the question of whether implementing runnable or extends thread is the better mechanism to define your thread task



21009952
disk ram
Pattern(s): 0	
if the size of the data is large millions of rows of data tens of megabytes then disk is always better
the problem is that if you shove a ton of information into a variable you will fill up your ram and once your ram is full things slow down paging memory to disk starts happening and basically everything stops working including any commands that you currently running robocopy



21027147
allocator stl
Pattern(s): 1	1	
however in the process of adopting stl into the c++ standard the c++ standardization committee realized that a complete abstraction of the memory model would incur unacceptable performance penalties
to remedy this the requirements of allocator were made more restrictive
as a result the level of customization provided by allocator is more limited than was originally envisioned by stepanov.



21038309
mdx dax
Pattern(s): 1	
on the other hand mdx is a bit more powerful but also a bit more difficult to write
if your query is relatively straightforward you could go for dax



21050935
for-loop arrays
Pattern(s): 1	
a developer writing a for-loop and then doing a string compare inside of that for-loop is significantly less efficient then letting the frameworks perform the same option
with a nspredicate against the arrays



21050935
for-loop loops
Pattern(s): 1	
duncangroenwald is correct that you still must loops through every object but there is looping and there is looping
a developer writing a for-loop and then doing a string compare inside of that for-loop is significantly less efficient then letting the frameworks perform the same option



21067979
free realloc
Pattern(s): 1	
ealloc is like free in case realloc allocates entirely new memory realloc free s the old allocation
so any pointer passed to realloc had better be a valid heap-pointer or a null-pointer



21068746
width height
Pattern(s): 1	
then we look up if it is too wide which means that the width is more
than height times ratio



21082690
des aes
Pattern(s): 1	
also see why aes is more secure than des



21151293
lwjgl jogl
Pattern(s): 0	
deprecate the jogl backend this week
the lwjgl backend is a lot more



21170079
filesystems ntfs
Pattern(s): 0	
both zfs and ntfs are implemented in fuse
if you go the kernel route you will find your filesystems is much harder to debug and that the development process is much more complicated



21195527
udp tcp
Pattern(s): 1	
personally i prefer the client-server model if you re sending tiny pieces of data using tcp
anything much for example game data video data etc would probably require udp which is much faster but a lot more unreliable which is what skype uses



21222207
super extends
Pattern(s): 0	
where extends is an upper bound super is a lower bound



21279502
for-loop arrays
Pattern(s): 1	
second test shows the for-loop is taking more than 30 of the time
i think what typed arrays is really in lack of is some native code that does the block copy that would really be used in a game development rather than set pixel by pixel in the tests



21294887
children parent
Pattern(s): 1	
then you can get the related children by in your controller
getting parent table rows is less complicated declare in child table and parent_id column must be present in database child table - bugs



21313627
uicollectionview uitableview
Pattern(s): 1	
uicollectionview is more appropriate for your problem
uicollectionview is like uitableview only loads cells displayed on screen



21419290
ftp telnet
Pattern(s): 1	
ideally the dal insulates the business entities from knowing if the data store is an rdbm ftp server webdav server nosql db or anything else
telnet is a little more difficult



21437005
jlist jtable
Pattern(s): 1	
don t use a jlist
a jtable is better for displaying data in columns



21447710
for-loop loops
Pattern(s): 1	
ultimately if the structure of a loops is more expensive than the operations within loops and the tiny performance overhead from loops is actually significant then you might have a case for-loop unrolling



21470724
for-loop loops
Pattern(s): 1	
lso foreach is sometimes a cleaner loops and you can retrieve the index by using linq s elementat method
in this case the for-loop is probably better but thought i d mention the for-loop



21471411
integer unsigned
Pattern(s): 0	
n easy fix is to change trsq to be unsigned long long
note that your program may report some numbers as prime if some numbers largest prime factor is very close to some numbers square root if the number is the square of a prime because the conversion of number to a floating-point value may round it down so trsq may end up being less than the square root even less than the largest integer that is smaller than the square root



21575197
screens tablet
Pattern(s): 0	0	
the data looks good when the screens size is bigger than 600px so i add a breakpoint at 600px and hides 1 less important column when the screens size is smaller
devices with big screens such as desktops and tablet will display all the data while mobile phones with small screens will display part of the data



21586218
puma thin
Pattern(s): 0	
something where the app is about serving different pages you want low memory and good context switching things like preforking unicorn or running on the rubinius version of ruby with puma that makes concurrency easier to code because it will perform well with threading as opposed to something like mri with a global interpreter lock



21611750
uilabel uitextview
Pattern(s): 1	
i tested above code with about 4000 string rendered into 100 different widths and all results were equal to the uilabel i used for comparison
i did the same to calculate dimensions of uitextview which is more complicated and required to set up an nslayoutmanager



21630183
int chars
Pattern(s): 0	
but it is a narrowing conversion because the rank of int is higher than rank of chars



21657759
pull push
Pattern(s): 0	
a pull is nothing more than a fetch followed by a merge
hard to say without having more info on your commit tree but you should be able to git checkout the develop branch git merge with test or whatever commit you re trying to merge with and then git push your local develop branch to the remote repo s develop branch



21673304
entities entitymanager
Pattern(s): 0	
in the case of an jta transaction-scoped entitymanager it is better to quote from the spec chapter 3 entity operations



21702054
nullpointerexception illegalargumentexception
Pattern(s): 1	
nullpointerexception happens for other reasons as well buggy code
illegalargumentexception is better for invalid parameters.



21703040
versioning upgrade
Pattern(s): 0	
if kernel versioning is less than 2.6 then we recommend to upgrade kernel versioning



21734216
sortedlist sorteddictionary
Pattern(s): 0	
sorteddictionary has faster insertion and removal operations for unsorted data o logn as opposed to o n for sortedlist



21867533
draggable droppable
Pattern(s): 0	
i did something like this once and this worked ok for simple stuff but after some time this became clear that using jqueryui s draggable is saner since this s much more robust
i also needed to use droppable functionality in conjunction



21917370
svg.js snap.svg
Pattern(s): 1	1	
the snap.svg syntax is a bit more concise the svg.js code is more readable



21946576
for-loop arrays
Pattern(s): 0	
the problem is that your first for-loop is looking at the index.length
it is constantly changing because the arrays is getting smaller



21962588
mouseover mousemove
Pattern(s): 0	
do grab x and y coordinate you have to attach mousemove or mouseover event to the element
since you want continuous polling of x and y coordinates mousemove is better event to be attached



21974705
mapply lapply
Pattern(s): 0	
so i will instead show you examples using sapply and lapply
you could also use mapply here but i think the sapply mapply syntax is clearer



21981740
apache nginx
Pattern(s): 1	
ulling numbers from thin air for illustrative purposes serving 10 000 simultaneous connections would probably only cause nginx to use a few megabytes of ram whereas apache would probably consume hundreds of megabytes if it could do it at all
nginx is faster at serving static files and consumes much less memory for concurrent requests because nginx is event-based it doesn t need to spawn new processes or threads for each request so it memory usage is very low



22038927
javassist cglib
Pattern(s): 0	
you can instead register an asm visitor with the cglib enhancer which should be responsible for adding the annotation to the cglib generated class
however you might want to consider creating your classes using javassist which has a more modern api and supports the writing of annotations



22076715
subtract add
Pattern(s): 0	
shift and add subtract sequence was slower than the lea method above



22076715
multiplying subtract
Pattern(s): 0	
shift and add subtract sequence was slower than the lea method above



22089087
kerberos ntlm
Pattern(s): 0	
kerberos is better when it comes to performance
mainly because it is a lot less chatty than ntlm



22136011
drawimage putimagedata
Pattern(s): 0	
that way you can just drawimage the offscreen canvas to the onscreen canvas--efficient because the gpu can do the blitting instead of burdening the cpu
putimagedata is slower because it involves the cpu fetching data from the pixel array setting that data in your temp array and transferring the temp array to the onscreen imagedata



22143279
google-chrome firefox
Pattern(s): 0	
google-chrome seems to have a maximum number of concurrent connections to one server of 6
firefox has a more granular configuration and distinguishs persistent maxium of 6 seen in about config and non-persistent the maximum numbers differed a lot in different sources



22155972
mp3 ogg
Pattern(s): 0	
ogg is more of wrapper format
mp3 can wrap speex compressed audio speex www speex org is a very efficient compression technique based on celp



22179064
ionic angular
Pattern(s): 1	
about the backend angular provides http and resource for ajax requests take a look at the angular documentation i assume ionic didn t change the way angular makes these calls
my conclusion i think when ionic becomes a more mature framework which won t take long with better documentation it will be the best ui framework



22199770
int chars
Pattern(s): 0	
then each time it reads a chars the value of line changes to another int and each time loop goes around i increments
so the loop says keep going for as long as the ascii value of the chars is greater than the number of iterations i ve counted



22221296
getc gets
Pattern(s): 0	
the getc function is a higher level function
the getc function usually uses buffered input so input is read in blocks into a buffer sometimes by using read and the getc function gets the getc function characters from that buffer



22236786
gruntjs grunt-contrib-watch
Pattern(s): 1	
one could use gulp too but gruntjs is way more mature at the point of this writing
you would have to setup gruntjs install grunt-contrib-less and grunt-contrib-watch to watch your files



22240879
pillow pgmagick
Pattern(s): 1	
pgmagick is a thin python wrapper for a c++ frontend so you have to dig through the layers of interface to figure out how to make it work
unless you need the extra features pillow is probably a better choice



22286530
atom-editor sublimetext
Pattern(s): 0	0	
atom-editor has better github support out of the box but sublimetext has a several git packages



22381797
profiling debugging
Pattern(s): 0	
the reason is that maybe like in my case the xcode bot was attempting to archive with the development profiling and development profiling is much easier to debugging than 4f96f173-7ebe-4892-b283-52489de2f409



22453669
nodevalue innerhtml
Pattern(s): 0	
morever to get the content of a td element you cannot use nodevalue which is defined for text nodes only
you could use innertext but due to issues in browser support the good old innerhtml is safer



22471391
atom-editor sublimetext
Pattern(s): 1	
apart from performance improvements atom-editor feels significantly more stable across the board
development of sublimetext has picked up again since jan 2015 with bugfixes some minor new features tooltip api build system improvements and a major development in the form of a new yaml-based .sublime-syntax definition to eventually replace the old xml .tmlanguage



22522575
multiplying division
Pattern(s): 1	
this would change a multiplying and three divisions into four multiplies and one division
division is much more expensive than multiplication



22522575
division addition
Pattern(s): 1	
division is much more expensive than multiplication
in addition calculating an approximate reciprocal is much more simd-friendly since there are usually reciprocal estimate instructions that provide a starting point which can be refined by the newton-raphson method



22591043
jruby rubinius
Pattern(s): 0	
rubinius is preferred if you plan to work on a multi-threaded architecture like under puma
jruby also has better support for threads and also has the rich library portfolio of the java community



22601570
mvp presenter
Pattern(s): 1	
or example in mvp you can either directly bind the model to the view or properties of the model individually that you map on binding
you can also call methods on the presenter directly or raise events that the presenter responds to more indirectly



22647028
matplotlib canopy
Pattern(s): 0	
a sophisticated program like matplotlib can figure out whether the gui event loop was already started and adapt accordingly
but for your purpose you probably just want to disable pylab mode so that the ipython in canopy acts more like a generic python



22677434
innodb myisam
Pattern(s): 1	
the innodb engine provides more concurrency and can do row level locking rather than locking the entire table
there may be some cases where you want to take locks on multiple myisam tables if you want to maintain referential integrity for example and you want to disallow other sessions from making changes to any of the tables while your session does your session work



22774410
innodb myisam
Pattern(s): 0	
the myisam storage engine takes table level locks even for select statements and that kills concurrency
innodb performs much better with concurrent queries



22806534
union distinct
Pattern(s): 0	
union is a shorter way to write union distinct



22810211
postgresql mysql
Pattern(s): 1	
summa summarum postgresql probably is more ready for primetime than sql-server
- postgresql has has had paging for almost 10 years now mysql as well as sql-standard syntax compliant sql server just got that feature with sql-2012 only standard-compliant



22819227
fgets atoi
Pattern(s): 0	
so here fgets is reading more than one integer at a time from file so atoi is not getting the int too



22825251
floating-point integer
Pattern(s): 0	
as soon as you need more integer operations you probably need a lot more so the slight speed advantage is more than eaten up by the additional operations
the floating-point code is simpler which means it is faster to write the code which means that if it is speed critical you can spend more time optimising the code



22878576
coalesce isnull
Pattern(s): 1	
note that in this case the isnull would do the same as coalesce but looks better for this application in case you add some new language



22906383
gitolite gitorious
Pattern(s): 1	
gitorious
gitolite requires much more manual manipulation to get this working my experience



22957088
minimum max
Pattern(s): 0	
still you must increase max also if your minimum is anything less than 15 the adk is now building an extra folder new stuff in truth the new version of the adt is annoying i am just starting and now you will see they have enforced the use of fragments



22980115
width margin
Pattern(s): 0	
t also trims the width by a percentage referred to as the margin
the margin is only used if the margin is greater than zero and you would specify a number like 0.20 twenty percent



23037815
uiview caanimation
Pattern(s): 0	
uiview animation is generally easier and more intuitive to use than caanimation



23079066
uicollectionview uitableview
Pattern(s): 1	
you get the selected row instead of the item so for creating grid or modified items using uicollectionview is best
for the listing details of each item people use uitableview because uitableview shows more info on each item



23092942
dictionary map
Pattern(s): 1	
given that keys are enumerated in a random order returning a list with the result doesn t make much sense and dictionary seems more appropriate
note however that for reasons that are not so clear to me map and functional reasoning is sort of considered bad in the python community for example anonymous functions are second-class citizens and second-class citizens got quite close to be completely removed from python 3



23118632
equals gethashcode
Pattern(s): 1	
i d implement your equals in this way
gethashcode is more complicated



23119403
goto break
Pattern(s): 0	
use break and continue as necessary
i can nearly guarantee you any situation in which you are utilizing goto there is a better alternative



23170531
for-loop loops
Pattern(s): 0	
 ve seen some approaches that use a while loops to compresses the image by .9 or whatever until the target size is met but i think you d be losing image quality and processor cycles by successively compressing reconstituting the image
also the for-loop here is a little safer because the for-loop here stops automatically after trying the maximum possible compression zero



23242121
activemq rabbitmq
Pattern(s): 0	
activemq is heavier memory consumption
activemq is perfectly integrated with apache camel with rabbitmq you d better use spring integration camel rabbitmq amqp is bit rough



23276805
nsoperation nsblockoperation
Pattern(s): 0	
for what you re trying to do you do not need to subclass nsoperation nsblockoperation should meet your needs
subclassing nsoperation is trickier than it looks because of the kvo dependancies it s very easy to get wrong



23324599
eigen lapack
Pattern(s): 0	
in that case i would definitely suggest to you not to start with blas lapack at least not without a nice c++ -wrapper
my suggestion would be to have a look at eigen which offers a much easier start to matrix operations using native c++ code



23371398
folder directory
Pattern(s): 1	
if you ve a lot of files directory specify each one would take a lot of time
so removing that folder is much faster and easier



23417599
uiview caanimation
Pattern(s): 1	
if you use caanimation instead of uiview animation you can also create your own custom timing function using the control points of a bezier curve that describes the desired timing function
however caanimation is more complex to use and less well documented



23417828
google-chrome firefox
Pattern(s): 1	
i don t actually know how long but the asm.js optimizations are new enough that when i last tried the asm.js optimizations in early april 2014 the asm.js optimizations was significantly slower on the command line with node.js than in the browser with google-chrome and firefox was faster still



23465339
stdout stderr
Pattern(s): 1	
most posix-centric tools prescribe a very careful specification for their stdout stream so the tool s output can be piped elsewhere
stderr is much less prescribed and used liberally for logging and errors



23531254
reform activemodel
Pattern(s): 0	
you could look into reform
using activemodel is even easier make sure to pass the activemodel lint tests



23556810
addition multiplication
Pattern(s): 0	
other cpus take three or four cycles to do a multiplication which is a bit slower than addition



23558616
int double
Pattern(s): 1	
in addition to having different semantics from double int arithmetic is generally faster and the smaller size 32 bits vs



23608495
screens tablet
Pattern(s): 0	
what you observe is a result of both screens having roughly the same dpi hence usage of the same image resolutions
you will also notice that the fonts are not scaling as the 7 tablet simply has more screen space available vs the 4 phone



23612128
multiplying multiplication
Pattern(s): 0	
since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it



23619443
gprof google-perftools
Pattern(s): 0	
check sources of google-perftools gperftools they use setitimer or posix timers and collects profile with backtraces
gprof also uses setitimer for implementing cpu time profiling 9.1 implementation of profiling - linux 2.0 ..arrangements are made for the kernel to periodically deliver a signal to the process typically via setitimer



23664937
plot heatmap
Pattern(s): 1	
now often the plot is much more informative by some simple ordering as is referenced in the cv post



23719347
filtering grouping
Pattern(s): 0	
use groupby filtering
this will just return the rows of your dataframe where the size of the grouping is greater than your cutoff



23769058
sortedlist sorteddictionary
Pattern(s): 0	
to roughly paraphrase if you require raw performance sorteddictionary could be a better choice
if you require lesser memory overhead and indexed retrieval sortedlist fits better



23801542
invariantculture cultureinfo
Pattern(s): 1	1	
so invariantculture is better for internal usage when you e.g saves a date to a text-file or parses data
and a specified cultureinfo is better when you present data date currency... to the end user



23806899
screens hdpi
Pattern(s): 0	
e it an hdpi or and ldpi device what you want to be xx dp in size is yy cm on any device
now as you have devices that differ in physical size you see bigger spaces between your widgets on one device because it screens is bigger



23841372
google-chrome safari
Pattern(s): 0	
google-chrome javascript console f12 or ctrl + shift + j
mostly the same browser as safari but safari is better imho



23849144
primes palindrome
Pattern(s): 0	
if the array is longer than 5 characters objects it will copy the first one in the fifth position and the second in the third position the palindrome is just a particular case
and of course if primes s length is less than 5 it will fails because there would be no



23899128
inline-functions inlining
Pattern(s): 1	
to trigger inlining enable optimization in your compiler settings gcc -o2 and put your functions to the .h file as static inline
please note that sometimes inlining macros is faster sometimes a real function call is faster depending on the code and the compiler



23906397
skip-lists tree
Pattern(s): 1	
another idea would be a skip-lists where the skips are annotated with the number of elements they skip
but this implementation is not trivial since you have to update the skip length of each skip above an element that is inserted or deleted so adjusting a binary search tree is less hassle imho



23943783
for-loop loops
Pattern(s): 0	
if you want to use indexofobject to grab an object at an index of the arrays you re iterating through you should use a regular for-loop
but for what you re doing a forin loops is indeed better and forin loops can be faster since they can be handled in batches



23984007
scipy scikit-learn
Pattern(s): 1	
i m a coauthor of this code and i spent quite some time optimizing both it and the scipy implementation
scikit-learn is faster at the expense of some accuracy but for k-nn that shouldn t matter too much



24051289
trie tree
Pattern(s): 1	
note that while a trie works for the specific case of keys which are strings a binary search tree is much more general and only requires that the keys can be ordered



24071044
.htaccess httpd.conf
Pattern(s): 0	
first off using .htaccess is a bit slower and requires that you have set the allowoverride directive accordingly
it is recommended that you instead use httpd.conf to establish basic authentication



24101261
multiplying multiplication
Pattern(s): 1	
when multiplying 4.35f or 4.35 by 100 which is exactly representable as float and as double too one of two possibilities happens
the mathematical result of the multiplication is closer to 435 than to any other floating-point number



24136478
width margin
Pattern(s): 0	
the whole problem is because of the div 2 height and width is larger than div 1
as we know padding width and height is not added to the element width and height as it is done for margin



24136478
width margin
Pattern(s): 0	
as we know padding width and height is not added to the element width and height as it is done for margin
so the scroll get the scroll width and height of the div 2 and as the div 2 height and width is greater than div 1 padding to right and bottom is not visible



24138152
google-chrome safari
Pattern(s): 1	
in google-chrome you can set the default fonts at google-chrome settings under advanced settings
in safari it is less easy but i could find this post



24156934
inherited properties
Pattern(s): 0	
o automatically add those common columns to all my tables i just had to create a base model containing those common columns and make all of my models inherited from my models
this avoids repeatedly adding those common columns to each model as properties and looks cleaner i believe



24193452
latex texreg
Pattern(s): 1	
as mentionned above latex output can both be customized using stargazer or xtable
yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable



24194963
int double
Pattern(s): 0	
an int key is simpler to implement and easier to use and understand
an int key s also smaller 4 bytes vs 16 bytes so indexes will fit about double the number of entries per io page meaning better performance



24197070
fgetc ftell
Pattern(s): 0	
you could use fgetc to read each character counting until you get to the end
but i think using fseek and ftell is better and easier



24220424
primefaces richfaces
Pattern(s): 1	
richfaces was biggest piece of crap software ever written don t know how it is now on version 4
we have primefaces which is better but still you will run into bugs or lack of features especially with more exotic components



24220947
fadein fadeout
Pattern(s): 0	
fadein is pretty simple just add this to your fadein screens show
fadeout is a little trickier



24249023
multiplying division
Pattern(s): 0	
if your magnitude of your numbers will be roughly within the range 1e+ -12 start by finding the smallest power of ten which is smaller than your number multiplying that by 100 000 multiplying your number by that round to the nearest unit and divide by that power of ten
because division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocals



24250456
google-chrome firefox
Pattern(s): 0	
google-chrome was 74x slower rendering svg over canvas
firefox was 150x slowe rendering svg over canvas



24252016
namedtuple dictionary
Pattern(s): 1	
a namedtuple is a tuple with a namespace like an object but not as heavy on your python processes memory
a full object stores attributes in a dictionary which is much more memory heavy



24272834
metaphone soundex
Pattern(s): 0	
ike the ancient and honorable soundex double metaphone favors false positive matches rather than false negative
but double metaphone has better rates on both mostly due to double metaphone double-hash capability



24371582
arraylist treeset
Pattern(s): 1	
if you only sort once then the arraylist is an obvious winner
the treeset is better if you add or remove items often as sorting a list again and again would be slow



24399639
cpython pypy
Pattern(s): 0	
also in cpython using sum lets your code run in the c internals so it can be very fast
but in pypy sum is slower than just writing a straighforward loop that the jit can turn into a wicked fast native loop



24412230
jtextpane jeditorpane
Pattern(s): 0	
and as i understood the jtextpane supports formatting better then the editorpane
jeditorpane supports the power of html which is powerful but you need to covert the text to html and create all the html tags



24483447
yslow pagespeed
Pattern(s): 0	
this configuration satisfies both pagespeed leverage browser caching and yslow add expires headers
yslow requires a value greater than 7 days



24514611
union distinct
Pattern(s): 1	
this is why execution of a union all performs faster as it doens t have to do the duplicate removal contained within the execution of a union



24516108
for-loop loops
Pattern(s): 0	
but i think this is one of the rare cases where a simple for-loop is better than for each
this loops backwards as per portland runner s suggestion to avoid having to do anything about deleted rows



24588036
rank max
Pattern(s): 0	
if no rank is lower than no rank number there are no gaps in the table the query returns the max number + 1



24593643
realloc malloc
Pattern(s): 0	
of course the real realloc is a lot more complex because the real realloc checks the current block to see if the current block can be expanded before the current block allocates new data and probably doesn t call regular malloc but the functionality is roughly this



24655947
getter setter
Pattern(s): 1	1	
if we put we filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with we filter and return our filter back through the getter



24659070
int double
Pattern(s): 1	
when you use dim dynarray this creates an array of type variant which can hold anything string double object etc.
if you explicitly declare the type dim dynarray as int then it ll only allocate enough memory to hold int which is more efficient



24660725
int chars
Pattern(s): 0	
in your case the start int is greater that start which would obviously throw arrayoutofboundexception
edit and if you are curious why so then the abstractstringbuilder class is used to replace the chars and this is achieved by creating array of chars in background which is hidden from us



24689270
wmi managementeventwatcher
Pattern(s): 1	
no guarantee that this is faster as i haven t done any comparative testing however from prior experience using the wmi is more performant than iterating a list of processes
if you want to go further a more advanced solution would be to hook up events to tell you process is created and deleted using a managementeventwatcher as shown in this blog post



24689371
swing windowbuilder
Pattern(s): 1	
in swing like anywhere else what matters is how you reason through your usage of polymorphism where it s reasonable theres nothing inherent about swing that makes it more difficult to implement than it is anywhere else
i don t know anything about windowbuilder but if it s keeping you from reasoning about your usage of polymorphism or otherwise limiting or influencing your thought about other architectural decisions then the tool is probably not as great as you think the tool is and is almost certainly not worth that cost



24716771
hex binary
Pattern(s): 1	
hex is short more readable and you have less of a chance of leaving a mistake in your code
if you want to be really explicit i d still recommend using the binary literal over the parseint method as it is safer



24727996
int double
Pattern(s): 0	
 and y are added as double and casting to int will saturate to the range
this is not as suitable for long s as precision of double is less than that of long but if the precision is not as important the precision will suffice



24814631
equals tostring
Pattern(s): 1	
the same result can be obtained also by comparing tostring of each map as you suggested but using equals is a more intuitive approach



24830766
for-loop arrays
Pattern(s): 0	
your for-loop below that does not make sense
to get the last item of an arrays it is easier to do this



24883195
folder directory
Pattern(s): 1	
also please note that folder is a gui term
what you are referring to is files and directory which is more universal



24904805
ubuntu linux
Pattern(s): 1	
ubuntu is simply not intended to be used like that for a long time
puppy linux is way more suitable for your needs since it is originally created to live on usb drive forever



24925505
swift objective-c
Pattern(s): 0	
as to where you do this it s the same as objective-c
swift makes it easier as it does not require you to import header files so you can either put it in the file of the client the class that uses it or in it s own file



24938761
super extends
Pattern(s): 1	
he actual explanation for the behavior is that to extends class a you need to meet every requirement that class a presents to you
in this particular case class a is saying that sub classes need to implements these methods the fact that a super class has implements sub classes is irrelevant a super class is adding a more specific requirement itself



24967702
uicollectionview uitableview
Pattern(s): 0	
however in terms of intuitiveness and simplicity the uicollectionview is the better of the two options
if you feel comfortable with a uitableview then picking up a uicollectionview is not at all difficult



24969828
128bit 64bit
Pattern(s): 1	
divide and modulo return 64bit results given 64bit arguments - so that s not an issue as you have defined the problem
dividing 128bit by 64 or 128bit operands is a much more complicated operation requiring normalization etc



25074930
installation upgrade
Pattern(s): 0	
yes restoring the old application versioning via rollback upon an installation failure is actually a built-in feature of windows installer but you need to configure things correctly to get it to work as you require
windows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versions after successfully updating all files



25074930
versioning upgrade
Pattern(s): 0	
yes restoring the old application versioning via rollback upon an installation failure is actually a built-in feature of windows installer but you need to configure things correctly to get it to work as you require
windows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versions after successfully updating all files



25077664
children parent
Pattern(s): 1	
this is because hibernate must always fetch all children it can t give you partial collection results
selecting the child and joining the parent is a better alternative



25093776
ccl clisp
Pattern(s): 1	
it is solid well-supported produces fast code and provides many goodies beyond what the standard mandates concurrency primitives profiling etc. another implementation with similar properties is ccl
clisp is more suitable if you re not an engineer or you want to quickly show lisp to someone non-engineer



25106574
interpolation splines
Pattern(s): 1	
i did the math for interpolation with trig functions rather than polynomials as mdurant suggested
it turns out to be very similar to the cubic splines but requires more computation and produces worse results so i won t be doing that



25234859
screens tablet
Pattern(s): 0	
ote android also supports low-density ldpi screens but you normally don t need to create custom assets at this size because android effectively down-scales your hdpi assets by 1 2 to match the expected size
in your case whats happening is that your galaxy tablet has a lower pixel density and android down-scales the image from a xxhdpi to whatever density the tablet has hdpi or xhdpi ....so the tablet your image is a 512px image android would down-scale it to 341px for xhdpi or 256px for an hdpi device



25236081
stateless stateful
Pattern(s): 0	
a stateful service is typically harder to develop and scale than stateless services



25245512
google-chrome firefox
Pattern(s): 0	
in a nutshell google-chrome s printing capabilities are shocking
firefox works far better for printing but runs much slower



25251777
many-to-many many-to-one
Pattern(s): 1	
t makes no sense for many-to-one or many-to-many since you don t want to delete a parent whenever the child is removed
inverse is for bidirectional associations and most often the child s on the same side with cascade but that s because the many-to-one side is much more efficient to control the association than the one-to-many one



25277634
subclass inherited
Pattern(s): 1	
it seems like you re a little confused about what a subclass and by extension inherited symbolizes instead of thinking that a subclass belongs to a subclass parent class pretend that a subclass is a more specific version of a subclass parent class



25284847
int chars
Pattern(s): 1	
in a certain sense int is a more abstract data type than chars short long or long long as you cannot be sure about the bitwidth



25335034
cat tee
Pattern(s): 0	1	
tee then writes more data t and tries to read from the pipe then goes to sleep until cat writes more data



25338534
children parent
Pattern(s): 0	
again if the parent view is not larger than the parent view children the expansion suffix does not make any difference as well



25338541
memcached apcu
Pattern(s): 0	
upgrading to php5.5 will give you a builtin zend opcode cache - this could be used with apcu apcu is the alternative php cache with the opcode cache removed - to cache userland locally if you do not need a distributed memory cache memcached
for a single vps apcu has a lower memory footprint is a more suitable cache especially with php5.5 can be set in configuration.php with



25342494
google-chrome firefox
Pattern(s): 1	1	
i did a couple of screenshots and firefox canvas was faster than google-chrome capturevisibletab
actually firefox is better suited for as-fast-as-possible screenshots since its canvas expose to privileged code the mozfetchasstream method allowing to bypass the actual bottleneck which is the base64 encoding of the image data



25352980
charat indexof
Pattern(s): 0	
also fwiw the indexof approach mentioned below also works but the indexof approach mentioned much slower the charat in this particular chase



25365955
union distinct
Pattern(s): 1	
ecause you are selecting distinct id s you do not need union all
union all is more efficient because it does not add the step of removing duplicates



25455468
division addition
Pattern(s): 0	
use float a b instead or add a from __future__ import division to the top of your file
tentative conclusion using a for-loop and simple addition method1 is a lot faster than any of the list comprehension methods for this example



25491307
atom-editor sublimetext
Pattern(s): 0	
sublimetext has better performance than atom-editor



25514677
packery masonry
Pattern(s): 1	
to expand on dan s answer having just had this problem myself it seems that packery is a more up to date
much more maintained version of masonry - from the same author



25529560
folder directory
Pattern(s): 1	
i just explained the significance of build folder from my experience with java projects
here in php if you go through the ant file you will realize that build directory is more like the directory where all build-related scripts such as phpmd.xml phpmd.xml etc



25556924
addition multiplication
Pattern(s): 1	
addition is usually faster
but consider a processor which can do say one multiplication and an addition per cycle



25603631
jquery smoothstate.js
Pattern(s): 0	
jquery mobile already can do everything smoothstate.js can you only need to learn how
though smoothstate.js has everything better described plus you don t need to use gazillion different page events



25629565
jar war
Pattern(s): 0	
also here any component class registered in war s faces-config.xml has higher precedence over the one in jar s faces-config.xml in this particular case primefaces one



25636405
int double
Pattern(s): 0	
and the second calculation 33 5.0 the result is actually promoted to double which has greater precision than int and resulted to decimal



25656471
post get
Pattern(s): 1	
that way your clients would automatically get the option to call it synchronously or asynchronously via the generated service client
here s a post i found more useful than the msdn docs



25672161
public protected
Pattern(s): 1	
so to quote scott meyers protected is no more encapsulated than public.



25691233
for-loop arrays
Pattern(s): 0	
and you should return outside the for-loop
you should note however that you will get an exception if the length of operand2 arrays is shorter than the length of operand1 arrays



25712010
nsexpression nsmanagedobject
Pattern(s): 0	
actual answers were sparse so i ended up using an open source evaluator called ddmathparser from dave delong that works much like nsexpression but is much simpler to use and is extensible
in my model i subclassed nsmanagedobject for both my item and my formula



25721448
factors mean
Pattern(s): 0	
it means that asymptotically x is either only faster than y by a constant factors or is slower than y



25722666
inline inlining
Pattern(s): 0	
the inline keyword is more of a hint to the compiler than an explicit directive these days
there is no specific rule about not inlining functions with return statements



25722763
strtol atoi
Pattern(s): 1	
the atoi and atol just convert what they can
strtol is more advanced and handles bad parsing better by showing you where your input stops being parsable



25751738
swift objective-c
Pattern(s): 1	
stick with objective-c for now
when you re comfortable with the ios sdk and swift is better documented you can consider learning swift



25755038
stdout stderr
Pattern(s): 1	
to save subprocess s stdout and stderr is more complex because you should consume both streams concurrently to avoid a deadlock



25763284
junit testng
Pattern(s): 0	
now concerning testing frameworks there are junit or testng
i don t want to start holy war but imo junit is better and more widespread and hence is more actively developed



25792063
armadillo mlpack
Pattern(s): 1	
the issue is that armadillo the underlying matrix library is not able to allocate enough space for your input data
for the most part mlpack is more conservative with ram than other tools such as matlab or r but it sounds like your dataset is large enough that your options short of getting a system with more ram like kerrek suggested are limited



25825738
post get
Pattern(s): 1	
you load your makes through a post ajax request
for requests that only return data but do not change anything get is usually more appropriate



25834255
getc putchar
Pattern(s): 0	
getc returns the integer value of the byte at the current position in the file handle then advances that position by one byte
putchar is simpler than printf



25898877
floating-point integer
Pattern(s): 1	
integer math is often much faster than floating-point so such a function could be a major performance win



25900284
accessor properties
Pattern(s): 1	
here was a period in the evolution of objective-c when properties were very helpful in managing memory -- if you used a properties s accessor everywhere you could worry a lot less about when to retain and when to release something because a properties s accessor would do that for you
now that we have arc the memory management aspect of properties is less important but a lot of we are still conditioned to use properties even for internal stuff



25906926
int chars
Pattern(s): 0	
in yet other settings a chars is more than one code point



25955823
foldable traversable
Pattern(s): 1	
foldable has which encodes the idea of collecting all of the values in a foldable container f
traversable has the more powerful which encodes the idea of a certain kind of traversal over the traversable container t



25962960
cpu affinity
Pattern(s): 0	
also note - if rdtsc is used without an invariant time source on linux grep constant_tsc proc cpuinfo you may get unreliable values across frequency changes and if the task switches cpu time source
so in general yes setting the affinity does gives lower latency but this is not always true and there are very serious costs when you do this



25996033
for-loop loops
Pattern(s): 0	
the performance of a normal for-loop is slightly better because there is no function call for each element involved
despite of this this is recommended to avoid for loops when this can be written as a foreach statement



26026703
neo4j titan
Pattern(s): 1	0	
when the data is on disk titan is faster than disk neo4j cause disk titan has a better disk representation



26029945
geocoding geocode
Pattern(s): 1	
optional parameters in a geocoding request
bounds the bounding box of the viewport within which to bias geocode results more prominently



26035588
int chars
Pattern(s): 0	
the relation requirements are that the long long is not smaller than long which is not smaller than int which is not smaller than short
as chars s size is always the minimum supported data type all other data types can t be smaller



26038416
sum coalesce
Pattern(s): 0	
you probably intend sum amount is null
as mentioned in another answer coalesce is a better solution



26121700
for-loop loops
Pattern(s): 0	
foreach or for-loop is somewhat slower than an equivalent while loops or tail recursion the benchmark i linked to above shows a 15x performance difference with 1000+ iterations though it will likely depend on the version of scala and the version of the jre...



26121700
for-loop loops
Pattern(s): 0	0	
foreach or for-loop is somewhat slower than an equivalent while loops or tail recursion the benchmark i linked to above shows a 15x performance difference with 1000+ iterations though it will likely depend on the version of scala and the version of the jre...
but that difference will become negligible if the code inside loops takes much longer to execute than loops itself so that doesn t mean it s always relevant



26164781
pickle dill
Pattern(s): 0	
then you d pickle a mock object which would then pickle the class source code and then you d be able to pass that to the django cache
i m the author of dill which is a better serializer and also the author of klepto which is a caching package and this is exactly what i do to store any object in a sql table on disk or in an in-memory cache



26169375
width border-box
Pattern(s): 0	
with the default box-sizing as soon as an element has either padding or border applied the actual rendered width is wider than the width you set.
you might think of it this way with box-sizing border-box the padding and border press box-sizing border-box the padding and border press way inside the box rather than expand the box



26243727
for-loop loops
Pattern(s): 0	
you can do this by keeping track of a matched flag or by using a break and an else clause on your for-loop whichever seems simpler but you have to do something
see break and continue statements and else clauses on loops in the tutorial for more details



26245130
for-loop arrays
Pattern(s): 0	
the other way is to compose the variable names in for-loop by using variable variables
arrays seems like a cleaner code to me



26248296
google-chrome firefox
Pattern(s): 1	
so for example a hover rect doesn t work in firefox
google-chrome is more forgiving though so it will work there



26263784
emacs aquamacs
Pattern(s): 0	
or the current version there are a few options to choose from of which the most popular seem to be emacs for os x and aquamacs
the main difference is that aquamacs acts a little more like a mac app in aquamacs handling of keyboard shortcuts and things like that



26279541
post put
Pattern(s): 1	
post should be used to update or modify a resource or to call some atomic method in an api scenario
it can also be used for the creation of resources although put is more appropriate there



26279541
put get
Pattern(s): 1	
it can also be used for the creation of resources although put is more appropriate there
get is supposed to be used to return a resource which is not variable



26335476
gif png
Pattern(s): 0	
you should use png instead of gif because png instead offers better compression and features



26475024
disk ram
Pattern(s): 0	
the ram is much slower than the registers inside the cpu though
when you start a program a program instructions are loaded from your hard disk into the ram



26509245
gcj javac
Pattern(s): 1	
on top of the accepted answer i would recommend not using gcc to compile java according to the following post java jre vs gcj
javac is a much better option



26515727
antivirus createprocess
Pattern(s): 0	
windows 7 and the values are pretty consistent if the antivirus application is turned off and the benchmark is started from outside of visual studio
as expected the variation of createprocess .. is bigger since more system calls are involved and the likelyhood of being interrupted by another thread is higher



26591442
swift objective-c
Pattern(s): 0	
if you want to do your app in swift which is better to understand if you have already programmed in java in my opinion use swift
if you want to do your app in objective-c well.



26597741
versioning upgrade
Pattern(s): 0	
most likely your versioning of matplotlib is older than 1.4.0rc1 and needs to be upgrade
if you have more than one installation of matplotlib installed you ll need to make sure the directory containing the newer versioning is listed earlier than the older versioning in sys.path or perhaps simply delete the older versioning of matplotlib



26644546
post get
Pattern(s): 0	
owever since you re performing a query for which there isn t a single resource you could perform a get to it seems fine to use post as long as you re aware of the disadvantages and your documentation is clear about your documentation
frankly i think using a post is much clearer than encoding that payload as a json + base64 and sending that payload as a querystring merely for purism



26673893
rsa aes
Pattern(s): 0	
rsa is much slower than aes



26683553
int chars
Pattern(s): 0	
the stack is merely an array of chars which you start filling from the end and go towards the start
you can use such an array instead of a collection because it is a known fact that an int contains no more than 32 bits



26777166
uialertview uialertcontroller
Pattern(s): 0	
uialertview also has same limitation
i will suggest to use uipopovercontroller and implement your own dismiss button since uialertcontroller s purpose is more to display alert messages to the user short message per apple documentation



26783758
octal hex
Pattern(s): 1	
27 is the decimal ascii value for escape but you use an octal character code
you should say 27 or 033 or x1b for hex which is more common



26790320
versioning upgrade
Pattern(s): 1	
and you re certainly not going to get any support for 5.3.1 from the community if you hit something that you think might be a bug so do yourself a favor and upgrade to a versioning that was released more recently than 2010



26823180
width margin
Pattern(s): 0	
therefore assuming the container s width is greater than the image s height margin -50 0 should be enough



26823180
width height
Pattern(s): 0	
therefore assuming the container s width is greater than the image s height margin -50 0 should be enough



26950882
integer unsigned
Pattern(s): 0	
integer type
in this case unsigned has a higher rank than int therefore int is promoted to unsigned



26959748
filtering grouping
Pattern(s): 0	
but since you are filtering by item 59 and you don t have an index on the item column your query will be slow
i suspect that your first query is fast because grouping gr1 contains fewer items than other grouping



26975048
udp tcp
Pattern(s): 0	
you will get very less performance network improvement with udp in small scale usage
tcp is always better



26988312
udp tcp
Pattern(s): 1	
if making a tcp connection is analogous to making telephone call then sending a udp packet is more like mailing a letter



27008507
flask django
Pattern(s): 0	
if you project may grow big or you will use python to write big web project django is worth to learn as it s the most powerful web framework in python
if you only need a simple web application that even doesn t need db flask is simpler to learn as paulo said



27021805
scrolltop removeclass
Pattern(s): 0	
by doing this you remove some of the height of the page which means jquery window .scrolltop changes scrolltop is now lower than your header height - 42
this is what causes some of the height of the page which means jquery window .scrolltop changes scrolltop to constantly flicker between addclass stick and removeclass stick causing that jumpy feeling



27036926
jlist jtable
Pattern(s): 1	
again use a listcellrenderer to customise the look of the jlist to your needs
you should also consider using a jtable which is better at displaying structured data see how to use tables for more details



27058474
goose boilerpipe
Pattern(s): 1	
goose allows more fields published date author main image in article and a few more than boilerpipe title content



27070735
google-chrome firefox
Pattern(s): 0	
however if you try to drag the carousel in google-chrome browser while it s animating you will see same jump lag problem
again firefox shows better and smoother animation with this library



27074221
min max
Pattern(s): 0	
for example in insert operation you can check if the min value is larger than the newly inserted value then assign the min value to the newly added node
the same technique can be applied on the max value



27104041
google-chrome safari
Pattern(s): 0	
however zooming in on the map in safari hangs the web page
google-chrome is easier on that



27182943
int boolean
Pattern(s): 0	
the thing is you re not using bits but int
so either you want to revert to using boolean which read less nicely or you want to use some expression like 0 if x else 1 to flip your elements



27188421
afnetworking sdwebimage
Pattern(s): 1	
it was taking a hell lot of time in afnetworking and the code is also too long
sdwebimage is much faster and short



27193974
udp tcp
Pattern(s): 1	
tcp as you know udp is faster than tcp even if udp may miss some



27198207
rcurl rjsonio
Pattern(s): 1	
rcurl has base64 that you can use for the last part
i also used jsonlite vs rjsonio latter is a more modern fork



27214893
gulp-sass gulp-ruby-sass
Pattern(s): 0	
gulp-ruby-sass instead of
gulp-sass which is slower but more feature-rich



27241197
ubuntu linux
Pattern(s): 0	
though ubuntu has more focus on getting apps running regardless of platform
know that linux has no single convention but linux convention is simply derived from pragmatism not by theory



27296030
disk ram
Pattern(s): 1	
the first time you execute the query postgres will load the data from the disk which is slow even with a good hard drive
the second time you run your query the data will load the previously loaded data from the ram which is obviously faster



27327422
textview imageview
Pattern(s): 0	
this should work as long as the imageview is larger than the textview in all dimensions



27364280
width height
Pattern(s): 0	
hence as the gridlayout structure changes according to the pressed button the constraints are recalculated and in certain patterns the recalculated widths height gives more space to the first images according to the flow



27393136
xlib xcb
Pattern(s): 1	
n xlib vs xcb - i would recommend xlib over xcb if you re first starting out
xcb is more efficient but xcb s much more low-level and much more verbose think assembly language for the gui



27408468
apache nginx
Pattern(s): 1	
i wouldn t recommend putting apache in front of node however
nginx is better but not really necessary anymore



27484749
width height
Pattern(s): 0	
if the largest width is greater than the largest height then a



27562701
monkeyrunner androidviewclient
Pattern(s): 0	
i recomend to use dtmilano tool androidviewclient that is easier to use than monkeyrunner



27578327
cpu processors
Pattern(s): 0	
in the described scenario given that process is a time-consuming task and given that the cpu has more than one core multi-threading will indeed improve the performance
the processors is not the one who allocates the threads



27640139
awt swing
Pattern(s): 0	
don t use a keylistener that is old code when using awt
swing has newer and better api s



27654825
versioning upgrade
Pattern(s): 0	
so you can upgrade the x64 box and check whether everything is working
fyi i had problems with the first versioning of 6.1 iseries access when running on x64 boxes later versioning were a bit better



27680385
division exponent
Pattern(s): 1	
1 when significand if overflowed division evaluates to more digits than significand can hold
2 after exponent gets to its minimum so you can t divide further without loosing least significant bits of significand



27699765
quicksort heapsort
Pattern(s): 0	
introsort is intended to harness the fast-in-practice performance of quicksort while still guaranteeing the worst-case o n log n behavior of heapsort
this is a tough one to answer but most answers point to how quicksort has better spatial locality leading to fewer cache misses



27757091
for-loop loops
Pattern(s): 0	0	
you will still see that parallel loops is slower because of the reasons stated in the question comments
to get a better feel for why that is use instead an overload of parallel.for from here and set the property paralleloptions.maxdegreeofparallelism to 4 allow max 4 concurrent operations or -1 no restrictions and the parallel for-loop is slower as expected because of the thread handling overhead



27803385
range max
Pattern(s): 0	
a boxing conversion s not the most beautiful code but intstream.range 0 max .boxed is still better than



27865394
macports homebrew
Pattern(s): 1	
ll in all most warnings are about potential incompatibilities homebrew like most package software managers tries to hold some grip not too tight though on what potential incompatibilities homebrew installs and what is around because backwards incompatibilities and such can mean that newly installed software from source brewed software doesn t properly install or run
as an example macports is more strict at least an example macports was years ago when i used an example macports and will download matching known compatible versions of required extra software thus you could end up with four different versions of a c compiler



27868022
int chars
Pattern(s): 1	
so there really isn t any need for a separate variable for each chars
should you decide that a list of int is a better data structure for your purposes then there is a nice solution in



27882811
qlayout qwidget
Pattern(s): 0	
ust moving some qlabels out of bounds doesn t make the parent qwidget grow especially without a qlayout
but if you manually resize t so that the parent qwidget is bigger than the qscrollareay you ll get scroll bars as expected



27895269
qtableview qlistwidget
Pattern(s): 1	1	
here are also some other possible ways like using qtableview or qlistview which require different implementations
but for the case of qlistwidget which is more simple you should set the case of qlistwidget which is more simple s view mode to iconmode set your desired icon size and add the icons from resource to the list widget one by one



27960917
mongodb bson
Pattern(s): 0	
it allows for mongodb to produe a syntax and object rich document beyond what json can
bson normally takes more space than json due to its object usage and what not as such there is no serious performance gain



27965575
udp tcp
Pattern(s): 1	
udp certainly is not much faster
both tcp and udp can operate at line speed minus some rather small overhead



28082548
filtering grouping
Pattern(s): 1	
indexes on the fields that appear in where or grouping by or order by clauses are most of the time useful
loading all data before filtering is better that loading the filtering data



28109931
width height
Pattern(s): 0	
b takes remaining available height and width
reduces width when a is made wider and vice versa



28139152
google-chrome safari
Pattern(s): 0	
important as of writing this safari on os x is the most accessible browser
google-chrome has less support for all the aria features



28143572
xamarin.ios monomac
Pattern(s): 0	
that is if you ve paid your 99 to apple to be an apple developer and make a small xamarin.ios app on starter you can deploy that app to the ios app store immediately without paying for a xamarin.ios license
so in this sense monomac is worse than a starter version elsewhere



28143572
monomac xamarin.mac
Pattern(s): 0	
so in this sense monomac is worse than a starter version elsewhere
historical speculation my mind s a little fuzzy on this it was right about the time that the monomac packager showed up that xamarin.mac was released and monomac via monodevelop died



28162623
swift objective-c
Pattern(s): 0	1	
there are plenty of patterns where a naive translation of objective-c code will result in slower swift implementations
in particular far more dramatic than your example where the swift code was a little slower i ve been startled by simple situations in which it s quite easy to write a routine in swift that looks logically very similar or even more elegant but is really much much slower or at least prior to the app developer refactoring the swift implementation a bit
bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa



28162623
swift objective-c
Pattern(s): 1	1	
bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa
i suspect that there are some algorithms applications where swift is faster and others where it is not



28166852
hash md5
Pattern(s): 0	
sha-1 and sha-2 hash functions produces larger outputs so it is unlikely to be that functions
you can t decrypt it as by design md5 if non-invertible function



28290622
des aes
Pattern(s): 1	
aes is the current preferred symmetric encryption algorithm
des is not longer recommended for new work and has some known weak keys



28311068
multiplying addition
Pattern(s): 1	
however multiplying is a more complex operation than addition or shifting



28311068
multiplying addition
Pattern(s): 1	1	
however multiplying is a more complex operation than addition or shifting
if multiplying is faster than fetching from the cache then there is some savings



28357864
for-loop arrays
Pattern(s): 0	
your first for-loop was easier because both counters where the same namely i
it went up for position in the arrays and for the value to put in the arrays



28440568
for-loop loops
Pattern(s): 1	
i d personally argue that the for-loop approach is more readable and just generally better and less surprising across the spectrum of different developer experience levels of potential code readers
a slight variation of the for loops approach that doesn t require evil side-effects with del and uses an inner dict comprehension



28492260
jlist jtable
Pattern(s): 0	
se a jtable with a jradiobutton in one column
not much better then the jlist but the jlist provides a slightly better visual cue



28507472
int chars
Pattern(s): 1	
one chars had better used some uint32_t btw



28558763
children parent
Pattern(s): 1	
a scope cannot see the properties of a scope children scopes more generally descendant scopes
in this case the controller is set in a parent element of the form thus the scope of the form is a child of the controller



28573509
openssl cryptlib
Pattern(s): 1	
openssl is more similar to peter gutmann s cryptlib and gnu s gnutls



28573509
openssl botan
Pattern(s): 1	
openssl is more similar to peter gutmann s cryptlib and gnu s gnutls
perhaps even jack lloyd s botan



28573509
openssl gnutls
Pattern(s): 1	
openssl is more similar to peter gutmann s cryptlib and gnu s gnutls



28573509
crypto++ botan
Pattern(s): 0	
crypto++ provides more low level cryptographic primitives



28617795
orientdb arangodb
Pattern(s): 0	
rientdb uses a dialect of sql as orientdb query language whereas arangodb uses orientdb own custom language called aql
in theory aql is better because orientdb s designed explicitly for the problem in practise though it feels quite similar to sql but with different keywords and is yet another language to learn while orientdb s implementation feels a lot more comfortable if you re used to sql



28617795
orientdb arangodb
Pattern(s): 1	0	1	
orientdb is the more established option with many high profile users
arangodb is newer less well known but growing fast



28687948
firefox safari
Pattern(s): 0	
css3 transform difference in firefox and google-chrome and ie
in fact given that google rejected pointer event on the ground of speed which ie solved by gpu acceleration it can be said that google-chrome and webkit in general - safari is even slower is lagging behind on this front and the only way to help is contributing code to chromium webkit



28690939
division multiplication
Pattern(s): 0	1	
integer division is slower than floating point division but using floating point multiplication on integer causes two conversions
the conversions aren t too bad so in total the floating point multiplication is still faster



28755045
jscrollpane jviewport
Pattern(s): 0	
now before you run screaming from the room swing provides the scrollable interface to allow you to provide more information to the jscrollpane and jviewport including the preferred view port size which allows the jscrollpane to be smaller than the preferred size of the view been displayed when the jscrollpane s been laid out and which is what you re interested in how the view should be sized when the jscrollpane is smaller than the view area



28769477
drawimage putimagedata
Pattern(s): 0	
don t use getimagedata putimagedata for clipping since drawimage is easier and faster.



28857961
packets multicast
Pattern(s): 0	
at the network interface level only those hosts that have joined the multicast group will receive packets associated with the rendezvous traffic
similarly at the network switch level multicast is a lot less resource-intensive



28908085
addition multiplication
Pattern(s): 0	
any overflow resulting from the two multiplication or the addition is also ignored the result is truncated to 64 bits
the last term determines the bits in the low 64-bit half of the result and if the result of that multiplication has more than 64 bits the extra bits need to be added to the high 64-bit half obtained from the parenthesis discussed before



28937733
versioning upgrade
Pattern(s): 1	
as a software life cycle beta bleeding edge nightly build versioning tend to have more bugs or breaking changes which will directly lead to breaking up your system script
therefore choosing a stable versioning is more appropriate in most cases unless you want to have the new feature in the beta versioning
last there are usually migration guides to upgrade your versioning but not downgrade your versioning



28940208
inline inlining
Pattern(s): 0	
as the others have noted in a modern compiler inline is little more than a linkage modifier
actual inlining is controlled by optimisation flags linkage requirements and compiler-specific attributes



28941584
integer unsigned
Pattern(s): 0	
if you want the bit pattern without padding bits of a signed integer little endian
print_bits gives different results for negative numbers depending on the representation used it gives the raw bit pattern print_bits_2scomp gives the two s complement representation possibly with a greater width than a signed int has if unsigned int has less padding bits



29017088
int double
Pattern(s): 0	
when the result of math.pow i j a double is larger than integer.max_value and you cast to an int then the result of math.pow is integer.max_value



29039594
oncreate recreate
Pattern(s): 0	
so setting a fragment is destroyed and recreate these transitions will be forgotten in oncreate is much safer



29063549
swift objective-c
Pattern(s): 0	
a big reason you need casts right now in swift is because some objective-c methods return id which was no problem in objective-c but causes trouble in swift
i expect this to diminish as swift becomes more popular and frameworks are adapted



29063665
int chars
Pattern(s): 0	
what your friend means is strcmp returns an int that is greater than equal to or less than 0
it s not mandatory to return the actual difference between the two chars



29102792
for-loop loops
Pattern(s): 1	
for-loop is faster
you may get at least 40 better performance using for-loop with assigning values inside loops



29173627
super self
Pattern(s): 0	
super has a lesser benefit of reducing requires changes if you rename or change the base class
in python 3 the arguments to super are optional so you can just do super .__init__ self



29218730
quicksort mergesort
Pattern(s): 0	
it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner



29254235
int chars
Pattern(s): 0	
the above will compile even though 100 is a literal of type int which is wider than byte because the compiler knows that the actual value fits in a byte
this is not universally true about assignments like that if you use a chars that has unicode-16 value greater than 128 you would get a compile-time error



29291267
for-loop loops
Pattern(s): 1	
but the more modern python idiom for reading a file line-by-line is to use a for-loop as padraic cunningham s answer uses
a while loops is more commonly used to read a binary file fixed chunk by fixed chunk in python



29301738
gridview repeater
Pattern(s): 1	
it is possible to create a table with repeater - how to create a three column table in asp.net repeater but it will require a bit different markup with properly set table tags
and perhaps gridview is a better alternative to manual table creation



29380178
coalesce nullif
Pattern(s): 0	
using a case statement works but i think coalesce is a little cleaner
as eggyal said it s best to use null values but if you re stuck using zeros you could add a nullif



29478000
width margin
Pattern(s): 0	
if the content leads to a width that is less than 100 of the table s containing block then setting the left right margin to auto will center the table within the containing block



29511619
marathon aurora
Pattern(s): 0	
even though aurora has better capabilities i prefer marathon due to auroras complexity overhead and lack of ui for control api



29512737
rsa aes
Pattern(s): 1	
you could for example generate a random aes key encrypt it using rsa and store it in the output file and then encrypt the file itself with aes which is much faster and doesn t have any problem with large inputs



29729778
touchesbegan touchescancelled
Pattern(s): 0	
but instead of using a bool value which only tells you true or false why not use two nstimeinterval ivars instance variables to mark the last time a pair of touchesbegan and touchesended or touchescancelled gets called
if the value of touchesbegan is greater than touchesended then an active touch is going on



29729778
touchescancelled touchesended
Pattern(s): 0	
if the value of touchesended is more than 3 seconds beyond the current time and the time of touchesbegan is still before touchesended then it s time to show your hint



29860103
google-chrome firefox
Pattern(s): 1	
the html5 spec does not recognise the form controls as replaced elements and suggests that they be rendered as inline-block which would make google-chrome s behaviour correct but there are many ways in which all the browsers including google-chrome simply don t behave that way
from a backward compatibility perspective with old web content the firefox behaviour is more reliable



29865957
for-loop loops
Pattern(s): 0	
also with the for-loop it s considered better to limit the scope of the iterating variable i and to use println you need system.out not just system and you need a string java arrays do not override tostring so something to output the numbers the user entered after loops like



29899515
for-loop loops
Pattern(s): 0	0	
assuming no compiler optimizations then the for-loop is unavoidably slower
although both approaches are o n the for-loop has a larger constant because of loops overhead



29969570
translation localization
Pattern(s): 0	
now the text is translation
and indeed in xcode 6 localization is easier than ever because all your localized material can be exported imported as a unified .xliff file.



30137992
client-side server-side
Pattern(s): 0	
if your transcoding system has a restfull api like bitcodin which is used in this tutorial or any other service you can do your application also client-side and use the api calls to get the state of your transcodings etc
however using the api you can do the same also server-side whatever fits better for you



30176677
min max
Pattern(s): 0	
hen making the min and max make it equal to the first value in the loop
if the max is less than the current number being looped then set the max to the current value being looped



30228655
jruby mri
Pattern(s): 1	
the difference really is that mri cannot execute code in parallel and jruby can
you might be tempted to say why i answer no if the experiment shows that mri is faster



30275144
for-loop loops
Pattern(s): 0	
c-style for-loop
so the reason the c-style loops is slower is because it s performing an extra operation checking for overflow



30293513
for-loop loops
Pattern(s): 0	
your for-loop is wrong
it will only loops if i is less than 0 but since i is 0 i is 0 never does



30315176
strdup strncpy
Pattern(s): 1	
it depends on what you are allowed to use but i guess the safest way would be to use strdup and check if it has returned null
in the case where you re not allowed to dynamically allocate memory the use of strncpy is still a more secure alternative to strcpy



30414581
r5rs r6rs
Pattern(s): 1	
the r5rs standard is very small and doesn t include such basic things as error handling or even detecting which compiler interpreter your code is running on
the r6rs standard is more extensive but not widely implemented



30425603
swift objective-c
Pattern(s): 1	
that s because objective-c is far less strict and is willing to do some implicit casting on primitives
with that said swift has a handful of types that are more equivalent to c c++ and objective-c s int and the other sizes of integers



30452913
xapian whoosh
Pattern(s): 1	
for searching xappy xapian is faster there was no parallel processing used
but you see that the speed difference between xappy and whoosh is maybe not as big as you expected



30500633
filtering grouping
Pattern(s): 0	
the ldap search filtering you could use is
but as noted in the comments a grouping is much easier and more maintainable



30584410
ceil floor
Pattern(s): 1	
but full floating point division and ceil is more expensive than necessary
instead since c defines integer division as a floor operation you can add the divisor - 1 before dividing to the get the effect of a ceiling operation



30630740
rouge pygments
Pattern(s): 0	
note that at time of writing rouge has lesser language support compared to pygments



30632735
getelementsbytagname getelementbyid
Pattern(s): 1	
also getelementsbytagname returns a nodelist not an element so the value property is not defined you d have to iterate through the list or access the first element
getelementbyid is better if you don t mind using ids



30645551
width margin
Pattern(s): 0	
you must set the leading and trailing numbers to zero never negative even though the width is bigger
interestingly you can actually set the leading trailing numbers to any positive value try say 50 and it gives you kind of a margin of the bounce



30758392
uicollectionview uitableview
Pattern(s): 0	
uicollectionview is like uitableview but uicollectionview supports more than single-column layouts



30758392
uistackview uicollectionview
Pattern(s): 0	
uicollectionview is like a grid uistackview is only for 1 dimension vertical or horizontal
uicollectionview is like uitableview but uicollectionview supports more than single-column layouts



30844848
post get
Pattern(s): 1	0	
i believe you re on the right track with post
get is much more simplier



30887647
freebsd linux
Pattern(s): 1	
this is in part why bash is predominant on linux
the default shell on freebsd is more usable out of the box



30981588
qbytearray qchar
Pattern(s): 1	
qbytearray is not
a qchar is more like wchar_t although it is a class and offers more functionality than merely storing characters



31040218
sudo passwd
Pattern(s): 0	
if you need to create an new user and passwd
sudo -u postgres createuser john -s



31102141
post get
Pattern(s): 0	
lternatvely you can use get_the_terms to get the terms attached to a post and use the term slug as value in your css class
this is a bit unreliable if a post has more than one term attached to a post



31129894
versioning upgrade
Pattern(s): 0	
bundles with the same upgradecode have an upgrade relationship.the
higher versioning removes the lower versioning



31168935
postgresql mysql
Pattern(s): 1	
between the two i think postgresql is more suitable for a central data warehouse
mysql doesn t allow certain sql methods such as common table expressions and window functions



31195152
int double
Pattern(s): 0	
for most modern since the end of the last century linux-compatible architecture there is mostly no penalty for smaller int types
for float types there might be architectures only supporting float not double by hardware or double takes longer to process



31321946
multiplying multiplication
Pattern(s): 0	
so for example if i want to multiplying 4 by 5 and then add 7 to the result i can write
this is valid under normal arithmetic operator precedence rules because multiplication has higher precedence than addition +



31350004
width height
Pattern(s): 0	
specifically the height must be at
least 120px and if the width is less than 100px then the aspect



31377553
submit submission
Pattern(s): 0	
if you use jquery s submit method instead you use jquery s submit method does trigger handlers before submission the form.



31378470
sortedlist sorteddictionary
Pattern(s): 1	
in a sortedlist
i think that a sorteddictionary is even more efficient in this case



31391138
setinterval settimeout
Pattern(s): 1	
ou have to use a settimeout or setinterval or requestanimationframe which is introduced from html5 so you browser can have the control to change the properties on the page
you can see a example from the snippet although the second that use a settimeout is faster than the first one which use for-loop the first one will not change a settimeout color as browser not able to change color during for-loop



31484550
dplyr zoo
Pattern(s): 0	
i find it more intuitive and easier on the eyes than the zoo approach
also using dplyr this makes it easier to do something like change all those missing values to something else which came in handy for me when plotting in ggplot



31543961
mouse trackpad
Pattern(s): 0	
so for a mouse since it scrolls at an interval move 10 y every scroll position it isn t noticeable
but for a trackpad scrolling is at a much finer grain



31600569
for-loop while-loop
Pattern(s): 1	
unless the task is to do the task with a for-loop it is better for learnig the language if you try to get cleaner code
just tell yourself what the code does compare for example the equivalent while-loop with the for-loop



31611893
nsurlconnection nsurlsession
Pattern(s): 0	
using completionhandler -based methods of nsurlsession is much easier



31624015
fgets strtol
Pattern(s): 0	
uggested solution use fgets to read i into a buffer then atoi or strtol to convert a buffer to an integer
or you could do an extra fgets after scanf or getchar in a loop until you ve read a newline but seriously the fgets solution is a lot more robust and worth learning now.



31624015
fgets atoi
Pattern(s): 0	
uggested solution use fgets to read i into a buffer then atoi or strtol to convert a buffer to an integer
or you could do an extra fgets after scanf or getchar in a loop until you ve read a newline but seriously the fgets solution is a lot more robust and worth learning now.



31648732
mp4 h.264
Pattern(s): 0	
mp4 is a container and the video and audio in it may be encoded with various codecs which you will need to check your browser supports most support h.264 and even the same codec using different settings baseline vs mainline profiles



31707312
int chars
Pattern(s): 0	
i has lower rank than int chars integral promotion up to int has better rank than a conversion foo to int so 1 is unambiguously preferred



31780800
flask django
Pattern(s): 0	
the code below uses flask but pure sqlalchemy code is almost the same
as already noted by kevin-christopher-henry there is little point using django orm with non-django framework as well as the other way around if you use django it is much easier to stick to django orm



31849345
udp tcp
Pattern(s): 0	1	1	0	
tcp is a slower more reliable protocol than udp is
in comparison udp is much faster and efficient
for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum



31877618
mvp presenter
Pattern(s): 0	
mvp is not better than mvvm they just fit in different ecosystems
presenter and viewmodel are as their names imply ui beasts



31910378
uitableview uisearchbar
Pattern(s): 0	
a scrolling down of the uitableview will show the headerview aka the uitextfield at the top
btw a uisearchbar is better choice than a uitextfield for your case



31922726
width height
Pattern(s): 0	
if the screen width is larger than the picture width then a blank space will be shown to the right of the image
as there is a footer the bottom part of the image is still hidden by this so you ll need to adjust the picture height to the view area height - the footer height



31929434
division modulo
Pattern(s): 0	
this is not an approach you can count on because division with floats is imprecise
using a modulo is a lot more reliable



32108273
builtin isinstance
Pattern(s): 0	
instead use isinstance x set frozenset
- the hash algorithm for the builtin performs significantly better fewer collisions for most datasets



32128223
jruby mri
Pattern(s): 1	
 m fuzzy on a lot of the finer details between jruby and mri ruby but here s what i know based off of what i ve learned using jruby
jruby is faster because jruby s multi-threaded



32155109
int chars
Pattern(s): 1	
some timings show it is on a string of 1024 chars
just calling list in s and using dtype int is faster



32188412
jcenter buck
Pattern(s): 0	
with gradle running with --offline --daemon --parallel can get you somewhere offline is helpful when you have slow internet access to maven jcenter repos daemon is helpful to keep files cached and parallel is particularly helpful if you have multidex on and have split your app into small modules
without considering the change you would need i would recommend switching to buck which is 10x faster than gradle on dex-xing and spinning up tests but has limited as support



32222024
poltergeist capybara-webkit
Pattern(s): 0	1	
poltergeist phantomjs has less dependencies
capybara-webkit is more stable and reliable and it s better for ci



32224211
pubnub pusher
Pattern(s): 1	
inally note that you mention pubnub which is amazing
it s possible pusher is even more amazing for the example problem you describe - unfortunately i ve not had a chance to try possible pusher



32241874
for-loop arrays
Pattern(s): 1	
here s a test comparing for in using with arrays and a normal for-loop
you can see that the for-loop is way faster



32251927
for-loop loops
Pattern(s): 1	
for your first question lapply add complexity as it s returning a list you re not using the for-loop is more straightforward but slower the overhead may or may not be significant depending on the speed of the called function
for the second part i would go this way dummy input for the example so i kept the inner loops it could be avoided if not calling scalar input function like readpng in the inner loops



32273373
int chars
Pattern(s): 0	
and int has higher rank than unsigned chars



32306527
for-loop loops
Pattern(s): 0	
your for-loop should be like
loops while i is smaller than scope.temp.length arrays starts from 0 zero index



32345178
public protected
Pattern(s): 0	
methods in interfaces implicitly have the access modifier of public
so when you implement it with protected it is a weaker access modifier



32364889
int chars
Pattern(s): 1	
therefore an int can represent every possible value of an unsigned chars
there are apparently systems where chars is more that 8bits



32381524
for-loop loops
Pattern(s): 0	
i think a for-loop makes more sense here
a couple of issues with your code was that you were writing out the file in side loops and you incremented the index by 1 which would then point to the wrong line in the arrays and result in the exception you are getting if the last line contains the text you are searching for



32381524
for-loop arrays
Pattern(s): 0	
i think a for-loop makes more sense here
a couple of issues with your code was that you were writing out the file in side loops and you incremented the index by 1 which would then point to the wrong line in the arrays and result in the exception you are getting if the last line contains the text you are searching for



32383840
int chars
Pattern(s): 0	
the rank of a chars is less than or equal to that of an int so chars is included in here



32407950
cakephp phalcon
Pattern(s): 1	
phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp



32417160
ubuntu debian
Pattern(s): 1	
for instance in a debian 6 system i see the mcomplexprogramtarget macro used only in the motif.rules file which in turn is included from cde.rules and that is not included by any of the platform-specific imake files
since it is unlikely that op has motif installed on ubuntu it seems more likely that this was cut paste from some example which was originally written for motif for solaris back in the 1990s when cde was supported



32418078
stateless stateful
Pattern(s): 0	
also soap is stateful and http is stateless
an stateful approach is worse for scalability



32436990
free malloc
Pattern(s): 0	
here s why checking for null in free is more than just a nice idea
when you use malloc you don t have to remember how much memory you asked for the heap manager does that for you



32446552
post put
Pattern(s): 1	
it isn t possible to pre-sign a put url without knowing the value that will be sent
a post upload is more flexible since you can allow any content-type in the signed policy



32466809
maven m2e
Pattern(s): 1	
elete that directory and then do maven - update project this should fix your problem
by the way mvn eclipse eclipse is almost never the right thing to do it s much better to use m2e for your eclipse integrations as m2e works much more seamlessly



32558439
strcpy strncpy
Pattern(s): 0	
but in this case you need to use strcpy instead of the assignment operator
upd as paulr noted in the comment above strncpy is a way better option



32568924
dplyr tidyr
Pattern(s): 1	
note that i m using the replace_na function from the tidyr package but you could also just do
you can also use the left_join function in dplyr which is often faster than merge



32589390
gruntjs browserify
Pattern(s): 0	
you can run the task using node.js run configuration or configure it as a file watcher or use gruntjs console
browserify is one more way to go - it allows using commonjs-style syntax when developing front-end applications combining the files into a single file for production



32627081
html5lib beautifulsoup
Pattern(s): 0	
you should install html5lib first then can use it as a parser in beautifulsoup
html5lib parser seems work much better than others



32652053
ienumerable iqueryable
Pattern(s): 0	
n your case if you need only data on the client side then return list or ienumerable
iqueryable is better choice for data-tier server side because data-tier server side defer execution



32727933
scala typesafe
Pattern(s): 1	
scala provides more expressive power for describing types statically without runtime conversions
and scala coding style encourage using heavy type constructions for keeping code typesafe



32759274
monodevelop sharpdevelop
Pattern(s): 0	
out of the box monodevelop xamarin studio only has a few t4 templates available so you would need to either write your own or find some from elsewhere
sharpdevelop has more t4 templates or mvc which could probably be used but may require some modification



32762321
width height
Pattern(s): 0	
the stroke-width keeps the thickness constant throughout the lines length that s not what i actually wanted and as people pointed out it s impossible when the width is larger than it s length
i wanted the height in the x axis to be constant along it s length



32772682
pbkdf2 hash
Pattern(s): 0	
you can increase iterations later on to make the hash less vulnerable to brute force attacks as more computing power comes out
despite pbkdf2 bcrypt is harder to accelerate on gpus than pbkdf2



32773652
for-loop loops
Pattern(s): 0	
what this does is a for-loop initializes a variable called i to 0 then loops while i is less than 3 and adds 1 to i after each loops



32808647
int chars
Pattern(s): 0	
since chars are sequential and chars s can be treated as int the chars representing a certain digit can in fact be described by its distance from 0
this way 0 turns turn to the chars 0 5 is the chars that is greater than 0 by five and so on



32830364
disk ram
Pattern(s): 1	
finally if both local and ec2 are pulling data from ram there s a good chance that your local cpu core is just faster than the ec2 cpu core and that your ram access is faster as well



32871108
int chars
Pattern(s): 0	
is at least the maximum number of chars needed to encode the some signed int type as a string consisting of an optional negative sign digits and a null chars
the number of non-sign bits in a signed int is no more than



32895040
range max
Pattern(s): 0	
that will be your range
if max birth ends up greater than min death then there is no overlap



32908530
disk ram
Pattern(s): 1	
accessing the main memory ram is much faster than reading values from the hard disk



32947885
for-loop loops
Pattern(s): 1	
in a language like c a for-loop is more or less syntactic sugar for a while loops



33002536
post get
Pattern(s): 1	
if you are finding that you need to send a large number of query parameters it s probably not really a simple get
my rule of thumb is that if the result is inherently not cacheable it s possible that a post is more appropriate or at least not inappropriate



33003982
arraylist linkedhashmap
Pattern(s): 1	
rows should be stored in treemap or linkedhashmap or arraylist to retain row order
arraylist is better for your case actually



33046435
int chars
Pattern(s): 0	
putting chars into int is ok - both are integers and int has wider range and chars will fit



33061269
move drag
Pattern(s): 0	
otherwise you can update the velocity so the object move towards the touch position
finaly on mousebuttonup set the velocity to the average velocity of the last frames up to a max of 10 if the drag lasts for more than 10 frames



33119632
width margin
Pattern(s): 0	
ositioning the element 20px from left and right and setting width to auto will make it get the right width while respecting the gap you want it to have on either side
and margin auto 0 would work as well simply undoes the margin you used earlier to center the element



33222237
inherited subclassing
Pattern(s): 0	
for example all new-style classes inherited from object so any case of multiple inherited provides more than one path to reach object
to keep the base classes from being accessed more than once the dynamic algorithm linearizes the search order in a way that preserves the left-to-right ordering specified in each class that calls each parent only once and that is monotonic meaning that a class can be subclassing without affecting the precedence order of a class parents



33300859
lemmatization stemming
Pattern(s): 0	
stemming handles matching car to cars
lemmatization implies a broader scope of fuzzy word matching that is



33370537
fgets fgetc
Pattern(s): 1	
fgets is likely faster but it limits line length to some constant
fgetc gets 1 unsigned char at a time or eof



33462258
bash subshell
Pattern(s): 0	
set to the exit status of subshell b the exit status of wc
the bash manpage has more details



33489771
symfony silex
Pattern(s): 0	
now symfony gives us more control over the structure and architecture
good alternative to silex if you prefer the symfony 2 style



33502378
post put
Pattern(s): 0	
it does not matter that your post is idempotent since you remove the link after the reservation was confirmed hateoas so the chance is very low that 2 confirmation arrive for the same reservation
anyways i think put is a better fit



33506433
qplaintextedit qtextedit
Pattern(s): 0	
you should give qplaintextedit a try
it uses the same technology as qtextedit but is a lot faster



33532433
width height
Pattern(s): 0	
idth 60 or whatever the actual width is
if you set the constraints like this the cell height automatically gets higher when the second label wraps the second label text into a second line



33539901
client-side server-side
Pattern(s): 1	
the server-side way is more reliable and browser-independent while the client-side approach will decrease the amount of incoming traffic to server



33546474
integer unsigned
Pattern(s): 1	
as for x mod 2 check the performance depends on whether x is of signed or unsigned integer
the code generated for unsigned types is more effective



33662238
for-loop arrays
Pattern(s): 1	
inside the for-loop it is much more standard to go from 0 to q.length
that way you can change the length of your arrays and the for-loop will still work



33665848
qlist qvector
Pattern(s): 0	
size qlist performs better than qvector because it doesn t store the



33673358
ant maven
Pattern(s): 0	
since ant is more of a scripting tool and doesn t impose structure or lifecycle like maven and gradlew you simply manually invoke ant when you want to use it



33712440
memcpy memset
Pattern(s): 1	
some compilers including gcc are able to optimize quite well with gcc -o2 at least calls to standard functions memcpy and to memset which as my former colleague pascal cuoq commented may be inlined to efficient assignment machine code
sometimes gcc is even able to optimize some assignment to some structures as calls to memcpy sometimes calling an efficient memcpy routine is faster for large enough struct including for structure assignment



33781003
goo.gl bit.ly
Pattern(s): 0	0	
but just try to ignore it or use a url shortener i would recommend goo.gl in this case which makes a 13-character long url
also if you don t want to register for a google account try bit.ly bit.ly makes slightly longer urls with the length being 14 characters



33822916
post put
Pattern(s): 0	
presigned post gives much more control on the upload - like you can limit the size of the upload object its content-type etc



33842790
feedback review
Pattern(s): 1	
t is that kind of permanent review and collaboration which gives a distributed vcs version control system a distributed vcs version control system appeal and strength
the shorter the feedback loop is the sooner the fixes and improvements can be part of the final code which will be in the end merged to the target branch



33865125
folder directory
Pattern(s): 0	
here is an example directory structure in which source code src is separated from temporary precompiled assets .tmp which are separated from the final distribution folder dist
the src folder contains higher level languages such as jade typescript and scss



33885257
rsa aes
Pattern(s): 0	
i will also note that encrypting with rsa is much much slower than encrypting with a symmetric algorithm such as aes



33927584
highland.js rxjs
Pattern(s): 1	
summary because absence of samples you will learn them all imho the most perspective one is highland.js
but rxjs is much more mature



33988085
matlab s-function
Pattern(s): 0	
it is possible that your version of matlab is newer
than the version of matlab used to produce the s-function



34006358
versioning upgrade
Pattern(s): 0	
and check against a number versioning in your code if the database versioning number is less than your code versioning number call a method for to do the upgrade



34051697
awt swing
Pattern(s): 0	
that is probably the oldest solution and was used in awt
swing has newer and better api s which you should be using



34079163
memcpy strncpy
Pattern(s): 1	
i m sorry i advised you to use memcpy but you have to check the lenght of the string to know how many bytes to copy and is not the correct function to use
using strncpy is better because the copy stops when reach a null byte or



34120618
int chars
Pattern(s): 0	
note they could have made it a short but they opted for int instead possibly as a tip of the hat of historical significance to c whose getc function also returns an int but more importantly because short is a bit cumbersome to work with the language offers no means of specifying a short literal so you have to specify an int literal and cast it to short plus on certain architectures int has better performance than short
it appears to return garbage because when you view a chars as an integer what you are looking at is the ascii value of that chars



34151048
swift objective-c
Pattern(s): 1	
2 swift size 17 6mb
there is still a big difference if you ask me so i think for small projects objective-c is more suitable



34236506
folder directory
Pattern(s): 0	
as described in moving files from one git repository to another preserving history this is easier if the file s you want to import are in a folder exporting importing a folder with a folder history is easier than just a file
goal move directory 1 from git repository a to git repository b



34242750
range min
Pattern(s): 0	
if min is bigger than max i just return a random character from the entire range



34257361
google-chrome firefox
Pattern(s): 0	
note that it provides better results smaller size only in google-chrome
firefox sometimes has better compression than canvas-png-compression as for 0.0.3 version



34275131
int chars
Pattern(s): 1	
it seems to be pretty flexible in terms of what you can have here as long as it s an int
the second chars however is much more important



34345594
screens tablet
Pattern(s): 0	
if the screens is wider than it is tall then we infer that the device is in a landscape orientation and vice versa for portrait



34370585
lxml beautifulsoup
Pattern(s): 1	
lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower
also see installing a parser in the beautifulsoup documentation as well as the differences between parsers section



34370585
lxml html5lib
Pattern(s): 1	
lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower



34439702
for-loop loops
Pattern(s): 0	
however i could not pass without saying that for-loop is a far better way of doing this
rather than incrementing position one-by-one and telling while loops to stop when it reaches to the length of the list is just good for understanding the concepts



34446655
width height
Pattern(s): 0	
if you resize the browser so that the height is greater than the width you will notice that the scrollbar goes away which is because the padding is relative to the width



34448106
hash md5
Pattern(s): 0	
it is not probable to make a change and have the same hash even with md5
note that finding a collision to a known hash is harder than just finding any collision



34457553
hash md5
Pattern(s): 0	
sha1 whole file hash
this came after the md5 because the md5 has more address space



34535303
viewdidload viewwillappear
Pattern(s): 0	
also please note that the viewdidload might not be the best place to set frames as those properties might not be yet initialised
viewwillappear is a better place for example



34571355
getter setter
Pattern(s): 1	
the getter makes sure that the variables relation is loaded then returns the first value with a matching key
the setter is a little more complicated because we want to update an existing uservariable model if one exists and create one if it doesn t and in either case save the change in the relation but not the db



34582595
fusedlocationproviderapi locationmanager
Pattern(s): 0	
the fusedlocationproviderapi offers less battery drain than the old open source locationmanager api



34614141
prng random
Pattern(s): 0	
now the probability that a random value is rejected is guaranteed to be smaller than 50 resulting in a very efficient algorithm just like your bit masking approach
for small bounds the probability that prng is called more than once is extremely small



34639846
rdf owl
Pattern(s): 1	
owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes



34642540
int chars
Pattern(s): 0	
but if unsigned int foo had a bigger value you will be losing bytes at the moment when storing this case in a chars variable and will get unexpected results on your program



34689197
fgets getline
Pattern(s): 0	
if you use fgets which is fine you would have to add code to check for a short or incomplete read of each line and realloc and strcat the line until a complete read takes place
getline just makes life simpler here



34714325
for-loop arrays
Pattern(s): 0	
arraylist - for-loop is about more than 2 times faster speed than foreach loops
arrays - both are in equal speed.but foreach loops seems to be a bit faster



34742996
nsubstitute moq
Pattern(s): 0	
moq was a good framework but as far as i remember it s not maintained for a long time now
nsubstitute has nicer syntax as well at least imho



34867440
for-loop loops
Pattern(s): 0	
a for-loop iterates over an iterator which a file object happens to be
loops above is the simpler equivalent of



34920385
button checkbox
Pattern(s): 0	
the checkbox list use the ng-required directive with the someselected function defined in the controller which checks if at least one item is selected
the option button group is easier and use the ng-required directive with the condition



34925635
division multiplication
Pattern(s): 0	
so multiplication is nothing more than n number of shifts and adds which can be implemented in one clock cycle with a massive number of gates



34925635
multiplying multiplication
Pattern(s): 0	
division though fractional whole numbers doesnt matter fractional math is done with whole number math logic blocks anyway just like we did in grade school line up the decimal point then do the add or subtract likewise multiplying and divide we used basic multiplying and divide with a little decimal adjustment
division though is an iterative process in logic the implementations you see on educational sites verilog vhdl are simply doing the same thing we did with log division in grade school but like multiplication it is much simpler than grade school you pull down bits from the numerator in the long division until the number being checked against the denominator is equal to or larger basically the number can either go in only zero times or one times into the number under test unlike decimal where it can be between 0 to 9 times



34925635
division multiplication
Pattern(s): 0	
division though is an iterative process in logic the implementations you see on educational sites verilog vhdl are simply doing the same thing we did with log division in grade school but like multiplication it is much simpler than grade school you pull down bits from the numerator in the long division until the number being checked against the denominator is equal to or larger basically the number can either go in only zero times or one times into the number under test unlike decimal where it can be between 0 to 9 times



34953783
macports homebrew
Pattern(s): 1	
i m partial to macports so i ll give you instructions for that
i get the impression homebrew is more popular but haven t used the impression homebrew myself



34956160
erlang ocaml
Pattern(s): 1	
the erlang pattern is more powerful because the erlang pattern can match against something determined at run time
the ocaml patterns match against things fixed at compile time



34981236
unsigned short
Pattern(s): 0	
that will first convert x from short to unsigned short
then because of the default argument promotions and assuming short is actually shorter than int to int



34997173
snap.svg raphael
Pattern(s): 0	
if you definitely need svg and want to only use existing elements you may want to look at snap.svg which is raphaels younger sister and shares a lot of the same codebase or another like svg.js



35043172
hex binary
Pattern(s): 0	
the bit shift operators and move each binary digit one place over depending on the direction of the arrows and so on
the hex is just a nicer format to visualize the bits without having to write out every single bit



35084494
for-loop arrays
Pattern(s): 1	
as question said huge arrays
native for-loop is way more faster than any of the above and cache of the length is can improve some of ms milliseconds



35112553
post get
Pattern(s): 0	
just change the method for the form to post if you want to do it via post
both are equally insecure although get is easier to hack



35117313
integer fractions
Pattern(s): 0	
you can determine whether an additional letter is possible with integer arithmetics a fractions tells you how many letters come between each letter pair
you accumulate this fractions and use letters from the longer array as long as that accumulated fractions is larger than frac12



35180854
width margin
Pattern(s): 1	
width + translate is maybe not the best way
block and margin auto is less tricky



35189561
quicksort mergesort
Pattern(s): 0	
mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort



35232309
post get
Pattern(s): 1	
n the one of okhttp you send a put method with a json object serialized and in postman you send a put although i guess you do a get request with the parameters within the url i mean not in json body structure
anyway http 405 is telling you that your backend does not support the put method and probably your backend s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put



35236813
post put
Pattern(s): 0	
i know this is an older post but when i first was looking at how to do this i came across an older post and knew an older post was the answer but i still didn t know things like did the credentials need to be coma separated etc
so just in case this might help someone out here are my notes for fiddler i put together for a json post



35327589
for-loop loops
Pattern(s): 0	
look at the condition in your for-loop
you re telling the compiler too loops while i is bigger than 14 which is never true



35370707
pandas recarray
Pattern(s): 1	
in particular translating the above straight to pandas runs in a little under 4 milliseconds -- maybe pandas is more clever about something



35395844
for-loop loops
Pattern(s): 0	
sually it is more common to use the for-loop when the number of repeats is known and we re not going to change we counter index
while loops also has the advantage of a sentinel loops which is easier for example when taking inputs from a user until something specific is given



35398669
jar war
Pattern(s): 1	
this will result in a runnable jar with only the specified class of your project
since your project is a war it is a little more complicated



35447787
division exponent
Pattern(s): 0	
the problem isn t the division itself
if the exponent of a and k are the same almost no precision is lost and if the absolute difference between the exponent is greater than the significand size then either if a has larger magnitude or if k has larger magnitude



35641763
swift objective-c
Pattern(s): 1	
btw objective-c nsarray performance stinks
if you re going to use the native container objects in both languages swift is dramatically faster



35665176
microchip plc
Pattern(s): 1	
ou might also ask questions about performance on an arduino or microchip atmel arm forums
if you tell them that a plc is faster than them hardware that will rile them up real good



35687675
google-chrome firefox
Pattern(s): 1	
once they do this it will work just like google-chrome
firefox is less liberal with permissions by design and unfortunately there is no way for a web page to carry non-persistent permission from one page to another or even from one call to getusermedia to another on the same page without user-consent for each call



35732564
int boolean
Pattern(s): 1	
still int is faster
so what about creating the boolean mask



35763363
qplaintextedit qtextedit
Pattern(s): 0	
it uses most of the features of qtextedit but with a vastly better performance
using qplaintextedit is better than using qlabel for displaying large text documents as the former has many more capabilities and features for customization and formatting



35831287
pylons pyramid
Pattern(s): 1	
pylons is shifted into legacy status
so going for pyramid is better



35875480
for-loop arrays
Pattern(s): 0	
conclusion either reverse for-loop are a while with indexof are currently the best methods i can find to remove multiple instances of the same element from an arrays
using filter creates a new arrays and is slower so i would avoid that



35880113
ssl https
Pattern(s): 1	
gmail measured ssl accounting for just 1 of cpu load and 2 of network overhead when gmail switched everything to https
ssl is getting faster every year reducing already modest costs



35935334
post put
Pattern(s): 0	
without wanting to self-promote i ve also put together a blog post that goes into more detail on the aforementioned answer that should be of some use



35958453
src attr
Pattern(s): 0	
display attr function is better to get src attribute



35967374
http spdy
Pattern(s): 0	
http 2 is even better than spdy and check this article for a use case regarding spdy



35990799
super extends
Pattern(s): 0	
also there are no calls to super methods in c
extends behaves more like what you d expect from the keyword



36024287
distance polygons
Pattern(s): 1	
the circle is trivial just check if the distance from your point to the center is smaller than the radius
the polygons is a little more complicated point in polygons



36206664
directx direct2d
Pattern(s): 1	
he deprecated d3dx9 functionality for drawing styled lines that is used by the legacy managed directx 1.1 microsoft.directx.direct3d.line class used textured triangles which is why msnd mentions that
direct2d is far more advanced and has direct2d acceleration paths



36223830
post get
Pattern(s): 1	
the most obvious difference is that the get method works by appending variables values to the url as you displayed in your question
the post method is more hidden -- you need to use developer tools to see the data -- so the post method is preferred



36252935
imperative declarative
Pattern(s): 1	
however building a value an array in this case using a for in does force us to use mutable values and imperative code
we should avoid both as much as possible because immutable values are safer and declarative code is more clear and potentially faster



36282977
for-loop loops
Pattern(s): 1	
so really stick to your own for-loop logic
they simple loops is also the more performant



36419237
octal decimal
Pattern(s): 1	
so 01200 is base 8 which in decimal is 640
essentially this is paying homage to older times where octal literals were much more common



36451285
jedi-vim python-mode
Pattern(s): 0	
jedi-vim coolest name but breaks your undo history
python-mode does a lot more the autocomplete folding syntax checking highlighting



36461065
width height
Pattern(s): 0	
and if the width is greater than y or vice versa than the origin of the transform will be translated to a smaller distance than the side of greater length
for example if your width is 30 and your height is 60 than the origin point will be set as -15 -30 from where the transform was original set



36468342
nsurlconnection nsurlsession
Pattern(s): 0	
nsurlconnection is a much older api introduced in os x 10.2
nsurlsession was introduced in os x 10.9 and has a more modern task- and block-based api



36548985
width height
Pattern(s): 0	
and if the width is greater than y or vice versa than the origin of the transform will be translated to a smaller distance than the side of greater length
for example if your width is 30 and your height is 60 than the origin point will be set as -15 -30 from where the transform was original set



36560105
udp tcp
Pattern(s): 0	
switching our attention from the terminal driver to network sockets i had thought that under certain circumstances if you do a read on a udp-mode socket and the actual udp packet is bigger than your read request you can lose the rest of the packet there too
although a commenter suggests i may be wrong tcp mode sockets on the other hand are obviously hugely buffered



36666874
udp rtp
Pattern(s): 1	
tp on the other hand adds another level of encapsulation where video audio content will be encapsulated into an rtp packet and the rtp packet will be in turn encapsulated into the udp packet
rtp is much better suited for media streaming because rtp includes timestamp and sequencing information



36731059
hash md5
Pattern(s): 0	
then when testing the password for correctness you hash the password for correctness the same way and then compare the results -- sha1 is a common hash for this md5 is better than nothing



36735141
factors matrix
Pattern(s): 0	
so although the contrasts for missing factors levels are dropped in terms of estimating the coefficients those factors levels still appear in the model matrix
this means that the model matrix has more columns than the length of est1.qbar the vector of estimated coefficients so matrix multiplication is not going to work



36738152
width height
Pattern(s): 0	
thus you can write a script that would look at the width property and act accordingly that being if the width is 32.8 then check the height and apply the logic for if the height is greater than desired see article here



36761846
ggplot2 cowplot
Pattern(s): 1	
moving axes in ggplot2 became more complex from version 2.1.0
this solution draws on code from older solutions and from code in the cowplot package



36808780
union distinct
Pattern(s): 0	
union all is better than union because it avoids a sort you know you ll get a distinct set because you re joining on two different tables



36830863
implements extends
Pattern(s): 1	
that way you have to implements every method in the collection interface bt
making your class extends abstractcollection extends abstractcollection is much more easy since it does



36868698
folder directory
Pattern(s): 0	
in order to only copy directory beginning with test you could do the following
if your folder structure is more than one level deept you could use the -recurse switch on get-childitem



36896454
typedef struct
Pattern(s): 0	
since the struct is larger than this you re writing to members that are past the memory offset of the allocated size



36909196
datamapper activerecord
Pattern(s): 0	
in my experience datamapper is nice because you don t need to write migrations
but activerecord has a better query interface



36929645
post put
Pattern(s): 1	
an http post is more general
an http put is supposed to initiate an action on the server



37037914
google-chrome firefox
Pattern(s): 1	
selenium can t launch google-chrome without google-chrome driver as google-chrome is no longer part of webkit and selenium can only launch webkit browsers by default
you should be able to launch firefox if firefox s installed without needing any additional binaries



37086298
range infinity
Pattern(s): 0	
the overlaps operator checks for overlapping date range
using something like date 9999-12-31 in the coalesce would also work but using infinity makes this more explicit at least in my eyes



37155338
minimum max
Pattern(s): 0	
check to see if the absolute maximum is bigger than the absolute value of the minimum
if the max is larger stick with the larger value and perform a max calculation



37155338
min max
Pattern(s): 0	0	
if the max is larger stick with the larger value and perform a max calculation
if absolute min is larger then just perform a min calculation and you will maintain your sign



37195414
min max
Pattern(s): 0	
here s no need to call max because
dealing with min is trickier but if you keep track of which key corresponds to the minimum index then you can recalculate the minimum index only when that key is updated



37233968
nsurlconnection nsurlsession
Pattern(s): 0	
use nsurlsession instead
it replaces nsurlconnection and is far better



37253509
memcached apc
Pattern(s): 0	
i d suggest using memcached especially if you re concerned about performance
whilst you are correct that apc u is a lot faster than memcache you re not taking into the account that by the time you re worrying about these metrics you will be running across multiple servers and apc u cannot be shared across nodes



37291590
awt swing
Pattern(s): 1	
applet awt is a relatively discarded technology
the newer japplet swing has no longer that large a browser support too



37294608
cobertura jacoco
Pattern(s): 1	
it provides additional features compared to cobertura
i tried jacoco and other tools and found jacoco generated reports more comprehensible and useful compared to other



37345111
vsto add-in
Pattern(s): 0	
as a former vsto add-in dev you have to rethink the way you design office add-in
a web add-in is no more than a web app using a library office.js to fill the bridge between your logic and the office host



37348529
filesystems ntfs
Pattern(s): 0	
when ms switched to the fat32 filesystems that used longer names and later to the ntfs this created migration issues



37350176
draggable droppable
Pattern(s): 0	0	
i think the problem is when the draggable height is larger than the droppabe height
the draggable is covering more than one droppable element and at this point there are multiple event.target.id s being covered



37364504
for-loop loops
Pattern(s): 1	
c s for-loop was made much more versatile for a good reason and placing purely artificial limits on it does nobody any favors at all
simple rule of thumb if you re actually using at least two out of the three clauses in the for-loop s header it s better to use a for-loop than a while loops



37412054
int double
Pattern(s): 1	
2 unless you have a strong reason to use int it is more idiomatic to use double for spreadsheet values



37425695
lisp scheme
Pattern(s): 1	
scheme looked more like cl than scheme but was a lisp1 so the empty list rules cannot be about lisp1 vs lisp2 since scheme was a lisp1 from the first report that didn t require quoting and has nil as a false value



37448602
cpu processors
Pattern(s): 0	
modern systems have extremely complex memory architectures with multiple layers of memory and caches either private and shared across cores and cpu
quite obviously accessing a data in the l2 cache in the current processors is a lot faster than having to go all the way to a memory stick from another socket



37479236
rsa dsa
Pattern(s): 1	
yes rsa is considered more secure
in october 2014 openssh 7 the default with ubuntu 16.04lts has disabled default support for dsa



37674323
multiplying addition
Pattern(s): 1	
multiplying .3 by 10 and adding .3 to .3 nine times you will see that
addition produces the less precise result because it involves eight



37733425
crossover mutation
Pattern(s): 0	
some form of mutation is another possibility
probably if the characteristics of cx aren t satisfying a different crossover operator is a better choice staying with simple operators one of the most successful is order crossover 2



37737510
mergesort in-place
Pattern(s): 0	
3 mergesort uses more memory because it creates two new arrays of half size for the two recursive calls
in-place merge sort and quick sort should take around the same space because 2 the whole purpose of sorting is the make the input arrays sorted so not sorted input arrays will be sorted by the in-place mergesort



37772133
width margin
Pattern(s): 0	
for a horizontally centered image - display flex and justify-content center on the parent element of the image that has a specified width
however for your example i used margin auto because margin auto is actually simpler



37788181
for-loop arrays
Pattern(s): 1	
rraylist s listiterator has to do some work before arraylist s listiterator can return the next arrays entry whereas when the enhanced for-loop knows arraylist s listiterator s dealing with an arrays arraylist s listiterator can work directly on arraylist s listiterator
the test classes above have testing cruft in the test classes above but to see why the arrays version is faster let s look at this simpler program



37805257
innodb myisam
Pattern(s): 1	
a table scan in a myisam table spends a lot of time stepping over cow paddies
innodb is much faster if you don t touch the blob



37950467
direct3d directx
Pattern(s): 0	
unless you are targeting windows xp direct3d 11 is a better choice all around
see the directx tool kit tutorials



38025208
inline inlining
Pattern(s): 0	
sometimes it might perhaps go slightly slower because inlining increases machine code size which is detrimental to cpu cache efficiency read about locality of reference
also a header file with many static inline functions needs more time to be compiled



38028245
coalesce nullif
Pattern(s): 0	
using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times
you can also use nullif to check the conditions in those null valued columns



38082311
for-loop arrays
Pattern(s): 0	
if onloadstarted is an event handler then the for-loop is executed much faster than the all the event handlers
in that time i is 5 and during each function call the sixth index of the arrays is populated with a true value



38149522
width height
Pattern(s): 0	
setting the height of an elements is not done often at least from my experience
on mobile platforms width is usually more of a concern



38153721
countif sumifs
Pattern(s): 1	
the countif variation was pretty straightforward.
the sumifs variation was a bit more tricky to get the sumifs variation to be flexible enough for regular use



38255275
memcpy strcpy
Pattern(s): 0	
you take a small performance hit that you don t if you use strcpy
if you compute the length of the string for unrelated reasons or have the length of the string from other resources it s unclear to me whether memcpy is better or worse than strncpy



38276189
git-svn svn2git
Pattern(s): 1	
it is great if you want to use git as frontend for an existing svn server but for a one-time conversion you should not use git-svn but svn2git which is much more suited for this use-case



38278549
flask django
Pattern(s): 0	1	
django is more of an opinionated framework which may be better if you re just starting out and want to get up and running quickly
flask is more open-ended but will also require more from you both in time and knowledge



38303403
laravel yii
Pattern(s): 0	
developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer



38314331
x86 64bit
Pattern(s): 0	
most instructions are the same speed for all operand-sizes because modern x86 cpus can afford the transistor budget for wide alus
exceptions include imul r64 r64 is slower than imul r32 r32 on amd cpus before ryzen and intel atom and 64bit div is significantly slower on all cpus



38333420
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



38377736
width border-box
Pattern(s): 0	
additionally borders paddings and so on use room so the required minimum window width is even larger
use relative widths for both elements 70 30 and set box-sizing style to calculate actual widths to include the padding and border border-box



38399780
swift objective-c
Pattern(s): 1	
in swift it will crash when you try to use an object before it is initialized
objective-c is a little more forgiving and will just do nothing if you tell it to use a nil object at least in the instances you are using



38415996
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



38511168
width height
Pattern(s): 0	0	
a width is greater than than b width
b height is greater than than c height



38574726
hash md5
Pattern(s): 0	
a cryptographic hash takes longer to calculate but changing just one bit in the input will radically change the output and for a good hash sha-512 there s no known way of getting from output back to input
md5 is breakable you can fabricate an input to produce any given output if needed on a pc



38580502
qtoolbutton qpushbutton
Pattern(s): 0	
qtoolbutton has smaller default internal margins than qpushbutton



38590955
libc ldd
Pattern(s): 0	
and you should check always with ldd first
maybe your new libc requires some more older variants of other libs which can not be found on your system



38590955
libc ldd
Pattern(s): 1	
normaly libc did not require other libs but i have no idea what game you are playing
whatever ldd gives you a more detailed answer to the things which are going on in the library loading phase



38622854
subtraction multiplication
Pattern(s): 0	
thanks to twos complement signed and unsigned addition and subtraction are the same
multiplication is a little trickier multiplying two 32-bit digits can produce a 64-bit result



38622854
addition multiplication
Pattern(s): 0	
thanks to twos complement signed and unsigned addition and subtraction are the same
multiplication is a little trickier multiplying two 32-bit digits can produce a 64-bit result



38623228
versioning upgrade
Pattern(s): 1	
in the upcoming 5.1 versioning that shrinks even more that we re only about 3x slower than hand-mapping mainly due to null checking that hand mapping won t do
i d upgrade



38639130
int chars
Pattern(s): 1	
if code uses chars limited to an 8-bit range excessively large data types slow things down
with single instances of a type int is often better as that is typically the native type that the processor is optimized for



38713277
innodb myisam
Pattern(s): 1	
myisam works best on non-transactional purpose such as where you need search
innodb works better where you use transaction such as insert update delete



38805354
client-side server-side
Pattern(s): 0	
having that said there are situations when client-side rendering makes sense when some content is too long to load at once and it is better to show the page and a progress indicator we are loading your data...
nevertheless for most content-oriented websites and portals nearly complete server-side rendering is a better way to go



38838903
prng random
Pattern(s): 0	
hat is where prngs are used to stretch the real entropy to produce more pseudo random numbers from the smaller amount of entropy provided by the trng
the real entropy is used to seed the prng and the prng produces more numbers based on that seed



38912189
post put
Pattern(s): 1	
econd you can put your post logic into a form.save method
imo your post logic is much more appropriate there and your post logic close to what django is doing inside your post logic passwordresetform



38953992
int double
Pattern(s): 0	
x is of type chars chars to int is a better conversion than chars to
use double quotes to create a string literal



38962404
robocopy xcopy
Pattern(s): 0	
the differences i could see is that robocopy has a lot more options but i didn t find any of t particularly helpful unless i m doing something special
i did some benchmarking of several copy routines and found xcopy and robocopy to be the fastest but to my surprise xcopy consistently edged out robocopy



39061079
interpreted-language smalltalk
Pattern(s): 0	
art is an attempt to do that the way st does with a strong type system and a semantic runtime equivalent to an interpreted-language with near-assembler speed but with js syntax since google has tons of traine node.js programmers on staff
creating a smalltalk vm is much easier than something like the jvm since the jvm only includes the base object the code to interop with os libs and is dart written in smalltalk and converted to c or the cross platform libs to f-script on macos using slang clang on macos



39092555
addition multiplication
Pattern(s): 0	
this starts to explain why the speed increases again beyond the number of passes per addition increases slower than the number of additions decreases as you re only adding 15 bits to the inner value each time
the inner multiplication are fast relative to the massive total multiplication so the more time spent consolidating values the more time saved in passes over total



39111922
for-loop loops
Pattern(s): 0	
while loops
the for-loop has fewer distinct lines of code - which makes sense because it wraps up the initialization and increment in one line



39123285
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



39187518
tokudb myisam
Pattern(s): 0	
most of other options listed in your screenshot are either special-purpose storage engines which are not suitable for general use memory example federated archive csv and blackhole or are not available in standard builds of mysql most of the rest inifinidb brighthouse and tokudb
the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb



39234785
disk ram
Pattern(s): 1	
hen skipping the rows the rows must fetch the rows -- if the rows are on disk this take time
if the rows are cached in ram it is much faster



39267550
width height
Pattern(s): 0	
for example if set to 900 whenever the browser s width is less than 900 the plugin will scroll like a normal site
responsiveheight default 0 a normal scroll autoscrolling false will be used under the defined height in pixels



39300632
for-loop loops
Pattern(s): 1	
you want to achieve all this without a for-loop working simultaneously on every row
well my first example might have fooled you but arrayfun is just a wrapper for a loops and is not more efficient than the equivalent loops



39309543
coalesce isnull
Pattern(s): 1	
however coalesce evaluates the first argument twice
so for an expensive operation such as a user-defined function isnull is more efficient



39312390
strcpy calloc
Pattern(s): 1	
you must use strcpy in that case
obviously dynamic allocation with malloc or calloc is more flexible



39365109
ionic angular
Pattern(s): 0	
ionic is faster than jquerymobile
if you want dom manipulation you can use custom directives in angular to manipulate your dom in much easier way than jquery



39417758
inherited properties
Pattern(s): 0	
javascript inherited is a lot less magical implicit than in other languages before es6 classes at least
in your example you have a function parent which sets two properties on this



39426715
cat tee
Pattern(s): 0	
redirection to the same file will create truncate the file before cat command is invoked as cat command has a higher precedence
you could avoid the same by using intermediate file and then from intermediate to actual file or you could use tee like



39440536
x86 mips
Pattern(s): 1	
other than that everything looks really obvious and straightforward if you ve seen x86
iirc mips is more like the one step version since instead of a flags register its compare instructions use gp registers as outputs



39498852
for-loop loops
Pattern(s): 1	
i think the problem you try to solve with the inner loops is that you don t know which index to put the new element into because you didn t keep track which filename entry you were processing
this is a scenario where a traditional for-loop is more handy than just iterating over the arrays



39586742
pull push
Pattern(s): 1	
pull is better in dealing with diversified consumers



39589499
subtraction addition
Pattern(s): 0	
this took 6 steps but leads to a number that could be arrived at in 5 steps subtract 1 divide 3 times add 1 so clearly we should not perform the addition
subtraction is always better



39589499
subtraction add
Pattern(s): 0	
this took 6 steps but leads to a number that could be arrived at in 5 steps subtract 1 divide 3 times add 1 so clearly we should not perform the addition
subtraction is always better



39589499
subtract addition
Pattern(s): 0	
if a ends in 0 then we could have done this in 5 steps add divide three times subtract if a ends in a 1 then even in 4
so addition is always better



39619481
viewdidload viewwillappear
Pattern(s): 0	
for my case it was enough to put the call to viewdidload i was using storyboard in that project
for other cases viewwillappear fits better



39687903
min max
Pattern(s): 0	
when we know that min is actually less than mid we try to put max at the right place in this way



39810452
int chars
Pattern(s): 0	
indexof string str and indexof string str int fromindex
i don t know but i would assume that searching for a single chars is faster than searching for a string



39829397
portrait landscape
Pattern(s): 0	
your imageview in landscape is smaller than portrait



39842607
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



39877908
pthreads fork
Pattern(s): 1	
threads used to have vfork alognside fork and some systems may have some systems own mechanisms such as linux-specific clone but since 2008 pthreads specifies only fork and the posix_spawn family
vfork alognside fork is more traditional is well understood and has few drawbacks see below



40018967
width height
Pattern(s): 0	
the limitation here is that you need to specify a width for the right-hand side panel element which may not be too limiting since you know something about the design of the button such as its dimensions
you might need to specify a min-height for the parent .wrap for cases where you have either no logo or a logo whose height is less than that of the intrinsic height of the button



40019746
maven-install-plugin pom.xml
Pattern(s): 1	
with version 2.5 of the maven-install-plugin it gets even better
if a jar was built by apache maven the jar was built by apache maven ll contain a pom.xml in a subfolder of the meta-inf directory which will be read by default



40033779
opennlp stanford-nlp
Pattern(s): 0	
accuracy-wise my anecdotal experience is that stanford-nlp does better on general-purpose text



40053023
ubuntu linux
Pattern(s): 0	
the ubuntu 14.04 ami doesn t have the aws-cli tool installed nor the unzip command out of the box nor docker for that matter -- so you d need to read over and run in order to get up and running
the aws linux ami has a lot more bells whistles out of the box



40063433
udp tcp
Pattern(s): 1	
udp is much faster
tcp is slow as it requires 3 way handshake



40110286
innodb myisam
Pattern(s): 0	
myisam has a limit of 1000 bytes for indexes
innodb has an even smaller limit 767 bytes unless you re on mysql 5.7.7+ in which case the limit is 3072 bytes by default



40185996
int double
Pattern(s): 0	
xamples with floating point include some cray supercomputers which natively support double precision floating point aka double in c++ and all operations on single precision aka float in c++ are emulated in software
some older 32-bit x86 cpus also worked internally with 32-bit int and operations on 16-bit int required more clock cycles due to translation to from 32-bit this is not true with more modern 32-bit or 64bit x86 processors as they allow copying 16-bit int to from 32-bit registers and operating on they with fewer such penalties



40189110
integer unsigned
Pattern(s): 0	
he variable foo will get promoted using integer promotions 3
the variable foo will get promoted to type int because type int can represent all values of type size_t and rank of size_t being a synonym for unsigned short is lower than the rank of int



40218900
udp mtu
Pattern(s): 1	
but even mtu size 1500 bytes can be too big
there was some research for multimedia streaming application that stated that large udp packets were more often dropped if network was congested and recommended to use something like 400 bytes payload size as a good balance between a chance to be dropped and to not waste bandwidth for udp ip headers



40276363
post put
Pattern(s): 1	
i think a post is more appropriate when the server manages that id
separating the two concepts basically tells you how to deal with the server put is idempotent so the server should always work so long as the payload validates post always creates so if there is a collision of ids then a 409 would describe that conflict



40307693
strtol atoi
Pattern(s): 1	
but in your case the number is given in octal representation so you cannot use atoi
the strtol function is more general because you can specify the base 8 in your case



40329077
post get
Pattern(s): 0	
the get method is useful for passing a reasonable amount of non sensitive data between pages while the post method has less limitations and is best for more sensitive data



40359700
width height
Pattern(s): 0	
res w600dp layout.xml - will be used for all screens which width is greater than or equal to 600dp
3 available screen height - specifies a minimum screen height in dp units at which the resources should be used



40365773
udp tcp
Pattern(s): 0	
udp does not require a long-lived connection so setting up a udp socket is a little simpler
on the other hand udp messages must fit within a single packet for ipv4 that means the other hand udp messages can only hold 65 507 bytes because the 65 535 byte packet also includes header information and delivery is not guaranteed as it is with tcp



40382167
getter setter
Pattern(s): 1	
the setter is not called when we set the value this means that the value actually erase the property and this will no more work as intended
the getter is no more called when we access the value again



40423473
strcpy strdup
Pattern(s): 0	
or indeed if your system has strdup or you re willing to write an implementation then strdup is much cleaner than malloc + strcpy



40436995
qtwebengine qtwebkit
Pattern(s): 0	
regarding rendering of pygal charts qtwebkit does not support all dynamic features while qtwebengine does
the drawback of qtwebengine is much slower startup



40447249
versioning upgrade
Pattern(s): 0	
in case you prefer not to upgrade your chrome installation you can specify a versioning of chromedriver that would work with the installed chrome versioning
you can find the compatible chrome versioning for different chromedriver releases at change 2.25 to a newer versioning if your chrome versioning is newer than what is listed there



40461004
for-loop arrays
Pattern(s): 0	
using a for-loop is actually faster than using enumerable.range .toarray
i measured a for-loop for creating an arrays of 1 000 000 elements



40488038
margin height
Pattern(s): 0	
n order for a div to align center within a container using margin 0 auto
it itself should have a limited width and height that is smaller than it s container



40552946
fgets strtol
Pattern(s): 1	
using fgets generally seems less error-prone than tangling with scanf but if the user enters a string that is as long as or longer than the maximum number of characters specified any extra characters up to and including the newline remain in the input stream
for this reason i usually write my own version of gets to get input strings from the user and if i want numeric input i use strtol



40558886
children parent
Pattern(s): 1	
you could similarly make children the transient field if explicitly recording the parent relationship is more helpful



40643830
dictionary map
Pattern(s): 1	
turning the dictionary values into sets would not gain anything as the conversion would be o n with n being the added size of all values -lists while the above disjoint operation will only iterate each values until it encounters a testx with o 1 lookup
map is possibly more performant compared to a comprehension if you do not have to use lambda if key can be used as the first positional argument in resp s __init__ but certainly not with the lambda



40692160
width height
Pattern(s): 0	
you parallelize the first inner loop with and then you ll have a performance boost only if the overhead of spawning a new thread for every width element is much smaller the efforts required to perform the most inner loop
parallelizing the most inner loop but this is the worst solution in the world because you ll respawn the threads 3 height times



40705439
udp tcp
Pattern(s): 0	
note that if tcp loses too many packets the connection dies
thus udp gives you much more control for this application since udp doesn t care about network transport layer drops.



40708984
cpython pypy
Pattern(s): 0	
it also clearly demonstrates that cpython 3.5 is slower at this than 2.7 which is sad but expected
pypy is not only a solid 5x faster than either of them but all three algorithms perform equally well



40715077
google-chrome firefox
Pattern(s): 1	
conclusion in firefox 50.0 is a lot faster for your code path and filter is about 10-15 faster than jquery.grep
google-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making google-chrome 900 slower than the firefox run



40828578
rdd spark-avro
Pattern(s): 1	
in order to convert the avro schema i used spark-avro like so
the convertion of your rdd was more tricky



40903015
.htaccess httpd.conf
Pattern(s): 0	
.htaccess is slower harder to manage and potentially less secure
if you have access to the httpd.conf then placing rules there can be easier to manage in one place faster allowoverrides none means that the server does not look in the current directory and any parent directories for an override file to parse and follow and since .htaccess files are not present in the website directory they cannot be edited and if created will be ignored



40925645
daemons systemd
Pattern(s): 1	
restart docker daemons
on unbuntu 16.04 check also if configuring docker through systemd is better



40943014
jtextfield jtextpane
Pattern(s): 1	
so it may be impossible with jtextfield
but jtextpane is more flexible at least when running on windows



41011604
subclass superclass
Pattern(s): 1	
in other words if a subclass is more accessible than a subclass superclass then the access modifier of the superclass loses effect



41035711
cashapelayer uiimage
Pattern(s): 0	0	
also i have to mention that the cashapelayer solution takes less memory which is critical for really big images
but the uiimage is easier to use



41035985
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case and should not suffer from oom error



41071643
memcpy memmove
Pattern(s): 1	
memcpy is more efficient than memmove. in your case you most probably are not doing the exact same thing while you run the two functions



41145820
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case and also makes proper git tags from the svn tags



41183087
free memcpy
Pattern(s): 0	
make the background thread responsible for creating new buffers if you fall below some minimal level of free ones to keep dynamic allocation out of the critical loop
as voo says just reading directly into your big buffer and avoiding the intermediate memcpy etc. is simpler still



41192405
multiplying division
Pattern(s): 0	
the value of i is less than 2 64 so the error after multiplying is less than 1 5
after the division by 4 the error is less than 1 5 2 minus



41203296
redux-thunk redux-observable
Pattern(s): 0	
i think it wouldn t be controversial to say that redux-thunk is significantly easier to learn and use for simple request- response ajax calls without needing cancellation etc
in fact i often recommend users unfamiliar with rxjs use redux-thunk for the simple stuff and only lean on redux-observable for the more complex stuff so they can remain productive and learn as they go



41273504
mockito scalamock
Pattern(s): 1	
mockito has been around a lot longer than scalamock and is much more actively maintained because of mockito s much larger contributor base



41291369
prng random
Pattern(s): 0	
it s well known that rand is often not a high quality prng pseudo-random number generator but i m a little surprised by this apparently systematic behaviour with seeds that differ by 1 each time
on my mac when i changed srand to srandom and rand to random i got better as in more unpredictable results



41302433
d3.js canvasjs
Pattern(s): 0	
if you want quick response time and not much calculation filters on data then you can go with canvasjs
d3.js is more of filtering charts based on filters which can be used in your case



41354763
strtok strcmp
Pattern(s): 0	
i believe using regexp will make the problem more complicated as suggested by others using strtok is much easier
you can parse the string at each space and match the pattern you are trying to search for using strcmp from



41379779
int double
Pattern(s): 0	
if you set u.y and read u.x on a target where int is less than 64 bits wide the remaining bits of the object representation of u.x might be anything including a trap representation
or if you set u.x and read u.y the value will depend on the details of how int and double are represented



41389428
postgresql mysql
Pattern(s): 1	
the specific reason why the error occurs is because the column sort_order is not in the result set so postgresql cannot resolve it
mysql is much more flexible and incorrect about how it handles aggregation so it allows constructs such as this order by which would cause an error in any other database



41408942
build.gradle gradlew
Pattern(s): 0	
although build.gradle has a higher priority so the value in androidmanifest.xml will be ignored by gradlew while building your application



41433351
hash hmac
Pattern(s): 0	
but as you need to hash these passwords too you need to choose a value that won t overload your system or arguably even worse test your users patience
use either bcrypt on its own or pbkdf2 in combination with your sha-512 although sha-1 hmac is more than enough



41435066
gulp-sass node-sass
Pattern(s): 1	
gulp-sass is faster than the sass compilation with ruby because is using libsass a port of sass in c++
first you ll need to install node-sass with npm or yarn and call it in your gulpfile



41502422
selenium appium
Pattern(s): 1	0	
but selenium is more web oriented
why appium is a better choice



41630254
ecto elixir
Pattern(s): 0	
fortunately ecto 2.1 has a better alternative since the datetime s supports the built-in calendrical types from elixir 1.3



41634029
int chars
Pattern(s): 0	
as pete becker already hinted in a comment converting a negative value to a larger int fills the higher bits with 1
the solution is to first cast the chars to unsigned chars before casting the chars to int



41672794
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



41758937
mergesort timsort
Pattern(s): 1	
rior java 8 that was not a big issue the sorting implementation mergesort would not throw exception
java8 changed default sorting implementation to timsort that is much more sensitive to comparators with invalid contract hence invalid contract might throw an exception



41838614
reactjs react-router
Pattern(s): 1	
irst of all i would definitely use react-router to achieve any complex navigation between pages components in reactjs
implementing react-router yourself is more complicated and error-prone



41861364
fgets getline
Pattern(s): 1	
fgets is the most convenient standard library function for reading files one line at a time
gnu getline is even more convenient but it is non-standard



41870235
printf strlen
Pattern(s): 0	
note strlen only works on null terminated strings and will cause undefined behaviour if the string is not null terminated
printf also needs more error checking which can be found on the man page



41872831
jar war
Pattern(s): 0	0	
if your client jar is really thinner for example only the interfaces having the war s reference the jar effectively disallows your client jar is really thinner for example only the interfaces having the war s reference to access to ejb implementations which is always a good idea



41875707
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



41948245
for-loop arrays
Pattern(s): 0	
thus your for-loop may run while is less than -lt not less or equal -le
also you cannot use the same index variable for two different arrays and unless you made sure two different arrays have the same length or at least that the second arrays has more elements than the one used to determine the maximum index



41960765
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



41977179
min max
Pattern(s): 0	
min max true or false returns false if obj min is
less than zero or if anobject max is greater than zero true



41977219
min max
Pattern(s): 0	
min max true or false returns false if obj min is
less than zero or if anobject max is greater than zero true



41981462
division multiplication
Pattern(s): 0	0	
that is before you factor in the extra multiplication and extra cast
on older µarchs 32 bit integer division often has lower latency numbers listed than double division but older µarchs 32 bit integer division varied more division used to be more serial with for floats round divisors being faster yet for integer division integer division s small results that are faster



41996901
int double
Pattern(s): 1	
int arithmetic is far more precise and predictable
lastly you can always use a high precision library though i think double or long long will be good enough for you



41999996
udp tcp
Pattern(s): 1	
tcp does a lot of interesting things to smooth over the rough spots of network-layer packet-switched communication like reordering packets retransmitting lost packets etc
udp is more unreliable but has less overhead



42012905
dictionary map
Pattern(s): 0	
a dictionary that contains fewer emoticons
the fast solution is to simply scrape a more complete dictionary and map the with its corresponding english text translation



42037622
rsa private-key
Pattern(s): 1	
essentially all rsa implementations for about 30 years do not simply do c up d mod n as shown in the first few paragraphs of wikipedia or billions of blogs copied from brief news clippings or exceprts from decades ago but instead use a more complicated private-key that supports the more efficient chinese remainder theorem computation as explained if you read all of the wikipedia article or look at a text by an author who actually knows about modern cryptography



42059484
for-loop arrays
Pattern(s): 1	
speaking for the js only solutions i ve found that inelegant as it may be a simple indexed for-loop is more performant than it alternatives
extracting single property from a 100000 element arrays



42084440
implements extends
Pattern(s): 0	
if foobar implements a is s not obvious from the names that b extends a declaring foobar in such a way may make foobar implements a is a tad easier to understand but more often than not that just means you need to rethink the relationship between b and a



42106801
org.json jackson
Pattern(s): 0	
in this case jackson performs better than nashorn which performs much better than org.json



42129849
hadoop ambari
Pattern(s): 0	
for reference i have some configuration files inside of etc hadoop
note apache ambari makes installation easier



42140940
hash md5
Pattern(s): 0	
edit the answer to that post has also a very good workaround for applying crypto hash functions with older versions of hive using apache commons static methods and reflect



42191081
camunda alfresco
Pattern(s): 0	
f you want bpm capabilities you could use you want bpm capabilities but have a look at activiti first bpm platform which is bundled with alfresco to determine if you really need you want bpm capabilities
you could also check out flowable done by former activiti guys camunda which started as an earlier activiti fork and jbpm



42199987
post get
Pattern(s): 1	
the scenario in the post is more complicate which integrate the azure active directory with on-premise active directory
microsoft also provide lots of samples to help developers to get started to integrate with azure active directory you can refer samples from here



42202367
g++ gcc
Pattern(s): 0	
with this test code gcc produces a diagnostic only for the unsigned member
so although i d also usually prefer unsigned integers for bitfields or for bitwise manipulation g++ is happier and quieter with int here



42214308
ienumerable ilist
Pattern(s): 0	
simply ienumerable gives you iteration only
icollection adds counting and ilist then gives richer functionality including find add and remove elements by index or via lambda expressions



42335607
typedef struct
Pattern(s): 0	0	
now there s only one way to refer to the struct which is easier to read
the typedef also provides stronger encapsulation should there be a radical change to the type like switching to an integer which indexes other storage not likely but you never know



42357097
google-chrome firefox
Pattern(s): 1	
firefox is a bit more complex



42423048
luis api.ai
Pattern(s): 0	
from this perspective luis performs the most poorly on every use case we tested it understood less than 14 of the queries
api.ai performs better although not very reliably it understands between 0 and 80 of the queries we tested depending on the use cases



42521852
screens tablet
Pattern(s): 0	
this will change the height of your element with tabmiddle as the id to 1500 pixels high whenever the screens is smaller than 600 pixels
typically a mobile tablet device



42536489
geocoding geocode
Pattern(s): 0	
the geocoding api works better than geocode normally but has usage limits and the implementation is bigger



42537948
email dkim
Pattern(s): 1	
dentify all the origins of your email set all the origins of your email in your spf record which is a txt record in dns
dkim is more complex - your mail smtp server s must implement s



42543665
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



42763968
versioning upgrade
Pattern(s): 0	
however if you have a current production mysql versioning that is earlier than v5.7.7 then the removal of this restriction on views should only be one of the criteria being assessed while making a decision as to upgrade or not



42786343
maven pom.xml
Pattern(s): 0	
using maven is a lot easier with managing dependencies like this
example pom.xml



42789150
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



42789215
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



42825152
hive hdfs
Pattern(s): 0	
write output of spark to hdfs and used hive to write to s3
performance was much better as hive was creating less number of part files



42842476
treeview expander
Pattern(s): 0	
also i m refactoring a list of expander s so i was thinking more one-dimensionally
but then i realized that you can customize the itemtemplate of the treeview to include your own hierarchicaldatatemplate and that you can customize the itemtemplate of your own hierarchicaldatatemplate with your own tailored datatemplate .



42851049
fgets getline
Pattern(s): 0	
as proposed by fluter fgets will allow you read the file line by line
getline is another better imho solution it s manpage provides a simple usage example



42879947
fgets getchar
Pattern(s): 0	
so when the outer loop continues getchar reads the remaining chars into name
using fgets is generally better option but you d still have the same problem with the extra input



42889388
xcodebuild xcrun
Pattern(s): 1	
 honestly don t know whether any of the tools do invoke other tools but it seems logical that a tool like xcodebuild would invoke many of those tools and therefore depend on developer_dir being set correctly
in short there s no downside to setting developer_dir as needed in your build script and trying to specify it only in your call to xcrun seems less reliable in general than the alternative approach



42905340
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



42931252
width height
Pattern(s): 0	0	
if height is the greater dimension the aspect ratio is multiplied onto the top bottom arguments of glortho
else width is the greater dimension the aspect ratio is multiplied onto the left right arguments of glortho



42940499
versioning upgrade
Pattern(s): 0	
your service instances could then check the db versioning and if the db versioning is higher than the db versioning own deployed versioning then back-off from that operation and wait for the upgrade



42949444
range minimum
Pattern(s): 1	
you don t have to sort the lists to find the range
finding only the minimum maximum is much more efficient o n compared to the best case of comparison sorting or worst case



43018431
int chars
Pattern(s): 0	
you might want to rename a tag at some point in the future or decide that 50 chars is not large enough
although you can have cascading foreign key references i think a unique int id is a safer approach



43024667
metaclass subclassing
Pattern(s): 0	
he workaround is to give each subclassing the workaround own similarly named method with the proper return value annotation
while this can be done with a class decorator as illustrated in the earlier version of my answer using a metaclass seems like a cleaner approach so i ve updated my answer accordingly



43063554
jmeter soapui
Pattern(s): 0	
better is to run the soapui load test from the command line
for more performant systems i prefer using jmeter which consumes less resources at the client side



43112690
opera firefox
Pattern(s): 0	
while firefox showed no difference between the two
strangely though opera did get a much higher score across the board



43225587
filtering grouping
Pattern(s): 1	
we can filtering ignore all document where state is gte 410 the document in first pipeline and then grouping
so the number of documents for grouping aggregation is less



43265929
elasticsearch kibana
Pattern(s): 1	
it s technically viable particularly if you re emitting json-formatted log messages but elasticsearch is much more tailored to storing and searching log data
there is an ecosystem of tools for storing and searching logs in elastic including kibana and graylog that make this even easier



43388471
margin height
Pattern(s): 0	
it s better to position using the left position as opposed to margin
you might also want to delete the height property so the height property accomodates more content



43419334
ienumerable iqueryable
Pattern(s): 1	
that is why iqueryable is considered faster because there is a lot less data that needs to be processed because you where able to ask a more specific question to the server
the reason iqueryable has not replaced ienumerable everywhere is because the thing you are asking a question has to be able to understand the question you are asking a question



43429428
processors hyperthreading
Pattern(s): 0	
ow many cores does your processors have and does your processors have hyperthreading enabled if your processors only has one thread trying to multithread will actually slow your processors down
if your processors has more you can use as many threads in your program as you have available in the os



43469434
mouseover mouseenter
Pattern(s): 1	
also note that the mouseover event will be triggered every time the user move the mouse over the button
mouseenter is more apropriate in this case



43472081
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as a frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



43474480
awt swing
Pattern(s): 0	
that is old code when using awt
swing has newer and better api s



43532093
jscrollpane jviewport
Pattern(s): 1	
the jscrollpane is a more complex component which is made up of two components which are used to provide the functionality of scrolling
you need to make the jscrollpane and it s jviewport transparent as well as well as the view you wrap into it



43562730
innodb myisam
Pattern(s): 0	
f so then there is a nasty problem in myisam not innodb that may lead to 500 additional fragmentation hits
when a myisam row is updated and a myisam row becomes longer then a myisam row will not longer fit where a myisam row is



43566160
google-chrome firefox
Pattern(s): 0	
in google-chrome it takes about 3 seconds on my machine
firefox is slower but still executes one million if statements in about 0.2 seconds and ie one million if statements in 0.1 seconds



43578419
google-chrome firefox
Pattern(s): 0	
even with this outwardly tight regular expression google-chrome and firefox s implementations interestingly allow for e here presumably for scientific notation as well as - for negative numbers and google-chrome also allows for
whereas firefox is tighter in rejecting unless the



43615825
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



43643014
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



43683431
awt swing
Pattern(s): 0	
that is used in old awt applications
swing has newer and better apis



43709028
dictionary map
Pattern(s): 1	
and use a dictionary in map or replace map is faster for this



43767498
innodb myisam
Pattern(s): 1	
in fact oracle is so sure that innodb is better that oracle removed myisam from 8.0



43813030
awt swing
Pattern(s): 0	
that is an old awt solution
swing has newer and better apis



43891268
google-chrome firefox
Pattern(s): 0	
with my pc i also see difference between firefox and google-chrome
the result of google-chrome looks smoother



43912613
screens tablet
Pattern(s): 0	0	
a tablet offers more screens space than a phone



43952635
for-loop loops
Pattern(s): 0	
due to the condition in the for-loop
inside the body of loops is always greater than 2



43955906
dplyr rlang
Pattern(s): 1	
hadley wickham released a fundamentally new version of dplyr with a new underbelly called rlang which provides a more consistent framework for non-standard evaluation



44028065
filtering grouping
Pattern(s): 0	
use first fast boolean indexing for filtering and then groupby + first
solution is a bit complicated if in some grouping is no greater value as 10 - need expand mask with duplicated



44155534
uinavigationbar uinavigationitem
Pattern(s): 0	
the real uinavigationbar is more than that
the real uinavigationbar s meant to manage a stack of uinavigationitem objects



44210933
for-loop arrays
Pattern(s): 0	
set min and max to first arrays position
you don t need check if the current index of for-loop is greater than 0 just check if min variable is greater than current random number



44210933
min max
Pattern(s): 0	
set min and max to first arrays position
you don t need check if the current index of for-loop is greater than 0 just check if min variable is greater than current random number



44221119
width height
Pattern(s): 0	
you can add an empty div with a bottom border custom width which is of cleaner and shorter code
if you don t want to add another element you can use after on any element - just make it have display block and set the color width height etc



44233479
int chars
Pattern(s): 0	
on my system int is bigger than chars and chars is -128 to 128 so assigning a chars with an integer outside that range gives a compiler warning



44292992
width margin
Pattern(s): 0	
on a 5 screen roughly the width is 400px more or less and the height is 600px or more
so a left margin of 909 will push it off the screen area for good let alone the top margin



44318633
for-loop loops
Pattern(s): 0	
if you want to fill them out later you need to use a loops or something like memcpy
with memcpy instead of the new for-loop i added earlier you can do this



44438750
postgresql mysql
Pattern(s): 0	
unfortunately the mysql version isn t fully supported by django and you will need third party libraries
of the two postgresql has the richer set of functionality and provides better indexing options



44457344
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



44478884
width margin
Pattern(s): 0	
while width is less than 780px h3 will have this classes
2 - you will have problems with the margin in the container i would add padding to the container instead of using margin in the boxes inside



44503420
for-loop loops
Pattern(s): 1	1	
but the foreach loops uses more stack space for local variables
the for-loop is faster than the foreach-loop if the arrays must only be accessed once per iteration



44504556
entity-relationship-model datamodel
Pattern(s): 0	
as for your question s title it s not wrong to say that you re adding a relationship to a table though that wording mixes conceptual and physical terms but note that in the entity-relationship-model a relationship is represented by a two or more entity keys in a table id example_foreign_key in the example table and not by a foreign key constraint between tables
the association of relationships with foreign key constraints came from the network datamodel which is older than both the relational and entity-relationship models



44667158
for-loop arrays
Pattern(s): 0	
also if doing a certain number of time the i feel a for-loop is clearer
consider using an arrays of ints rather than a-i



44754557
for-loop loops
Pattern(s): 0	
in robot framework looping is done using the for-loop construction
the robot framework userguide section on loops has more information on the types of loops you can construct and the input the robot framework userguide section on loops require



44768709
spaces delimiter
Pattern(s): 0	
this code also tests to see if there is enough spaces for each field
strtok can be used but if there is any chance that there may be consecutive delimiter it is better to use something else such as strpbrk



44839090
isometric draw
Pattern(s): 1	
eg a vertex is draw at a pixel top left or top right or bottom right or bottom left depending on the face direction and alternating between odd and even x coordinates to name but a few of the rules
this pen axonometric text render aka isometric is a slightly more complex example of axonometric rendering that has options for 8 common axonometric projections and includes simple depth sorting though not built for speed



44852124
temp tmp
Pattern(s): 0	
you could also use something like node-tmp to manage the creation of temp files dirs more easily



44866334
daemons systemd
Pattern(s): 0	
also ensure you are using daemons mode of mod_wsgi for running the django application as that is a better architecture and provides lots more options for setting timeouts so you can have your application recover from various situations which might otherwise cause the server to lock up when overloaded
for a systemd which provides a better out of the box configuration and experience than using apache mod_wsgi directly and configuring it yourself look at using mod_wsgi-express



44868493
folder directory
Pattern(s): 0	
i like having source .cpp and headers .h in the same folder
this avoids a duplicate directory hierarchy makes maintenance easier



45072668
sudo passwd
Pattern(s): 0	
second from maintenance view once you change your passwd scripts suddenly stop working and you have to update them all
fortunately as you are already using sudo there is better solution



45122640
mvp presenter
Pattern(s): 1	
you might be using mvp mvvm mvi etc
gui architectures in which case some other presenter object is more likely to manage the button than is the activity



45232082
width margin
Pattern(s): 1	
but the margin is more difficult to include in the width because the margin is on the outside of border-box



45232082
box-sizing margin
Pattern(s): 1	
to use padding on the s you can set the box-sizing property to border-box so the padding is included in the width of the
but the margin is more difficult to include in the width because the margin is on the outside of border-box



45261525
innodb myisam
Pattern(s): 0	
myisam was the original format of mysql but many years ago innodb has been preferred for many reasons
on high-level picture your app will better perform as innodb has a better lock management



45266203
int double
Pattern(s): 1	
the prototype for main without arguments is int main void
the computation of pi 180 is performed as double which is less precise than long double



45274720
google-chrome firefox
Pattern(s): 0	
firefox benefited a bit less dropping from 5600 ms to 4800 ms
anyway the combination of those two tweaks gave me a 33 speed boost in google-chrome and a 14 boost in firefox



45320134
int chars
Pattern(s): 0	
i5 says the output will be width five blank padded if the int has fewer than five digits on output
a leads to width the length of the chars expression for output



45580922
mp3 wav
Pattern(s): 0	
hen you take a cd and convert a cd to wav you more or less have a copy of the original
when you convert to mp3 a cd uses fewer reference points and detail is lost



45592457
versioning upgrade
Pattern(s): 0	
if your server versioning is older your server versioning is highly recommended to upgrade postgres anyway to use jsonb efficiently



45626490
int chars
Pattern(s): 0	
just use an int
to check if a chars is a digit lower case or upper case use the chars class don t rely on ascii values



45648746
integer unsigned
Pattern(s): 0	
if the operand that has unsigned integer type has rank greater than



45677006
uiview subviews
Pattern(s): 0	
i realize that this may not be possible in all cases but the regular uiview is much easier to customize to the app s appearance than the toolbar and navigation bar where apple has control of the button positioning
instead of setting we custom button as the custom view of the ui bar button object it was we set it as a subviews of the blank ui buttons in the custom view



45743119
inherited properties
Pattern(s): 1	
in some cases a shallow copy of own properties is needed in another the entire prototype chain should be traversed
composition over inherited is often a better choice



45822244
bokeh holoviews
Pattern(s): 0	
holoviews is already better than bokeh.charts in almost every way and more importantly is maintained by an active team



45875067
swift objective-c
Pattern(s): 1	
his works great in objective-c because the catchall type id has very lax type checking
but the equivalent any class in swift is much more stringent and does not lend the equivalent any class in swift to the same technique if at all



45905690
queue fifo
Pattern(s): 0	
it sets the udp socket to non-blocking mode then loops around select to recvfrom any incoming udp packets and append in a thread-safe manner both the incoming packet s data and its source-address port info to a fifo queue for other less time-sensitive threads to take out and work on later
that way even if a packet or series or packets takes a relatively long time to process the result won t be that packets get dropped although it might temporarily increase ram usage as the fifo grows larger



45931917
inline inlining
Pattern(s): 1	
again i doubt that inlining here will change anything but my instincts say that if anything inlining here is more likely to hinder performance than help



45991530
division exponent
Pattern(s): 0	
the double operation 1.0 x rounds to +inf if and only if the mathematical result of the division is above the number 1.fffffffffffff8p1023l
this number is not representable as a double but this number is exactly the midpoint between dbl_max and what would be the next double value after dbl_max if the double exponent had a wider range



46115978
for-loop arrays
Pattern(s): 0	
you may create a or int or using a for-loop or by simple using enumerable.range
given the arrays only remains randomizing thier order witch you can simply do using .orderby and a random number to be ordered by .orderby



46188971
kerberos ldap
Pattern(s): 0	
kerberos is the inside-the-corporate-network industry standard single sign-on protocol
ldap was always more of a directory look-up protocol



46211218
versioning upgrade
Pattern(s): 1	
this number is used only to determine whether one versioning is more recent than another with higher numbers indicating more recent versioning
the value is an integer so that other apps can programmatically evaluate this number for example to check an upgrade or downgrade relationship



46243875
rsa aes
Pattern(s): 1	
in general asymmetric encryption such as rsa is not used to encrypt data data is in general encrypted with symmetric encryption such as aes.the choice usually boils down to the need for separate encryption and decryption keys and or pki
both are as secure at comparable key sizes and aes is much faster



46284103
unsigned short
Pattern(s): 0	
otherwise the source prvalue can be converted to a prvalue of type unsigned int
and indeed short has a lower rank than int



46296527
hash md5
Pattern(s): 1	
this is because attackers make malware that will have the same crc hash
in this case md5 is more secure -- crc was not made for security



46327107
postgresql mysql
Pattern(s): 1	
if you are using postgresql you can do the following
mysql is more complicated since is lacks a distinct on clause



46492064
integer fractions
Pattern(s): 0	
so if the fractions part was less than 0.5 adding 0.5 will not increase the integer part and so after conversion the integer part will be the same rounding down



46509056
inline inlining
Pattern(s): 0	0	
callee is too large message is printed by c1 when the size in bytecodes of the method being inline is larger than maxinlinesize 35 multiplied by nestedinliningsizeratio 90 on each next level of inlining
too big and hot method too big messages are printed by c2 when the size of the method being inline is larger than maxinlinesize 35 or freqinlinesize 325 respectively



46552635
for-loop loops
Pattern(s): 1	
for-loop is faster then foreach and foreach is faster then for in loops



46622000
sysml uml
Pattern(s): 1	
sysml is using papyrus and eclipse ocl tooling for sysml next
eclipse ocl provides a much stronger ui and an ocl2java code generator so that ocl embedded in ecore uml provides much more acceptable executable code



46622000
ocl uml
Pattern(s): 0	1	
eclipse ocl provides a much stronger ui and an ocl2java code generator so that ocl embedded in ecore uml provides much more acceptable executable code



46633191
screens tablet
Pattern(s): 0	
you may want to have a different layout for your image when you are in a mobile or tablet so you can add this media query at the end of the css document
so the new css class img will override the old one when the width of the screens is less than 768px



46655150
post get
Pattern(s): 1	
this blog post seems more specific to rpi3 and probably does it too last jan 12 2017
there is a note on the wiki you are looking at of some things they did to get it to work on newer builds



46692505
sorting filtering
Pattern(s): 0	
irebase realtime database has sorting so i can download the array of neighborhood dogs ordered by name age etc
i can filtering only dogs more than five years old but firebase realtime database can firebase realtime database sort and filtering



46739278
height border-box
Pattern(s): 0	
this fails if the user uses borders and or paddings which height is greater than 16
you can use box-sizing border-box on the element



46746178
screens tablet
Pattern(s): 0	
your device s screens density is higher than xhdpi and your element does not list higher density options than xhdpi
when i say tablet i mean devices with aspect ratios that are leaning towards the more square size in other words not 16 9



46754164
qstring qbytearray
Pattern(s): 1	
note 2 qbytearray actually corresponds to std string for most purposes
qstring is more like std wstring



46884957
spaces delimiter
Pattern(s): 0	
the c switch allows findstr to include spaces within search strings instead of treating a spaces as a search string delimiter
this added spaces prevents longer ports being mistreated - for example 80 vs 8080 and other port munging issues



46901693
directoryentry ldapconnection
Pattern(s): 0	
o even though the self-signed certificate was in the trusted store directoryentry was still refusing to establish a connection
the ldapconnection class is a better choice for this situation as the ldapconnection class allows the user to validate the certificate manually



47161859
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



47167253
nswindowcontroller nsviewcontroller
Pattern(s): 1	
f you want to do windows instead you can make an nswindowcontroller subclass instead of nsviewcontroller
nswindowcontroller is slightly more annoying to use since nswindowcontroller initializers that take nib names are all convenience initializers whereas the designated initializer just takes an nswindow



47214797
strtr substr
Pattern(s): 1	
php s builtin function strtr is more suitable to this scenario
using this function once a substr has been replaced a substr new value will not be searched again



47253518
sorting filtering
Pattern(s): 1	
sorting should be supported by the search container
you just need to indicate it in the columns but filtering is more tricky



47303391
geocoding geocode
Pattern(s): 0	
there s a note in reverse geocoding documentation
the reverse geocode often returns more than one result



47321155
division multiplication
Pattern(s): 1	
change the half to 0.5 and you should be golden for the math part also multiplication is faster so use the math part instead of division when possible



47386816
addition multiplication
Pattern(s): 1	
note that multiplication is an easy operation
addition is way more complicated.



47410672
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



47502642
client-side server-side
Pattern(s): 1	
javascript on the client-side doesn t have access to anything server-side unless you create an endpoint
client-side javascript is really not much more capable than a user with a mouse and keyboard



47565223
width height
Pattern(s): 0	
if the height is greater than the width



47574184
int chars
Pattern(s): 0	
that includes the terminating zero chars
if strlen foo returns an int that is greater than 99 you will overflow numberstring buffer



47587563
versioning upgrade
Pattern(s): 0	
i also had the same error the error is because of versioning mismatch with the dependencies i e all the dependencies are not in the same versioning to solve this update all the dependencies or downgrade all to the common versioning update is the better options
this link helps to upgrade all the dependencies



47614397
portrait landscape
Pattern(s): 0	
on the iphone 7 plus in portrait readable content guides are the same
as the view s margin guides but in landscape there is more white



47681187
innodb myisam
Pattern(s): 1	
some table-scan queries and bulk inserts are faster in myisam
innodb is better at indexed searches



47778886
nomad mesos
Pattern(s): 1	
nomad only aims to provide cluster management and scheduling and is designed with the unix philosophy of having a small scope while composing with tools like consul for service discovery and vault for secret management
on the other hand mesos is more a framework for building distributed systems than just the container orchestrator



47958468
for-loop loops
Pattern(s): 0	
his means you can have a for-loop with some incrementing number mod by an arrays length and the result will be an integer that is certainly an arrays index
if loops variable goes higher than the end of the arrays the mod operator will make the mod operator wrap round to the start of the arrays again



47974384
versioning upgrade
Pattern(s): 0	0	
your kafka versioning is older than your kafka versioning should your problematic class clusterresourcelistener expect versioning to be higher than 0.10.1.0 and your kafka versioning is lower 0.10.0.1
just upgrade your kafka jars and your kafka versioning ll fix this issue



47976129
sum coalesce
Pattern(s): 0	
join the table to itself on lesser ids because that s what you re ordering on summing all the rows from the join and keeping those rows whose sum is less than not less than or equal the threshold
the coalesce call is added to cater for the lowest id which we want to keep always having no rows to join with



47977240
int double
Pattern(s): 0	
double class a special class representing a float value this is especially useful when using capped collections where you need to ensure your values are always floats
int is a bit trickier due to the fact that javascript represents all numbers as 64 bit floats meaning that the maximum int value is at a 53 bit



47995408
x86 64bit
Pattern(s): 1	
x86 gcc -o3 -m32 will use __udivdi3
i wouldn t call this fair though because a 64bit cpu is much faster at 64bit arithmetic and a cortex-a7 doesn t have a 64bit mode available



48033416
public protected
Pattern(s): 0	
ince met2 from father has protected you can either override met2 from father with protected or with public
since you do not specify any privilege access met2 from father defaults to package protected which is a level weaker than protected



48065307
qsharedmemory qcoreapplication
Pattern(s): 1	
what we ended up doing for single instance is to use qlocalsocket which is named pipe on windows and local domain socket on unix instead of qsharedmemory which requires more tweaking to get it right
basically you do something like this to check if the server is running appname must be unique application identifier you can use qcoreapplication applicationname



48071690
post get
Pattern(s): 0	
this post has more the one question in this post
your base use case using powershell to get azure ad token jwt is a common one and there are several samples and pre-built examples to leverage



48102827
pem pkcs#12
Pattern(s): 1	
otoh private keys in pkcs8 format can be password-encrypted in either der or pem although pem is more convenient
and fwiw pkcs#12 format is always password-encrypted and always der.



48162235
hide show
Pattern(s): 0	
ith these two points we can use d3.geodistance which calculates the distance between two points in radians hence the use of math.pi 2 - which gives us points outside of 90 degrees for these we hide for the rest we show
this can be incorporated a little nicer into your code but i keep this separate here to show what is happening clearer



48184849
for-loop loops
Pattern(s): 1	1	
if you want to use the myint within the for-loop option2 is better
you want to use the myint outside loops option1 is better



48255910
min max
Pattern(s): 1	
min heap in textbooks
a max heap is more common in texts because



48300857
coalesce isnull
Pattern(s): 0	
the generic sql solution uses coalesce
in sql server isnull is a better choice for performance reasons



48344481
ucs 7bit
Pattern(s): 0	
iso iec 10646 2017 information technology -- universal coded character set ucs a standard that supports the representation of the written form of most languages of the world that have a writing system and also of a number of ancient languages
even 7bit ascii covered more than just the letters of the iso basic latin alphabet because the standards listed here were created for the purpose of enabling information exchange and a standard that covered just the letters excluding numbers punctuation marks and some basic control characters would have been insufficient



48410284
lapack openblas
Pattern(s): 1	
as debian maintainer for r i take advantage of the fact that we have several blas lapack builds
base can be ok openblas often is faster but be careful when you then launch multiple cores from r via the different mechanisms and there is also atlas



48436934
atof strtod
Pattern(s): 0	
for double you can use atof function but you have to check firstly if the string contains a dot
edit as user3386109 mentioned strtod is a better solution for double



48454696
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



48503929
foldable catamorphism
Pattern(s): 1	
dit here s an implementation of foldable
implementing traversable as a catamorphism is a little more involved because you want the result to be not just a summary--the result must contain the complete reconstructed data structure



48536486
spaces delimiter
Pattern(s): 0	
it depends on the delimiter being a spaces and none of the values containing a spaces
if any of the values contains a spaces this becomes a much harder problem



48566774
scons automake
Pattern(s): 0	
neither can alternatives such as cmake or scons
or what is so broken with autotools that the autotools feel the need to break my build because my version of automake is newer than the package was configured with



48602753
projectile angle
Pattern(s): 1	
ased on your comments the angle x is given so what you need to figure out is the muzzle speed that will make the projectile hit the target with the specified cannon angle
if the projectile makes you more comfortable don t think of v as muzzle speed think of it as a form factor of the parabola you are trying to find



48700129
for-loop loops
Pattern(s): 1	
one other thing to improve the readability of your for-loop this is a bit more readable
the for statement is standard for saying loops n times



48725612
int chars
Pattern(s): 0	
just use unsigned chars c
instead or more simply int which consumes slightly more memory shouldn t be an issue but is able to distinguish eof from 255



48750713
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



48795857
margin height
Pattern(s): 0	
and then set height 50 to elements in your columns
i add a margin it looks better



48806070
width height
Pattern(s): 0	
to make both the button identical you have to calculate width of both the button like this
then compare both the button height and set the larger one to both the buttons



48896205
strncmp memcmp
Pattern(s): 1	
memcmp array + 4 12bc 4
don t think that strncmp is better because



48925696
git-svn svn2git
Pattern(s): 1	
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case



49117871
swift objective-c
Pattern(s): 0	
however swift is much safer in that regard
note that in objective-c still accesses self



49140493
int double
Pattern(s): 0	
so use a float constant 1000000000000000000000f or 1e+21f instead of an int constant 1000000000000000000000
or if you re really using double which is usually a better idea than float use 1000000000000000000000.0 or 1e+21



49200905
squash branch
Pattern(s): 0	
while squash merge is simpler merging done right provides a healthier history and more information for git to work from
you ll get more out of git if you understand how branch and merging works



49289377
robocopy xcopy
Pattern(s): 1	
i have excellent results copying gigabytes of deep directories during automated builds using xcopy
robocopy is more capable and can control retries much better but is usually not worth the extra trouble of robocopy very extensive and complicated switches



49290425
listview gridview
Pattern(s): 0	
he reason listview and gridview can scroll in the first place is because they have a scrollviewer built in
when you place a listview inside a parent layout panel a stackpanel or a grid row if the listview height is greater than the viewport a parent layout panel becomes the full height of the listview



49353557
libstdc++ libc++
Pattern(s): 0	
that s a bit confusing with clang on the mac because there are two of them libc++ and libstdc++
recent versions default to the former libc++ is a newer implementation built by the llvm clang team to work better with c++11 and later



49419382
rtsp rtcp
Pattern(s): 1	
rtsp is more like controlling things for the protocols that actually handle data like rtp rtcp for example



49475297
setinterval settimeout
Pattern(s): 0	
you have two setinterval calls which will stack up and eventually make your page hang
settimeout is a safer method as you then are responsible for calling a next settimeout



49524433
union distinct
Pattern(s): 0	
union is better than union since we are sure that duplicates are removed



49535320
kerberos ntlm
Pattern(s): 1	
ntlm is less secure and negotiate lets the client and server use kerberos if both of the client and server support it - if not both of them fallback to ntlm



49556376
sdp turn
Pattern(s): 0	
the problem lies in that some cameras report a starting timestamp in the sdp that is greater than the first rtp packet timestamp which is used as a base timestamp
this in turn creates a negative timestamp passed to ff_read_frame



49593943
integer unsigned
Pattern(s): 0	
if the operand that has unsigned integer type has rank greater or



49614554
lxml elementtree
Pattern(s): 1	
i wouldn t say that lxml is faster than et across the board as both modules offer tons of functionality
to provide a little context elementtree also supports xpath but particularly et has a unique and useful function called iterparse that remakes the xml document as an iterable



49909518
width margin
Pattern(s): 0	
t s rendered with a gap usually called margin or padding between the bullet and the content
so because the is inside the the width is already smaller than the width of



49970811
tensorflow tensorboard
Pattern(s): 0	
as a rule of thumb if your code use any tensorflow-specific code say anything in for providing inputs or for visualization in tensorboard it is simpler to just use tf.keras



50035849
versioning upgrade
Pattern(s): 0	
if your tls versioning is less than 1.2 you have to upgrade your tls versioning since the pypi repository is on a brownout period of deprecating early tls



50081813
primes modulus
Pattern(s): 0	0	
there are several ways to do that. we find that 3 is the only primes that divides more than one modulus and the highest power of that primes that divides more than one modulus is i use the notation for exponentiation used in python and fortran for clarity since the caret also has other uses in computers.



50101062
principalcontext directoryentry
Pattern(s): 1	
you ll see from the stack trace that principalcontext uses directoryentry underneath anyway
i ve found that using directoryentry directly is much much faster anyway although it can be more complicated to work with sometimes



50194566
3dsmax blender
Pattern(s): 1	
maya 3dsmax and blender is more convenient for tech objects like robots cars etc



50194566
maya blender
Pattern(s): 1	
maya 3dsmax and blender is more convenient for tech objects like robots cars etc



50290899
coalesce isnull
Pattern(s): 0	
the most natural function to use is coalesce because it is the ansi-standard function for this purpose
under some circumstances in sql server isnull has better performance but this is not one of those circumstances



50305375
width border-box
Pattern(s): 0	
your textarea width is greater the the container 100 + 2px of border + 2px left padding + 2px right padding
so used box-sizing border-box



50319944
floating-point fractions
Pattern(s): 0	
ieee-754 basic 64-bit binary floating-point is used with round-to-nearest-ties-to-even
then the result of the division is never a number whose fractions part is less than ½ but that rounds to ½



50398305
ienumerable iqueryable
Pattern(s): 0	
but if the ienumerable is much larger than the iqueryable just filter the iqueryable as much as possible on the database side and then use asenumerable to pull the database side into memory and join there



50400339
children parent
Pattern(s): 0	
n the menu you can still use the custom link # item and place the children accordingly
you can even name the blank page parent intentionally left blank so the blank page parent intentionally left blank s less confusing in the admin



50481704
width height
Pattern(s): 1	
not delegating height and width from to the
row height was defined as 50 but the actual rendered height was more -



