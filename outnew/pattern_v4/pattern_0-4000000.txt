1517
emacs aquamacs
Pattern(s): 0	
someone syncs carbon emacs with the upstream tree quarterly i think
aquamacs has a more irregular schedule but it s seen some pretty major updates over the last year



13942
imperative declarative
Pattern(s): 0	
imperative
declarative is usually better for anything where you really don t need the fine-grained control over how something is done



31042
perforce svn
Pattern(s): 0	
i use perforce right now and for some reason i like svn better
perforce definitely gives me a better indication that there s going to be merge conflicts and even has built-in tools to help me resolve the merges



57802
jruby mri
Pattern(s): 1	
only choice not that that s a bad one jruby is actually faster



68674
ubuntu linux
Pattern(s): 1	
ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it



70421
quicksort mergesort
Pattern(s): 1	
quicksort is more popular because it
is in-place mergesort requires extra memory linear to number of elements to be sorted



71552
daemons systemd
Pattern(s): 1	
gdi + text rendering performance article on his blog which answers the raw speed question on his systemd gdi drawtext was about 6 times faster than gdi + drawstring
if you need to be a real speed daemons textout is faster than drawtext but you ll have to take care of clipping and word-wrapping yourself



77625
innodb myisam
Pattern(s): 0	
i found that the table-level locking in myisam caused serious performance problems for our workload which sounds similar to yours
unfortunately i also found that performance under innodb was also worse than i d hoped



77945
quicksort mergesort
Pattern(s): 0	1	
with o n 2 worst case that rarely happens quicksort is potentially far slower than the o nlogn of the merge sort
quicksort has less overhead so with small n and slow computers quicksort is better
but computers are so fast today that the additional overhead of a mergesort is negligible and the risk of a very slow quicksort far outweighs the insignificant overhead of a mergesort in most cases



79771
subtraction multiplication
Pattern(s): 1	
addition and subtraction are then a very simple integer operation such as 0.72 + 1 becomes 72 + 100 becomes 172 becomes 1.72
multiplication is slightly more complex as it needs an integer multiply followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44



79771
addition multiplication
Pattern(s): 1	
addition and subtraction are then a very simple integer operation such as 0.72 + 1 becomes 72 + 100 becomes 172 becomes 1.72
multiplication is slightly more complex as it needs an integer multiply followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44



90444
udp tcp
Pattern(s): 0	1	
the protocol it s important that you decide whether you want tcp or udp
udp has less overhead but isn t guaranteed delivery
conversely tcp is more trustworthy



176144
opera firefox
Pattern(s): 0	
second safari has the greatest standards support combined with a marketshare which isn t negligible opera is just hard to justify for cost benefit reasons
third in my experience going from safari to firefox is usually less problematic than the other way around



179813
verilog vhdl
Pattern(s): 0	
for hdl choice verilog is to c as vhdl is to ada
so verilog is easier to get started with but you can make mistakes more easily



195398
postgresql mysql
Pattern(s): 0	
at the load levels where postgresql s better locks overtake mysql s other parts of your platform could be the bottlenecks
postgresql does comply better with standards so it can be easier to replace later



256092
bazaar git
Pattern(s): 0	
bazaar is a distributed version tool just like git but is imo simpler to setup and use



257043
des aes
Pattern(s): 0	
triple des is generally better but there are some known theoretical attacks
if you have a choice of cipher you might want to look at aes instead



260148
lxml elementtree
Pattern(s): 1	
it provides a nice easy-to-use binding for libxml2 and libxslt and it also implements the elementtree
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well



260277
skip-lists tree
Pattern(s): 1	
the rebalance operation can affect large portions of the tree which would require a mutex lock on many of the tree nodes
inserting a node into a skip-lists is far more localized only nodes directly linked to the affected node need to be locked



327972
innodb myisam
Pattern(s): 0	
another thing is that i think you use myisam table engine which locks the entire table on update.i suggest you use innodb instead
innodb is slower on select - queries but faster on insert and update because innodb only locks the row innodb s working on and not the entire table



355552
haskell scheme
Pattern(s): 0	
but haskell is a bit trickier in that you can attempt to redefine a variable within the same scope but instead you just introduce another recursion equation
this is a pitfall for people who learned ml or scheme first



384966
dotnetzip sharpziplib
Pattern(s): 1	
i ve found the dotnetzip library to be this easiest way to work with zip files
sharpziplib is a far more powerful and flexible solution



422511
kerberos ntlm
Pattern(s): 0	
from my experience kerberos is more of a prefered method but i have not worked with it much so unfortunately i don t have much advise as far as that goes
on a side note i recall reading somewhere that the jre also has ways of tying into ntlm on your web server in order to obtain identity information for the authenticated user



497332
haskell sml
Pattern(s): 1	
haskell is extreme lazy pure has active users lots of documentation and makes runnable applications
sml is less extreme strict impure has active users formal specification many implementations sml nj mlton moscow ml etc.



497933
quicksort mergesort
Pattern(s): 1	
as a result for relatively small datasets quicksort is more likely to get cache hits and therefore just tends to run faster on most hardware
mergesort is still a pretty good solution for large data sets or other data structures like linked lists as your experiments confirm



519191
emacs jedit
Pattern(s): 0	
jedit is still pretty good but emacs is quite better



542262
awt swing
Pattern(s): 0	
if you are planning to move your gui onto multiple platforms then go with awt
otherwise swing gives you a much broader set of components to work with



543022
udp tcp
Pattern(s): 0	
udp was more of a convenience than anything .



548705
haskell scheme
Pattern(s): 0	
in lisp scheme a function is thought of a piece of code and examining a function simply means examining its code
in haskell a function means something closer to its mathematical definition as a map from a set a to a set b



568612
ubuntu linux
Pattern(s): 1	
i d stick with ubuntu if ubuntu was more compatible with windows programs
. net development while in school typically isn t done on a linux distribution



573102
bash zsh
Pattern(s): 0	0	
another solution to the command line too long problem is to use a c-style for-loop within bash
this works in as well though i bet zsh zsh has some niftier way of using zsh i m just still new to zsh



573582
required placeholder
Pattern(s): 0	
that is our quite simple bind object would not fit into the small buffer and would required operator new to be stored
if the bind object above would use a compressed _ pair it can actually reduce its size to 8 bytes or 4 bytes for non-member function pointer often because the placeholder is nothing more than an empty object



597847
northwind adventureworks
Pattern(s): 0	
talk about sql server 2005 adventureworks is better than northwind



601996
wxhaskell gtk2hs
Pattern(s): 0	
most of what i say below is a personal take on the differences and why i choose to work on and with wxhaskell myself
gtk2hs has a larger team working on it and is released more regularly



601996
wxhaskell gtk2hs
Pattern(s): 0	
i think that if linux was my main development and delivery platform i d probably use gtk2hs
linux isn t however i deliver mainly to windows with occasional osx and i think wxhaskell is a better match to these platforms although both options support all three platforms



610260
memcpy strncpy
Pattern(s): 0	
but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively



610260
strcpy strncpy
Pattern(s): 0	
but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively



610542
gif png
Pattern(s): 0	
png is a newer format and often better than either jpeg of gif - especially for screenshots



611158
portrait landscape
Pattern(s): 0	
there are some applications where portrait is still better though if you have to show a document in large resolution or if you have some monitor as in network monitor running and want to see more lines at once



632342
des aes
Pattern(s): 0	
sorry - triple des is no longer considered best practices
aes is simply a better algorithm so if you can use it then you should



636468
debian linux
Pattern(s): 0	
os upgrades always have the potential for subtle bugs whether it s windows linux or anything else
debian has got better than it used to be in this regard



649402
portrait landscape
Pattern(s): 1	
if you re working mostly with text as most programmers or other technical folks do or even documents then portrait mode is much more valuable
in fact the general trend in displays is all the wrong direction aspect ratios are squishing landscape displays to a mail slot to better fit the format of movies



665042
postgresql mysql
Pattern(s): 0	
postgresql has better foreign key support better referential integrity transactions views subselects etc
but that doesn t mean mysql doesn t have its place



669924
jquery scriptaculous
Pattern(s): 1	
jquery is better
it has noconflict method that allows you to easy migrate having both prototype scriptaculous and jquery library included



680613
quicksort mergesort
Pattern(s): 0	1	
quicksort is usually faster than this but given the theoretical worst possible input it could run in o n 2 which is worse than the worst possible merge sort
quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss



693792
mp3 ogg
Pattern(s): 1	
generally the player has to reconnect to the stream every so often causing a playback glitch otherwise memory just fills with mp3 data
ogg is harder



710959
jruby mri
Pattern(s): 1	
mri has pretty lousy threading concurrency support so if that s what your aiming for jruby is probably a better place to go



729163
realloc memmove
Pattern(s): 0	0	
the specific error you re getting is likely because one of your strings is length 0 and realloc foo 0 simply gives you that error on your system or because you re writing the trailing 0 in unallocated memory and overwriting something else important causing corruption
simply rearranging pointers frags i frags i +1 or using memmove is easier quicker and stops you wasting memory though



729994
setinterval settimeout
Pattern(s): 0	
the setinterval makes it easier to cancel future execution of your code
if you use settimeout you must keep track of the timer id in case you wish to cancel it later on



774698
udp tcp
Pattern(s): 0	
this description is only really valid for tcp ip sockets however
the udp case is simpler and quite different since udp sockets are not necessarily connected



803031
innodb myisam
Pattern(s): 0	
innodb is definitely safer so i d stick with it anyhow



803700
nginx lighttpd
Pattern(s): 1	1	
s simple and nginx nginx is even more ridiculously fast and lightweight than lighttpd



813646
haskell sml
Pattern(s): 0	
there just isn t a nice way to deal with type signatures in sml
haskell has better concrete syntax



830889
uiview uiwindow
Pattern(s): 1	
the uiview is something generic provides common methods you use to create all types of views and access their properties
while uiwindow is more concrete class defines objects that manage and coordinate the windows an application displays on the screen .



843116
punctuation words
Pattern(s): 0	
then you process one sentence at a time after removing all punctuation commas semi-colons colons and so on
then when you re left with an array of words it becomes simpler



869908
fgets strtol
Pattern(s): 0	
for interactive input fgets is better
you ll then want to use either strtol strtoul strtod nsscanner or nsnumberformatter to convert the input to numeric types



869908
fgets strtod
Pattern(s): 0	
for interactive input fgets is better
you ll then want to use either strtol strtoul strtod nsscanner or nsnumberformatter to convert the input to numeric types



948285
cvs svn
Pattern(s): 0	1	
there is only one good argument i ve heard in favor of cvs and that is in situations where you have a project that will have many different releases and branches in cvs it is easier to just push an arbitrary file into the branch or tag you need when you need it
svn is more formal about these things and makes it harder to just pick on one file and merge it as you need it



950103
coalesce nvl
Pattern(s): 1	
coalesce is more modern function that is a part of ansi-92 standard
nvl is oracle specific it was introduced in 80 s before there were any standards



999113
bazaar git
Pattern(s): 1	
bazaar was probably too slow at least then and a bit on centralized side i guess
git is more powerfull in my opinion mercurial is simpler in people opinion and a bit more portable python



1050778
imagemagick graphicsmagick
Pattern(s): 1	
the graphicsmagick group overhauled the tiff format support with graphicsmagick version 1.2 and graphicsmagick is much faster at processing these types of images than the original imagemagick was



1073776
nsis uninstaller
Pattern(s): 0	
you might be better off using the popular free nsis installer platform rather than using batch scripts
it s possible to do all the same things you re doing with it and building an uninstaller is much easier



1088743
coalesce isnull
Pattern(s): 1	
the coalesce is ansi standard and isnull is not
but more important is the fact that coalesce is more flexible



1099807
udp tcp
Pattern(s): 0	
udp has lower overhead as stated already is good for streaming things like video and audio where it is better to just lose a packet then try to resend and catch up
there are no guarantees on tcp delivery you are simply supposed to be told if the socket disconnected or basically if the data is not going to arrive



1176723
freemarker velocity
Pattern(s): 0	
freemarker works well and is very powerful
velocity has a simpler syntax is somewhat less powerful and is a lot more forgiving wrt



1225669
implements extends
Pattern(s): 0	
define what role the class itself plays which gives insight into what interfaces it implements its public interface
its private inheritance in c++ d private b or in java extends is more of a collaborator though in java that gets smeared a bit



1233693
firefox safari
Pattern(s): 0	
firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit
safari i believe is currently the fastest rendering engine out there



1284374
boost allocator
Pattern(s): 0	
yeah boost works but boost is 20 slower than my implementation with dynamic allocator and code is 80 bigger



1317710
mvp presenter
Pattern(s): 1	
to summarise the differences controllers in the mvc have more control over the ui and handle events while a presenter in the mvp is more passive and just presents information through the ui



1338712
postgresql mysql
Pattern(s): 0	
postgresql has a richer set of abilities and a better optimizer
its ability to do hash joins often makes it much faster than mysql for joins



1363670
wordpress joomla
Pattern(s): 1	
this is my personal pov i ve created extensions to both of them and i think joomla s way of structuring extensions is more complicated
i think the wordpress documentation is better too



1372564
bazaar git
Pattern(s): 0	
a lot of articles about bazaar will tell you bazaar is a lot slower than git or mercurial



1373617
postgresql mysql
Pattern(s): 1	1	
the simple answer is that postgresql is better for both features and security
however mysql is much more popular so is more likely to be directly supported by a random application especially web applications



1420987
sctp tcp
Pattern(s): 0	
sctp requires more design within the application to get the best use of it
there are more options than tcp the sockets-like api came later and it is young



1431606
firefox safari
Pattern(s): 0	
assuming your code makes no assumptions about what browser it s running in the same npapi-code should work in all browsers i ve seen npapi plugins that dynamically resolve xul related functions in the blind faith that npapi is used only by firefox despite it being the standard plugin format for more or less every non-ie browser
plugins like simbl misuse macos apis designed for a distinct but important purpose to arbitrarily inject their own code into the safari address space -- when people use these being mislead into believing it s safe safari becomes substantially less stable and frequently stops working after major updates in an extreme case the leopard blue screen of death was because of logitech using ape to do something similar to simbl



1463254
clang llvm
Pattern(s): 0	0	
clang llvm has much better separation between the parser and the other parts of the compiler chain



1539576
udp tcp
Pattern(s): 0	
if your hardware device is sending udp it should be it s a lot easier to handle both in your client program and on the device itself receiving that data is trivial
tcp is not much harder



1545598
postgresql mysql
Pattern(s): 0	
mysql has some advantages like easy replication but postgresql is generally nicer to work with



1630987
postgresql mysql
Pattern(s): 1	
postgresql is more developer friendly and makes it easy to do the right thing regarding data integrity by default
if you give mysql an incorrect type it will implicitly convert it even if the conversion is incorrect



1634229
postgresql mysql
Pattern(s): 1	
postgresql fulltext
is about 10-100x faster than mysql fulltext is a lot more powerful gist is fast on inserts updates no problem with locks in other words it s a totally decent solution



1687594
serializable deserialization
Pattern(s): 0	0	
serializable deserialization becomes a bigger bottleneck when you scale out to a session server or use sql server to manage session state



1706281
strcpy strncpy
Pattern(s): 0	
use strcpy and check the buffer size by hand
strncpy is a little safer but dangerous in other way



1712946
hex binary
Pattern(s): 1	
hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc



1716751
arp tcp
Pattern(s): 0	
arp would appear from your question that the period of the tcp message is shorter than the arp refresh time



1730167
lisp scheme
Pattern(s): 0	
clojure because it purportedly gives nice clean access to the huge universe of j2se j2ee libraries on the other hand encourages me to relearn this lisp dialect because it may finally be of practical use
as for which one to start with i would say scheme is simpler and so might be more appropriate to start with



1730263
innodb myisam
Pattern(s): 1	
with only a few transactions per second tps you re not likely to tell the difference in the performance but innodb is more reliable and scales better
2 with only 2-3 tps you will not see any significant difference between innodb and myisam



1734747
icomparable compareto
Pattern(s): 0	
the icomparable defines order less than greater than
the method defined by icomparable is compareto with which you can determine the order between two elements



1738309
matlab simulink
Pattern(s): 0	
generally matlab has a better programming environment better documentation better debuggers better object browser and is easier to use you can use matlab without doing any programming if you want
simulink allows you to visually program by connecting blocks in graphs



1747128
printwriter bufferedwriter
Pattern(s): 1	
printwriter just exposes the print methods on any writer in character mode
bufferedwriter is more efficient than according to its buffered methods



1754080
sortedlist sorteddictionary
Pattern(s): 0	
as you can see on sorted data the sorted list is faster than the sorteddictionary
on unsorted data the sortedlist is slightly quicker on retrieval but about 9 times slower on adding



1760658
quicksort mergesort
Pattern(s): 0	
mergesort is a stable sort and typically the efficient quicksort implementations are not
while mergesort may do more swaps or moves mergesort does fewer comparisons and so tends to work better with text input



1760658
mergesort heapsort
Pattern(s): 0	
while mergesort may do more swaps or moves mergesort does fewer comparisons and so tends to work better with text input



1786935
vim emacs
Pattern(s): 0	
this will sound stupid but i use vim because the keyboard shortcuts are mostly one finger at a time if not you can shift with one hand and key with the other and i map esc to something easier
emacs requires more contortions and hurts my hands



1786996
vim emacs
Pattern(s): 1	
that said over the years i ve tended toward vim because i find that it s harder for me to get lost in it s user interface when i can t remember what i m doing
i have also noticed over time that emacs is a little more touchy when it comes to tty settings



1792370
postgresql greenplum
Pattern(s): 0	
i think you ll find that postgresql works a lot better for nearly any workload olap especially than mysql
greenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use cases



1811677
inline inlining
Pattern(s): 0	
be aware though that this should only be on a release build since inline code is difficult to debug
also you said that you don t mind making your program larger as long as it gets faster but that often inlining makes it slower



1853219
quicksort heapsort
Pattern(s): 0	
one of the major factors is that quicksort has better locality of reference -- the next thing to be accessed is usually close in memory to the thing you just looked at
by contrast heapsort jumps around significantly more



1937370
postgresql mysql
Pattern(s): 0	
in the event of having to kill the server forcefully either by kill -9 or due to power outage postgresql generally has better resilience to table corruption
full support for acid compliance and other relational db features that support for again imho and experiance are weak or lacking in mysql



1947902
opera google-chrome
Pattern(s): 0	
i found that on google-chrome safari and opera many special keys don t get passed through to ajaxterm including backspace the arrow keys ctrl + c ctrl + h home end etc
opera is even worse when you press shift the keypress gets translated into p so you can t type capitals



1947902
opera safari
Pattern(s): 0	
i found that on google-chrome safari and opera many special keys don t get passed through to ajaxterm including backspace the arrow keys ctrl + c ctrl + h home end etc
opera is even worse when you press shift the keypress gets translated into p so you can t type capitals



1991217
subtraction multiplication
Pattern(s): 0	
addition and subtraction are simple
multiplication requires a bit more work as the naive algorithm requires nested loops



1991217
addition multiplication
Pattern(s): 0	
addition and subtraction are simple
multiplication requires a bit more work as the naive algorithm requires nested loops



2171798
gridview repeater
Pattern(s): 1	
the gridview is for tabular data only and does a lot of the work for you like binding data automatically to columns
the repeater gives you more control over the result but you have to do more because nothing gets binded automatically



2197183
ubuntu linux
Pattern(s): 0	
for windows and mac osx not for linux
you will need to install an svn client on ubuntu that supports the newer repo format



2237837
boost allocator
Pattern(s): 1	
using boost variant is faster than a union and leads imo to the most elegant code
i d guess that the extremely poor performance of the class hierarchy approach is due to the need to use dynamic memory allocator and dynamic dispatch



2267285
onclick onchange
Pattern(s): 0	
when settting the checked state programatically the onchange handler never fires in those browsers
i concur with pointy that onclick is a better way to handle checkboxes if you want to avoid surprises



2271760
nerdtree netrw
Pattern(s): 0	
the nerdtree plugin gives you a collapsible project tree
personally i find that the netrw plugin is more than sufficient and this usually comes installed with vim



2277052
postgresql mysql
Pattern(s): 0	
postgresql is older than mysql so it might have influenced them



2293090
haskell ocaml
Pattern(s): 0	
imo it s is much more straightforward to achieve c++ - like performance in ocaml than in haskell
through as already said haskell has much nicer community packages tools and support syntax features ffi probability monads via typeclasses and parallel programming support



2336575
gif png
Pattern(s): 0	
you should use png instead of gif because png offers better compression and features



2393989
nunit mstest
Pattern(s): 1	
there are several of these implemented by 3rd parties for mstest
nunit is much faster



2422410
nunit mstest
Pattern(s): 0	1	0	
nunit is an older more established unit testing framework designed to do exactly one thing - unit testing
mstest is newer so it does not have the same level of maturity in its api



2436304
haskell scheme
Pattern(s): 1	
if you re interested in functional programming haskell is the only purely functional language on that list
common lisp is a weakly functional mixed-paradigm language and scheme is more strongly functional but still not pure



2467567
mp3 ogg
Pattern(s): 0	
ogg vorbis is better quality per meg than mp3 plus no licensing legal issues



2496793
fgets getline
Pattern(s): 0	
edit as wolfer alluded to a null in your input will cause the string to be terminated prematurely when using fgets
getline is a better choice if available since it handles memory allocation and does not have issues with nul input



2535830
ubuntu linux
Pattern(s): 0	
if you just want the fun of linux command line programs without access to all of ubuntu cygwin is smaller and might be faster



2625704
swt swing
Pattern(s): 1	
we rely on swt for our java guis
yes you have to include an external native library but the look and feel is native more responsive although swing has become much faster in the past few years and seamless with other apps on the target platform



2665997
multiplying subtract
Pattern(s): 0	
zero or multiplying by one
this also reveals that subtract is a better search term than minus



2688976
trie tree
Pattern(s): 1	
finally b + tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity



2699569
dictionary map
Pattern(s): 0	
i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and in at least some implementations leaves some optimisations to the user that dictionary already has



2750804
wxpython pyqt
Pattern(s): 1	1	
and now we had to switch into pyqt since qt is integrated in maya 2011
however wxpython is more straight forward and you can easily start working on wxpython and learn wxpython from zero fast . it provides and awesome resources and decumentation
wxpython qt provides more powerful features that you cant find in wxpython for example the multi touch detection qt also provides good support for drawing devices like pc tablets and so on



2844021
django web2py
Pattern(s): 0	
if you are starting an app from scratch a full-stack framework like django and web2py is the best options
django gives you a better looking database administrative interface



2848888
division multiplication
Pattern(s): 0	
multiplication and division is a lot slower over an order of magnitude



2848888
division subtraction
Pattern(s): 0	
addition and subtraction is roughly 3 times as slow as for normal int s
multiplication and division is a lot slower over an order of magnitude



2867802
gridview repeater
Pattern(s): 0	
also you can use templatecolumn with gridview and add your labels into this template column
but imo repeater is simpler to customize your view by templates



2882325
erlang ocaml
Pattern(s): 1	
erlang is more practical but not quite as amenable to metaprogramming
ocaml is another possible choice but suffers a bit on the practicality front as well



2889354
gridbaglayout springlayout
Pattern(s): 1	
the springlayout has an example that does exaclty this
the gridbaglayout is more difficult to use but also support row column type layout



2892969
comparator comparable
Pattern(s): 1	1	
if the ordering of an object is an implementation detail of the object the comparable is more appropriate
if the ordering of the objects is controlled by the caller then comparator is more appropriate



2912577
apache nginx
Pattern(s): 1	
also nginx s configuration is much more flexible than apache and by having nginx on the front end nginx gives you a lot of flexibility



2914733
swt swing
Pattern(s): 1	
addendum gilbert le blanc raises an excellent point about the ease portability of swing
in contrast swt requires slightly more effort to deploy but some users prefer the greater fidelity of org.eclipse.swt.widgets.filedialog as shown here



2927816
exponent modulo
Pattern(s): 0	
the private exponent is always smaller than the modulo so you should be able to encrypt exponent using the raw rsa operation if you make sure to remove the prepended zero



2963234
factors mean
Pattern(s): 0	
taking a guess at what you mean a subquery in the with clause is typically executed only once before the main query is executed
for large datasets subquery factors is obviously better since you re executing the subquery only once in most if not all cases



2985456
ubuntu debian
Pattern(s): 0	
in ubuntu it is a bit easier to install packages for java development but it doesn t really matter that much
remember that ubuntu is based on debian so ubuntu works the same



2985456
ubuntu debian
Pattern(s): 0	
remember that ubuntu is based on debian so ubuntu works the same
ubuntu just adds more user-friendly gui s



3025706
jboss glassfish
Pattern(s): 0	
other than that - jboss especially 5.x is an excellent application server
glassfish has better administration console and documentation support for java ee 6 in glassfish 3 and better documentation



3034603
mvp presenter
Pattern(s): 1	
for example in an mvp - based web application
now another class such as a presenter is less likely to depend on the standardnavigator implementation and more likely to depend on the inavigator interface since the implementation would need to be cast to an interface to make use of the redirect method



3072211
swt swing
Pattern(s): 1	
but in practice it all depends on swt and swing implementations on each platform
in my experience swt is faster in windows but it is not faster on mac os x



3082138
postgresql mysql
Pattern(s): 1	
sql support - postgresql is much better for complex sql-queries for example with lots of joins and aggregates
mysql s stored procedures didn t feel very mature



3084827
bottle flask
Pattern(s): 1	
so i m biased because i m the author of flask but here something to help you make the pick
itty - very minimal framework bottle is probably a more stable alternative if you want a single file installation



3114467
postgresql mysql
Pattern(s): 1	
using stored procedures helped out regarding structuring the project but performance actually got a little worse this was at the time stored procedures was a new feature in mysql
postgresql performs better with complex queries in my experience but writing real graph queries for it isn t really possible read here and here for why this is so



3168292
prng random
Pattern(s): 0	
the f#.net journal articles numerical libraries special functions interpolation and random numbers 16th march 2008 and numerical libraries linear algebra and spectral methods 16th april 2008 tested quite a bit of functionality and nmath was actually the slowest of all the commercial libraries
their prng was slower than all others and 50 slower than the free math.net library some basic functionality was missing the ability to calculate gamma -0.5 and other basic functionality the gamma-related functions they did provide was broken



3182877
gradle ivy
Pattern(s): 0	
we use gradle and chose it over maven and ant
ant gave us total flexibility and ivy gives better dependency management than maven but there isn t great support for multi-project builds



3184838
innodb myisam
Pattern(s): 0	
the problem with myisam is that myisam locks the table when myisam s in use whereas innodb just locks the row
innodb is a bit slower because of this but allows simultaneous access to the same table so innodb s more suitable for heavy traffic transactions



3217975
boost allocator
Pattern(s): 0	
better is to use shared_ptr or many of the other popular smart pointers available in boost and or tr1 and or c++0x
performance-wise objects allocated on the stack can be done so very quickly the stack size is increased per-function-call so all the required memory has been allocated up-front by a simple move of a pointer. contrarily dynamic allocator generally requires much more time



3218551
quicksort heapsort
Pattern(s): 0	
unless you re going to write a very good sort probably quicksort merge sort or heapsort depending on your specific needs quicksort will be better and quicksort takes fewer lines of code



3227242
profiling instrumentation
Pattern(s): 0	
this is due to the fact that profiling need to instrumentation the code to keep track of invocations - this can interfere with the jit s ability to inline those methods and the instrumentation overhead becomes significantly larger than the time spent actually executing the methods body



3324822
client-side server-side
Pattern(s): 0	
if you control the server-side code then simplify the wsdl so that server-side validates the same soap message
you ll notice that the client-side code becomes a lot simpler too and you will gain a better understanding of what your web service is offering



3359437
innodb myisam
Pattern(s): 0	
since you re looking at a pretty even mix of read write traffic innodb is the better choice
myisam s full-table locks on every write would probably be murder



3365484
boost stl
Pattern(s): 1	
boost makes it much neater
i never use the stl



3366523
udp tcp
Pattern(s): 1	
if you want a reliable as in other parts of the system will worry about errors and retries stream of bytes between the two pcs then tcp ip is not much more complicated to use than udp



3422364
postgresql mysql
Pattern(s): 0	
mysql is most supported by shared hosting hence the m in lamp linux apache mysql php
but postgresql is getting more support too



3436045
ubuntu linux
Pattern(s): 1	
i started using ubuntu for rails development a few weeks ago and have noticed a big improvement over windows although i still dual boot due to the following
terminal in linux is alot more robust than command prompt



3497719
mathml mathjax
Pattern(s): 0	
it follows pretty much the same principles as jsmath but adds support for mathml and takes better advantage of modern browsers webfonts and javascript technology
while davide will answer questions about jsmath no future development will likely occur on it and its users are strongly encouraged to move to mathjax



3533390
innodb myisam
Pattern(s): 0	
additionally innodb has row level locking which is far more performant under concurrent load than myisam table level locking
i could keep going but somone s already provided a really good summary of why innodb is a better choice for oltp



3563703
opera safari
Pattern(s): 0	
opera is lower at 30 cookies
safari 3 has no apparent cookie limit



3605068
google-chrome firefox
Pattern(s): 1	
your html was invalid and google-chrome did not accept it
firefox was more lenient in what it allowed



3605831
lxml celementtree
Pattern(s): 0	
as a side-effect of implementing proper parent traversal lxml is a bit slower than celementtree for parsing



3607684
arraylist treeset
Pattern(s): 0	
so if you re mainly retrieving and don t sort often arraylist is the better choice
if you sort often but dont retrieve that much treeset would be a better choice



3646066
django web2py
Pattern(s): 1	
in contrast to turbogears django is more out-of-the-box
i don t have any experience with web2py but from my impression it tries to do a little to much out-of-the-box



3646066
turbogears web2py
Pattern(s): 1	
in contrast to turbogears django is more out-of-the-box
i don t have any experience with web2py but from my impression it tries to do a little to much out-of-the-box



3659729
querypath phpquery
Pattern(s): 1	
generally querypath is better suited for manipulation of documents
while phpquery also implements some pseudo ajax methods just http requests to more closely resemble jquery



3670082
union distinct
Pattern(s): 1	
if you want to ensure two collections have the same distinct set of members where duplicates in either are ignored you can use
using the set operations intersect union except is more efficient than using methods like contains



3676955
addition multiplication
Pattern(s): 1	
as you see integer multiplication floating-point multiplication and floating-point addition all took about the same time
array indexing took a little longer and you re doing it three times and integer addition was a little faster



3689215
sortedlist sorteddictionary
Pattern(s): 1	
from sorted data sortedlist is faster
than sorteddictionary



3745138
udp tcp
Pattern(s): 0	
udp is a lightweight protocol that by design doesn t handle things like packet sequencing
tcp is a better choice if you want robust packet delivery and sequencing



3791471
realloc malloc
Pattern(s): 1	
the main thing to know about realloc is that it is often capable of determining the actual size of the block of memory that any of the heap allocation routines returned and see if the block is big enough already or in some cases if it would be best try to shrink the block or move it
malloc is used more because it is simplest



3819023
lxml libxml2
Pattern(s): 0	
lxml is much easier to use than the xml libraries included in the standard python library
it s a binding for the c libxml2 library so i m assuming it s also faster



3828932
datamapper activerecord
Pattern(s): 1	
the datamapper is not more modern or newer but just more suited for an orm
the main reason people change is because activerecord does not make for a good orm



3838911
alarmmanager timertask
Pattern(s): 0	
timer and timertask are fine for things with short periods that are only relevant while an activity is on-screen
alarmmanager is for longer periods such as time and date to be notified because it allows your service to get out of memory



3860644
implements extends
Pattern(s): 1	
there is also sortedset extends set and blockingqueue extends queue
now concrete classes implements set is more understandable if set explicitly state which interface in the heirarchy it is implements even though it may look redundant at times



3867552
profiling instrumentation
Pattern(s): 1	
as you noted tier interaction profiling tip gives you more detailed information about calls to databases right down to the sql statements for more information refer to the profiling blog
another recommended option when profiling asp.net is to profile using instrumentation mode



3900409
direct3d gdi
Pattern(s): 1	
imho the right way to go is direct3d or opengl but given delphi is windows only maybe direct3d is better
direct3d was introduced exactly because the gdi is not good at such tasks



3927111
dictionary map
Pattern(s): 0	
a safer approach would be to create a private map between a label and myobject using a dictionary instance
this approach has the extra overhead of a dictionary but produces more reliable code imho



3968498
prng random
Pattern(s): 1	
most random sources don t produce real random bits all that fast and it s hard to tell whether you ve made a bad blunder
a good prng is better for virtually all intents and purposes



3983743
codeigniter yii
Pattern(s): 1	
you may find it getting in your way a bit more too as you try to do everything the yii way
codeigniter is more flexible - gives you the foundation you need w o getting in your way






